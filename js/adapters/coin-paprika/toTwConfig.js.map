{"version":3,"sources":["../../../src/adapters/coin-paprika/toTwConfig.js"],"names":["getValue","fnAdapter","_crItems","json","items","i","length","user_name","date","status_id","status_link","status","retweet_count","like_count","push","id","user","link","replace","text","retweet","like","toTwConfig","crKey","option","_itemKey","toConfig","title","config","zhCompType","zhConfig","key"],"mappings":";;;;;;;AAAA;;IAEQA,Q,GAAaC,qB,CAAbD,Q;;AAER,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvB,MAAMC,KAAK,GAAG,EAAd;AACA,MAAIC,CAAJ;;AACA,OAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAACF,IAAI,CAACG,MAAhB,EAAwBD,CAAC,EAAzB,EAA4B;AAAA,kBAKtBF,IAAI,CAACE,CAAD,CALkB;AAAA,QAExBE,SAFwB,WAExBA,SAFwB;AAAA,QAEbC,IAFa,WAEbA,IAFa;AAAA,QAEPC,SAFO,WAEPA,SAFO;AAAA,QAGxBC,WAHwB,WAGxBA,WAHwB;AAAA,QAGXC,MAHW,WAGXA,MAHW;AAAA,QAIxBC,aAJwB,WAIxBA,aAJwB;AAAA,QAITC,UAJS,WAITA,UAJS;;AAM1B,QAAIL,IAAI,IAAIC,SAAZ,EAAuB;AACrBL,MAAAA,KAAK,CAACU,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEN,SADK;AAETO,QAAAA,IAAI,EAAE,MAAMT,SAFH;AAGTU,QAAAA,IAAI,EAAEP,WAHG;AAITF,QAAAA,IAAI,EAAEA,IAAI,CAACU,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuBA,OAAvB,CAA+B,GAA/B,EAAoC,EAApC,CAJG;AAKTC,QAAAA,IAAI,EAAER,MALG;AAMTS,QAAAA,OAAO,EAAER,aANA;AAOTS,QAAAA,IAAI,EAAER;AAPG,OAAX;AASD;AACF;;AACD,SAAOT,KAAP;AACD,CAtBD;;AAwBA,IAAMkB,UAAU,GAAG;AACjBC,EAAAA,KADiB,iBACXC,MADW,EACJ;AAAA,wBACUA,MADV,CACHpB,KADG;AAAA,QACHA,KADG,8BACG,EADH;AAEX,WAAQoB,MAAM,CAACC,QAAP,GAAkBzB,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CAAlC;AACD,GAJgB;AAMjBsB,EAAAA,QANiB,oBAMRvB,IANQ,EAMFqB,MANE,EAMK;AAAA,QACZC,QADY,GACQD,MADR,CACZC,QADY;AAAA,QACFE,KADE,GACQH,MADR,CACFG,KADE;AAAA,QAElBC,MAFkB,GAET;AACPb,MAAAA,EAAE,EAAEU,QADG;AAEPE,MAAAA,KAAK,EAAEA,KAFA;AAGPvB,MAAAA,KAAK,EAAEF,QAAQ,CAACC,IAAD,CAHR;AAIP0B,MAAAA,UAAU,EAAE,SAJL;AAKPC,MAAAA,QAAQ,EAAE;AACRf,QAAAA,EAAE,EAAEU,QADI;AACMM,QAAAA,GAAG,EAAEN;AADX;AALH,KAFS;AAWpB,WAAO;AAAEG,MAAAA,MAAM,EAANA;AAAF,KAAP;AACD;AAlBgB,CAAnB;eAqBeN,U","sourcesContent":["import fnAdapter from './fnAdapter'\r\n\r\nconst { getValue } = fnAdapter\r\n\r\nconst _crItems = json => {\r\n  const items = [];\r\n  let i;\r\n  for(i=0; i<json.length; i++){\r\n    const {\r\n      user_name, date, status_id,\r\n      status_link, status,\r\n      retweet_count, like_count\r\n    } = json[i];\r\n    if (date && status_id) {\r\n      items.push({\r\n        id: status_id,\r\n        user: '@' + user_name,\r\n        link: status_link,\r\n        date: date.replace('T', ' ').replace('Z', ''),\r\n        text: status,\r\n        retweet: retweet_count,\r\n        like: like_count\r\n      })\r\n    }\r\n  }\r\n  return items;\r\n}\r\n\r\nconst toTwConfig = {\r\n  crKey(option){\r\n    const { items=[] } = option;\r\n    return (option._itemKey = getValue(items[0]));\r\n  },\r\n\r\n  toConfig(json, option){\r\n    const { _itemKey, title } = option\r\n    , config = {\r\n        id: _itemKey,\r\n        title: title,\r\n        items: _crItems(json),\r\n        zhCompType: 'TW_LIST',\r\n        zhConfig: {\r\n          id: _itemKey, key: _itemKey\r\n        }\r\n      };\r\n    return { config };\r\n  }\r\n}\r\n\r\nexport default toTwConfig\r\n"],"file":"toTwConfig.js"}