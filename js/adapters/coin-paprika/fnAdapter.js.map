{"version":3,"sources":["../../../src/adapters/coin-paprika/fnAdapter.js"],"names":["DF_ID","_getCoinId","items","dfValue","COIN_URL","_crCoinUrl","option","_crInfo","name","title","description","getCoinId","crData","arr","data","dColumn","dVolume","dMarketCap","forEach","item","time_close","close","open","low","high","volume","market_cap","_date","split","push","date","_high","_low","addConfOption","info"],"mappings":";;;;;AAAA;;;;;;AAKA;;;;AAWA;;AAEA,MAAMA,KAAK,GAAG,aAAd;;AACA,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAK,GAAC;AAAR,GAAD;AAAA,SACjB,yBAASA,KAAK,CAAC,CAAD,CAAd,EAAmB;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAnB,CADiB;AAAA,CAAnB;;AAGA,MAAMI,QAAQ,GAAG,8BAAjB;AAAA,MACEC,UAAU,GAAGC,MAAM,IAAOF,QAAP,SAAmBH,UAAU,CAACK,MAAD,CAA7B,MADrB;AAAA,MAEEC,OAAO,GAAGD,MAAM,KAAK;AACrBE,EAAAA,IAAI,EAAEF,MAAM,CAACG,KAAP,IAAgB,EADD;AAErBC,EAAAA,WAAW,EAAE,sBAAW,aAAX,EAA0BL,UAAU,CAACC,MAAD,CAApC;AAFQ,CAAL,CAFlB;;AAOO,MAAMK,SAAS,GAAGV,UAAlB;;;AAEA,MAAMW,MAAM,GAAIC,GAAD,IAAS;AAC7B,QAAMC,IAAI,GAAG,EAAb;AAAA,QACEC,OAAO,GAAG,EADZ;AAAA,QAEEC,OAAO,GAAG,EAFZ;AAAA,QAGEC,UAAU,GAAG,EAHf;AAIAJ,EAAAA,GAAG,CAACK,OAAJ,CAAYC,IAAI,IAAI;AAClB,UAAM;AACJC,MAAAA,UADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,IAHI;AAIJC,MAAAA,GAJI;AAKJC,MAAAA,IALI;AAMJC,MAAAA,MANI;AAOJC,MAAAA;AAPI,QAQFP,IARJ;AAAA,UASEQ,KAAK,GAAGP,UAAU,GACd,yBAASA,UAAU,CAACQ,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAT,CADc,GAEd,KAAK,CAXX;;AAYA,QAAID,KAAJ,EAAW;AACTb,MAAAA,IAAI,CAACe,IAAL,CAAU,CAACF,KAAD,EAAQN,KAAR,CAAV;AACAL,MAAAA,OAAO,CAACa,IAAR,CAAa,CAACF,KAAD,EAAQF,MAAR,CAAb;AACAV,MAAAA,OAAO,CAACc,IAAR,CACE,4BAAc;AACXC,QAAAA,IAAI,EAAEH,KADK;AAEXL,QAAAA,IAFW;AAGXD,QAAAA,KAHW;AAIXI,QAAAA,MAJW;AAKXnB,QAAAA,MAAM,EAAE;AACLyB,UAAAA,KAAK,EAAEP,IADF;AAELQ,UAAAA,IAAI,EAAET;AAFD;AALG,OAAd,CADF;AAYAN,MAAAA,UAAU,CAACY,IAAX,CAAgB,CAACF,KAAD,EAAQD,UAAR,CAAhB;AACD;AACF,GA9BD;AA+BA,SAAO;AACLZ,IAAAA,IADK;AAELE,IAAAA,OAFK;AAGLD,IAAAA,OAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CA1CM;;;;AA4CA,MAAMgB,aAAa,GAAG3B,MAAM,KAAK;AACtC4B,EAAAA,IAAI,EAAE3B,OAAO,CAACD,MAAD;AADyB,CAAL,CAA5B","sourcesContent":["export {\r\n  getValue,\r\n  joinBy,\r\n  toUpperCaseFirst\r\n} from '../AdapterFn';\r\nexport {\r\n  crError\r\n} from '../crFn';\r\n\r\nimport {\r\n  getValue,\r\n  ymdToUTC\r\n} from '../AdapterFn';\r\nimport {\r\n  crItemLink\r\n} from '../crFn';\r\nimport { crVolumePoint } from '../pointFn';\r\n\r\nconst DF_ID = 'btc-bitcoin';\r\nconst _getCoinId = ({ items=[] }) =>\r\n  getValue(items[0], { dfValue: DF_ID });\r\n\r\nconst COIN_URL = 'https://coinpaprika.com/coin'\r\n, _crCoinUrl = option => `${COIN_URL}/${_getCoinId(option)}/`\r\n, _crInfo = option => ({\r\n  name: option.title || '',\r\n  description: crItemLink('Coinpaprika', _crCoinUrl(option))\r\n});\r\n\r\nexport const getCoinId = _getCoinId\r\n\r\nexport const crData = (arr) => {\r\n  const data = []\r\n  , dColumn = []\r\n  , dVolume = []\r\n  , dMarketCap = [];\r\n  arr.forEach(item => {\r\n    const {\r\n      time_close,\r\n      close,\r\n      open,\r\n      low,\r\n      high,\r\n      volume,\r\n      market_cap\r\n    } = item\r\n    , _date = time_close\r\n        ? ymdToUTC(time_close.split('T')[0])\r\n        : void 0;\r\n    if (_date) {\r\n      data.push([_date, close])\r\n      dVolume.push([_date, volume])\r\n      dColumn.push(\r\n        crVolumePoint({\r\n           date: _date,\r\n           open,\r\n           close,\r\n           volume,\r\n           option: {\r\n              _high: high,\r\n              _low: low\r\n            }\r\n        })\r\n      )\r\n      dMarketCap.push([_date, market_cap])\r\n    }\r\n  })\r\n  return {\r\n    data,\r\n    dVolume,\r\n    dColumn,\r\n    dMarketCap\r\n  };\r\n}\r\n\r\nexport const addConfOption = option => ({\r\n  info: _crInfo(option)\r\n})\r\n"],"file":"fnAdapter.js"}