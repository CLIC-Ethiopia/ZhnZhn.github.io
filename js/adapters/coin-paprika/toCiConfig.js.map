{"version":3,"sources":["../../../src/adapters/coin-paprika/toCiConfig.js"],"names":["_crCaption","name","symbol","rank","_getDate","str","split","_crToken","value","_crTokens","started_at","development_status","hardware_wallet","org_structure","hash_algorithm","proof_type","platform","filter","Boolean","_crOpenSource","is","_crIsActive","_crTokensCaption","type","open_source","is_active","_crDescr","json","description","_crBlogLinks","links_extended","item","map","href","url","caption","_crLinks","links","website","_websiteLink","_websiteLinks","_blogLinks","_links","concat","length","toCiConfig","crKey","option","items","_itemKey","toConfig","config","zhCompType","id","tokens","style","fontWeight","descr","zhConfig","key"],"mappings":"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","sourcesContent":["import {\r\n  getValue,\r\n  joinBy,\r\n  toUpperCaseFirst\r\n} from './fnAdapter';\r\n\r\nconst _crCaption = ({ name='', symbol='', rank='' }) =>\r\n  `${name} (${symbol}) (${rank})`;\r\n\r\nconst _getDate = str => str\r\n  ? (''+str).split('T')[0]\r\n  : '';\r\nconst _crToken = (name, value) => value\r\n  ? `${name}: ${value}`\r\n  : '';\r\nconst _crTokens = ({\r\n  started_at,\r\n  development_status,\r\n  hardware_wallet,\r\n  org_structure,\r\n  hash_algorithm,\r\n  proof_type,\r\n  platform\r\n}) => [\r\n  _crToken('Started At', _getDate(started_at)),\r\n  _crToken('Dev Status', development_status),\r\n  _crToken('Org', org_structure),\r\n  _crToken('Hardware Wallet', hardware_wallet),\r\n  _crToken('Hash Alg.', hash_algorithm),\r\n  _crToken('Proof Type', proof_type),\r\n  _crToken('Platform', platform)\r\n].filter(Boolean);\r\n\r\nconst _crOpenSource = is => is ? 'OpenSource': 'not OpenSource';\r\nconst _crIsActive = is => is ? 'Active': 'not Active';\r\nconst _crTokensCaption = ({ type, open_source, is_active}) => joinBy(' ',\r\n  toUpperCaseFirst(type),\r\n  _crOpenSource(open_source),\r\n  _crIsActive(is_active)\r\n);\r\n\r\nconst _crDescr = (json) => json.description || '';\r\n\r\nconst _crBlogLinks = links_extended => (links_extended || [])\r\n  .filter(item => item.type === 'blog')\r\n  .map(item => ({href:item.url, caption:'Blog'}))\r\n\r\nconst _crLinks = ({ links, links_extended }) => {\r\n  const { website } = links || {}\r\n  , _websiteLink = (website || [])[0]\r\n  , _websiteLinks = _websiteLink\r\n      ? [{ href: _websiteLink, caption: 'Website' }]\r\n      : []\r\n  , _blogLinks = _crBlogLinks(links_extended)\r\n  , _links = _websiteLinks.concat(_blogLinks);\r\n\r\n  return _links.length > 0 ? _links : void 0;\r\n};\r\n\r\nconst toCiConfig = {\r\n  crKey(option){\r\n    const { items=[] } = option;\r\n    return (option._itemKey = getValue(items[0]));\r\n  },\r\n\r\n  toConfig(json, option) {\r\n    const { _itemKey } = option\r\n    , config = {\r\n        zhCompType: \"INFO_ITEM\",\r\n        id: _itemKey,\r\n        caption: _crCaption(json),\r\n        items: [\r\n          {\r\n            caption: _crTokensCaption(json),\r\n            tokens: _crTokens(json)\r\n          },{\r\n            style: {\r\n              fontWeight: 'bold'\r\n            },\r\n            descr: _crDescr(json),\r\n            links: _crLinks(json)\r\n          }\r\n        ],\r\n        zhConfig: {\r\n          id: _itemKey,\r\n          key: _itemKey\r\n        }\r\n    };\r\n    return { config };\r\n  }\r\n};\r\n\r\nexport default toCiConfig\r\n"],"file":"toCiConfig.js"}