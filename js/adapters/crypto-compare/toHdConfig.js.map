{"version":3,"sources":["../../../src/adapters/crypto-compare/toHdConfig.js"],"names":["crData","fnAdapter","crConfigOption","DF_PAIR","V_ON_TIME","_crTitle","title","_crSubtitle","json","value","ConversionType","conversionSymbol","type","_crBtTitleTo","toHdConfig","toConfig","option","data","dVolume","dColumn","dToVolume","dHL","seria","splineSeria","toSeria","_title","_subtitle","_btTitleTo","config","area2Config","addSeries","addMinMax","add","addMiniVolume","btTitle","addMiniHL","toSeries","series"],"mappings":"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","sourcesContent":["import Builder from '../../charts/ConfigBuilder'\r\n\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst { crData, crConfigOption } = fnAdapter;\r\n\r\nconst DF_PAIR = 'USD';\r\nconst V_ON_TIME = 'Values on 00:00 GMT';\r\n\r\nconst _crTitle = (title) => `${title}: ${V_ON_TIME}`;\r\n\r\nconst _crSubtitle = (json, value) => {\r\n  const { ConversionType={} } = json\r\n      , { conversionSymbol, type='' } = ConversionType;\r\n  return `${value}/${conversionSymbol || DF_PAIR} ${type}`;\r\n};\r\n\r\nconst _crBtTitleTo = (json) => {\r\n  const { ConversionType={} } = json\r\n      , { conversionSymbol } = ConversionType;\r\n  return `${conversionSymbol || DF_PAIR}`;\r\n}\r\n\r\nconst toHdConfig = {\r\n  toConfig: (json, option) => {\r\n    const {\r\n           data,\r\n           dVolume, dColumn,\r\n           dToVolume,\r\n           dHL\r\n         } = crData(json)\r\n        , seria = Builder()\r\n            .splineSeria({ data })\r\n            .toSeria()\r\n        , { value='', title } = option\r\n        , _title = _crTitle(title)\r\n        , _subtitle = _crSubtitle(json, value)\r\n        , _btTitleTo = _crBtTitleTo(json)\r\n        , config = Builder()\r\n            .area2Config(_title, _subtitle)\r\n            .addSeries(seria)            \r\n            .addMinMax(data, option)\r\n            .add({\r\n               ...crConfigOption({ option, data })\r\n            })\r\n            .addMiniVolume({\r\n              btTitle: 'Volume ' + value,\r\n              title: value,\r\n              dColumn, dVolume\r\n            })\r\n            .addMiniVolume({\r\n              btTitle: 'Volume ' + _btTitleTo,\r\n              title: _btTitleTo,\r\n              dVolume: dToVolume,\r\n              dColumn: []\r\n            })\r\n            .addMiniHL({ data: dHL })\r\n            .toConfig();\r\n    return { config };\r\n  },\r\n\r\n  toSeries: (json, option) => {\r\n    const { config } = toHdConfig.toConfig(json, option);\r\n    return config.series[0];\r\n  }\r\n}\r\n\r\nexport default toHdConfig\r\n"],"file":"toHdConfig.js"}