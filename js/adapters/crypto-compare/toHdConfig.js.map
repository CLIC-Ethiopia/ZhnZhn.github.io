{"version":3,"sources":["../../../src/adapters/crypto-compare/toHdConfig.js"],"names":["Builder","crConfigType1","crData","fnAdapter","crConfigOption","_assign","Object","assign","DF_PAIR","V_ON_TIME","_crTitle","title","_crSubtitle","json","value","ConversionType","conversionSymbol","type","_crBtTitleTo","toHdConfig","toConfig","option","itemCaption","subtitle","data","dVolume","dColumn","dToVolume","dHL","_btTitleTo","confOption","config","addMiniVolume","btTitle","addMiniHL","toSeries","crSeria","adapter"],"mappings":"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","sourcesContent":["import crConfigType1 from '../../charts/crConfigType1'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst { Builder } = crConfigType1\r\n, {\r\n  crData,\r\n  crConfigOption\r\n } = fnAdapter\r\n, _assign = Object.assign;\r\n\r\n\r\nconst DF_PAIR = 'USD';\r\nconst V_ON_TIME = 'Values on 00:00 GMT';\r\n\r\nconst _crTitle = (title) => `${title}: ${V_ON_TIME}`;\r\n\r\nconst _crSubtitle = (json, value) => {\r\n  const { ConversionType={} } = json\r\n      , { conversionSymbol, type='' } = ConversionType;\r\n  return `${value}/${conversionSymbol || DF_PAIR} ${type}`;\r\n};\r\n\r\nconst _crBtTitleTo = (json) => {\r\n  const { ConversionType={} } = json\r\n      , { conversionSymbol } = ConversionType;\r\n  return `${conversionSymbol || DF_PAIR}`;\r\n}\r\n\r\nconst toHdConfig = {\r\n  toConfig: (json, option) => {\r\n    const { value='', title } = option\r\n    _assign(option, {\r\n      itemCaption: title,\r\n      title: _crTitle(title),\r\n      subtitle: _crSubtitle(json, value)\r\n    })\r\n    const {\r\n       data,\r\n       dVolume, dColumn,\r\n       dToVolume,\r\n       dHL\r\n     } = crData(json)\r\n    , _btTitleTo = _crBtTitleTo(json)\r\n    , confOption = crConfigOption(option)\r\n    , config = Builder(crConfigType1({\r\n         option, data, confOption\r\n       }))\r\n        .addMiniVolume({\r\n          btTitle: 'Volume ' + value,\r\n          dColumn, dVolume\r\n        })\r\n        .addMiniVolume({\r\n          btTitle: 'Volume ' + _btTitleTo,\r\n          dVolume: dToVolume,\r\n          dColumn: []\r\n        })\r\n        .addMiniHL({ data: dHL })\r\n        .toConfig();\r\n    return { config };\r\n  },\r\n\r\n  toSeries: (json, option) => {\r\n    return Builder.crSeria({\r\n      adapter: toHdConfig,\r\n      json, option\r\n    })\r\n  }\r\n}\r\n\r\nexport default toHdConfig\r\n"],"file":"toHdConfig.js"}