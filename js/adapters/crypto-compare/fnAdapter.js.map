{"version":3,"sources":["../../../src/adapters/crypto-compare/fnAdapter.js"],"names":["getValue","AdapterFn","valueMoving","volumeColumnPoint","roundBy","crSeria","_crZhConfig","title","dataSource","value","linkFn","id","key","itemCaption","item","_crInfo","name","_isNumber","v","_isHLOC","p","open","high","low","close","_addPointTo","arr","d","push","x","y","_addColumnPointTo","volume","date","option","_high","_low","_addHLPointTo","dayHigh","dayLow","fnAdapter","crData","json","data","dVolume","dColumn","dToVolume","dHL","Data","forEach","time","_date","volumefrom","volumeto","crConfigOption","zhConfig","info"],"mappings":"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","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nconst {\r\n  getValue,\r\n  valueMoving,\r\n  volumeColumnPoint,\r\n  roundBy,\r\n  crSeria\r\n} = AdapterFn;\r\n\r\nconst _crZhConfig = ({\r\n  title,\r\n  dataSource,\r\n  value,\r\n  linkFn\r\n}) => ({\r\n    id: value, key: value,\r\n    itemCaption: title,\r\n    linkFn, item: value,\r\n    dataSource\r\n});\r\n\r\nconst _crInfo = ({ title }) => ({\r\n  name: title\r\n});\r\n\r\nconst _isNumber = v => typeof v === 'number';\r\n\r\nconst _isHLOC = (p) => _isNumber(p.open)\r\n  && _isNumber(p.high)\r\n  && _isNumber(p.low)\r\n  && _isNumber(p.close);\r\n\r\nconst _addPointTo = (arr, d, value) => {\r\n  if (_isNumber(value)) {\r\n    arr.push({ x: d, y: value })\r\n  }\r\n};\r\nconst _addColumnPointTo = (arr, d, p, volume) => {\r\n  if (_isNumber(volume)){\r\n    arr.push(\r\n      volumeColumnPoint({\r\n         date: d,\r\n         open: p.open,\r\n         close: p.close,\r\n         volume: volume,\r\n         option: {\r\n            _high: p.high,\r\n            _low: p.low\r\n          }\r\n      })\r\n    )\r\n  }\r\n};\r\nconst _addHLPointTo = (arr, d, p) => {\r\n    arr.push({\r\n      x: d,\r\n      high: roundBy(p.high - p.close, 2),\r\n      low: roundBy(p.low - p.close, 2),\r\n      open: p.open,\r\n      dayHigh: p.high,\r\n      dayLow: p.low,\r\n      close: p.close\r\n    })\r\n};\r\n\r\nconst fnAdapter = {\r\n  getValue,\r\n  crSeria,\r\n\r\n  crData: (json) => {\r\n    const data = []\r\n        , dVolume = []\r\n        , dColumn = []\r\n        , dToVolume = []\r\n        , dHL = [];\r\n    json.Data.forEach(p => {\r\n      if (_isNumber(p.time)) {\r\n        const _date = p.time*1000;\r\n        _addPointTo(data, _date, p.close)\r\n        _addPointTo(dVolume, _date, p.volumefrom)\r\n        _addPointTo(dToVolume, _date, p.volumeto)\r\n\r\n        if (_isHLOC(p)) {\r\n          _addColumnPointTo(dColumn,\r\n            _date, p, p.volumefrom\r\n          )\r\n          _addHLPointTo(dHL, _date, p)\r\n        }\r\n      }\r\n    })\r\n    return {\r\n      data,\r\n      dVolume, dColumn,\r\n      dToVolume,\r\n      dHL\r\n    };\r\n  },\r\n\r\n  crConfigOption: ({ option, data }) => ({\r\n    zhConfig: _crZhConfig(option),\r\n    valueMoving: valueMoving(data),\r\n    info: _crInfo(option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}