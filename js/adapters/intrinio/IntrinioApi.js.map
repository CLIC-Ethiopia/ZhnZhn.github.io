{"version":3,"sources":["../../../src/adapters/intrinio/IntrinioApi.js"],"names":["C","URL","TAIL","RES_ERR_STATUS","MSG_ERR_SUFIX","FRQ","A","Q","W","D","M","DF","_getErr","json","Array","isArray","errors","undefined","_crErr","caption","message","errCaption","IntrinioApi","crOptionFetch","option","apiKey","headers","getRequestUrl","value","fromDate","toDate","item","one","two","three","resErrStatus","_frq","frq","checkResponse","_err","human","data"],"mappings":"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","sourcesContent":["\r\nconst C = {\r\n  URL: 'https://api.intrinio.com/historical_data',\r\n  TAIL: 'item=level',\r\n  RES_ERR_STATUS: [ 401 ],\r\n  MSG_ERR_SUFIX: ' (Intrinio)'\r\n};\r\n\r\nconst FRQ = {\r\n  A: 'yearly',\r\n  Q: 'quarterly',\r\n  W: 'weekly',\r\n  D: 'daily',\r\n  M: 'monthly',\r\n  DF: 'monthly'\r\n};\r\n\r\nconst _getErr = (json) => json\r\n  && Array.isArray(json.errors)\r\n  && json.errors[0]\r\n   ? json.errors[0]\r\n   : undefined;\r\n\r\nconst _crErr = (caption='', message='') => ({\r\n  errCaption: caption,\r\n  message: message + C.MSG_ERR_SUFIX\r\n});\r\n\r\nconst IntrinioApi = {\r\n  crOptionFetch(option){\r\n    const { apiKey } = option;\r\n    return {\r\n      headers: {\r\n        'X-Authorization-Public-Key': apiKey\r\n      }\r\n    };\r\n  },\r\n\r\n  getRequestUrl(option){\r\n    const {\r\n      value, fromDate, toDate, item={},\r\n      one, two, three\r\n    } = option;\r\n    option.resErrStatus = C.RES_ERR_STATUS\r\n\r\n    if (two && three) {\r\n      return `${C.URL}?identifier=${one}&item=${two}&start_date=${fromDate}&end_date=${toDate}&type=${three}`;\r\n    }\r\n\r\n    if (two) {\r\n      //return `${C.URL}?identifier=${one}&item=${two}&start_date=${fromDate}&end_date=${toDate}&frequency=quarterly`;\r\n      return `${C.URL}?identifier=${one}&item=${two}&start_date=${fromDate}&end_date=${toDate}&type=QTR`;\r\n    }\r\n\r\n    const _frq = FRQ[item.frq] || FRQ.DF;\r\n    return `${C.URL}?identifier=${value}&start_date=${fromDate}&end_date=${toDate}&frequency=${_frq}&${C.TAIL}`;\r\n  },\r\n\r\n  checkResponse(json){\r\n    const _err = _getErr(json);\r\n    if (_err) {\r\n     throw _crErr(_err.human, _err.message);\r\n    }\r\n    return json      \r\n      && Array.isArray(json.data);\r\n  }\r\n};\r\n\r\nexport default IntrinioApi\r\n"],"file":"IntrinioApi.js"}