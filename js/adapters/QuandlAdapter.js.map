{"version":3,"sources":["../../src/adapters/QuandlAdapter.js"],"names":["C","OPEN","CLOSE","PRICE","LOW","HIGH","VOLUME","EX_DIVIDEND","SPLIT_RATIO","UNKNOWN","COLOR_BLUE","_fnConvertToUTC","point","result","arrDate","split","dateUTC","Date","UTC","parseInt","_fnCheckExtrems","yPointIndex","maxPoint","minPoint","_fnAddToSeria","seria","push","_fnAddSplitRatio","splitRationIndex","dataSplitRatio","x","splitRatio","parseFloat","toFixed","price","Object","assign","fMarkerSplitRatio","_fnAddExDividend","exDividendIndex","dataExDividend","exValue","marker","fMarkerExDividend","isPrevDateAfter","dataLabels","y","_fnAddVolume","optionIndex","volume","open","close","low","high","dataVolume","dataVolumeColumn","_open","undefined","volumeColumnPoint","date","option","_low","_high","_fnAddATH","dataATH","len","length","_prevPoint","athPoint","prevClose","_fnAddHighLow","dataHighLow","_closeValue","_openValue","_bHigh","minus","_bLow","_dayHigh","_dayLow","dayHigh","dayLow","_fnAddCustomSeries","columns","legendSeries","i","max","data","_fLegendConfig","seriaColumnNames","column_names","j","_len","fLegendConfig","columnName","columnIndex","findColumnIndex","_fnCreatePointFlow","json","dataset","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","_closeIndex","exDividend","fnStep","bind","_isTransform","transform","fnPointsFlow","_fnSeriesPipe","points","sort","compareByDate","_max","zhPoints","minY","calcMinY","_fnSetYForPoints","_fnAddSeriesExDivident","config","chartId","series","fExDividendSeria","chart","spacingBottom","_fnAddSeriesSplitRatio","fSplitRatioSeria","_fnCheckIsMfi","names","zhIsMfi","zhFnGetMfiConfig","_fnCheckIsMomAth","zhFnMomAthConfig","_fnSetChartTitle","title","subtitle","setDefaultTitle","_fnSetLegendSeriesToConfig","legend","name","zhValueText","index","color","isVisible","symbol","isSecondAxes","fSeries","zhSeriaId","visible","fSeriaMarker","zhConfig","fnGetSeries","dataColumn","value","isDrawDeltaExtrems","isNotZoomToMinMax","createZhConfig","info","createDatasetInfo","valueMoving","zhFnAddSeriesSma","zhFnRemoveSeries","zhVolumeConfig","fIndicatorVolumeConfig","zhATHConfig","fIndicatorATHConfig","zhHighLowConfig","fIndicatorHighLowConfig","isWithLegend","_setPlotLinesExtremValues","plotLines","_bMax","_bMin","_bValue","_maxPoint","round","toString","_minPoint","_deltaMax","_deltaMin","perToMax","createPercent","bValue","bTotal","perToMin","label","text","fnNumberFormat","fnConfigAxes","yAxis","_data","_maxIndex","_recentValue","min","fnQuandlFlow","_fCreateAreaConfig","fBaseAreaConfig","getDataColumnIndex","_getData","_fToConfig","builder","toConfig","_fToSeria","toSeria","_rToConfig","AREA","SEMI_DONUT","STACKED_AREA","STACKED_AREA_PERCENT","STACKED_COLUMN","STACKED_COLUMN_PERCENT","TREE_MAP","YEARLY","SCATTER","SCATTER_UP","SCATTER_DOWN","_crSeriaData","yIndex","map","ymdToUTC","p","_toSeria","parentId","substring","findMinY","_rToSeria","DF","QuandlAdapter","seriaType","toSeries"],"mappings":";;;;;;;;;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAKA;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,IAAI;AACRC,QAAO,MADC;AAERC,SAAQ,OAFA;AAGRC,SAAO,OAHC;AAIRC,OAAM,KAJE;AAKRC,QAAO,MALC;AAMRC,UAAS,QAND;AAORC,eAAc,aAPN;AAQRC,eAAc,aARN;AASRC,WAAU,SATF;;AAWRC,cAAY;AAXJ,CAAV;;AAeA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAASC,KAAT,EAAgBC,MAAhB,EAAuB;AAC5C,MAAMC,UAAUF,MAAM,CAAN,EAASG,KAAT,CAAe,GAAf,CAAhB;AACAF,SAAOG,OAAP,GAAiBC,KAAKC,GAAL,CAASJ,QAAQ,CAAR,CAAT,EAAsBK,SAASL,QAAQ,CAAR,CAAT,EAAqB,EAArB,IAAyB,CAA/C,EAAmDA,QAAQ,CAAR,CAAnD,CAAjB;AACAD,SAAOD,KAAP,GAAeA,KAAf;AACA,SAAOC,MAAP;AACF,CALD;;AAOA,IAAMO,kBAAkB,SAAlBA,eAAkB,CAASP,MAAT,EAAgB;AAAA,MAC/BD,KAD+B,GACWC,MADX,CAC/BD,KAD+B;AAAA,MACxBS,WADwB,GACWR,MADX,CACxBQ,WADwB;AAAA,MACXC,QADW,GACWT,MADX,CACXS,QADW;AAAA,MACDC,QADC,GACWV,MADX,CACDU,QADC;;AAEtC,MAAI,EAAEX,MAAMS,WAAN,KAAsB,IAAxB,KAAiCT,MAAMS,WAAN,KAAoBC,QAAzD,EAAkE;AAChET,WAAOS,QAAP,GAAkBV,MAAMS,WAAN,CAAlB;AACD;AACD,MAAI,EAAET,MAAMS,WAAN,KAAsB,IAAxB,KAAiCT,MAAMS,WAAN,KAAoBE,QAAzD,EAAmE;AACjEV,WAAOU,QAAP,GAAkBX,MAAMS,WAAN,CAAlB;AACD;;AAED,SAAOR,MAAP;AACD,CAVD;;AAYA,IAAMW,gBAAgB,SAAhBA,aAAgB,CAASX,MAAT,EAAgB;AAAA,MAC5BY,KAD4B,GACUZ,MADV,CAC5BY,KAD4B;AAAA,MACrBT,OADqB,GACUH,MADV,CACrBG,OADqB;AAAA,MACZJ,KADY,GACUC,MADV,CACZD,KADY;AAAA,MACLS,WADK,GACUR,MADV,CACLQ,WADK;;AAEnCI,QAAMC,IAAN,CAAW,CAACV,OAAD,EAAUJ,MAAMS,WAAN,CAAV,CAAX;;AAEA,SAAOR,MAAP;AACF,CALD;;AAOA,IAAMc,mBAAmB,SAAnBA,gBAAmB,CAASC,gBAAT,EAA2Bf,MAA3B,EAAkC;AAAA,MACjDD,KADiD,GACDC,MADC,CACjDD,KADiD;AAAA,MAC1CI,OAD0C,GACDH,MADC,CAC1CG,OAD0C;AAAA,MACjCK,WADiC,GACDR,MADC,CACjCQ,WADiC;AAAA,MACpBQ,cADoB,GACDhB,MADC,CACpBgB,cADoB;;AAEzD,MAAIjB,MAAMgB,gBAAN,MAA4B,CAAhC,EAAkC;AAChC,QAAME,IAAId,OAAV;AAAA,QACMe,aAAaC,WAAWpB,MAAMgB,gBAAN,EAAwBK,OAAxB,CAAgC,CAAhC,CAAX,CADnB;AAAA,QAEMC,QAAQtB,MAAMS,WAAN,CAFd;;AAIAQ,mBAAeH,IAAf,CAAoBS,OAAOC,MAAP,CAAc,sBAAYC,iBAAZ,EAAd,EAA+C,EAACP,IAAD,EAAIC,sBAAJ,EAAgBG,YAAhB,EAA/C,CAApB;AACD;AACD,SAAOrB,MAAP;AACD,CAVD;;AAYA,IAAMyB,mBAAmB,SAAnBA,gBAAmB,CAASC,eAAT,EAA0B1B,MAA1B,EAAiC;AAAA,MAC7CD,KAD6C,GACGC,MADH,CAC7CD,KAD6C;AAAA,MACtCI,OADsC,GACGH,MADH,CACtCG,OADsC;AAAA,MAC7BK,WAD6B,GACGR,MADH,CAC7BQ,WAD6B;AAAA,MAChBmB,cADgB,GACG3B,MADH,CAChB2B,cADgB;;;AAGrD,MAAI5B,MAAM2B,eAAN,MAA2B,CAA/B,EAAiC;AAC/B,QAAMT,IAAId;AACN;AADJ;AAAA,QAEMyB,UAAU7B,MAAM2B,eAAN,CAFhB;AAAA,QAGML,QAAQtB,MAAMS,WAAN,CAHd;AAAA,QAIMqB,SAASP,OAAOC,MAAP,CACN,sBAAYO,iBAAZ,EADM,EAEN,EAAEb,IAAF,EAAKW,gBAAL,EAAcP,YAAd,EAFM,CAJf;AAQA,QAAI,CAAC,mBAAUU,eAAV,CAA0BJ,cAA1B,EAA0CV,CAA1C,EAA8C,EAA9C,CAAL,EAAwD;AACtDY,aAAOG,UAAP,CAAkBC,CAAlB,GAAsB,CAAtB;AACD;AACDN,mBAAed,IAAf,CAAoBgB,MAApB;AACF;;AAED,SAAO7B,MAAP;AACH,CAnBD;;AAqBA,IAAMkC,eAAe,SAAfA,YAAe,CAASC,WAAT,EAAsBnC,MAAtB,EAA6B;AAAA,MACxCoC,MADwC,GACCD,WADD,CACxCC,MADwC;AAAA,MAChCC,IADgC,GACCF,WADD,CAChCE,IADgC;AAAA,2BACCF,WADD,CAC1BG,KAD0B;AAAA,MAC1BA,KAD0B,sCACpB,CADoB;AAAA,yBACCH,WADD,CACjBI,GADiB;AAAA,MACjBA,GADiB,oCACb,CADa;AAAA,0BACCJ,WADD,CACVK,IADU;AAAA,MACVA,IADU,qCACL,CADK;AAAA,MAExCzC,KAFwC,GAESC,MAFT,CAExCD,KAFwC;AAAA,MAEjCI,OAFiC,GAESH,MAFT,CAEjCG,OAFiC;AAAA,MAExBsC,UAFwB,GAESzC,MAFT,CAExByC,UAFwB;AAAA,MAEZC,gBAFY,GAES1C,MAFT,CAEZ0C,gBAFY;AAAA,MAG1CC,KAH0C,GAGjCN,IAAD,GAAStC,MAAMsC,IAAN,CAAT,GAAuBO,SAHW;;AAKhDH,aAAW5B,IAAX,CAAgB,CAACV,OAAD,EAAUJ,MAAMqC,MAAN,CAAV,CAAhB;AACAM,mBAAiB7B,IAAjB,CAAuB,oBAAUgC,iBAAV,CAA4B;AACjDR,UAAMM,KAD2C,EACpCL,OAAOvC,MAAMuC,KAAN,CAD6B,EACfQ,MAAM3C,OADS,EACAiC,QAAQrC,MAAMqC,MAAN,CADR;AAEjDW,YAAQ,EAACC,MAAMjD,MAAMwC,GAAN,CAAP,EAAmBU,OAAOlD,MAAMyC,IAAN,CAA1B;AAFyC,GAA5B,CAAvB;;AAKA,SAAOxC,MAAP;AACD,CAZD;;AAcA,IAAMkD,YAAY,SAAZA,SAAY,CAASf,WAAT,EAAsBnC,MAAtB,EAA6B;AAAA,0BAC1BmC,WAD0B,CACrCE,IADqC;AAAA,MACrCA,IADqC,qCAChC,CADgC;AAAA,MAErClC,OAFqC,GAEFH,MAFE,CAErCG,OAFqC;AAAA,MAE5BJ,KAF4B,GAEFC,MAFE,CAE5BD,KAF4B;AAAA,MAErBa,KAFqB,GAEFZ,MAFE,CAErBY,KAFqB;AAAA,MAEduC,OAFc,GAEFnD,MAFE,CAEdmD,OAFc;AAAA,MAGvCC,GAHuC,GAGjCxC,MAAMyC,MAH2B;;;AAK7C,MAAID,MAAI,CAAR,EAAW;AACT,QAAME,aAAa1C,MAAMwC,MAAI,CAAV,CAAnB;AACAD,YAAQtC,IAAR,CAAa,oBAAU0C,QAAV,CAAmB;AAC9BT,YAAM3C,OADwB,EACfqD,WAAWF,WAAW,CAAX,CADI,EACWjB,MAAMtC,MAAMsC,IAAN;AADjB,KAAnB,CAAb;AAGD;;AAED,SAAOrC,MAAP;AACD,CAbD;;AAeA,IAAMyD,gBAAgB,SAAhBA,aAAgB,CAAStB,WAAT,EAAsBnC,MAAtB,EAA6B;AAAA,2BACfmC,WADe,CACzCE,IADyC;AAAA,MACzCA,IADyC,sCACpC,CADoC;AAAA,2BACfF,WADe,CACjCK,IADiC;AAAA,MACjCA,IADiC,sCAC5B,CAD4B;AAAA,0BACfL,WADe,CACzBI,GADyB;AAAA,MACzBA,GADyB,qCACrB,CADqB;AAAA,MAEzCpC,OAFyC,GAEIH,MAFJ,CAEzCG,OAFyC;AAAA,MAEhCK,WAFgC,GAEIR,MAFJ,CAEhCQ,WAFgC;AAAA,MAEnBT,KAFmB,GAEIC,MAFJ,CAEnBD,KAFmB;AAAA,MAEZ2D,WAFY,GAEI1D,MAFJ,CAEZ0D,WAFY;;;AAIjD,MAAMC,cAAc5D,MAAMS,WAAN,CAApB;AAAA,MACMoD,aAAc7D,MAAMsC,IAAN,CAAD,GAAgBtC,MAAMsC,IAAN,CAAhB,GAA8BlD,EAAES,OADnD;AAAA,MAEMiE,SAAU9D,MAAMyC,IAAN,CAAD,GAAgB,mBAAIzC,MAAMyC,IAAN,CAAJ,EAAiBsB,KAAjB,CAAuBH,WAAvB,CAAhB,GAAsD,mBAAI,KAAJ,CAFrE;AAAA,MAGMI,QAAShE,MAAMwC,GAAN,CAAD,GAAe,mBAAIxC,MAAMwC,GAAN,CAAJ,EAAgBuB,KAAhB,CAAsBH,WAAtB,CAAf,GAAoD,mBAAI,KAAJ,CAHlE;AAAA,MAIMK,WAAYjE,MAAMyC,IAAN,CAAD,GAAgBzC,MAAMyC,IAAN,CAAhB,GAA8BrD,EAAES,OAJjD;AAAA,MAKMqE,UAAWlE,MAAMwC,GAAN,CAAD,GAAexC,MAAMwC,GAAN,CAAf,GAA4BpD,EAAES,OAL9C;;AAOA8D,cAAY7C,IAAZ,CAAiB;AACfI,OAAId,OADW;AAEfqC,UAAOrB,WAAW0C,MAAX,CAFQ;AAGftB,SAAMpB,WAAW4C,KAAX,CAHS;AAIf1B,UAAOuB,UAJQ;AAKfM,aAAUF,QALK;AAMfG,YAASF,OANM;AAOf3B,WAAQqB;AAPO,GAAjB;;AAUA,SAAO3D,MAAP;AACD,CAtBD;;AAwBA,IAAMoE,qBAAqB,SAArBA,kBAAqB,CAASC,OAAT,EAAkBrE,MAAlB,EAAyB;AAAA,MACzCG,OADyC,GACRH,MADQ,CACzCG,OADyC;AAAA,MAChCJ,KADgC,GACRC,MADQ,CAChCD,KADgC;AAAA,MACzBuE,YADyB,GACRtE,MADQ,CACzBsE,YADyB;;AAEjD,MAAIC,IAAE,CAAN;AAAA,MAASC,MAAIH,QAAQhB,MAArB;AACA,SAAOkB,IAAEC,GAAT,EAAcD,GAAd,EAAmB;AAChBD,iBAAaC,CAAb,EAAgBE,IAAhB,CAAqB5D,IAArB,CAA0B,CAACV,OAAD,EAAUJ,MAAMsE,QAAQE,CAAR,CAAN,CAAV,CAA1B;AACF;AACH,CAND;;AAQA,IAAMG,iBAAiB,SAAjBA,cAAiB,CAASC,gBAAT,EAA2BC,YAA3B,EAAwC;AAC7D,MAAMN,eAAe,EAArB;AAAA,MACMD,UAAS,EADf;;AAGA,MAAIM,iBAAiB,CAAjB,MAAwB,KAA5B,EAAkC;AAChC,QAAIE,IAAE,CAAN;AAAA,QAASC,OAAOF,aAAavB,MAA7B;AACA,SAAKwB,CAAL,EAAQA,IAAEC,IAAV,EAAgBD,GAAhB,EAAoB;AAClBP,mBAAazD,IAAb,CACE,sBAAYkE,aAAZ,CAA0BH,aAAaC,CAAb,CAA1B,CADF;AAGAR,cAAQxD,IAAR,CAAagE,CAAb;AACD;AACF,GARD,MAQO;AACL,QAAIN,IAAE,CAAN;AAAA,QAASC,MAAIG,iBAAiBtB,MAA9B;AACA,WAAOkB,IAAEC,GAAT,EAAcD,GAAd,EAAmB;AAChB,UAAMS,aAAaL,iBAAiBJ,CAAjB,CAAnB;AAAA,UACMU,cAAc,mBAAUC,eAAV,CAA0BN,YAA1B,EAAwCI,UAAxC,CADpB;AAEA,UAAIC,WAAJ,EAAiB;AACdX,qBAAazD,IAAb,CACE,sBAAYkE,aAAZ,CAA0BC,UAA1B,CADF;AAGAX,gBAAQxD,IAAR,CAAaoE,WAAb;AACF;AACH;AACF;;AAED,SAAO,EAAEX,0BAAF,EAAgBD,gBAAhB,EAAP;AACD,CA3BD;;AA6BA,IAAMc,qBAAqB,SAArBA,kBAAqB,CAASC,IAAT,EAAe5E,WAAf,EAA4BuC,MAA5B,EAAmC;AAEtD,eAAS,CAACjD,eAAD,EAAkBS,eAAlB,EAAmCI,aAAnC,CAAT;AAAA,sBACiByE,IADjB,CACEC,OADF;AAAA,MACEA,OADF,iCACU,EADV;AAAA,MAEAT,YAFA,GAEeS,QAAQT,YAFvB;AAAA,MAGA5E,MAHA,GAGS;AACRQ,iBAAcA,WADN;AAERE,cAAW4E,OAAOC,iBAFV;AAGR9E,cAAW6E,OAAOE,iBAHV;AAIR5E,WAAQ,EAJA;AAKR6B,gBAAa,EALL,EAKSC,kBAAmB,EAL5B;AAMRf,oBAAiB,EANT,EAMaX,gBAAiB,EAN9B;AAORmC,aAAU,EAPF,EAOMO,aAAc;AAPpB,GAHT;;;AAaN,MAAMrB,OAAO,mBAAU6C,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEC,IAA1C,CAAb;AAAA,MACMqG,cAAc,mBAAUP,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEE,KAA1C,CADpB;AAAA,MAEMiD,QAAU,OAAOmD,WAAP,KAAuB,WAAzB,GACJA,WADI,GAEJ,mBAAUP,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEG,KAA1C,CAJV;AAAA,MAKMiD,MAAM,mBAAU2C,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEI,GAA1C,CALZ;AAAA,MAMMiD,OAAO,mBAAU0C,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEK,IAA1C,CANb;AAAA,MAOM4C,SAAS,mBAAU8C,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEM,MAA1C,CAPf;AAAA,MAQMiG,aAAa,mBAAUR,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEO,WAA1C,CARnB;AAAA,MASMwB,aAAa,mBAAUgE,eAAV,CAA0BN,YAA1B,EAAwCzF,EAAEQ,WAA1C,CATnB;;AAYA,MAAIyC,MAAJ,EAAW;AACTuD,WAAO9E,IAAP,CAAYqB,aAAa0D,IAAb,CAAkB,IAAlB,EAAwB;AAClCxD,oBADkC,EAC1BC,UAD0B,EACpBC,YADoB,EACbC,QADa,EACRC;AADQ,KAAxB,CAAZ;AAGD;;AAED,MAAMqD,eAAeR,QAAQS,SAAR,IAAqBT,QAAQS,SAAR,KAAsB,MAAhE;AACA,MAAIJ,cAAc,CAACG,YAAnB,EAAiC;AAC/BF,WAAO9E,IAAP,CAAYY,iBAAiBmE,IAAjB,CAAsB,IAAtB,EAA4BF,UAA5B,CAAZ;AACD;;AAED,MAAIxE,cAAc,CAAC2E,YAAnB,EAAgC;AAC9BF,WAAO9E,IAAP,CAAYC,iBAAiB8E,IAAjB,CAAsB,IAAtB,EAA4B1E,UAA5B,CAAZ;AACD;;AAED,MAAImB,IAAJ,EAAS;AACPsD,WAAO9E,IAAP,CAAYqC,UAAU0C,IAAV,CAAe,IAAf,EAAqB,EAAEvD,UAAF,EAArB,CAAZ;AACD;;AAED,MAAIG,QAAQD,GAAZ,EAAiB;AACfoD,WAAO9E,IAAP,CAAY4C,cAAcmC,IAAd,CAAmB,IAAnB,EAAyB,EAAEvD,UAAF,EAAQG,UAAR,EAAcD,QAAd,EAAzB,CAAZ;AACD;;AAhD2D,MAkDpDoC,gBAlDoD,GAkD/B5B,MAlD+B,CAkDpD4B,gBAlDoD;;AAmD5D,MAAIA,gBAAJ,EAAsB;AAAA,0BACcD,eAAeC,gBAAf,EAAiCC,YAAjC,CADd;AAAA,QACZN,YADY,mBACZA,YADY;AAAA,QACED,OADF,mBACEA,OADF;;AAGpB,QAAIC,aAAajB,MAAb,KAAwB,CAA5B,EAA8B;AAC5BrD,aAAOsE,YAAP,GAAsBA,YAAtB;AACAqB,aAAO9E,IAAP,CAAYuD,mBAAmBwB,IAAnB,CAAwB,IAAxB,EAA8BvB,OAA9B,CAAZ;AACD;AACF;;AAED,SAAO;AACL0B,kBAAe,sBAAKJ,MAAL,CADV;AAEL3F,YAASA;AAFJ,GAAP;AAID,CAhED;;AAmEA,IAAMgG,gBAAgB,SAAhBA,aAAgB,CAASZ,IAAT,EAAe5E,WAAf,EAA4BuC,MAA5B,EAAmC;AAAA,4BACtBoC,mBAAmBC,IAAnB,EAAyB5E,WAAzB,EAAsCuC,MAAtC,CADsB;AAAA,MAC/CgD,YAD+C,uBAC/CA,YAD+C;AAAA,MACjC/F,MADiC,uBACjCA,MADiC;AAAA,uBAEhCoF,IAFgC,CAE/CC,OAF+C;AAAA,MAE/CA,OAF+C,kCAEvC,EAFuC;AAAA,sBAGnCA,OAHmC,CAG/CZ,IAH+C;AAAA,MAG/CA,IAH+C,iCAG1C,EAH0C;AAAA,MAIjDwB,MAJiD,GAIxCxB,KAAKyB,IAAL,CAAU,oBAAUC,aAApB,CAJwC;;AAMvD,MAAI5B,IAAE,CAAN;AAAA,MAAS6B,OAAKH,OAAO5C,MAArB;AACA,SAAMkB,IAAE6B,IAAR,EAAc7B,GAAd,EAAmB;AACjBwB,iBAAaE,OAAO1B,CAAP,CAAb,EAAwBvE,MAAxB;AACD;;AAEDsB,SAAOC,MAAP,CAAcvB,MAAd,EAAsB;AACpBqG,cAAUJ,MADU;AAEpBK,UAAM,gBAAMC,QAAN,CAAevG,MAAf;AAFc,GAAtB;;AAKA,SAAOA,MAAP;AACD,CAjBD;;AAmBA,IAAMwG,mBAAmB,SAAnBA,gBAAmB,CAAS/B,IAAT,EAAexC,CAAf,EAAiB;AACxC,MAAIsC,IAAE,CAAN;AAAA,MAASC,MAAIC,KAAKpB,MAAlB;AACA,SAAOkB,IAAEC,GAAT,EAAcD,GAAd,EAAmB;AACjBE,SAAKF,CAAL,EAAQtC,CAAR,GAAYA,CAAZ;AACD;AACF,CALD;;AAOA,IAAMwE,yBAAyB,SAAzBA,sBAAyB,CAASC,MAAT,EAAiBjC,IAAjB,EAAuBkC,OAAvB,EAAgC1E,CAAhC,EAAkC;AAC/D,MAAIwC,KAAKpB,MAAL,GAAY,CAAhB,EAAkB;AAChBmD,qBAAiB/B,IAAjB,EAAuBxC,CAAvB;AACAyE,WAAOE,MAAP,CAAc/F,IAAd,CAAmB,sBAAYgG,gBAAZ,CAA6BpC,IAA7B,EAAmCkC,OAAnC,CAAnB;AACAD,WAAOI,KAAP,CAAaC,aAAb,GAA6B,EAA7B;AACD;AACF,CAND;;AAQA,IAAMC,yBAAyB,SAAzBA,sBAAyB,CAASN,MAAT,EAAiBjC,IAAjB,EAAuBkC,OAAvB,EAAgC1E,CAAhC,EAAkC;AAC/D,MAAIwC,KAAKpB,MAAL,GAAY,CAAhB,EAAkB;AAChBmD,qBAAiB/B,IAAjB,EAAuBxC,CAAvB;AACAyE,WAAOE,MAAP,CAAc/F,IAAd,CAAmB,sBAAYoG,gBAAZ,CAA6BxC,IAA7B,EAAmCkC,OAAnC,CAAnB;AACAD,WAAOI,KAAP,CAAaC,aAAb,GAA6B,EAA7B;AACD;AACF,CAND;;AAQA,IAAMG,gBAAgB,SAAhBA,aAAgB,CAASR,MAAT,EAAiBtB,IAAjB,EAAuBiB,QAAvB,EAAgC;AACpD,MAAMc,QAAO/B,KAAKC,OAAL,CAAaT,YAA1B;AACA,MAAKuC,MAAM,CAAN,MAAahI,EAAEK,IAAf,IAAuB2H,MAAM,CAAN,MAAahI,EAAEI,GAAtC,IACA4H,MAAM,CAAN,MAAahI,EAAEE,KADf,IACwB8H,MAAM,CAAN,MAAahI,EAAEM,MAD5C,EACoD;AAClD6B,WAAOC,MAAP,CAAcmF,MAAd,EAAsB;AACpBL,gBAAUA,QADU;AAEpBe,eAAS,IAFW;AAGpBC;AAHoB,KAAtB;AAKD;AACF,CAVD;AAWA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAASZ,MAAT,EAAiBtB,IAAjB,EAAuBiB,QAAvB,EAAiC;AACxD,MAAMc,QAAO/B,KAAKC,OAAL,CAAaT,YAA1B;AACA,MAAKuC,MAAM,CAAN,MAAahI,EAAEC,IAAf,IAAuB+H,MAAM,CAAN,MAAahI,EAAEE,KAA3C,EAAkD;AAChDiC,WAAOC,MAAP,CAAcmF,MAAd,EAAsB;AACpBL,gBAAUA,QADU;AAEpBkB;AAFoB,KAAtB;AAID;AACF,CARD;;AAUA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAASd,MAAT,EAAiB3D,MAAjB,EAAwB;AAAA,MACvC0E,KADuC,GACnB1E,MADmB,CACvC0E,KADuC;AAAA,MAChCC,QADgC,GACnB3E,MADmB,CAChC2E,QADgC;;AAE/C,MAAID,KAAJ,EAAU;AACR,oBAAME,eAAN,CAAsBjB,MAAtB,EAA8Be,KAA9B,EAAqCC,QAArC;AACD;AACF,CALD;;AAOA,IAAME,6BAA6B,SAA7BA,0BAA6B,CAAStD,YAAT,EAAuBoC,MAAvB,EAA+BC,OAA/B,EAAuC;AACxE,MAAMkB,SAAS,EAAf;AAAA,MACM/C,OAAO4B,OAAOE,MAAP,CAAcvD,MAD3B;;AAGA,MAAIyB,SAAS,CAAb,EAAe;AACZ+C,WAAOhH,IAAP,CAAY;AACTiH,YAAMpB,OAAOE,MAAP,CAAc,CAAd,EAAiBmB,WADd;AAETC,aAAO,CAFE;AAGTC,aAAO9I,EAAEU,UAHA;AAITqI,iBAAY;AAJH,KAAZ;AAMF;;AAED,MAAI3D,IAAE,CAAN;AAAA,MAASC,MAAIF,aAAajB,MAA1B;AACA,OAAKkB,CAAL,EAAQA,IAAEC,GAAV,EAAeD,GAAf,EAAmB;AAAA,0BACmCD,aAAaC,CAAb,CADnC;AAAA,QACTE,IADS,mBACTA,IADS;AAAA,QACHqD,IADG,mBACHA,IADG;AAAA,QACGG,KADH,mBACGA,KADH;AAAA,QACUE,MADV,mBACUA,MADV;AAAA,QACkBC,YADlB,mBACkBA,YADlB;AAAA,QAEXxH,KAFW,GAEH,sBAAYyH,OAAZ,CAAoB;AACzBC,iBAAY/D,IAAI,GAAJ,GAAUoC,OADG;AAEzBoB,mBAAcD,IAFW;AAGzBS,eAAU,KAHe;AAIzB1G,cAAS,gBAAM2G,YAAN,CAAmB,EAAEP,YAAF,EAASE,cAAT,EAAnB,CAJgB;AAKzBF,aAAOA,KALkB;AAMzBxD,YAAOA;AANkB,KAApB,CAFG;;AAWhB,QAAI,CAAC2D,YAAL,EAAkB;AACf1B,aAAOE,MAAP,CAAc/F,IAAd,CAAmBD,KAAnB;AACAiH,aAAOhH,IAAP,CAAY;AACViH,cAAOA,IADG;AAEVE,eAAQtB,OAAOE,MAAP,CAAcvD,MAAd,GAAuB,CAFrB;AAGV4E,eAAQA,KAHE;AAIVC,mBAAY;AAJF,OAAZ;AAMF,KARD,MAQO;AACLL,aAAOhH,IAAP,CAAY;AACTiH,cAAOA,IADE;AAETG,eAAQA,KAFC;AAGTC,mBAAY,KAHH;AAITE,sBAAe,IAJN;AAKTxH,eAAQA;AALC,OAAZ;AAOD;AACH;;AAED8F,SAAO+B,QAAP,CAAgBZ,MAAhB,GAAyBA,MAAzB;AACD,CA7CD;;AA+CA,IAAMa,cAAc,SAAdA,WAAc,CAAShC,MAAT,EAAiBtB,IAAjB,EAAuBrC,MAAvB,EAA8B;AAAA,MAE5BvC,WAF4B,GAKrCuC,MALqC,CAEvC4F,UAFuC;AAAA,MAGjChC,OAHiC,GAKrC5D,MALqC,CAGvC6F,KAHuC;AAAA,MAIvCC,kBAJuC,GAKrC9F,MALqC,CAIvC8F,kBAJuC;AAAA,MAInBC,iBAJmB,GAKrC/F,MALqC,CAInB+F,iBAJmB;;;AAO/CtB,mBAAiBd,MAAjB,EAAyB3D,MAAzB;AACA2D,SAAO+B,QAAP,GAAkB,mBAAUM,cAAV,CAAyBhG,MAAzB,CAAlB;AACA2D,SAAOsC,IAAP,GAAc,mBAAUC,iBAAV,CAA4B7D,IAA5B,CAAd;;AAT+C,uBAiB3CY,cAAcZ,IAAd,EAAoB5E,WAApB,EAAiCuC,MAAjC,CAjB2C;AAAA,MAY7CnC,KAZ6C,kBAY7CA,KAZ6C;AAAA,MAYtCF,QAZsC,kBAYtCA,QAZsC;AAAA,MAY5BD,QAZ4B,kBAY5BA,QAZ4B;AAAA,MAYlB6F,IAZkB,kBAYlBA,IAZkB;AAAA,MAa7C3E,cAb6C,kBAa7CA,cAb6C;AAAA,MAa7BX,cAb6B,kBAa7BA,cAb6B;AAAA,MAc7CyB,UAd6C,kBAc7CA,UAd6C;AAAA,MAcjCC,gBAdiC,kBAcjCA,gBAdiC;AAAA,MAe7CS,OAf6C,kBAe7CA,OAf6C;AAAA,MAepCO,WAfoC,kBAepCA,WAfoC;AAAA,MAgB7CY,YAhB6C,kBAgB7CA,YAhB6C;AAAA,MAgB/B+B,QAhB+B,kBAgB/BA,QAhB+B;;AAmB/Ca,gBAAcR,MAAd,EAAsBtB,IAAtB,EAA4BiB,QAA5B;AACAiB,mBAAiBZ,MAAjB,EAAyBtB,IAAzB,EAA+BiB,QAA/B;;AAEAK,SAAOE,MAAP,CAAc,CAAd,EAAiBnC,IAAjB,GAAwB7D,KAAxB;AACA8F,SAAOE,MAAP,CAAc,CAAd,EAAiB0B,SAAjB,GAA6B3B,OAA7B;;AAEAF,yBAAuBC,MAAvB,EAA+B/E,cAA/B,EAA+CgF,OAA/C,EAAwDL,IAAxD;AACAU,yBAAuBN,MAAvB,EAA+B1F,cAA/B,EAA+C2F,OAA/C,EAAwDL,IAAxD;;AAEAhF,SAAOC,MAAP,CAAcmF,MAAd,EAAsB;AACpBwC,iBAAa,oBAAUA,WAAV,CAAsBtI,KAAtB,CADO;AAEpBuI,kDAFoB;AAGpBC,kDAHoB;AAIpBC,oBAAgB5G,WAAWY,MAAX,GAAkB,CAAlB,GACX,sBAAYiG,sBAAZ,CAAmC3C,OAAnC,EAA4CjE,gBAA5C,EAA8DD,UAA9D,CADW,GAEXG,SANe;AAOpB2G,iBAAapG,QAAQE,MAAR,GAAe,CAAf,GACR,sBAAYmG,mBAAZ,CAAgC7C,OAAhC,EAAyCxD,OAAzC,CADQ,GAERP,SATe;AAUrB6G,qBAAiB/F,YAAYL,MAAZ,GAAmB,CAAnB,GACX,sBAAYqG,uBAAZ,CAAoC/C,OAApC,EAA6CjD,WAA7C,CADW,GAEXd;AAZe,GAAtB;;AAeC,MAAI0B,YAAJ,EAAiB;AACfsD,+BAA2BtD,YAA3B,EAAyCoC,MAAzC,EAAiDC,OAAjD;AACAD,WAAO+B,QAAP,CAAgBkB,YAAhB,GAA+B,IAA/B;AACD;;AAEF,SAAO;AACLjD,kBADK,EACGhG,kBADH,EACaD,kBADb,EACuB6F,UADvB;AAELuC,0CAFK,EAEeC;AAFf,GAAP;AAIF,CApDD;;AAsDA,IAAMc,4BAA4B,SAA5BA,yBAA4B,CAASC,SAAT,EAAoBnJ,QAApB,EAA8BD,QAA9B,EAAwCmI,KAAxC,EAA+CC,kBAA/C,EAAkE;AAClG,MAAMiB,QAAQrJ,aAAa6E,OAAOE,iBAApB,GACJ,mBAAI/E,QAAJ,CADI,GAEJ,mBAAI,KAAJ,CAFV;AAAA,MAGMsJ,QAAQrJ,aAAa4E,OAAOC,iBAApB,GACJ,mBAAI7E,QAAJ,CADI,GAEJ,mBAAI,KAAJ,CALV;AAAA,MAMMsJ,UAAWpB,UAAU,IAAX,GAAmB,mBAAIA,KAAJ,CAAnB,GAAgC,mBAAI,CAAJ,CANhD;AAAA,MAOMqB,YAAY9I,WAAW2I,MAAMI,KAAN,CAAY,CAAZ,EAAeC,QAAf,EAAX,EAAsC,EAAtC,CAPlB;AAAA,MAQMC,YAAYjJ,WAAW4I,MAAMG,KAAN,CAAY,CAAZ,EAAeC,QAAf,EAAX,EAAsC,EAAtC,CARlB;;AAUA,MAAIE,YAAU,EAAd;AAAA,MAAkBC,YAAU,EAA5B;AACA,MAAIzB,kBAAJ,EAAuB;AACrB,QAAM0B,WAAW,mBAAUC,aAAV,CAAwB,EAAEC,QAAQX,MAAMhG,KAAN,CAAYkG,OAAZ,CAAV,EAAgCU,QAAQV,OAAxC,EAAxB,CAAjB;AACA,QAAMW,WAAW,mBAAUH,aAAV,CAAwB,EAAEC,QAAQT,QAAQlG,KAAR,CAAciG,KAAd,CAAV,EAAgCW,QAAQV,OAAxC,EAAxB,CAAjB;AACAK,oCAA6BE,QAA7B;AACAD,oCAA6BK,QAA7B;AACD;;AAEDd,YAAU,CAAV,EAAajB,KAAb,GAAqBqB,SAArB;AACAJ,YAAU,CAAV,EAAae,KAAb,CAAmBC,IAAnB,QAA6B,sBAAYC,cAAZ,CAA2Bb,SAA3B,CAA7B,GAAqEI,SAArE;AACAR,YAAU,CAAV,EAAajB,KAAb,GAAqBwB,SAArB;AACAP,YAAU,CAAV,EAAae,KAAb,CAAmBC,IAAnB,QAA6B,sBAAYC,cAAZ,CAA2BV,SAA3B,CAA7B,GAAqEE,SAArE;AAED,CAxBD;;AA0BA,IAAMS,eAAe,SAAfA,YAAe,CAAS/K,MAAT,EAAgB;AAAA,MAE3B0G,MAF2B,GAIzB1G,MAJyB,CAE3B0G,MAF2B;AAAA,MAEnBhG,QAFmB,GAIzBV,MAJyB,CAEnBU,QAFmB;AAAA,MAETD,QAFS,GAIzBT,MAJyB,CAETS,QAFS;AAAA,MAEC6F,IAFD,GAIzBtG,MAJyB,CAECsG,IAFD;AAAA,MAG3BuC,kBAH2B,GAIzB7I,MAJyB,CAG3B6I,kBAH2B;AAAA,MAGPC,iBAHO,GAIzB9I,MAJyB,CAGP8I,iBAHO;AAAA,MAK7Be,SAL6B,GAKjBnD,OAAOsE,KAAP,CAAanB,SALI;AAAA,MAM7BoB,KAN6B,GAMrBvE,OAAOE,MAAP,CAAc,CAAd,EAAiBnC,IANI;AAAA,MAO7ByG,SAP6B,GAOjBD,MAAM5H,MAAN,GAAe,CAPE;AAAA,MAQ7B8H,YAR6B,GAQdF,MAAMC,SAAN,EAAiB,CAAjB,CARc;;AAUnCtB,4BACEC,SADF,EACanJ,QADb,EACuBD,QADvB,EAEE0K,YAFF,EAEgBtC,kBAFhB;;AAKA,MAAI,CAACC,iBAAL,EAAuB;AACrBpC,WAAOsE,KAAP,CAAaI,GAAb,GAAmB9E,IAAnB;AACD;;AAED,SAAOtG,MAAP;AACD,CApBD;;AAsBA,IAAMqL,eAAe,sBAAK3C,WAAL,EAAkBqC,YAAlB,CAArB;;AAEA,IAAMO,qBAAqB,SAArBA,kBAAqB,CAASlG,IAAT,EAAerC,MAAf,EAAsB;AACzC,eAAS,sBAAYwI,eAAZ,EAAT;AAAA,MACEvG,UADF,GACiBjC,MADjB,CACEiC,UADF;;;AAGNjC,SAAO4F,UAAP,GAAoB,mBAAU6C,kBAAV,CAA6BpG,IAA7B,EAAmCrC,MAAnC,CAApB;AACA,MAAKiC,UAAL,EAAiB;AACf0B,WAAOE,MAAP,CAAc,CAAd,EAAiBmB,WAAjB,GAA+B/C,UAA/B;AACD;;AAED,SAAOqG,aAAa3E,MAAb,EAAqBtB,IAArB,EAA2BrC,MAA3B,CAAP;AACD,CAVD;;AAYA,IAAM0I,WAAW,SAAXA,QAAW,CAACrG,IAAD,EAAU;AAAA,uBACFA,IADE,CACjBC,OADiB;AAAA,MACjBA,OADiB,kCACT,EADS;AAAA,uBAELA,OAFK,CAEjBZ,IAFiB;AAAA,MAEjBA,IAFiB,kCAEZ,EAFY;;AAGzB,SAAOA,IAAP;AACD,CAJD;AAKA,IAAMiH,aAAa,SAAbA,UAAa;AAAA,SAAW,UAACtG,IAAD,EAAOrC,MAAP,EAAkB;AAC9C,QAAM0B,OAAOgH,SAASrG,IAAT,CAAb;AACA,WAAO,EAAEsB,QAAQiF,QAAQC,QAAR,CAAiBnH,IAAjB,EAAuB1B,MAAvB,CAAV,EAAP;AACD,GAHkB;AAAA,CAAnB;AAIA,IAAM8I,YAAY,SAAZA,SAAY;AAAA,SAAW,UAACzG,IAAD,EAAOrC,MAAP,EAAe+D,KAAf,EAAyB;AACpD,QAAMrC,OAAOgH,SAASrG,IAAT,CAAb;AACA,WAAOuG,QAAQG,OAAR,CAAgBrH,IAAhB,EAAsB1B,MAAtB,EAA8B+D,KAA9B,CAAP;AACD,GAHiB;AAAA,CAAlB;;AAKA,IAAMiF,2EACH,gBAAUC,IADP,EACeV,kBADf,8CAEH,gBAAUW,UAFP,6EAGH,gBAAUC,YAHP,6FAIH,gBAAUC,oBAJP,6FAKH,gBAAUC,cALP,iGAMH,gBAAUC,sBANP,iGAOH,gBAAUC,QAPP,qFAQH,gBAAUC,MARP,EAQgBb,8BARhB,8CASH,gBAAUc,OATP,EASiBd,+BATjB,8CAUH,gBAAUe,UAVP,EAUoBf,+BAVpB,8CAWH,gBAAUgB,YAXP,EAWsBhB,+BAXtB,eAAN;;AAcA,IAAMiB,eAAe,SAAfA,YAAe,CAAClI,IAAD,EAAOmI,MAAP,EAAkB;AACrC,SAAOnI,KACJoI,GADI,CACA;AAAA,WAAK,CAAE,oBAAUC,QAAV,CAAmBC,EAAE,CAAF,CAAnB,CAAF,EAA4BA,EAAEH,MAAF,CAA5B,CAAL;AAAA,GADA,EAEJ1G,IAFI,CAEC,oBAAUC,aAFX,CAAP;AAGD,CAJD;;AAMA,IAAM6G,WAAW,SAAXA,QAAW,CAAC5H,IAAD,EAAOrC,MAAP,EAAkB;AAAA,MACnB4D,OADmB,GACG5D,MADH,CACzB6F,KADyB;AAAA,MACVqE,QADU,GACGlK,MADH,CACVkK,QADU;AAAA,MAE3BzM,WAF2B,GAEb,mBAAUgL,kBAAV,CAA6BpG,IAA7B,EAAmCrC,MAAnC,CAFa;AAAA,MAG3B0B,IAH2B,GAGpBkI,aAAalB,SAASrG,IAAT,CAAb,EAA6B5E,WAA7B,CAHoB;AAAA,MAI3BI,KAJ2B,GAInBU,OAAOC,MAAP,CACL,sBAAY8G,OAAZ,EADK,EACkB;AACrBC,eAAW2E,WAAW,GAAX,GAAiBtG,OADP;AAErBoB,iBAAapB,QAAQuG,SAAR,CAAkB,CAAlB,EAAoB,EAApB,CAFQ;AAGrBzI,UAAMA,IAHe;AAIrB6B,UAAM,mBAAU6G,QAAV,CAAmB1I,IAAnB;AAJe,GADlB,CAJmB;;AAajC,SAAO7D,KAAP;AACD,CAdD;;AAgBA,IAAMwM;AACJC,MAAIL;AADA,6CAEH,gBAAUR,OAFP,EAEiBX,8BAFjB,6CAGH,gBAAUY,UAHP,EAGoBZ,8BAHpB,6CAIH,gBAAUa,YAJP,EAIsBb,8BAJtB,cAAN;;AAOA,IAAMyB,gBAAgB;AACpB1B,UADoB,oBACXxG,IADW,EACLrC,MADK,EACE;AAAA,4BACkBA,MADlB,CACXwK,SADW;AAAA,QACXA,SADW,qCACD,gBAAUvB,IADT;AAAA,QAEbtF,MAFa,GAEJqF,WAAWwB,SAAX,EAAsBnI,IAAtB,EAA4BrC,MAA5B,CAFI;;AAGnB,WAAO2D,MAAP;AACF,GALmB;AAOpB8G,UAPoB,oBAOXpI,IAPW,EAOLrC,MAPK,EAOG+D,KAPH,EAOS;AACrB,QAAEyG,SAAF,GAAgBxK,MAAhB,CAAEwK,SAAF;AAAA,QACDP,QADC,GACUI,UAAUG,SAAV,KAAwBH,UAAUC,EAD5C;AAAA,QAEDzM,KAFC,GAEOoM,SAAS5H,IAAT,EAAerC,MAAf,EAAuB+D,KAAvB,CAFP;;AAGN,WAAOlG,KAAP;AACD;AAZmB,CAAtB;;kBAgBe0M,a","file":"QuandlAdapter.js","sourcesContent":["\r\nimport flow from 'lodash.flow';\r\nimport Big from 'big.js';\r\n\r\nimport {ChartType} from '../constants/Type';\r\nimport Chart from '../charts/Chart';\r\nimport ChartConfig from '../charts/ChartConfig';\r\nimport ChartLegend from '../charts/ChartLegend';\r\n\r\nimport {\r\n  fnAddSeriesSma, fnRemoveSeries,\r\n  fnGetConfigMfi, fnMomAthConfig\r\n} from './IndicatorSma';\r\n\r\nimport QuandlFn2 from './QuandlFn2';\r\nimport AdapterFn from './AdapterFn';\r\n\r\nimport {fCreatePieConfig} from './QuandlToPie';\r\nimport {fCreateStackedAreaConfig} from './QuandlToStackedArea';\r\nimport {fCreateStackedColumnConfig} from './QuandlToStackedColumn';\r\nimport {fCreateTreeMapConfig} from './QuandlToTreeMap';\r\nimport ToYearly from './ToYearly'\r\nimport ToScatter from './ToScatter'\r\n\r\nconst C = {\r\n  OPEN : \"Open\",\r\n  CLOSE : \"Close\",\r\n  PRICE: 'Price',\r\n  LOW : \"Low\",\r\n  HIGH : \"High\",\r\n  VOLUME : \"Volume\",\r\n  EX_DIVIDEND : \"Ex-Dividend\",\r\n  SPLIT_RATIO : \"Split Ratio\",\r\n  UNKNOWN : \"Unknown\",\r\n\r\n  COLOR_BLUE: '#2f7ed8',\r\n}\r\n\r\n\r\nconst _fnConvertToUTC = function(point, result){\r\n   const arrDate = point[0].split('-');\r\n   result.dateUTC = Date.UTC(arrDate[0], (parseInt(arrDate[1], 10)-1), arrDate[2]);\r\n   result.point = point;\r\n   return result;\r\n}\r\n\r\nconst _fnCheckExtrems = function(result){\r\n  const {point, yPointIndex, maxPoint, minPoint} = result;\r\n  if (!(point[yPointIndex] == null) && point[yPointIndex]>=maxPoint){\r\n    result.maxPoint = point[yPointIndex];\r\n  }\r\n  if (!(point[yPointIndex] == null) && point[yPointIndex]<=minPoint) {\r\n    result.minPoint = point[yPointIndex];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddToSeria = function(result){\r\n   const {seria, dateUTC, point, yPointIndex} = result;\r\n   seria.push([dateUTC, point[yPointIndex]]);\r\n\r\n   return result;\r\n}\r\n\r\nconst _fnAddSplitRatio = function(splitRationIndex, result){\r\n  const { point, dateUTC, yPointIndex, dataSplitRatio } = result;\r\n  if (point[splitRationIndex] !== 1){\r\n    const x = dateUTC\r\n        , splitRatio = parseFloat(point[splitRationIndex].toFixed(2))\r\n        , price = point[yPointIndex];\r\n\r\n    dataSplitRatio.push(Object.assign(ChartConfig.fMarkerSplitRatio(), {x, splitRatio, price}));\r\n  }\r\n  return result;\r\n}\r\n\r\nconst _fnAddExDividend = function(exDividendIndex, result){\r\n     const { point, dateUTC, yPointIndex, dataExDividend } = result;\r\n\r\n     if (point[exDividendIndex] !== 0){\r\n       const x = dateUTC\r\n           //, exValue = parseFloat(point[exDividendIndex].toFixed(2))\r\n           , exValue = point[exDividendIndex]\r\n           , price = point[yPointIndex]\r\n           , marker = Object.assign(\r\n                ChartConfig.fMarkerExDividend(),\r\n                { x, exValue, price }\r\n             );\r\n       if (!QuandlFn2.isPrevDateAfter(dataExDividend, x , 14)) {\r\n         marker.dataLabels.y = 0;\r\n       }\r\n       dataExDividend.push(marker);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst _fnAddVolume = function(optionIndex, result){\r\n  const { volume, open, close=4, low=3, high=2 } = optionIndex\r\n      , { point, dateUTC, dataVolume, dataVolumeColumn } = result\r\n      , _open = (open) ? point[open] : undefined;\r\n\r\n  dataVolume.push([dateUTC, point[volume]]);\r\n  dataVolumeColumn.push( AdapterFn.volumeColumnPoint({\r\n    open: _open, close: point[close], date: dateUTC, volume: point[volume],\r\n    option: {_low: point[low], _high: point[high]},\r\n  }))\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddATH = function(optionIndex, result){\r\n  const { open=1 } = optionIndex\r\n      , { dateUTC, point, seria, dataATH } = result\r\n      , len = seria.length;\r\n\r\n  if (len>1) {\r\n    const _prevPoint = seria[len-2];\r\n    dataATH.push(AdapterFn.athPoint({\r\n      date: dateUTC, prevClose: _prevPoint[1], open: point[open]\r\n    }))\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddHighLow = function(optionIndex, result){\r\n  const { open=1, high=2, low=3 } = optionIndex\r\n      , { dateUTC, yPointIndex, point, dataHighLow } = result;\r\n\r\n  const _closeValue = point[yPointIndex]\r\n      , _openValue = (point[open]) ? point[open] : C.UNKNOWN\r\n      , _bHigh = (point[high]) ? Big(point[high]).minus(_closeValue) : Big('0.0')\r\n      , _bLow = (point[low]) ? Big(point[low]).minus(_closeValue) : Big('0.0')\r\n      , _dayHigh = (point[high]) ? point[high] : C.UNKNOWN\r\n      , _dayLow = (point[low]) ? point[low] : C.UNKNOWN;\r\n\r\n  dataHighLow.push({\r\n    x : dateUTC,\r\n    high : parseFloat(_bHigh),\r\n    low : parseFloat(_bLow),\r\n    open : _openValue,\r\n    dayHigh : _dayHigh,\r\n    dayLow : _dayLow,\r\n    close : _closeValue\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddCustomSeries = function(columns, result){\r\n   const { dateUTC, point, legendSeries } = result;\r\n   let i=0, max=columns.length;\r\n   for (; i<max; i++ ){\r\n      legendSeries[i].data.push([dateUTC, point[columns[i]]])\r\n   }\r\n}\r\n\r\nconst _fLegendConfig = function(seriaColumnNames, column_names){\r\n  const legendSeries = []\r\n      , columns =[];\r\n\r\n  if (seriaColumnNames[0] === 'All'){\r\n    let j=1, _len = column_names.length;\r\n    for (j; j<_len; j++){\r\n      legendSeries.push(\r\n        ChartLegend.fLegendConfig(column_names[j])\r\n      )\r\n      columns.push(j)\r\n    }\r\n  } else {\r\n    let i=0, max=seriaColumnNames.length;\r\n    for (; i<max; i++ ){\r\n       const columnName = seriaColumnNames[i]\r\n           , columnIndex = QuandlFn2.findColumnIndex(column_names, columnName);\r\n       if (columnIndex) {\r\n          legendSeries.push(\r\n            ChartLegend.fLegendConfig(columnName)\r\n          )\r\n          columns.push(columnIndex)\r\n       }\r\n    }\r\n  }\r\n\r\n  return { legendSeries, columns };\r\n}\r\n\r\nconst _fnCreatePointFlow = function(json, yPointIndex, option){\r\n\r\n  const fnStep = [_fnConvertToUTC, _fnCheckExtrems, _fnAddToSeria]\r\n      , { dataset={} } = json\r\n      , column_names = dataset.column_names\r\n      , result = {\r\n         yPointIndex : yPointIndex,\r\n         minPoint : Number.POSITIVE_INFINITY,\r\n         maxPoint : Number.NEGATIVE_INFINITY,\r\n         seria : [],\r\n         dataVolume : [], dataVolumeColumn : [],\r\n         dataExDividend : [], dataSplitRatio : [],\r\n         dataATH : [], dataHighLow : []\r\n      };\r\n\r\n  const open = QuandlFn2.findColumnIndex(column_names, C.OPEN)\r\n      , _closeIndex = QuandlFn2.findColumnIndex(column_names, C.CLOSE)\r\n      , close = ( typeof _closeIndex !== 'undefined')\r\n          ? _closeIndex\r\n          : QuandlFn2.findColumnIndex(column_names, C.PRICE)\r\n      , low = QuandlFn2.findColumnIndex(column_names, C.LOW)\r\n      , high = QuandlFn2.findColumnIndex(column_names, C.HIGH)\r\n      , volume = QuandlFn2.findColumnIndex(column_names, C.VOLUME)\r\n      , exDividend = QuandlFn2.findColumnIndex(column_names, C.EX_DIVIDEND)\r\n      , splitRatio = QuandlFn2.findColumnIndex(column_names, C.SPLIT_RATIO);\r\n\r\n\r\n  if (volume){\r\n    fnStep.push(_fnAddVolume.bind(null, {\r\n      volume, open, close, low, high\r\n    }));\r\n  }\r\n\r\n  const _isTransform = dataset.transform && dataset.transform !== 'none';\r\n  if (exDividend && !_isTransform) {\r\n    fnStep.push(_fnAddExDividend.bind(null, exDividend));\r\n  }\r\n\r\n  if (splitRatio && !_isTransform){\r\n    fnStep.push(_fnAddSplitRatio.bind(null, splitRatio));\r\n  }\r\n\r\n  if (open){\r\n    fnStep.push(_fnAddATH.bind(null, { open }));\r\n  }\r\n\r\n  if (high && low ){\r\n    fnStep.push(_fnAddHighLow.bind(null, { open, high, low }));\r\n  }\r\n\r\n  const { seriaColumnNames } = option;\r\n  if (seriaColumnNames) {\r\n    const { legendSeries, columns } = _fLegendConfig(seriaColumnNames, column_names);\r\n\r\n    if (legendSeries.length !== 0){\r\n      result.legendSeries = legendSeries\r\n      fnStep.push(_fnAddCustomSeries.bind(null, columns))\r\n    }\r\n  }\r\n\r\n  return {\r\n    fnPointsFlow : flow(fnStep),\r\n    result : result\r\n  };\r\n}\r\n\r\n\r\nconst _fnSeriesPipe = function(json, yPointIndex, option){\r\n  const { fnPointsFlow, result } = _fnCreatePointFlow(json, yPointIndex, option)\r\n      , { dataset={} } = json\r\n      , { data=[] } = dataset\r\n      , points = data.sort(AdapterFn.compareByDate);\r\n\r\n  let i=0, _max=points.length;\r\n  for(; i<_max; i++) {\r\n    fnPointsFlow(points[i], result)\r\n  }\r\n\r\n  Object.assign(result, {\r\n    zhPoints: points,\r\n    minY: Chart.calcMinY(result)\r\n  })\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnSetYForPoints = function(data, y){\r\n  let i=0, max=data.length;\r\n  for (; i<max; i++ ){\r\n    data[i].y = y;\r\n  }\r\n}\r\n\r\nconst _fnAddSeriesExDivident = function(config, data, chartId, y){\r\n  if (data.length>0){\r\n    _fnSetYForPoints(data, y);\r\n    config.series.push(ChartConfig.fExDividendSeria(data, chartId));\r\n    config.chart.spacingBottom = 40;\r\n  }\r\n}\r\n\r\nconst _fnAddSeriesSplitRatio = function(config, data, chartId, y){\r\n  if (data.length>0){\r\n    _fnSetYForPoints(data, y);\r\n    config.series.push(ChartConfig.fSplitRatioSeria(data, chartId));\r\n    config.chart.spacingBottom = 40;\r\n  }\r\n};\r\n\r\nconst _fnCheckIsMfi = function(config, json, zhPoints){\r\n  const names= json.dataset.column_names;\r\n  if ( names[2] === C.HIGH && names[3] === C.LOW  &&\r\n       names[4] === C.CLOSE && names[5] === C.VOLUME) {\r\n    Object.assign(config, {\r\n      zhPoints: zhPoints,\r\n      zhIsMfi: true,\r\n      zhFnGetMfiConfig: fnGetConfigMfi\r\n    })\r\n  }\r\n};\r\nconst _fnCheckIsMomAth = function(config, json, zhPoints) {\r\n  const names= json.dataset.column_names;\r\n  if ( names[1] === C.OPEN && names[4] === C.CLOSE) {\r\n    Object.assign(config, {\r\n      zhPoints: zhPoints,\r\n      zhFnMomAthConfig: fnMomAthConfig\r\n    })\r\n  }\r\n}\r\n\r\nconst _fnSetChartTitle = function(config, option){\r\n  const { title, subtitle } = option;\r\n  if (title){\r\n    Chart.setDefaultTitle(config, title, subtitle)\r\n  }\r\n}\r\n\r\nconst _fnSetLegendSeriesToConfig = function(legendSeries, config, chartId){\r\n  const legend = []\r\n      , _len = config.series.length;\r\n\r\n  if (_len !== 0){\r\n     legend.push({\r\n        name: config.series[0].zhValueText,\r\n        index: 0,\r\n        color: C.COLOR_BLUE,\r\n        isVisible : true\r\n    });\r\n  }\r\n\r\n  let i=0, max=legendSeries.length;\r\n  for (i; i<max; i++){\r\n    const { data, name, color, symbol, isSecondAxes } = legendSeries[i]\r\n        , seria = ChartConfig.fSeries({\r\n             zhSeriaId : i + '_' + chartId,\r\n             zhValueText : name,\r\n             visible : false,\r\n             marker : Chart.fSeriaMarker({ color, symbol }),\r\n             color: color,\r\n             data : data\r\n          });\r\n\r\n     if (!isSecondAxes){\r\n        config.series.push(seria);\r\n        legend.push({\r\n          name : name,\r\n          index : config.series.length - 1,\r\n          color : color,\r\n          isVisible : false\r\n        });\r\n     } else {\r\n       legend.push({\r\n          name : name,\r\n          color : color,\r\n          isVisible : false,\r\n          isSecondAxes : true,\r\n          seria : seria\r\n        });\r\n     }\r\n  }\r\n\r\n  config.zhConfig.legend = legend;\r\n};\r\n\r\nconst fnGetSeries = function(config, json, option){\r\n   const {\r\n           dataColumn:yPointIndex,\r\n           value:chartId,\r\n           isDrawDeltaExtrems, isNotZoomToMinMax\r\n         } = option;\r\n\r\n   _fnSetChartTitle(config, option);\r\n   config.zhConfig = QuandlFn2.createZhConfig(option);\r\n   config.info = QuandlFn2.createDatasetInfo(json);\r\n\r\n   const {\r\n     seria, minPoint, maxPoint, minY,\r\n     dataExDividend, dataSplitRatio,\r\n     dataVolume, dataVolumeColumn,\r\n     dataATH, dataHighLow,\r\n     legendSeries, zhPoints\r\n   } = _fnSeriesPipe(json, yPointIndex, option);\r\n\r\n   _fnCheckIsMfi(config, json, zhPoints);\r\n   _fnCheckIsMomAth(config, json, zhPoints);\r\n\r\n   config.series[0].data = seria;\r\n   config.series[0].zhSeriaId = chartId;\r\n\r\n   _fnAddSeriesExDivident(config, dataExDividend, chartId, minY);\r\n   _fnAddSeriesSplitRatio(config, dataSplitRatio, chartId, minY);\r\n\r\n   Object.assign(config, {\r\n     valueMoving: AdapterFn.valueMoving(seria),\r\n     zhFnAddSeriesSma: fnAddSeriesSma,\r\n     zhFnRemoveSeries: fnRemoveSeries,\r\n     zhVolumeConfig: dataVolume.length>0\r\n        ? ChartConfig.fIndicatorVolumeConfig(chartId, dataVolumeColumn, dataVolume)\r\n        : undefined,\r\n     zhATHConfig: dataATH.length>0\r\n        ? ChartConfig.fIndicatorATHConfig(chartId, dataATH)\r\n        : undefined,\r\n    zhHighLowConfig: dataHighLow.length>0\r\n        ? ChartConfig.fIndicatorHighLowConfig(chartId, dataHighLow)\r\n        : undefined\r\n   })\r\n\r\n    if (legendSeries){\r\n      _fnSetLegendSeriesToConfig(legendSeries, config, chartId)\r\n      config.zhConfig.isWithLegend = true\r\n    }\r\n\r\n   return {\r\n     config, minPoint, maxPoint, minY,\r\n     isDrawDeltaExtrems, isNotZoomToMinMax\r\n   };\r\n}\r\n\r\nconst _setPlotLinesExtremValues = function(plotLines, minPoint, maxPoint, value, isDrawDeltaExtrems){\r\n  const _bMax = maxPoint !== Number.NEGATIVE_INFINITY\r\n          ? Big(maxPoint)\r\n          : Big('0.0')\r\n      , _bMin = minPoint !== Number.POSITIVE_INFINITY\r\n          ? Big(minPoint)\r\n          : Big('0.0')\r\n      , _bValue = (value !== null) ? Big(value) : Big(0)\r\n      , _maxPoint = parseFloat(_bMax.round(4).toString(), 10)\r\n      , _minPoint = parseFloat(_bMin.round(4).toString(), 10);\r\n\r\n  let _deltaMax='', _deltaMin='';\r\n  if (isDrawDeltaExtrems){\r\n    const perToMax = QuandlFn2.createPercent({ bValue: _bMax.minus(_bValue), bTotal: _bValue })\r\n    const perToMin = QuandlFn2.createPercent({ bValue: _bValue.minus(_bMin), bTotal: _bValue })\r\n    _deltaMax = `\\u00A0\\u00A0Δ ${perToMax}%`\r\n    _deltaMin = `\\u00A0\\u00A0Δ ${perToMin}%`\r\n  }\r\n\r\n  plotLines[0].value = _maxPoint;\r\n  plotLines[0].label.text = `${ChartConfig.fnNumberFormat(_maxPoint)}${_deltaMax}`;\r\n  plotLines[1].value = _minPoint;\r\n  plotLines[1].label.text = `${ChartConfig.fnNumberFormat(_minPoint)}${_deltaMin}`;\r\n\r\n}\r\n\r\nconst fnConfigAxes = function(result){\r\n  const {\r\n          config, minPoint, maxPoint, minY,\r\n          isDrawDeltaExtrems, isNotZoomToMinMax\r\n        } = result\r\n      , plotLines = config.yAxis.plotLines\r\n      , _data = config.series[0].data\r\n      , _maxIndex = _data.length - 1\r\n      , _recentValue = _data[_maxIndex][1];\r\n\r\n  _setPlotLinesExtremValues(\r\n    plotLines, minPoint, maxPoint,\r\n    _recentValue, isDrawDeltaExtrems\r\n  )\r\n\r\n  if (!isNotZoomToMinMax){\r\n    config.yAxis.min = minY\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst fnQuandlFlow = flow(fnGetSeries, fnConfigAxes);\r\n\r\nconst _fCreateAreaConfig = function(json, option){\r\n  const config = ChartConfig.fBaseAreaConfig()\r\n      , { columnName } = option;\r\n\r\n  option.dataColumn = QuandlFn2.getDataColumnIndex(json, option);\r\n  if ( columnName ){\r\n    config.series[0].zhValueText = columnName;\r\n  }\r\n\r\n  return fnQuandlFlow(config, json, option);\r\n}\r\n\r\nconst _getData = (json) => {\r\n  const { dataset={} } = json\r\n      , { data=[] } = dataset;\r\n  return data;\r\n}\r\nconst _fToConfig = builder => (json, option) => {\r\n  const data = _getData(json);\r\n  return { config: builder.toConfig(data, option) };\r\n}\r\nconst _fToSeria = builder => (json, option, chart) => {\r\n  const data = _getData(json);\r\n  return builder.toSeria(data, option, chart);\r\n}\r\n\r\nconst _rToConfig = {\r\n  [ChartType.AREA] : _fCreateAreaConfig,\r\n  [ChartType.SEMI_DONUT] : fCreatePieConfig,\r\n  [ChartType.STACKED_AREA] : fCreateStackedAreaConfig,\r\n  [ChartType.STACKED_AREA_PERCENT] : fCreateStackedAreaConfig,\r\n  [ChartType.STACKED_COLUMN] : fCreateStackedColumnConfig,\r\n  [ChartType.STACKED_COLUMN_PERCENT] : fCreateStackedColumnConfig,\r\n  [ChartType.TREE_MAP] : fCreateTreeMapConfig,\r\n  [ChartType.YEARLY]: _fToConfig(ToYearly),\r\n  [ChartType.SCATTER]: _fToConfig(ToScatter),\r\n  [ChartType.SCATTER_UP]: _fToConfig(ToScatter),\r\n  [ChartType.SCATTER_DOWN]: _fToConfig(ToScatter)\r\n}\r\n\r\nconst _crSeriaData = (data, yIndex) => {\r\n  return data\r\n    .map(p => [ AdapterFn.ymdToUTC(p[0]), p[yIndex] ])\r\n    .sort(AdapterFn.compareByDate);\r\n};\r\n\r\nconst _toSeria = (json, option) => {\r\n  const { value:chartId, parentId } = option\r\n      , yPointIndex = QuandlFn2.getDataColumnIndex(json, option)\r\n      , data = _crSeriaData(_getData(json), yPointIndex)\r\n      , seria = Object.assign(\r\n           ChartConfig.fSeries(), {\r\n             zhSeriaId: parentId + '_' + chartId,\r\n             zhValueText: chartId.substring(0,12),\r\n             data: data,\r\n             minY: QuandlFn2.findMinY(data)\r\n           }\r\n         );\r\n\r\n  return seria;\r\n}\r\n\r\nconst _rToSeria = {\r\n  DF: _toSeria,\r\n  [ChartType.SCATTER]: _fToSeria(ToScatter),\r\n  [ChartType.SCATTER_UP]: _fToSeria(ToScatter),\r\n  [ChartType.SCATTER_DOWN]: _fToSeria(ToScatter)\r\n}\r\n\r\nconst QuandlAdapter = {\r\n  toConfig(json, option){\r\n     const { seriaType=ChartType.AREA } = option\r\n         , config = _rToConfig[seriaType](json, option);\r\n     return config;\r\n  },\r\n\r\n  toSeries(json, option, chart){\r\n    const { seriaType } = option\r\n       , _toSeria = _rToSeria[seriaType] || _rToSeria.DF\r\n       , seria = _toSeria(json, option, chart);\r\n    return seria;\r\n  }\r\n\r\n}\r\n\r\nexport default QuandlAdapter;\r\n"]}