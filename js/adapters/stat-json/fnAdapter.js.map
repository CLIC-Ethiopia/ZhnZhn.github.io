{"version":3,"sources":["../../../src/adapters/stat-json/fnAdapter.js"],"names":["_keys","Object","keys","_crTitle","country","TITLE_NST","TITLE_SWS","_crSearchTitle","SEARCH_NST","url","title","SEARCH_SWS","SEARCH_SFL","SEARCH_SDN","SEARCH_SIR","MAX_SOURCE_ID_LENGTH","_assign","assign","_crSearchToken","label","_arr","toString","split","_crLink","token","_crSflSearchToken","dfId","arr","id","pop","prefix","join","_crSearchLink","option","_token","loadId","_crDescr","updated","source","_date","replace","_elSearchLink","_crItemCaption","items","caption","_crAreaMapSlice","dfTSlice","mapSlice","forEach","item","slice","_getDimensionWithouTime","ds","_dim","Dimension","_crTimesFromDs","json","timeId","dimension","category","map","k","_getTimeDimension","indexOf","_dimTimeId","times","_crDataSource","dataSource","length","crTitle","browserType","crDsValuesTimes","Dataset","values","Data","crTid","time","tidIds","crInfo","name","description","crZhConfig","_itemKey","optionFetch","key","itemCaption","itemConf","crConfOption","info","zhConfig","crChartOption","data","valueMoving"],"mappings":"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","sourcesContent":["export {\r\n  isYNumber,\r\n  numberFormat,\r\n  roundBy,\r\n  toUpperCaseFirst\r\n} from '../AdapterFn';\r\nexport {\r\n  crError,\r\n  crId\r\n} from '../crFn';\r\n\r\nimport JSONstat from 'jsonstat';\r\nimport {\r\n  valueMoving\r\n} from '../AdapterFn';\r\nimport {\r\n  crId,\r\n  crItemConf\r\n} from '../crFn';\r\n\r\nconst _keys = Object.keys\r\n, _crTitle = country => `Statisctics ${country}: All Items`\r\n, TITLE_NST = _crTitle('Norway')\r\n, TITLE_SWS = _crTitle('Sweden')\r\n\r\nconst _crSearchTitle = country => `Statistics ${country} Search`\r\nconst SEARCH_NST = {\r\n  url: 'https://www.ssb.no/en/sok?sok=',\r\n  title: _crSearchTitle('Norway')\r\n}\r\n, SEARCH_SWS = {\r\n  url: 'https://www.scb.se/en/finding-statistics/search/?query=',\r\n  title: _crSearchTitle('Sweden')\r\n}\r\n, SEARCH_SFL = {\r\n  url: 'http://pxnet2.stat.fi/PXWeb/pxweb/en/StatFin/',\r\n  title: \"Statistics Finland's PX-Web\"\r\n}\r\n, SEARCH_SDN = {\r\n  url: 'https://www.statbank.dk/statbank5a/default.asp',\r\n  title: _crSearchTitle('Denmark')\r\n}\r\n, SEARCH_SIR = {\r\n  url: 'https://data.cso.ie/',\r\n  title: \"CSO Ireland Web PxStat\"\r\n};\r\n\r\nconst MAX_SOURCE_ID_LENGTH = 9;\r\n\r\nconst _assign = Object.assign;\r\n\r\nconst _crSearchToken = (label) => {\r\n  const _arr = (label || '').toString().split(',');\r\n  return _arr[0] || '';\r\n};\r\n\r\nconst _crLink = ({url, title}, token='') => `<a class=\"native-link\" href=\"${url}${token}\">${title}</a>`;\r\n\r\nconst _crSflSearchToken = ({ dfId }) => {\r\n  const arr = (''+dfId).split('/')\r\n  , id = arr.pop()\r\n  , prefix = arr.join('__');\r\n  return prefix && id ? `StatFin__${prefix}/${id}` : '';\r\n};\r\n\r\nconst _crSearchLink = (label, option) => {\r\n  const  _token = _crSearchToken(label);\r\n  switch(option.loadId){\r\n    case 'NST': case 'NST_2':\r\n      return _crLink(SEARCH_NST, _token);\r\n    case 'SWS':\r\n      return _crLink(SEARCH_SWS, _token);\r\n    case 'SFL':\r\n      return _crLink(SEARCH_SFL, _crSflSearchToken(option));\r\n    case 'SDN':\r\n      return _crLink(SEARCH_SDN);\r\n    case 'SIR':\r\n      return _crLink(SEARCH_SIR);\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst _crDescr = ({ updated, source, label }, option) => {\r\n  const _date = (updated || '')\r\n    .replace('T', ' ')\r\n    .replace('Z', '')\r\n  , { dfId } = option\r\n  , _elSearchLink = _crSearchLink(label, option);\r\n\r\n  return dfId && source\r\n    ? `TableId: ${dfId}<BR/>${source}: ${_date}<BR/>${_elSearchLink}`\r\n    : _elSearchLink;\r\n};\r\n\r\nconst _crItemCaption = (option) => {\r\n  const { items, dfId='id'} = option\r\n       , caption =  items[0]\r\n            ? items[0].caption\r\n            : 'All Items';\r\n  return `${dfId}_${caption}`;\r\n};\r\n\r\nconst _crAreaMapSlice = (option) => {\r\n  const { items, dfTSlice } = option\r\n      , mapSlice = {};\r\n  items.forEach(item => {\r\n    if (item.slice) {\r\n      _assign(mapSlice, item.slice)\r\n    }\r\n  })\r\n  return _assign(mapSlice, dfTSlice);\r\n};\r\n\r\n\r\nconst _getDimensionWithouTime = (ds) => {\r\n  const _dim = ds.Dimension(\"Year\")\r\n   || ds.Dimension(\"Vuosi\")\r\n   || ds.Dimension(\"Vuosineljännes\")\r\n   || ds.Dimension(\"Month\")\r\n  return _dim && _dim.id\r\n    ? [_dim.id[0]]\r\n    : [\"2019\"];\r\n};\r\n\r\n\r\nconst _crTimesFromDs = (json, timeId) => {\r\n  const _dim = json.dimension[timeId]\r\n  , label = ((_dim || {}).category || {}).label;\r\n  return _keys(label)\r\n    .map(k => label[k]);\r\n};\r\n\r\nconst _getTimeDimension = (ds, timeId, json) => {\r\n  // SIR\r\n  if (timeId && timeId.indexOf(\"TLIST(\") !== -1) {\r\n    return _crTimesFromDs(json, timeId)\r\n  }\r\n\r\n  const _dimTimeId = timeId && ds.Dimension(timeId)\r\n  , _dim = _dimTimeId || ds.Dimension(\"Tid\")\r\n  , times = _dim && _dim.id\r\n     || _getDimensionWithouTime(ds);\r\n  return times;\r\n};\r\n\r\nconst _crDataSource = ({ dataSource, dfId }) => dfId\r\n && (''+dfId).length < MAX_SOURCE_ID_LENGTH\r\n   ? `${dataSource} (${dfId})`\r\n   : dataSource;\r\n\r\n\r\nexport const crTitle = (option) => {\r\n  switch(option.browserType){\r\n    case 'NST':\r\n    case 'NST_ALL':\r\n      return TITLE_NST;\r\n    case 'SWS':\r\n    case 'SWS_ALL':\r\n      return TITLE_SWS;\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport const crDsValuesTimes = (json, option) => {\r\n  const mapSlice = _crAreaMapSlice(option)\r\n  , ds = JSONstat(json).Dataset(0)\r\n  , values = ds.Data(mapSlice)\r\n  , times = _getTimeDimension(ds, option.timeId, json);\r\n  return [ds, values, times];\r\n}\r\n\r\nexport const  crTid = (time, ds) => {\r\n  if (time) {\r\n    return time;\r\n  }\r\n  const tidIds = _getTimeDimension(ds);\r\n  return tidIds[tidIds.length-1];\r\n}\r\n\r\nexport const crInfo = (ds, option) => ({\r\n  name: ds.label || '',\r\n  description: _crDescr(ds, option)\r\n})\r\n\r\nexport const crZhConfig = (option) => {\r\n  const {\r\n    _itemKey,\r\n    url,\r\n    optionFetch,\r\n    items,\r\n    dataSource,\r\n    dfId,\r\n    timeId\r\n  } = option\r\n  , key = _itemKey || crId()\r\n  , itemCaption = option.itemCaption || _crItemCaption(option)\r\n  , itemConf = url\r\n     ? {\r\n       _itemKey: key,\r\n       ...crItemConf(option),\r\n       optionFetch, items,\r\n       dataSource,\r\n       //sfl\r\n       dfId, timeId\r\n      }\r\n    : void 0;\r\n  return {\r\n    id: key,\r\n    key,\r\n    itemCaption,\r\n    itemConf,\r\n    dataSource: _crDataSource(option)\r\n  };\r\n}\r\n\r\nexport const crConfOption = (ds, option) => ({\r\n  info: crInfo(ds, option),\r\n  zhConfig: crZhConfig(option)\r\n})\r\n\r\nexport const crChartOption = (ds, data, option) => ({\r\n  valueMoving: valueMoving(data),\r\n  ...crConfOption(ds, option)\r\n})\r\n"],"file":"fnAdapter.js"}