{"version":3,"sources":["../../../src/adapters/stat-json/fnAdapter.js"],"names":["_keys","Object","keys","TITLE","NST","SWS","_crSearchTitle","country","SEARCH","url","title","SFL","SDN","SIR","MAX_SOURCE_ID_LENGTH","_assign","assign","_crSearchToken","label","_arr","toString","split","_crLink","token","_crSflSearchToken","dfId","arr","id","pop","prefix","join","_crSearchLink","option","_token","loadId","_crDescr","updated","source","_date","replace","_elSearchLink","_crItemCaption","items","caption","_crAreaMapSlice","dfTSlice","mapSlice","forEach","item","slice","_getDimensionWithouTime","ds","_dim","Dimension","_crTimesFromDs","json","timeId","dimension","category","map","k","_getTimeDimension","indexOf","_dimTimeId","times","_crDataSource","dataSource","length","fnAdapter","crError","isYNumber","numberFormat","crId","roundBy","toUpperCaseFirst","crTitle","browserType","crDsValuesTimes","Dataset","values","Data","crTid","time","tidIds","crInfo","name","description","crZhConfig","_itemKey","optionFetch","key","itemCaption","itemConf","crConfOption","info","zhConfig","crChartOption","data","valueMoving"],"mappings":"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","sourcesContent":["import JSONstat from 'jsonstat';\r\nimport {\r\n  isYNumber,\r\n  numberFormat,\r\n  roundBy,\r\n  valueMoving,\r\n  toUpperCaseFirst\r\n} from '../AdapterFn';\r\nimport {\r\n  crError,\r\n  crId,\r\n  crItemConf\r\n} from '../crFn';\r\n\r\nconst _keys = Object.keys;\r\nconst TITLE = {\r\n  NST: 'Statisctics Norway: All Items',\r\n  SWS: 'Statisctics Sweden: All Items'\r\n};\r\n\r\nconst _crSearchTitle = country => `Statistics ${country} Search`\r\n\r\nconst SEARCH = {\r\n  NST: {\r\n    url: 'https://www.ssb.no/en/sok?sok=',\r\n    title: _crSearchTitle('Norway')\r\n  },\r\n  SWS: {\r\n    url: 'https://www.scb.se/en/finding-statistics/search/?query=',\r\n    title: _crSearchTitle('Sweden')\r\n  },\r\n  SFL: {\r\n    url: 'http://pxnet2.stat.fi/PXWeb/pxweb/en/StatFin/',\r\n    title: \"Statistics Finland's PX-Web\"\r\n  },\r\n  SDN: {\r\n    url: 'https://www.statbank.dk/statbank5a/default.asp',\r\n    title: _crSearchTitle('Denmark')\r\n  },\r\n  SIR: {\r\n    url: 'https://data.cso.ie/',\r\n    title: \"CSO Ireland Web PxStat\"\r\n  }\r\n};\r\n\r\nconst MAX_SOURCE_ID_LENGTH = 9;\r\n\r\nconst _assign = Object.assign;\r\n\r\nconst _crSearchToken = (label) => {\r\n  const _arr = (label || '').toString().split(',');\r\n  return _arr[0] || '';\r\n};\r\n\r\nconst _crLink = ({url, title}, token='') => `<a class=\"native-link\" href=\"${url}${token}\">${title}</a>`;\r\n\r\nconst _crSflSearchToken = ({ dfId }) => {\r\n  const arr = (''+dfId).split('/')\r\n  , id = arr.pop()\r\n  , prefix = arr.join('__');\r\n  return prefix && id ? `StatFin__${prefix}/${id}` : '';\r\n};\r\n\r\nconst _crSearchLink = (label, option) => {\r\n  const  _token = _crSearchToken(label);\r\n  switch(option.loadId){\r\n    case 'NST': case 'NST_2':\r\n      return _crLink(SEARCH.NST, _token);\r\n    case 'SWS':\r\n      return _crLink(SEARCH.SWS, _token);\r\n    case 'SFL':\r\n      return _crLink(SEARCH.SFL, _crSflSearchToken(option));\r\n    case 'SDN':\r\n      return _crLink(SEARCH.SDN);\r\n    case 'SIR':\r\n      return _crLink(SEARCH.SIR);\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst _crDescr = ({ updated, source, label }, option) => {\r\n  const _date = (updated || '')\r\n    .replace('T', ' ')\r\n    .replace('Z', '')\r\n  , { dfId } = option\r\n  , _elSearchLink = _crSearchLink(label, option);\r\n\r\n  return dfId && source\r\n    ? `TableId: ${dfId}<BR/>${source}: ${_date}<BR/>${_elSearchLink}`\r\n    : _elSearchLink;\r\n};\r\n\r\nconst _crItemCaption = (option) => {\r\n  const { items, dfId='id'} = option\r\n       , caption =  items[0]\r\n            ? items[0].caption\r\n            : 'All Items';\r\n  return `${dfId}_${caption}`;\r\n};\r\n\r\nconst _crAreaMapSlice = (option) => {\r\n  const { items, dfTSlice } = option\r\n      , mapSlice = {};\r\n  items.forEach(item => {\r\n    if (item.slice) {\r\n      _assign(mapSlice, item.slice)\r\n    }\r\n  })\r\n  return _assign(mapSlice, dfTSlice);\r\n};\r\n\r\n\r\nconst _getDimensionWithouTime = (ds) => {\r\n  const _dim = ds.Dimension(\"Year\")\r\n   || ds.Dimension(\"Vuosi\")\r\n   || ds.Dimension(\"Vuosineljännes\")\r\n   || ds.Dimension(\"Month\")\r\n  return _dim && _dim.id\r\n    ? [_dim.id[0]]\r\n    : [\"2019\"];\r\n};\r\n\r\n\r\nconst _crTimesFromDs = (json, timeId) => {\r\n  const _dim = json.dimension[timeId]\r\n  , label = ((_dim || {}).category || {}).label;\r\n  return _keys(label)\r\n    .map(k => label[k]);\r\n};\r\n\r\nconst _getTimeDimension = (ds, timeId, json) => {\r\n  // SIR\r\n  if (timeId && timeId.indexOf(\"TLIST(\") !== -1) {\r\n    return _crTimesFromDs(json, timeId)\r\n  }\r\n\r\n  const _dimTimeId = timeId && ds.Dimension(timeId)\r\n  , _dim = _dimTimeId || ds.Dimension(\"Tid\")\r\n  , times = _dim && _dim.id\r\n     || _getDimensionWithouTime(ds);\r\n  return times;\r\n};\r\n\r\nconst _crDataSource = ({ dataSource, dfId }) => dfId\r\n && (''+dfId).length < MAX_SOURCE_ID_LENGTH\r\n   ? `${dataSource} (${dfId})`\r\n   : dataSource;\r\n\r\n\r\nconst fnAdapter = {\r\n  crError,\r\n  isYNumber,\r\n  numberFormat,\r\n  crId,\r\n  roundBy,\r\n  toUpperCaseFirst,\r\n\r\n  crTitle: (option) => {\r\n    switch(option.browserType){\r\n      case 'NST':\r\n      case 'NST_ALL':\r\n        return TITLE.NST;\r\n      case 'SWS':\r\n      case 'SWS_ALL':\r\n        return TITLE.SWS;\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  crDsValuesTimes: (json, option) => {\r\n    const mapSlice = _crAreaMapSlice(option)\r\n    , ds = JSONstat(json).Dataset(0)\r\n    , values = ds.Data(mapSlice)\r\n    , times = _getTimeDimension(ds, option.timeId, json);\r\n    return [ ds, values, times ];\r\n  },\r\n\r\n  crTid: (time, ds) => {\r\n    if (time) {\r\n      return time;\r\n    }\r\n    const tidIds = _getTimeDimension(ds);\r\n    return tidIds[tidIds.length-1];\r\n  },\r\n\r\n  crInfo: (ds, option) => ({\r\n    name: ds.label || '',\r\n    description: _crDescr(ds, option)\r\n  }),\r\n\r\n  crZhConfig: (option) => {\r\n    const {\r\n      _itemKey, url,\r\n      optionFetch, items,\r\n      dataSource, dfId, timeId\r\n    } = option\r\n    , key = _itemKey || crId()\r\n    , itemCaption = option.itemCaption || _crItemCaption(option)\r\n    , itemConf = url\r\n       ? {\r\n         _itemKey: key,\r\n         ...crItemConf(option),\r\n         optionFetch, items,\r\n         dataSource,\r\n         //sfl\r\n         dfId, timeId\r\n        }\r\n      : void 0;\r\n    return {\r\n      id: key, key,\r\n      itemCaption,\r\n      itemConf,\r\n      dataSource: _crDataSource(option)\r\n    };\r\n  },\r\n\r\n  crConfOption: (ds, option) => ({\r\n    info: fnAdapter.crInfo(ds, option),\r\n    zhConfig: fnAdapter.crZhConfig(option)\r\n  }),\r\n\r\n  crChartOption: (ds, data, option) => ({\r\n    valueMoving: valueMoving(data),\r\n    ...fnAdapter.crConfOption(ds, option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}