{"version":3,"sources":["../../../src/adapters/stat-json/toColumn.js"],"names":["_assign","Object","assign","_isArr","Array","isArray","COLORS","_fCrCategoryPoint","c","v","i","label","Category","y","value","name","_fIsCategoryPoint","dfT","p","_compareByY","a","b","_colorItems","data","_clusters","forEach","cluster","colorIndex","points","id","color","_setClusters","length","_points","map","item","index","arr","clusterMaker","crUnarySortedCluster","_crCategory","option","items","dfC","dfC2","dfT2","_dfC","cTotal","itemSlice","_item","slice","category","_crData","values","_hm","create","filter","sort","reduce","_c","_suffixIndex","_c2","push","_crValues","_ds","_cSlice","_v","Data","_crSlice","json","timeId","time","dfTSlice","_crTitle","dfTitle","_crSubtitle","_arr","caption","join","toColumn","fCrConfig","param","crConfig","seriaType","seriaColor","isCluster","Dataset","_dimC","Dimension","Tid","_values","_title","_subtitle","config","barOrColumnConfig","addCaption","addTooltip","Tooltip","add","chart","spacingTop","toConfig","series"],"mappings":"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","sourcesContent":["import JSONstat from 'jsonstat';\r\nimport clusterMaker from '../../math/k-means';\r\n\r\nimport Builder from '../../charts/ConfigBuilder';\r\nimport Tooltip from '../../charts/Tooltip';\r\nimport {\r\n  isYNumber,\r\n  crTitle,\r\n  crTid,\r\n  crChartOption,\r\n  toUpperCaseFirst\r\n} from './fnAdapter';\r\n\r\nconst _assign = Object.assign\r\n, _isArr = Array.isArray;\r\n\r\nconst COLORS = [\r\n  '#9ecae1', '#6baed6',\r\n  '#4292c6', '#2171b5',\r\n  '#08519c', '#08306b',\r\n  '#74c476'\r\n];\r\n\r\nconst _fCrCategoryPoint = (c) => (v, i) => {\r\n  const label = c.Category(i).label;\r\n  return {\r\n    y: v.value,\r\n    name: label,\r\n    c: label\r\n  };\r\n};\r\nconst _fIsCategoryPoint = (dfT) => (p) => {\r\n  if (dfT && p.c === dfT) {\r\n    return false;\r\n  }\r\n  return isYNumber(p) && p.y !== 0;\r\n};\r\n\r\nconst _compareByY = (a, b) => b.y - a.y;\r\n\r\nconst _colorItems = (data, _clusters) => {\r\n  _clusters.forEach((cluster, colorIndex) => {\r\n      cluster.points.forEach(p => {\r\n        data[p.id].color = COLORS[colorIndex]\r\n      })\r\n  })\r\n};\r\n\r\nconst _setClusters = (data) => {\r\n  if (data.length !== 0) {\r\n    const _points = data.map((item, index) => {\r\n      const arr = [item.y, 0];\r\n      arr.id = index;\r\n      return arr;\r\n    })\r\n    , _clusters = clusterMaker.crUnarySortedCluster(_points);\r\n    _colorItems(data, _clusters)\r\n  }\r\n};\r\n\r\nconst _crCategory = (option) => {\r\n  const {\r\n    items=[],\r\n    dfC, dfT,\r\n    dfC2, dfT2\r\n  } = option\r\n  , _dfC = dfC || dfC2\r\n  , cTotal = dfT || dfT2\r\n  , itemSlice = {};\r\n  let i, _item;\r\n  for(i=0; i<items.length; i++){\r\n    _item = items[i]\r\n    if (_item) {\r\n      _assign(itemSlice, _item.slice)\r\n    }\r\n  }\r\n  delete itemSlice[_dfC];\r\n  return {\r\n    category: _dfC,\r\n    cTotal,\r\n    itemSlice\r\n  };\r\n};\r\n\r\nconst _crData = (values, c, cTotal) => {\r\n  const _hm = Object.create(null);\r\n  return _isArr(values)\r\n    ? values\r\n        .map(_fCrCategoryPoint(c))\r\n        .filter(_fIsCategoryPoint(cTotal))\r\n        .sort(_compareByY)\r\n        .reduce((data, p) => {\r\n          const _c = p.c\r\n          , _suffixIndex = _hm[_c];\r\n          if (!_suffixIndex) {\r\n            _hm[_c] = 2\r\n          } else {\r\n            const _c2 = `${_c} (${_suffixIndex})`;\r\n            _hm[_c] += 1\r\n            p.c = _c2\r\n            p.name = _c2\r\n          }\r\n          data.push(p)\r\n          return data;\r\n        }, [])\r\n    : [];\r\n};\r\n\r\nconst _crValues = (_ds, _cSlice) => {\r\n  const _v = _ds.Data(_cSlice);\r\n  return _v !== null ? _v : [];\r\n};\r\n\r\nconst _crSlice = (\r\n  json,\r\n  timeId,\r\n  time,\r\n  itemSlice,\r\n  dfTSlice\r\n) => ({\r\n  [timeId]: time,\r\n  ...itemSlice,\r\n  ...dfTSlice\r\n});\r\n\r\nconst _crTitle = (dfTitle, option) => dfTitle\r\n  ? `${dfTitle}: All Items`\r\n  : crTitle(option);\r\n\r\nconst _crSubtitle = (items, category) => {\r\n  const _arr = [];\r\n  items.forEach(item => {\r\n    const { slice, caption } = item || {};\r\n    if (slice && !slice[category] && caption) {\r\n      _arr.push(toUpperCaseFirst(caption))\r\n    }\r\n  })\r\n  return _arr.join(\": \");\r\n};\r\n\r\nconst toColumn = {\r\n\r\n  fCrConfig: (param={}) => {\r\n    return (json, option) => toColumn.crConfig(json, {\r\n      ...option, ...param,\r\n      ..._crCategory(option)\r\n    });\r\n  },\r\n\r\n  crConfig: (json, option) => {\r\n    const {\r\n      category,\r\n      cTotal,\r\n      itemSlice,\r\n      time,\r\n      timeId='Tid',\r\n      dfTitle,\r\n      dfTSlice,\r\n      seriaType, seriaColor,\r\n      isCluster,\r\n      items=[],\r\n    } = option\r\n    , _ds = JSONstat(json).Dataset(0)\r\n    , _dimC = _ds.Dimension(category)\r\n    , Tid = crTid(time, _ds)\r\n    , _cSlice = _crSlice(json, timeId, time, itemSlice, dfTSlice)\r\n    , _values = _crValues(_ds, _cSlice)\r\n    , _title = _crTitle(dfTitle, option)\r\n    , _subtitle = _crSubtitle(items, category)\r\n    , data = _crData(_values, _dimC, cTotal)\r\n    , _c = data.map(item => item.c)\r\n    , config = Builder()\r\n       .barOrColumnConfig(seriaType, _c)\r\n       .addCaption(_title, _subtitle)\r\n       .addTooltip(Tooltip.category)\r\n       .add({\r\n         chart: { spacingTop: 25 },\r\n         ...crChartOption(_ds, Tid, option)\r\n        })\r\n       .toConfig();\r\n\r\n    if (isCluster) {\r\n      _setClusters(data)\r\n    }\r\n    _assign(config.series[0], {\r\n      color: seriaColor,\r\n      data: data\r\n    })\r\n    return config;\r\n  }\r\n\r\n};\r\n\r\nexport default toColumn\r\n"],"file":"toColumn.js"}