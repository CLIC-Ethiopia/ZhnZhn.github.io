{"version":3,"sources":["../../../src/adapters/stat-json/FactoryTableApi.js"],"names":["_crTidTop","v","code","selection","filter","values","FactoryTableApi","ROOT_URL","getRequestUrl","option","proxy","metric","dfId","id","crOptionFetch","items","isTop12","isTop6","arrQuery","forEach","slice","item","propName","push","r","method","body","JSON","stringify","query","response","format","checkResponse"],"mappings":";;;;;;AACA,IAAMA,YAAY,SAAZA,SAAY,CAACC,CAAD,EAAO;AACvB,SAAO;AACLC,UAAM,KADD;AAELC,eAAW;AACTC,cAAQ,KADC;AAETC,cAAQ,CAAE,KAAGJ,CAAL;AAFC;AAFN,GAAP;AAOD,CARD;;AAUA,IAAMK,kBAAkB,SAAlBA,eAAkB,CAACC,QAAD;AAAA,SAAe;AACrCC,iBADqC,yBACvBC,MADuB,EAChB;AAAA,UACXC,KADW,GACaD,MADb,CACXC,KADW;AAAA,UACJC,MADI,GACaF,MADb,CACJE,MADI;AAAA,UACIC,IADJ,GACaH,MADb,CACIG,IADJ;AAAA,UAEbC,EAFa,GAERD,OAAOA,IAAP,GAAcD,MAFN;;AAGnB,kBAAUD,KAAV,GAAkBH,QAAlB,SAA8BM,EAA9B;AACD,KALoC;AAOrCC,iBAPqC,yBAOvBL,MAPuB,EAOhB;AAAA,UACXM,KADW,GACgBN,MADhB,CACXM,KADW;AAAA,UACJC,OADI,GACgBP,MADhB,CACJO,OADI;AAAA,UACKC,MADL,GACgBR,MADhB,CACKQ,MADL;AAAA,UAEbC,QAFa,GAEF,EAFE;;AAGnBH,YAAMI,OAAN,CAAc,gBAAQ;AACnB,YAAMC,QAAQC,KAAKD,KAAnB;AACA,YAAIE,iBAAJ;AACA,aAAIA,QAAJ,IAAgBF,KAAhB,EAAsB;AACpBF,mBAASK,IAAT,CAAc;AACZrB,kBAAMoB,QADM;AAEZnB,uBAAW;AACTC,sBAAQ,KADC;AAETC,sBAAQ,CAAC,GAAD;AAFC;AAFC,WAAd;AAOD;AACH,OAZD;;AAcA,UAAIW,OAAJ,EAAa;AACXE,iBAASK,IAAT,CAAcvB,UAAU,IAAV,CAAd;AACD;AACD,UAAIiB,MAAJ,EAAY;AACVC,iBAASK,IAAT,CAAcvB,UAAU,GAAV,CAAd;AACD;;AAED,UAAMwB,IAAI;AACRC,gBAAQ,MADA;AAERC,cAAMC,KAAKC,SAAL,CAAe;AAClBC,iBAAOX,QADW;AAElBY,oBAAU;AACPC,oBAAQ;AADD;AAFQ,SAAf;AAFE,OAAV;AASA,aAAOP,CAAP;AACD,KAzCoC;AA2CrCQ,iBA3CqC,2BA2CtB;AACb,aAAO,IAAP;AACD;AA7CoC,GAAf;AAAA,CAAxB;;kBAgDe1B,e","file":"FactoryTableApi.js","sourcesContent":["\r\nconst _crTidTop = (v) => {\r\n  return {\r\n    code: \"Tid\",\r\n    selection: {\r\n      filter: \"top\",\r\n      values: [ ''+v ]\r\n    }\r\n  };\r\n}\r\n\r\nconst FactoryTableApi = (ROOT_URL) => ({\r\n  getRequestUrl(option){\r\n    const { proxy, metric, dfId } = option\r\n        , id = dfId ? dfId : metric;\r\n    return `${proxy}${ROOT_URL}/${id}`;    \r\n  },\r\n\r\n  crOptionFetch(option){\r\n    const { items, isTop12, isTop6 } = option\r\n        , arrQuery = [];\r\n    items.forEach(item => {\r\n       const slice = item.slice;\r\n       let propName;\r\n       for(propName in slice){\r\n         arrQuery.push({\r\n           code: propName,\r\n           selection: {\r\n             filter: 'all',\r\n             values: ['*']\r\n           }\r\n         })\r\n       }\r\n    })\r\n\r\n    if (isTop12) {\r\n      arrQuery.push(_crTidTop(\"12\"))\r\n    }\r\n    if (isTop6) {\r\n      arrQuery.push(_crTidTop(\"6\"))\r\n    }\r\n\r\n    const r = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n         query: arrQuery,\r\n         response: {\r\n            format: \"json-stat\"\r\n         }\r\n      })\r\n    };\r\n    return r;\r\n  },\r\n\r\n  checkResponse(){\r\n    return true;\r\n  }\r\n});\r\n\r\nexport default FactoryTableApi\r\n"]}