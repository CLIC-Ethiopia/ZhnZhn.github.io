{"version":3,"sources":["../../../src/adapters/faostat/fnAdapter.js"],"names":["isYNumber","AdapterFn","toUpperCaseFirst","monthIndex","ymdToUTC","valueMoving","C","DATASET_EMPTY","ENPTY","BLANK","MM_DD","DF_TITLE","_crUnit","json","data","item","length","_unit","Unit","undefined","_crPoint","Year","Months","Value","m","Tail","x","y","_crHm","hm","Object","create","forEach","Area","seriaName","push","_compareByY","a","b","_crRefLegend","legend","propName","_arr","filter","sort","reverse","_hmToPoints","arr","map","_crSeriesData","_hm","_legend","_compareByX","_crSeriaData","option","fnAdapter","crId","three","value","_v","crTitle","title","dfTitle","dfSubtitle","subtitle","p","Item","Element","crSubtitle","crSeriaData","toDataPoints","one","indexOf","toInfo","fnDescr","crZhConfig","id","dfDomain","oneCaption","key","isWithoutSma","isWithoutAdd","dataSource","linkFn","itemCaption","crValueMoving","points","Array","isArray","checkToSeries"],"mappings":"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","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nimport fnDescr from './fnDescr'\r\n\r\nconst {\r\n       isYNumber,\r\n       toUpperCaseFirst,\r\n       monthIndex,\r\n       ymdToUTC,\r\n       valueMoving\r\n     } = AdapterFn;\r\n\r\nconst C = {\r\n  DATASET_EMPTY: 'Dataset is empty',\r\n  ENPTY: '',\r\n  BLANK: ' ',\r\n  MM_DD: '-12-31',\r\n  DF_TITLE: 'More about data on tab Info in Description'\r\n};\r\n\r\nconst _crUnit = (json) => {\r\n  const { data=[] } = json\r\n  , item = data[data.length-1] || {}\r\n  , _unit = item.Unit === undefined\r\n       ? C.DATASET_EMPTY\r\n       : item.Unit || C.BLANK;\r\n\r\n  return toUpperCaseFirst(_unit);\r\n};\r\n\r\nconst _crPoint = ({ Year, Months, Value }) => {\r\n  const m = Months\r\n     ? monthIndex(Months) + 1\r\n     : 0\r\n  , Tail = m !== 0\r\n     ? `-${m}`\r\n     : C.MM_DD;\r\n  return {\r\n    x: ymdToUTC('' + Year + Tail),\r\n    y: Value\r\n  };\r\n};\r\n\r\n\r\nconst _crHm = (json) => {\r\n  const { data=[]} = json\r\n  , hm = Object.create(null);\r\n\r\n  data.forEach(item => {\r\n     const { Area } = item\r\n     if (!hm[Area]) {\r\n       hm[Area] = []\r\n       hm[Area].seriaName = Area\r\n     }\r\n     hm[Area].push(_crPoint(item))\r\n  })\r\n  return hm;\r\n};\r\n\r\nconst _compareByY = (a, b) => a.y - b.y;\r\n\r\nconst _crRefLegend = (hm) => {\r\n  const legend = [];\r\n  let propName;\r\n  for(propName in hm) {\r\n    const _arr = hm[propName];\r\n    legend.push({\r\n      ..._arr[_arr.length-1],\r\n      Area: propName\r\n    })\r\n  }\r\n  return legend\r\n    .filter(isYNumber)\r\n    .sort(_compareByY)\r\n    .reverse();\r\n};\r\n\r\nconst _hmToPoints = (hm, arr) => {\r\n  return arr.map(item => hm[item.Area]);\r\n};\r\n\r\nconst _crSeriesData = (json) => {\r\n  const _hm = _crHm(json)\r\n      , _legend = _crRefLegend(_hm);\r\n\r\n  return _hmToPoints(_hm, _legend);\r\n};\r\n\r\nconst _compareByX = (a, b) => a.x - b.x;\r\n\r\nconst _crSeriaData = (json, option) => {\r\n  const { data=[] } = json;\r\n  return data\r\n    .map(_crPoint)\r\n    .sort(_compareByX);\r\n};\r\n\r\nconst fnAdapter = {\r\n  crId: ({ three, value }) => {\r\n    const _v = value || 'faoId';\r\n    return three\r\n      ? `${_v}_${three}`\r\n      : _v;\r\n  },\r\n  crTitle: (json, option) => {\r\n     const {\r\n       title, dfTitle,\r\n       dfSubtitle, subtitle\r\n     } = option;\r\n     if (dfSubtitle) {\r\n       return `${subtitle} ${_crUnit(json)}: ${title}`;\r\n     }\r\n     if (title) {\r\n       return dfTitle\r\n         ? `${dfTitle}: ${title}`\r\n         : title;\r\n     }\r\n     const { data=[] } = json\r\n         , p = data[data.length-1];\r\n     if (p && typeof p === 'object') {\r\n       const { Area='', Item='', Element='' } = p;\r\n       return `${Area} ${Item} ${Element}`;\r\n     } else {\r\n       return C.DF_TITLE;\r\n     }\r\n  },\r\n  crSubtitle: (json, option) => {\r\n    const { dfSubtitle, subtitle } = option;\r\n    return dfSubtitle\r\n      ? dfSubtitle\r\n      : `${subtitle}: ${_crUnit(json)}`;\r\n  },\r\n  crSeriaData: _crSeriaData,\r\n  toDataPoints: (json, option) => {\r\n    const { one } = option\r\n    return ( (''+one).indexOf('>') === -1 )\r\n      ? _crSeriaData(json, option)\r\n      : _crSeriesData(json, option);\r\n  },\r\n  toInfo: fnDescr.toInfo,\r\n  crZhConfig: (id, { dfDomain, oneCaption }) => ({\r\n    id: id,\r\n    key: id,\r\n    isWithoutSma: true,\r\n    isWithoutAdd: true,\r\n    dataSource: \"FAOSTAT\",\r\n    linkFn: \"FAO_STAT\",\r\n    item: dfDomain,\r\n    itemCaption: oneCaption\r\n  }),\r\n  crValueMoving: (points) => {\r\n    return Array.isArray(points) && !Array.isArray(points[0])\r\n      ? valueMoving(points)\r\n      : undefined;\r\n  },\r\n  checkToSeries: ({ one }) => {\r\n    return ( (''+one).indexOf('>') === -1 )\r\n      ? true\r\n      : false;\r\n  }\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}