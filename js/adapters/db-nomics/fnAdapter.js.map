{"version":3,"sources":["../../../src/adapters/db-nomics/fnAdapter.js"],"names":["crError","AdapterFn","crItemLink","ymdToUTC","valueMoving","getPeriodAndValue","fnSelector","getTitle","getSubtitle","getInexedAt","C","CHART_URL","SUBT_MAX","_isId","id","indexOf","_getId","dfProvider","dfCode","seriaId","_crItemLink","bind","_crUpdatedDate","json","_date","split","_crDescr","option","_id","_crZhConfig","dataSource","_itemKey","key","isWithoutAdd","_crInfo","name","description","_isNumber","n","Number","isNaN","fnAdapter","crTitle","title","subtitle","_","_subtitle","length","crData","data","period","value","forEach","p","i","push","crConfigOption","zhConfig","info"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport fnSelector from './fnSelector'\r\n\r\nconst {\r\n  crError,\r\n  crItemLink,\r\n  ymdToUTC,\r\n  valueMoving\r\n} = AdapterFn;\r\nconst {\r\n  getPeriodAndValue,\r\n  getTitle,\r\n  getSubtitle,\r\n  getInexedAt\r\n } = fnSelector;\r\n\r\nconst C = {\r\n  CHART_URL: 'https://db.nomics.world',\r\n  SUBT_MAX: 60\r\n};\r\n\r\nconst _isId = id => id && id.indexOf('/') !== -1;\r\nconst _getId = ({ dfProvider, dfCode, seriaId }) => _isId(seriaId)\r\n  ? seriaId\r\n  : `${dfProvider}/${dfCode}/${seriaId}`;\r\n\r\nconst _crItemLink = crItemLink\r\n  .bind(null, 'DB Nomics Chart');\r\nconst _crUpdatedDate = json => {\r\n  const _date = getInexedAt(json).split('T')[0]\r\n  return _date\r\n    ? `<p>Updated by DBnomics on ${_date}</p>`\r\n    : '';\r\n};\r\nconst _crDescr = (json, option) => {\r\n  const _id = _getId(option);\r\n  return`<p>SeriaId: ${_id}</p>\r\n   ${_crUpdatedDate(json)}\r\n   ${_crItemLink(C.CHART_URL+'/'+_id)}`;\r\n};\r\n\r\nconst _crZhConfig = ({ dataSource, _itemKey, seriaId }) => ({\r\n  id: _itemKey || seriaId,\r\n  key: _itemKey || seriaId,\r\n  //itemCaption: title,\r\n  isWithoutAdd: true,\r\n  dataSource\r\n});\r\nconst _crInfo = (json, option) => ({\r\n  name: getSubtitle(json),\r\n  description: _crDescr(json, option)\r\n})\r\n\r\nconst _isNumber = n => typeof(n) === 'number'\r\n && !Number.isNaN(n);\r\n\r\n\r\nconst fnAdapter = {\r\n  crError,\r\n  crTitle: ({ title, subtitle }, json) => {\r\n    const _ = getSubtitle(json)\r\n    , _subtitle = _.length > C.SUBT_MAX\r\n         ? `${title || ''}: ${subtitle || ''}`\r\n         : _;\r\n    return {\r\n      title: getTitle(json),\r\n      subtitle: _subtitle\r\n    };\r\n  },\r\n\r\n  crData: (json) => {\r\n    const data = []\r\n    , { period, value } = getPeriodAndValue(json);\r\n    period.forEach((p, i) => {\r\n      if (_isNumber(value[i])) {\r\n        data.push([ ymdToUTC(p), value[i] ])\r\n      }\r\n    })\r\n    return data;\r\n  },\r\n\r\n  crConfigOption: ({ json, option, data }) => ({\r\n    zhConfig: _crZhConfig(option),\r\n    valueMoving: valueMoving(data),\r\n    info: _crInfo(json, option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}