{"version":3,"sources":["../../../src/adapters/db-nomics/fnAdapter.js"],"names":["crError","AdapterFn","crItemLink","crItemConf","joinBy","ymdToUTC","valueMoving","crSeria","getPeriodAndValue","fnSelector","getTitle","getSubtitle","getInexedAt","C","CHART_URL","SUBT_MAX","_isId","id","indexOf","_crId","dfProvider","dfCode","seriaId","_getId","option","_crItemLink","bind","_crUpdatedDate","json","_date","split","_crDescr","_id","_crZhConfig","dataSource","_itemKey","title","key","itemCaption","itemConf","_crInfo","name","description","_isNumber","n","Number","isNaN","fnAdapter","crTitle","subtitle","_","_subtitle","length","crData","fromDate","data","_xFrom","period","value","_len","i","_x","_y","push","crConfigOption","zhConfig","info"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport fnSelector from './fnSelector'\r\n\r\nconst {\r\n  crError,\r\n  crItemLink,\r\n  crItemConf,\r\n  joinBy,\r\n  ymdToUTC,\r\n  valueMoving,\r\n  crSeria\r\n} = AdapterFn;\r\nconst {\r\n  getPeriodAndValue,\r\n  getTitle,\r\n  getSubtitle,\r\n  getInexedAt\r\n } = fnSelector;\r\n\r\nconst C = {\r\n  CHART_URL: 'https://db.nomics.world',\r\n  SUBT_MAX: 60\r\n};\r\n\r\n\r\nconst _isId = id => id && id.indexOf('/') !== -1;\r\nconst _crId = ({ dfProvider, dfCode, seriaId }) =>\r\n  joinBy('/', dfProvider, dfCode, seriaId);\r\nconst _getId = (option) => _isId(option.seriaId)\r\n  ? option.seriaId\r\n  : _crId(option);\r\n\r\nconst _crItemLink = crItemLink\r\n  .bind(null, 'DB Nomics Chart');\r\nconst _crUpdatedDate = json => {\r\n  const _date = getInexedAt(json).split('T')[0]\r\n  return _date\r\n    ? `<p>Updated by DB Nomics on ${_date}</p>`\r\n    : '';\r\n};\r\nconst _crDescr = (json, option) => {\r\n  const _id = _getId(option);\r\n  return`<p>SeriaId: ${_id}</p>\r\n   ${_crUpdatedDate(json)}\r\n   ${_crItemLink(C.CHART_URL+'/'+_id)}`;\r\n};\r\n\r\nconst _crZhConfig = (option) => {\r\n  const {\r\n    dataSource, _itemKey,\r\n    dfProvider, dfCode, seriaId,\r\n    title\r\n  } = option\r\n  , _id = _itemKey || seriaId;\r\n  return {\r\n    id: _id, key: _id,\r\n    itemCaption: title,\r\n    dataSource,\r\n    itemConf: {\r\n       _itemKey: _id,\r\n       ...crItemConf(option),\r\n       dataSource,\r\n       dfProvider, dfCode, seriaId\r\n    }\r\n  }\r\n};\r\nconst _crInfo = (json, option) => ({\r\n  name: getSubtitle(json),\r\n  description: _crDescr(json, option)\r\n})\r\n\r\nconst _isNumber = n => typeof(n) === 'number'\r\n && !Number.isNaN(n);\r\n\r\n\r\nconst fnAdapter = {\r\n  crError,\r\n  crSeria,\r\n  crTitle: ({ title, subtitle }, json) => {\r\n    const _ = getSubtitle(json)\r\n    , _subtitle = _.length > C.SUBT_MAX\r\n         ? joinBy(': ', title, subtitle)\r\n         : _;\r\n    return {\r\n      title: getTitle(json),\r\n      subtitle: _subtitle\r\n    };\r\n  },\r\n\r\n  crData: (json, fromDate) => {\r\n    const data = []\r\n    , _xFrom = fromDate ? ymdToUTC(fromDate) : 0\r\n    , { period, value } = getPeriodAndValue(json)\r\n    , _len = period.length;\r\n    let i = 0, _x, _y;\r\n    for (i; i<_len; i++){\r\n      _x = ymdToUTC(period[i])\r\n      _y = value[i]\r\n      if (_x > _xFrom && _isNumber(_y)) {\r\n        data.push([ _x, _y ])\r\n      }\r\n    }\r\n    return data;\r\n  },\r\n\r\n  crConfigOption: ({ json, option, data }) => ({\r\n    zhConfig: _crZhConfig(option),\r\n    valueMoving: valueMoving(data),\r\n    info: _crInfo(json, option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}