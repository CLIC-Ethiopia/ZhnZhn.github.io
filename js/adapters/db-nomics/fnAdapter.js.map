{"version":3,"sources":["../../../src/adapters/db-nomics/fnAdapter.js"],"names":["crItemConf","joinBy","ymdToUTC","getValue","AdapterFn","getPeriodAndValue","getTitle","getSubtitle","getIndexedAt","fnSelector","C","CHART_URL","SUBT_MAX","_crId","dfProvider","dfCode","seriaId","_crItemLink","crItemLink","bind","_crUpdatedDate","json","_date","split","_crDescr","option","_id","_crZhConfig","dataSource","_itemKey","title","id","key","itemCaption","itemConf","_crInfo","name","description","_isNumber","n","_isQuarter","str","indexOf","_isAnnualQuarter","period","_crPoint","date","y","_crAqPoint","fnAdapter","crError","crTitle","subtitle","_","_subtitle","length","crData","fromDate","data","_xFrom","value","crPoint","_len","_arrPoint","i","push","crConfOption","zhConfig","info"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport { crError, crItemLink } from '../crFn';\r\nimport fnSelector from './fnSelector'\r\n\r\nconst {\r\n  crItemConf,\r\n  joinBy,\r\n  ymdToUTC,\r\n  getValue\r\n} = AdapterFn;\r\nconst {\r\n  getPeriodAndValue,\r\n  getTitle,\r\n  getSubtitle,\r\n  getIndexedAt\r\n } = fnSelector;\r\n\r\nconst C = {\r\n  CHART_URL: 'https://db.nomics.world',\r\n  SUBT_MAX: 60\r\n};\r\n\r\nconst _crId = ({ dfProvider, dfCode, seriaId }) =>\r\n  joinBy('/', dfProvider, dfCode, seriaId);\r\n\r\nconst _crItemLink = crItemLink\r\n  .bind(null, 'DB Nomics Chart');\r\nconst _crUpdatedDate = json => {\r\n  const _date = getIndexedAt(json).split('T')[0];\r\n  return _date\r\n    ? `<p>Updated by DB Nomics on ${_date}</p>`\r\n    : '';\r\n};\r\nconst _crDescr = (json, option) => {\r\n  const _id = _crId(option);\r\n  return`<p>SeriaId: ${_id}</p>\r\n   ${_crUpdatedDate(json)}\r\n   ${_crItemLink(C.CHART_URL+'/'+_id)}`;\r\n};\r\n\r\nconst _crZhConfig = (option) => {\r\n  const {\r\n    dataSource, _itemKey,\r\n    dfProvider, dfCode, seriaId,\r\n    title\r\n  } = option\r\n  , _id = _itemKey;\r\n  return {\r\n    id: _id, key: _id,\r\n    itemCaption: title,\r\n    dataSource,\r\n    itemConf: {\r\n       _itemKey: _id,\r\n       ...crItemConf(option),\r\n       dataSource,\r\n       dfProvider, dfCode, seriaId\r\n    }\r\n  }\r\n};\r\nconst _crInfo = (json, option) => ({\r\n  name: getSubtitle(json),\r\n  description: _crDescr(json, option)\r\n})\r\n\r\nconst _isNumber = n => typeof n === 'number'\r\n && n-n === 0;\r\n\r\nconst _isQuarter = str => (\"\"+str).indexOf(\"Q\") !== -1;\r\n\r\nconst _isAnnualQuarter = period =>\r\n  !_isQuarter(period[0]) && _isQuarter(period[1]);\r\n\r\nconst _crPoint = (date, y) => ([ymdToUTC(date), y]);\r\n\r\nconst _crAqPoint = (date, y) => _isQuarter(date)\r\n  ? _crPoint(date, y)\r\n  : [];\r\n\r\nconst fnAdapter = {\r\n  crError,\r\n  getValue,\r\n  crTitle: ({ title, subtitle }, json) => {\r\n    const _ = getSubtitle(json)\r\n    , _subtitle = _.length > C.SUBT_MAX\r\n         ? joinBy(': ', title, subtitle)\r\n         : _;\r\n    return {\r\n      title: getTitle(json),\r\n      subtitle: _subtitle\r\n    };\r\n  },\r\n\r\n  crData: (json, option) => {\r\n    const { fromDate } = option\r\n    , data = []\r\n    , _xFrom = fromDate ? ymdToUTC(fromDate) : 0\r\n    , { period, value } = getPeriodAndValue(json)\r\n    , crPoint = _isAnnualQuarter(period)\r\n       ? _crAqPoint\r\n       : _crPoint\r\n    , _len = period.length;\r\n    let _arrPoint;\r\n    for (let i=0; i<_len; i++){\r\n      _arrPoint = crPoint(period[i], value[i]);\r\n      if (_arrPoint[0] > _xFrom && _isNumber(_arrPoint[1])) {\r\n        data.push(_arrPoint)\r\n      }\r\n    }\r\n    return data;\r\n  },\r\n\r\n  crConfOption: (option, json) => ({\r\n    zhConfig: _crZhConfig(option),\r\n    info: _crInfo(json, option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}