{"version":3,"sources":["../../../src/adapters/iex/toEarningsImpl.js"],"names":["C","CAPTION","COLOR","COLOR_PLUS","COLOR_MINUS","_markerColor","p","EPSSurpriseDollar","toEarningsImpl","caption","color","crSubtitle","value","crSeria","json","option","dfType","data","Array","isArray","forEach","push","Object","assign","ChartConfig","fMarkerExDividend","x","AdapterFn","ymdToUTC","EPSReportDate","exValue","actualEPS","scatterSeria","Tooltip","eps","toSeria"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,OAAO,EAAE,QADD;AAERC,EAAAA,KAAK,EAAE,SAFC;AAGRC,EAAAA,UAAU,EAAE,SAHJ;AAIRC,EAAAA,WAAW,EAAE;AAJL,CAAV;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1B,SAAO,OAAOA,CAAC,CAACC,iBAAT,KAA+B,QAA/B,IACFD,CAAC,CAACC,iBAAF,GAAsB,CADpB,GAEDP,CAAC,CAACI,WAFD,GAGDJ,CAAC,CAACG,UAHR;AAID,CALD;;AAOA,IAAMK,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAET,CAAC,CAACC,OADU;AAErBS,EAAAA,KAAK,EAAEV,CAAC,CAACE,KAFY;AAIrBS,EAAAA,UAAU,EAAE,0BAAe;AAAA,QAAZC,KAAY,QAAZA,KAAY;AACzB,WAAUA,KAAV,SAAmBZ,CAAC,CAACC,OAArB;AACD,GANoB;AAOrBY,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAOC,MAAP,EAAkB;AACnB,QAAEC,MAAF,GAAaD,MAAb,CAAEC,MAAF;AAAA,QACAC,IADA,GACO,EADP;;AAGN,QAAIH,IAAI,IAAII,KAAK,CAACC,OAAN,CAAcL,IAAI,CAACE,MAAD,CAAlB,CAAZ,EAAyC;AACvCF,MAAAA,IAAI,CAACE,MAAD,CAAJ,CAAaI,OAAb,CAAqB,UAAAd,CAAC,EAAI;AACxBW,QAAAA,IAAI,CAACI,IAAL,CACEC,MAAM,CAACC,MAAP,CACGC,wBAAYC,iBAAZ,CAA8BpB,YAAY,CAACC,CAAD,CAA1C,EAA+C,CAA/C,CADH;AAEGoB,UAAAA,CAAC,EAAEC,sBAAUC,QAAV,CAAmBtB,CAAC,CAACuB,aAArB,CAFN;AAGGC,UAAAA,OAAO,EAAExB,CAAC,CAACyB;AAHd,WAIMzB,CAJN,EADF;AAOD,OARD;AASD;;AACD,WAAO,iCACJ0B,YADI,CACSC,oBAAQC,GADjB,EACsB;AAAEjB,MAAAA,IAAI,EAAJA;AAAF,KADtB,EAEJkB,OAFI,EAAP;AAGD;AAzBoB,CAAvB;eA4Be3B,c","sourcesContent":["\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Tooltip from '../../charts/Tooltip'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nconst C = {\r\n  CAPTION: 'EPS 4Q',\r\n  COLOR: '#4caf50',\r\n  COLOR_PLUS: '#4caf50',\r\n  COLOR_MINUS: '#f44336'\r\n};\r\n\r\nconst _markerColor = (p) => {\r\n  return typeof p.EPSSurpriseDollar === 'number'\r\n    && p.EPSSurpriseDollar < 0\r\n      ? C.COLOR_MINUS\r\n      : C.COLOR_PLUS;\r\n};\r\n\r\nconst toEarningsImpl = {\r\n  caption: C.CAPTION,\r\n  color: C.COLOR,\r\n\r\n  crSubtitle: ({ value }) => {\r\n    return `${value} ${C.CAPTION}`;\r\n  },\r\n  crSeria: (json, option) => {\r\n    const { dfType } = option\r\n        , data = [];\r\n\r\n    if (json && Array.isArray(json[dfType])) {\r\n      json[dfType].forEach(p => {\r\n        data.push(\r\n          Object.assign(\r\n             ChartConfig.fMarkerExDividend(_markerColor(p), 0), {\r\n             x: AdapterFn.ymdToUTC(p.EPSReportDate),\r\n             exValue: p.actualEPS,\r\n             ...p\r\n          }))\r\n      })\r\n    }    \r\n    return Builder()\r\n      .scatterSeria(Tooltip.eps, { data })\r\n      .toSeria();\r\n  }\r\n};\r\n\r\nexport default toEarningsImpl\r\n"],"file":"toEarningsImpl.js"}