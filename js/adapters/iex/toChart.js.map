{"version":3,"sources":["../../../src/adapters/iex/toChart.js"],"names":["crItemConf","AdapterFn","crValueConf","valueMoving","stockSeriesLegend","findMinY","toSeriesData","AdapterStockFn","_crZhConfig","id","option","data","one","two","dataSource","key","linkFn","item","itemCaption","itemConf","_itemKey","symbol","dfPeriod","legend","_crInfo","title","name","frequency","_crId","toChart","toConfig","json","isNotZoomToMinMax","isDrawDeltaExtrems","_id","dataOption","dataMfi","config","stockConfig","addCaption","add","info","zhConfig","addZhPoints","toSeries","isAllSeries","initSeria","minY","addPoints","toSeria"],"mappings":"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","sourcesContent":["import Builder from '../../charts/ConfigBuilder'\r\nimport AdapterFn from '../AdapterFn'\r\nimport AdapterStockFn from '../AdapterStockFn'\r\n\r\nconst {\r\n  crItemConf,\r\n  crValueConf,\r\n  valueMoving,\r\n  stockSeriesLegend,\r\n  findMinY\r\n} = AdapterFn;\r\nconst { toSeriesData } = AdapterStockFn;\r\n\r\nconst _crZhConfig = (id, option, data) => {\r\n  const { one, two, dataSource } = option;\r\n  return {\r\n    dataSource,\r\n    id: id,\r\n    key: id,\r\n    linkFn: \"NASDAQ\",\r\n    item: one,\r\n    itemCaption: one,\r\n    itemConf: {\r\n      _itemKey: id,\r\n      ...crItemConf(option),\r\n      ...crValueConf(data),\r\n      symbol: one,\r\n      dfPeriod: two,\r\n      dataSource\r\n    },\r\n    legend: stockSeriesLegend()\r\n  };\r\n}\r\n\r\nconst _crInfo = (title) => ({\r\n  name: title,\r\n  frequency: \"Daily\",\r\n});\r\n\r\nconst _crId = ({ one, two }) => one + '_' + two;\r\n\r\nconst toChart = {\r\n  toConfig(json, option){\r\n    const {\r\n      title,\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems\r\n    } = option\r\n    , _id = _crId(option)\r\n    , dataOption = toSeriesData(json, {\r\n        isNotZoomToMinMax,\r\n        isDrawDeltaExtrems\r\n      })\r\n    , { data, dataMfi } = dataOption\r\n    , config = Builder()\r\n        .stockConfig(_id, dataOption)\r\n        .addCaption(title)\r\n        .add({\r\n           valueMoving: valueMoving(data),\r\n           info: _crInfo(title),\r\n           zhConfig: _crZhConfig(_id, option, data)\r\n         })\r\n         .addZhPoints(dataMfi)\r\n         .toConfig();\r\n\r\n    return config;\r\n  },\r\n\r\n  toSeries(json, option){\r\n    const _id = _crId(option)\r\n    , { data } = toSeriesData(json, { isAllSeries: false });\r\n    return Builder()\r\n      .initSeria({ minY: findMinY(data) })\r\n      .addPoints(_id, data)\r\n      .toSeria();\r\n  }\r\n}\r\n\r\nexport default toChart\r\n"],"file":"toChart.js"}