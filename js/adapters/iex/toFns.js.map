{"version":3,"sources":["../../../src/adapters/iex/toFns.js"],"names":["getValue","AdapterFn","_LOCALE","navigator","language","_isNumber","n","_calcScatterY","chart","isMin","yAxis","max","min","all","one","toFns","toStr","toLocaleString","toPerc","style","minimumFractionDigits","crZhConfig","key","value","dataSource","id","itemCaption","crToSeria","seria","caption","color","option","dfType","y","IT","ERN","data","forEach","p","Object","assign","zhItemCaption","zhColor"],"mappings":";;;;;;;AAAA;;AAEA;;IAEQA,Q,GAAaC,qB,CAAbD,Q;AAER,IAAME,OAAO,GAAG,CAACC,SAAS,IAAI,EAAd,EAAkBC,QAAlC;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC;AAAA,SAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,CAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,sBACjBD,KAAK,CAACE,KAAN,CAAY,CAAZ,CADiB;AAAA,MAC9BC,GAD8B,iBAC9BA,GAD8B;AAAA,MACzBC,GADyB,iBACzBA,GADyB;AAAA,MAEhCC,GAFgC,GAE1BF,GAAG,GAAGC,GAFoB;AAAA,MAGhCE,GAHgC,GAG1BD,GAAG,GAAC,GAHsB;AAItC,SAAOJ,KAAK,GACPG,GAAG,GAAGE,GADC,GAEPH,GAAG,GAAG,IAAEG,GAFb;AAGD,CAPD;;AASA,IAAMC,KAAK,GAAG;AACZf,EAAAA,QAAQ,EAARA,QADY;AAGZgB,EAAAA,KAAK,EAAE,eAAAV,CAAC;AAAA,WAAID,SAAS,CAACC,CAAD,CAAT,GACRA,CAAC,CAACW,cAAF,CAAiBf,OAAjB,CADQ,GAER,EAFI;AAAA,GAHI;AAMZgB,EAAAA,MAAM,EAAE,gBAAAZ,CAAC;AAAA,WAAID,SAAS,CAACC,CAAD,CAAT,GACRA,CAAC,CAACW,cAAF,CAAiBf,OAAjB,EAA0B;AAAEiB,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,qBAAqB,EAAE;AAA3C,KAA1B,CADQ,GAER,EAFI;AAAA,GANG;AAUZC,EAAAA,UAAU,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAQC,KAAR,QAAQA,KAAR;AAAA,QAAeC,UAAf,QAAeA,UAAf;AAAA,WAAiC;AAC3CF,MAAAA,GAAG,EAAHA,GAD2C;AACtCG,MAAAA,EAAE,EAAEH,GADkC;AAE3CI,MAAAA,WAAW,EAAEH,KAAK,IAAID,GAFqB;AAG3CE,MAAAA,UAAU,EAAVA;AAH2C,KAAjC;AAAA,GAVA;AAgBZG,EAAAA,SAAS,EAAE,0BAA8C;AAAA,QAA3CnB,KAA2C,SAA3CA,KAA2C;AAAA,QAApCoB,KAAoC,SAApCA,KAAoC;AAAA,QAA7BC,OAA6B,SAA7BA,OAA6B;AAAA,QAApBC,KAAoB,SAApBA,KAAoB;AAAA,QAAbC,MAAa,SAAbA,MAAa;AAAA,QAC/CC,MAD+C,GACpCD,MADoC,CAC/CC,MAD+C;AAEvD,QAAMC,CAAC,GAAID,MAAM,KAAKE,sBAAGC,GAAf,GACN5B,aAAa,CAACC,KAAD,CADP,GAEND,aAAa,CAACC,KAAD,EAAQ,IAAR,CAFjB;AAGAoB,IAAAA,KAAK,CAACQ,IAAN,CAAWC,OAAX,CAAmB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACL,CAAF,GAAMA,CAAV;AAAA,KAApB;AACAM,IAAAA,MAAM,CAACC,MAAP,CAAcZ,KAAd,EAAqB;AACnBa,MAAAA,aAAa,EAAEZ,OADI;AAEnBa,MAAAA,OAAO,EAAEZ;AAFU,KAArB;AAIA,WAAOF,KAAP;AACD;AA3BW,CAAd;eA8Beb,K","sourcesContent":["import AdapterFn from '../AdapterFn'\r\n\r\nimport IT from './ItemTypes'\r\n\r\nconst { getValue } = AdapterFn\r\n\r\nconst _LOCALE = (navigator || {}).language;\r\nconst _isNumber = n => typeof n === 'number';\r\n\r\nconst _calcScatterY = (chart, isMin) => {\r\n  const { max, min } = chart.yAxis[0]\r\n      , all = max - min\r\n      , one = all/100;\r\n  return isMin\r\n    ? (min + one)\r\n    : (max - 7*one);\r\n};\r\n\r\nconst toFns = {\r\n  getValue,\r\n  \r\n  toStr: n => _isNumber(n)\r\n    ? n.toLocaleString(_LOCALE)\r\n    : '',\r\n  toPerc: n => _isNumber(n)\r\n     ? n.toLocaleString(_LOCALE, { style: 'percent', minimumFractionDigits: 2})\r\n     : '',\r\n\r\n  crZhConfig: ({ key, value, dataSource }) => ({\r\n    key, id: key,\r\n    itemCaption: value || key,\r\n    dataSource\r\n  }),\r\n\r\n  crToSeria: ({ chart, seria, caption, color, option }) => {\r\n    const { dfType } = option;\r\n    const y = (dfType === IT.ERN)\r\n      ? _calcScatterY(chart)\r\n      : _calcScatterY(chart, true);\r\n    seria.data.forEach(p => p.y = y)\r\n    Object.assign(seria, {\r\n      zhItemCaption: caption,\r\n      zhColor: color\r\n    })\r\n    return seria;\r\n  }\r\n};\r\n\r\nexport default toFns\r\n"],"file":"toFns.js"}