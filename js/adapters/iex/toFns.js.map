{"version":3,"sources":["../../../src/adapters/iex/toFns.js"],"names":["_calcScatterY","chart","isMin","yAxis","max","min","all","one","toFns","crZhConfig","option","value","dataSource","id","AdapterFn","crId","key","itemCaption","isWithoutAdd","isWithLegend","crToSeria","seria","caption","color","dfType","y","CT","ERN","data","forEach","p","Object","assign","zhItemCaption","zhColor"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,sBACjBD,KAAK,CAACE,KAAN,CAAY,CAAZ,CADiB;AAAA,MAC9BC,GAD8B,iBAC9BA,GAD8B;AAAA,MACzBC,GADyB,iBACzBA,GADyB;AAAA,MAEhCC,GAFgC,GAE1BF,GAAG,GAAGC,GAFoB;AAAA,MAGhCE,GAHgC,GAG1BD,GAAG,GAAC,GAHsB;AAItC,SAAOJ,KAAK,GACPG,GAAG,GAAGE,GADC,GAEPH,GAAG,GAAG,IAAEG,GAFb;AAGD,CAPD;;AASA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,oBAACC,MAAD,EAAY;AAAA,QACdC,KADc,GACQD,MADR,CACdC,KADc;AAAA,QACPC,UADO,GACQF,MADR,CACPE,UADO;AAAA,QAEhBC,EAFgB,GAEXC,sBAAUC,IAAV,EAFW;;AAGtB,WAAO;AACLF,MAAAA,EAAE,EAAFA,EADK;AACDG,MAAAA,GAAG,EAAEH,EADJ;AAELI,MAAAA,WAAW,EAAEN,KAAK,IAAIE,EAFjB;AAGLK,MAAAA,YAAY,EAAE,IAHT;AAILC,MAAAA,YAAY,EAAE,KAJT;AAKLP,MAAAA,UAAU,EAAVA;AALK,KAAP;AAOD,GAXW;AAaZQ,EAAAA,SAAS,EAAE,yBAA8C;AAAA,QAA3CnB,KAA2C,QAA3CA,KAA2C;AAAA,QAApCoB,KAAoC,QAApCA,KAAoC;AAAA,QAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,QAApBC,KAAoB,QAApBA,KAAoB;AAAA,QAAbb,MAAa,QAAbA,MAAa;AAAA,QAC/Cc,MAD+C,GACpCd,MADoC,CAC/Cc,MAD+C;AAEvD,QAAMC,CAAC,GAAID,MAAM,KAAKE,sBAAGC,GAAf,GACN3B,aAAa,CAACC,KAAD,CADP,GAEND,aAAa,CAACC,KAAD,EAAQ,IAAR,CAFjB;AAGAoB,IAAAA,KAAK,CAACO,IAAN,CAAWC,OAAX,CAAmB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACL,CAAF,GAAMA,CAAV;AAAA,KAApB;AACAM,IAAAA,MAAM,CAACC,MAAP,CAAcX,KAAd,EAAqB;AACnBY,MAAAA,aAAa,EAAEX,OADI;AAEnBY,MAAAA,OAAO,EAAEX;AAFU,KAArB;AAIA,WAAOF,KAAP;AACD;AAxBW,CAAd;eA2Beb,K","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport CT from './ChartType'\r\n\r\nconst _calcScatterY = (chart, isMin) => {\r\n  const { max, min } = chart.yAxis[0]\r\n      , all = max - min\r\n      , one = all/100;\r\n  return isMin\r\n    ? (min + one)\r\n    : (max - 7*one);\r\n};\r\n\r\nconst toFns = {\r\n  crZhConfig: (option) => {\r\n    const { value, dataSource } = option\r\n        , id = AdapterFn.crId();\r\n    return {\r\n      id, key: id,\r\n      itemCaption: value || id,\r\n      isWithoutAdd: true,\r\n      isWithLegend: false,\r\n      dataSource\r\n    };\r\n  },\r\n\r\n  crToSeria: ({ chart, seria, caption, color, option }) => {\r\n    const { dfType } = option;\r\n    const y = (dfType === CT.ERN)\r\n      ? _calcScatterY(chart)\r\n      : _calcScatterY(chart, true);\r\n    seria.data.forEach(p => p.y = y)\r\n    Object.assign(seria, {\r\n      zhItemCaption: caption,\r\n      zhColor: color\r\n    })\r\n    return seria;\r\n  }\r\n};\r\n\r\nexport default toFns\r\n"],"file":"toFns.js"}