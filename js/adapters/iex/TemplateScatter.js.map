{"version":3,"sources":["../../../src/adapters/iex/TemplateScatter.js"],"names":["TITLE","TemplateScatter","impl","Object","assign","prototype","crKey","option","key","value","toConfig","json","crSubtitle","crSeria","config","areaConfig","spacingTop","isCrosshair","addCaption","addSeriaTo","add","zhConfig","fns","crZhConfig","toSeries","chart","caption","color","seria","crToSeria"],"mappings":";;;;;;;AACA;;AACA;;AAEA,IAAMA,KAAK,GAAG,mBAAd;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAASC,IAAT,EAAe;AACrC,MAAI,EAAE,gBAAgBD,eAAlB,CAAJ,EAAwC;AACtC,WAAQ,IAAIA,eAAJ,CAAoBC,IAApB,CAAR;AACD;;AACD,OAAKA,IAAL,GAAYA,IAAZ;AACD,CALD;;AAOAC,MAAM,CAACC,MAAP,CAAcH,eAAe,CAACI,SAA9B,EAAyC;AACvCC,EAAAA,KADuC,iBACjCC,MADiC,EAC1B;AACXA,IAAAA,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACE,KAApB;AACA,WAAOF,MAAM,CAACE,KAAd;AACD,GAJsC;AAMvCC,EAAAA,QANuC,oBAM9BC,IAN8B,EAMxBJ,MANwB,EAMjB;AAAA,qBACY,KAAKL,IADjB;AAAA,QACZU,UADY,cACZA,UADY;AAAA,QACAC,OADA,cACAA,OADA;AAAA,QAElBC,MAFkB,GAET,iCACRC,UADQ,CACG;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,WAAW,EAAE;AAFJ,KADH,EAKRC,UALQ,CAKGlB,KALH,EAKUY,UAAU,CAACL,MAAD,CALpB,EAMRY,UANQ,CAMG,CANH,EAMMN,OAAO,CAACF,IAAD,EAAOJ,MAAP,CANb,EAORa,GAPQ,CAOJ;AAAEC,MAAAA,QAAQ,EAAEC,kBAAIC,UAAJ,CAAehB,MAAf;AAAZ,KAPI,EAQRG,QARQ,EAFS;AAWpB,WAAO;AAAEI,MAAAA,MAAM,EAANA;AAAF,KAAP;AACD,GAlBsC;AAoBvCU,EAAAA,QApBuC,oBAoB9Bb,IApB8B,EAoBxBJ,MApBwB,EAoBhBkB,KApBgB,EAoBV;AAAA,sBAIjB,KAAKvB,IAJY;AAAA,QAEpBwB,OAFoB,eAEpBA,OAFoB;AAAA,QAEXC,KAFW,eAEXA,KAFW;AAAA,QAGpBd,OAHoB,eAGpBA,OAHoB;AAAA,QAKpBe,KALoB,GAKZf,OAAO,CAACF,IAAD,EAAOJ,MAAP,CALK;AAM3B,WAAOe,kBAAIO,SAAJ,CAAc;AACnBJ,MAAAA,KAAK,EAALA,KADmB;AACZG,MAAAA,KAAK,EAALA,KADY;AACLF,MAAAA,OAAO,EAAPA,OADK;AACIC,MAAAA,KAAK,EAALA,KADJ;AACWpB,MAAAA,MAAM,EAANA;AADX,KAAd,CAAP;AAGD;AA7BsC,CAAzC;eAgCeN,e","sourcesContent":["\r\nimport Builder from '../../charts/ConfigBuilder'\r\nimport fns from './toFns'\r\n\r\nconst TITLE = \"Source: IEX Cloud\";\r\n\r\nconst TemplateScatter = function(impl) {\r\n  if (!(this instanceof TemplateScatter)) {\r\n    return (new TemplateScatter(impl));\r\n  }\r\n  this.impl = impl\r\n};\r\n\r\nObject.assign(TemplateScatter.prototype, {\r\n  crKey(option){\r\n    option.key = option.value\r\n    return option.value;\r\n  },\r\n\r\n  toConfig(json, option){\r\n    const { crSubtitle, crSeria } = this.impl\r\n    , config = Builder()\r\n      .areaConfig({\r\n         spacingTop: 25,\r\n         isCrosshair: false\r\n       })\r\n      .addCaption(TITLE, crSubtitle(option))\r\n      .addSeriaTo(0, crSeria(json, option))\r\n      .add({ zhConfig: fns.crZhConfig(option) })\r\n      .toConfig();\r\n    return { config };\r\n  },\r\n\r\n  toSeries(json, option, chart){\r\n    const {\r\n           caption, color,\r\n           crSeria\r\n          } = this.impl\r\n         , seria = crSeria(json, option);\r\n    return fns.crToSeria({\r\n      chart, seria, caption, color, option\r\n    });\r\n  }\r\n});\r\n\r\nexport default TemplateScatter\r\n"],"file":"TemplateScatter.js"}