{"version":3,"sources":["../../src/adapters/AdapterStockFn.js"],"names":["ymdToUTC","AdapterFn","volumeColumnPoint","athPoint","_isUndef","v","AdapterStockFn","toSeriesData","arr","seriaOption","isAllSeries","pnDate","restOption","data","dataOpen","dataHigh","dataLow","dataVolume","dataVolumeColumn","dataATH","dataMfi","_prevClose","minClose","Number","POSITIVE_INFINITY","maxClose","NEGATIVE_INFINITY","forEach","item","open","high","low","close","volume","date","_date","push","option","_high","_low","prevClose"],"mappings":"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","sourcesContent":["import AdapterFn from './AdapterFn'\r\n\r\nconst {\r\n  ymdToUTC,\r\n  volumeColumnPoint,\r\n  athPoint\r\n} = AdapterFn;\r\n\r\nconst _isUndef = v => typeof v === 'undefined';\r\n\r\nconst AdapterStockFn = {\r\n  toSeriesData: (arr=[], seriaOption) => {\r\n    const {\r\n            isAllSeries=true,\r\n            pnDate='date',\r\n            ...restOption\r\n            //isNotZoomToMinMax,\r\n            //isDrawDeltaExtrems\r\n          } = seriaOption || {};\r\n    const data = []\r\n        , dataOpen = [], dataHigh = [], dataLow = []\r\n        , dataVolume = [], dataVolumeColumn = []\r\n        , dataATH = [], dataMfi = [];\r\n    let _prevClose\r\n      , minClose = Number.POSITIVE_INFINITY\r\n      , maxClose = Number.NEGATIVE_INFINITY;\r\n    arr.forEach(item => {\r\n      const {\r\n             open, high, low, close,\r\n             volume\r\n            } = item\r\n          , date = item[pnDate] || ''\r\n          , _date = ymdToUTC(date);\r\n\r\n      data.push([_date, close])\r\n\r\n      if (isAllSeries) {\r\n        if (minClose > close) { minClose = close }\r\n        if (maxClose < close ) { maxClose = close }\r\n\r\n        dataOpen.push([_date, open])\r\n        dataHigh.push([_date, high])\r\n        dataLow.push([_date, low])\r\n        dataVolume.push([_date, volume])\r\n        dataVolumeColumn.push(\r\n            volumeColumnPoint({\r\n               open, close, volume, date: _date,\r\n               option: { _high: high, _low: low }\r\n            })\r\n        )\r\n        dataMfi.push([date, close, high, low, close, volume])\r\n        if (!_isUndef(_prevClose)){\r\n          dataATH.push(\r\n             athPoint({\r\n               date: _date,\r\n               prevClose: _prevClose,\r\n               open\r\n             })\r\n          )\r\n        } else {\r\n          dataATH.push(\r\n             athPoint({\r\n               date: _date,\r\n               prevClose: close,\r\n               open: close\r\n             })\r\n          )\r\n        }\r\n        _prevClose = close\r\n       }\r\n    })    \r\n    return {\r\n      data,\r\n      minClose, maxClose,\r\n      dataOpen, dataHigh, dataLow,\r\n      dataVolume, dataVolumeColumn,\r\n      dataATH, dataMfi,\r\n      ...restOption\r\n    };\r\n  }\r\n};\r\n\r\nexport default AdapterStockFn\r\n"],"file":"AdapterStockFn.js"}