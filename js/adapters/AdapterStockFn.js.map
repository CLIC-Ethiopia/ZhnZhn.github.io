{"version":3,"sources":["../../src/adapters/AdapterStockFn.js"],"names":["ymdToUTC","AdapterFn","crVolumePoint","crAthPoint","_isUndef","v","AdapterStockFn","toSeriesData","arr","toDate","seriaOption","option","isAllSeries","pnDate","isNotZoomToMinMax","isDrawDeltaExtrems","seriaType","seriaColor","seriaWidth","data","dataOpen","dataHigh","dataLow","dataVolume","dataVolumeColumn","dataATH","dataMfi","_prevClose","minClose","Number","POSITIVE_INFINITY","maxClose","NEGATIVE_INFINITY","forEach","item","open","high","low","close","volume","date","_date","push","_high","_low"],"mappings":";;;;;;;AAAA;;IAGEA,Q,GAGEC,qB,CAHFD,Q;IACAE,a,GAEED,qB,CAFFC,a;IACAC,U,GACEF,qB,CADFE,U;;AAGF,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,SAAI,OAAOA,CAAP,KAAa,WAAjB;AAAA,CAAlB;;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,YAAY,EAAE,4BAA4D;AAAA,wBAAzDC,GAAyD;AAAA,QAAzDA,GAAyD,yBAArD,EAAqD;AAAA,2BAAjDC,MAAiD;AAAA,QAAjDA,MAAiD,4BAA1CT,QAA0C;AAAA,gCAAhCU,WAAgC;AAAA,QAAhCA,WAAgC,iCAApB,EAAoB;AAAA,2BAAhBC,MAAgB;AAAA,QAAhBA,MAAgB,4BAAT,EAAS;AAAA,gCAIpED,WAJoE,CAEtEE,WAFsE;AAAA,QAEtEA,WAFsE,sCAE1D,IAF0D;AAAA,8BAIpEF,WAJoE,CAGtEG,MAHsE;AAAA,QAGtEA,MAHsE,oCAG/D,MAH+D;AAAA,QAMtEC,iBANsE,GAWpEH,MAXoE,CAMtEG,iBANsE;AAAA,QAOtEC,kBAPsE,GAWpEJ,MAXoE,CAOtEI,kBAPsE;AAAA,QAQtEC,SARsE,GAWpEL,MAXoE,CAQtEK,SARsE;AAAA,QAStEC,UATsE,GAWpEN,MAXoE,CAStEM,UATsE;AAAA,QAUtEC,UAVsE,GAWpEP,MAXoE,CAUtEO,UAVsE;AAYxE,QAAMC,IAAI,GAAG,EAAb;AAAA,QACMC,QAAQ,GAAG,EADjB;AAAA,QACqBC,QAAQ,GAAG,EADhC;AAAA,QACoCC,OAAO,GAAG,EAD9C;AAAA,QAEMC,UAAU,GAAG,EAFnB;AAAA,QAEuBC,gBAAgB,GAAG,EAF1C;AAAA,QAGMC,OAAO,GAAG,EAHhB;AAAA,QAGoBC,OAAO,GAAG,EAH9B;;AAIA,QAAIC,UAAJ;AAAA,QACIC,QAAQ,GAAGC,MAAM,CAACC,iBADtB;AAAA,QAEIC,QAAQ,GAAGF,MAAM,CAACG,iBAFtB;;AAGAxB,IAAAA,GAAG,CAACyB,OAAJ,CAAY,UAAAC,IAAI,EAAI;AAAA,UAEXC,IAFW,GAIRD,IAJQ,CAEXC,IAFW;AAAA,UAELC,IAFK,GAIRF,IAJQ,CAELE,IAFK;AAAA,UAECC,GAFD,GAIRH,IAJQ,CAECG,GAFD;AAAA,UAEMC,KAFN,GAIRJ,IAJQ,CAEMI,KAFN;AAAA,UAGXC,MAHW,GAIRL,IAJQ,CAGXK,MAHW;AAAA,UAKZC,IALY,GAKLN,IAAI,CAACrB,MAAD,CAAJ,IAAgB,EALX;AAAA,UAMZ4B,KANY,GAMJhC,MAAM,CAAC+B,IAAD,CANF;;AAQlBrB,MAAAA,IAAI,CAACuB,IAAL,CAAU,CAACD,KAAD,EAAQH,KAAR,CAAV;;AAEA,UAAI1B,WAAJ,EAAiB;AACf,YAAIgB,QAAQ,GAAGU,KAAf,EAAsB;AAAEV,UAAAA,QAAQ,GAAGU,KAAX;AAAkB;;AAC1C,YAAIP,QAAQ,GAAGO,KAAf,EAAuB;AAAEP,UAAAA,QAAQ,GAAGO,KAAX;AAAkB;;AAE3ClB,QAAAA,QAAQ,CAACsB,IAAT,CAAc,CAACD,KAAD,EAAQN,IAAR,CAAd;AACAd,QAAAA,QAAQ,CAACqB,IAAT,CAAc,CAACD,KAAD,EAAQL,IAAR,CAAd;AACAd,QAAAA,OAAO,CAACoB,IAAR,CAAa,CAACD,KAAD,EAAQJ,GAAR,CAAb;AACAd,QAAAA,UAAU,CAACmB,IAAX,CAAgB,CAACD,KAAD,EAAQF,MAAR,CAAhB;AACAf,QAAAA,gBAAgB,CAACkB,IAAjB,CACIxC,aAAa,CAAC;AACXiC,UAAAA,IAAI,EAAJA,IADW;AACLG,UAAAA,KAAK,EAALA,KADK;AACEC,UAAAA,MAAM,EAANA,MADF;AACUC,UAAAA,IAAI,EAAEC,KADhB;AAEX9B,UAAAA,MAAM,EAAE;AAAEgC,YAAAA,KAAK,EAAEP,IAAT;AAAeQ,YAAAA,IAAI,EAAEP;AAArB;AAFG,SAAD,CADjB;AAMAX,QAAAA,OAAO,CAACgB,IAAR,CAAa,CAACF,IAAD,EAAOF,KAAP,EAAcF,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,CAAb;AACAd,QAAAA,OAAO,CAACiB,IAAR,CAAa,CAACtC,QAAQ,CAACuB,UAAD,CAAT,GACTxB,UAAU,CAAC;AACVqC,UAAAA,IAAI,EAAEC,KADI;AAEVH,UAAAA,KAAK,EAAEX,UAFG;AAGVQ,UAAAA,IAAI,EAAJA;AAHU,SAAD,CADD,GAMThC,UAAU,CAAC;AACVqC,UAAAA,IAAI,EAAEC,KADI;AAEVH,UAAAA,KAAK,EAAEA,KAFG;AAGVH,UAAAA,IAAI,EAAEG;AAHI,SAAD,CANd;AAYAX,QAAAA,UAAU,GAAGW,KAAb;AACA;AACH,KAvCD;AAwCA,WAAO;AACLnB,MAAAA,IAAI,EAAJA,IADK;AAELS,MAAAA,QAAQ,EAARA,QAFK;AAEKG,MAAAA,QAAQ,EAARA,QAFL;AAGLX,MAAAA,QAAQ,EAARA,QAHK;AAGKC,MAAAA,QAAQ,EAARA,QAHL;AAGeC,MAAAA,OAAO,EAAPA,OAHf;AAILC,MAAAA,UAAU,EAAVA,UAJK;AAIOC,MAAAA,gBAAgB,EAAhBA,gBAJP;AAKLC,MAAAA,OAAO,EAAPA,OALK;AAKIC,MAAAA,OAAO,EAAPA,OALJ;AAMLZ,MAAAA,iBAAiB,EAAjBA,iBANK;AAOLC,MAAAA,kBAAkB,EAAlBA,kBAPK;AAQLC,MAAAA,SAAS,EAATA,SARK;AASLC,MAAAA,UAAU,EAAVA,UATK;AAULC,MAAAA,UAAU,EAAVA;AAVK,KAAP;AAYD;AAxEoB,CAAvB;eA2EeZ,c","sourcesContent":["import AdapterFn from './AdapterFn'\r\n\r\nconst {\r\n  ymdToUTC,\r\n  crVolumePoint,\r\n  crAthPoint\r\n} = AdapterFn;\r\n\r\nconst _isUndef = v => typeof v === 'undefined';\r\n\r\nconst AdapterStockFn = {\r\n  toSeriesData: ({ arr=[], toDate=ymdToUTC, seriaOption={}, option={} }) => {\r\n    const {\r\n      isAllSeries=true,\r\n      pnDate='date',\r\n    } = seriaOption\r\n    , {\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      seriaType,\r\n      seriaColor,\r\n      seriaWidth\r\n    } = option\r\n    const data = []\r\n        , dataOpen = [], dataHigh = [], dataLow = []\r\n        , dataVolume = [], dataVolumeColumn = []\r\n        , dataATH = [], dataMfi = [];\r\n    let _prevClose\r\n      , minClose = Number.POSITIVE_INFINITY\r\n      , maxClose = Number.NEGATIVE_INFINITY;\r\n    arr.forEach(item => {\r\n      const {\r\n             open, high, low, close,\r\n             volume\r\n            } = item\r\n          , date = item[pnDate] || ''\r\n          , _date = toDate(date);\r\n\r\n      data.push([_date, close])\r\n\r\n      if (isAllSeries) {\r\n        if (minClose > close) { minClose = close }\r\n        if (maxClose < close ) { maxClose = close }\r\n\r\n        dataOpen.push([_date, open])\r\n        dataHigh.push([_date, high])\r\n        dataLow.push([_date, low])\r\n        dataVolume.push([_date, volume])\r\n        dataVolumeColumn.push(\r\n            crVolumePoint({\r\n               open, close, volume, date: _date,\r\n               option: { _high: high, _low: low }\r\n            })\r\n        )\r\n        dataMfi.push([date, close, high, low, close, volume])\r\n        dataATH.push(!_isUndef(_prevClose)\r\n          ? crAthPoint({\r\n             date: _date,\r\n             close: _prevClose,\r\n             open\r\n            })\r\n          : crAthPoint({\r\n             date: _date,\r\n             close: close,\r\n             open: close\r\n            })\r\n        )\r\n        _prevClose = close\r\n       }\r\n    })\r\n    return {\r\n      data,\r\n      minClose, maxClose,\r\n      dataOpen, dataHigh, dataLow,\r\n      dataVolume, dataVolumeColumn,\r\n      dataATH, dataMfi,\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      seriaType,\r\n      seriaColor,\r\n      seriaWidth\r\n    };\r\n  }\r\n};\r\n\r\nexport default AdapterStockFn\r\n"],"file":"AdapterStockFn.js"}