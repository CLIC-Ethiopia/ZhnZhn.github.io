{"version":3,"sources":["../../../src/adapters/eurostat/ChoroplethMap.js"],"names":["process","env","NODE_ENV","window","System","config","baseURL","URL_LEAFLET","URL_EU_GEOJSON","NUMBER_OF_CLUSTERS","NUMBER_OF_ITERATION","COLORS","_findFeature","arr","value","i","len","length","feature","properties","id","undefined","_fnMergeGeoAndValue","sGeo","dGeo","json","points","minValue","Number","POSITIVE_INFINITY","maxValue","NEGATIVE_INFINITY","forEach","cell","index","features","point","push","_fnCreateHmIdCluster","clusters","hm","cluster","_fnMergeGeoJsonAndClusters","geoJson","hmIdCluster","maxCluster","_properties","_id","_cluster","_fnStyle","_fnCreateEl","tag","className","cssText","el","document","createElement","style","_fnCreateInfoControl","L","mapId","wgInfo","control","onAdd","map","idEl","divEl","update","props","elInfo","crInfo","getElementById","updateCluster","color","from","to","elClusterInfo","crClusterInfo","_fnCalcUpper","arrL","arrH","upLow","upUp","_fnCreateRowEl","wg","_n","addEventListener","event","innerHTML","_fnCreateFooterEl","_fnCreateGradeControl","gradeContorl","position","_div","_upperPrev","_upperNext","toFixed","appendChild","_fnOnMouseOver","infoControl","e","_layer","target","_fnOnMouseOut","_fnOnEachFeature","layer","on","mouseover","bind","mouseout","_fnAddGeoSeria","statJson","configSlice","time","seriaSlice","geo","seria","crGeoSeria","_createChoroplethMap","option","jsonCube","zhMapSlice","createGeoSlice","_points","_clusters","crUnarySortedCluster","_hmIdCluster","addTo","geoJSON","onEachFeature","gradeControl","_crGeoJson","_geoJson","ChoroplethMap","hmUrlGeoJson","mapOption","doubleClickZoom","getLeaflet","Promise","resolve","import","then","getGeoJson","url","fetch","response","draw","setView","tileLayer"],"mappings":"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","file":"ChoroplethMap.js","sourcesContent":["import { render } from 'react-dom'\r\nimport merge from 'lodash.merge'\r\n\r\nimport JsonStatFn from './JsonStatFn'\r\nimport clusterMaker from '../../math/k-means'\r\nimport mathFn from '../../math/mathFn'\r\nimport safeGet from '../../utils/safeGet'\r\n\r\nimport MapFactory from '../../components/factories/MapFactory'\r\n\r\n/*eslint-disable no-undef */\r\nif ( process.env.NODE_ENV !== 'development'){\r\n  window.System.config({\r\n    baseURL: \"/\"\r\n  });\r\n}\r\n/*eslint-enable no-undef */\r\n\r\nconst URL_LEAFLET = 'lib/leaflet.js'\r\n    , URL_EU_GEOJSON = 'data/geo/eu-stat.geo.json'\r\n    , NUMBER_OF_CLUSTERS = 6\r\n    , NUMBER_OF_ITERATION = 100\r\n    , COLORS = [\r\n          '#9ecae1', '#6baed6',\r\n          '#4292c6', '#2171b5',\r\n          '#08519c', '#08306b',\r\n          '#74c476'\r\n      ];\r\n\r\nconst _findFeature = function(arr=[], value){\r\n  let i=0, len=arr.length;\r\n  for(; i<len; i++){\r\n     const feature = arr[i]\r\n     if (feature.properties.id === value){\r\n       return feature;\r\n     }\r\n  }\r\n  return undefined;\r\n};\r\n\r\n\r\nconst _fnMergeGeoAndValue = function(sGeo, dGeo, json){\r\n  const points = [];\r\n  let minValue = Number.POSITIVE_INFINITY\r\n    , maxValue = Number.NEGATIVE_INFINITY;\r\n  sGeo.forEach((cell, index) => {\r\n    const feature = _findFeature(json.features, dGeo.id[index])\r\n        , value = cell.value;\r\n    if (feature && value){\r\n      feature.properties.value = value;\r\n\r\n      const point = [ value, 0 ];\r\n      point.id = feature.properties.id;\r\n      points.push(point);\r\n\r\n      if (minValue>value) { minValue = value; }\r\n      if (maxValue<value) { maxValue = value; }\r\n    }\r\n  })\r\n  if (points.length === 0){\r\n    const point = [0, 0];\r\n    point.id = 'ID';\r\n    points.push(point);\r\n  }\r\n  return { minValue, maxValue, points };\r\n}\r\n\r\nconst _fnCreateHmIdCluster = function(clusters){\r\n  const hm = {};\r\n  clusters.forEach((cluster, i) => {\r\n    for (const point of cluster.points){\r\n      hm[point.id] = i;\r\n    }\r\n  })\r\n  return hm;\r\n};\r\n\r\nconst _fnMergeGeoJsonAndClusters = function(geoJson, hmIdCluster, maxCluster){\r\n  geoJson.features.forEach((feature ) => {\r\n    const _properties = feature.properties\r\n        , _id = _properties.id\r\n    if (_id){\r\n      const _cluster = hmIdCluster[_id];\r\n      _properties.cluster = (typeof _cluster !== \"undefined\")\r\n             ? _cluster\r\n             : maxCluster;\r\n    } else {\r\n      _properties.cluster = maxCluster;\r\n    }\r\n  })\r\n};\r\n\r\n\r\nconst _fnStyle = function(feature){\r\n  return {\r\n    \"color\" : 'green',\r\n    \"fillColor\" : COLORS[feature.properties.cluster],\r\n    \"weight\": 1,\r\n    \"fillOpacity\": 0.7,\r\n    \"opacity\": 0.65\r\n  }\r\n}\r\n\r\nconst _fnCreateEl = function(tag, className='', cssText='', id){\r\n  const el = document.createElement(tag)\r\n  el.className = className\r\n  el.style.cssText = cssText\r\n  if (id) {\r\n    el.id = id;\r\n  }\r\n  return el;\r\n}\r\n\r\n\r\nconst _fnCreateInfoControl = function(L, mapId){\r\n  const wgInfo = L.control();\r\n  wgInfo.onAdd = function(map){\r\n    this.idEl = mapId + '_info-control'\r\n    this.divEl = _fnCreateEl('div', 'control-info', '', this.idEl)\r\n    return this.divEl;\r\n  }\r\n  wgInfo.update = function(props){\r\n    if (props){\r\n      const elInfo = MapFactory.crInfo(props);\r\n      render(elInfo, document.getElementById(this.idEl))\r\n    }\r\n  }\r\n  wgInfo.updateCluster = function(cluster, color, from, to){\r\n    if (cluster){\r\n      const elClusterInfo = MapFactory.crClusterInfo({ cluster, color, from, to });\r\n      render(elClusterInfo, document.getElementById(this.idEl))\r\n    }\r\n  }\r\n  return wgInfo;\r\n}\r\n\r\nconst _fnCalcUpper = function(clusters, index, maxValue){\r\n  if (clusters.length - 1 === index) {\r\n    return maxValue;\r\n  }\r\n  const arrL = safeGet(clusters, `[${index}].points`, [[0]])\r\n      , arrH = safeGet(clusters, `[${index+1}].points`, [[0]])\r\n      , upLow = arrL[arrL.length-1][0]\r\n      , upUp = ( arrH[0] ) ? arrH[0][0] : upLow;\r\n\r\n  return (upLow + (upUp - upLow)/2);\r\n}\r\n\r\nconst _fnCreateRowEl = function(color, from, to, cluster, wg){\r\n  const _n = safeGet(cluster, `points.length`, 0)\r\n  const el = _fnCreateEl(\r\n     'p', '',\r\n     `opacity: 0.7; background: ${color}; padding: 5px 6px; cursor: pointer;`\r\n   )\r\n  el.addEventListener('click', function(event){\r\n    wg.updateCluster(cluster, color, from, to)\r\n  })\r\n  el.innerHTML = `<span>${from}&ndash;${to}<span>\r\n                  <span style=\"float: right; color: black; padding-left: 16px\">${_n}</span>`\r\n  return el;\r\n}\r\nconst _fnCreateFooterEl = function(){\r\n  const el = _fnCreateEl('div');\r\n  el.innerHTML = `<p style=\"opacity:0.65;background:green;padding: 3px 6px\">No Data</p>\r\n                  <p style=\"color:black;padding-top: 5px;\">Source: EuroStat</p>`\r\n  return el;\r\n}\r\n\r\nconst _fnCreateGradeControl = function(minValue, maxValue, clusters, L, wg){\r\n  const gradeContorl = L.control({ position: 'bottomleft' })\r\n  gradeContorl.onAdd = function(map){\r\n      const _div = _fnCreateEl('div', 'control-grade');\r\n\r\n      let _upperPrev, _upperNext;\r\n      _upperPrev = mathFn.toFixed(minValue)\r\n      clusters.forEach((cluster, index) => {\r\n        _upperNext = mathFn.toFixed(_fnCalcUpper(clusters, index, maxValue))\r\n        _div.appendChild( _fnCreateRowEl(\r\n            COLORS[index], _upperPrev, _upperNext, cluster, wg\r\n        ))\r\n        _upperPrev = _upperNext;\r\n      })\r\n      _div.appendChild(_fnCreateFooterEl())\r\n\r\n      return _div;\r\n    }\r\n\r\n  return gradeContorl;\r\n}\r\n\r\nconst _fnOnMouseOver = function(infoControl, e){\r\n  const _layer = e.target;\r\n  infoControl.update(_layer.feature.properties);\r\n}\r\nconst  _fnOnMouseOut = function(infoControl, e){\r\n  //infoControl.update()\r\n}\r\nconst _fnOnEachFeature = function(infoControl, feature, layer){\r\n   layer.on({\r\n     mouseover : _fnOnMouseOver.bind(null, infoControl),\r\n     mouseout : _fnOnMouseOut.bind(null, infoControl)\r\n   })\r\n}\r\n\r\nconst _fnAddGeoSeria = (points, statJson, configSlice) => {\r\n  /* eslint-disable no-unused-vars */\r\n  const { time, ...seriaSlice } = configSlice;\r\n  /* eslint-enable no-unused-vars */\r\n  return points.map(point => {\r\n    seriaSlice.geo = point.id\r\n    point.seria = JsonStatFn.crGeoSeria(statJson, seriaSlice)\r\n    return point;\r\n  });\r\n}\r\n\r\nconst _createChoroplethMap = function(option){\r\n  const { jsonCube:statJson, geoJson, zhMapSlice:configSlice, map, L, mapId } = option\r\n       , { dGeo, sGeo, time } = JsonStatFn.createGeoSlice(statJson, configSlice)\r\n       , { minValue, maxValue, points } = _fnMergeGeoAndValue(sGeo, dGeo, geoJson)\r\n       , _points = _fnAddGeoSeria(points, statJson, configSlice)\r\n       , _clusters = clusterMaker.crUnarySortedCluster(_points, NUMBER_OF_CLUSTERS, NUMBER_OF_ITERATION)\r\n       , _hmIdCluster = _fnCreateHmIdCluster(_clusters);\r\n\r\n  _fnMergeGeoJsonAndClusters(geoJson, _hmIdCluster, NUMBER_OF_CLUSTERS);\r\n  const infoControl = _fnCreateInfoControl(L, mapId);\r\n  infoControl.addTo(map);\r\n\r\n  L.geoJSON(geoJson, {\r\n     style : _fnStyle,\r\n     onEachFeature : _fnOnEachFeature.bind(null, infoControl)\r\n  }).addTo(map);\r\n\r\n\r\n  if ( _points.length > 1) {\r\n    const gradeControl = _fnCreateGradeControl(\r\n      minValue, maxValue, _clusters, L, infoControl\r\n    )\r\n    gradeControl.addTo(map);\r\n  }\r\n\r\n  option.time = time\r\n  return option;\r\n}\r\n\r\nconst _crGeoJson = (geoJson) => {\r\n  const _geoJson = merge({}, geoJson)\r\n  _geoJson.features.forEach(feature => {\r\n     feature.properties.value = null\r\n  });\r\n  return _geoJson;\r\n}\r\n\r\nconst ChoroplethMap = {\r\n  hmUrlGeoJson : {},\r\n  L : undefined,\r\n  mapOption: {\r\n    doubleClickZoom: false\r\n  },\r\n\r\n  getLeaflet(){\r\n    if (this.L){\r\n      return Promise.resolve(this.L);\r\n    } else {\r\n      return window.System.import(URL_LEAFLET)\r\n                .then( L => { return this.L = L; })\r\n    }\r\n  },\r\n\r\n  getGeoJson(url){\r\n     const geoJson = this.hmUrlGeoJson[url];\r\n     if (geoJson){\r\n       return Promise.resolve(_crGeoJson(geoJson));\r\n     } else {\r\n       return fetch(url)\r\n               .then( (response) => { return response.json(); })\r\n               .then( (geoJson ) => { return this.hmUrlGeoJson[url] = geoJson; })\r\n     }\r\n  },\r\n\r\n  draw(id, jsonCube, zhMapSlice){\r\n    return this.getLeaflet()\r\n             .then( (L) => {\r\n                const map = L.map(id, this.mapOption)\r\n                             .setView([58.00, 10.00], 3);\r\n\r\n                /*\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                     id: 'addis',\r\n                     attribution: '&copy; <a  href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                     errorTileUrl: ''\r\n                }).addTo(map);\r\n                */\r\n\r\n                L.tileLayer('', {\r\n                     //id: 'addis',\r\n                     id: id + '_tile'\r\n                }).addTo(map);\r\n\r\n                return { jsonCube, zhMapSlice, L, map, mapId: id };\r\n             })\r\n             .then ( (option) => {\r\n                 return this.getGeoJson(URL_EU_GEOJSON)\r\n                           .then( (geoJson) => {\r\n                              option.geoJson = geoJson;\r\n                              return option;\r\n                           });\r\n            })\r\n            .then( (option) => {\r\n                return Promise.resolve(_createChoroplethMap(option));\r\n            });\r\n  }\r\n};\r\n\r\nexport default ChoroplethMap\r\n"]}