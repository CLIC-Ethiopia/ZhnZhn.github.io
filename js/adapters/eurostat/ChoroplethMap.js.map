{"version":3,"sources":["../../../src/adapters/eurostat/ChoroplethMap.js"],"names":["process","env","NODE_ENV","System","config","baseURL","URL_LEAFLET","URL_EU_GEOJSON","NUMBER_OF_CLUSTERS","NUMBER_OF_ITERATION","_clusterColors","_findFeature","arr","value","i","len","length","feature","properties","id","undefined","_fnMergeGeoAndValue","sGeo","dGeo","json","points","minValue","Number","POSITIVE_INFINITY","maxValue","NEGATIVE_INFINITY","forEach","cell","index","features","point","push","_fnCreateClusters","n","iteration","k","iterations","data","unarySortedClusters","_fnCreateHmIdCluster","clusters","hm","cluster","_fnMergeGeoJsonAndClusters","geoJson","hmIdCluster","maxCluster","_properties","_id","_cluster","_fnStyle","_fnCreateInfoControl","L","wgInfo","control","onAdd","map","_div","DomUtil","create","update","props","label","innerHTML","_fnCalcUpper","_clusters","_arrL","_arrH","_upLow","_upUp","_fnCreateItemInnerHtml","color","from","to","_fnCreateGradeControl","gradeContorl","position","_upperPrev","Math","round","floor","_upperNext","_fnOnMouseOver","infoControl","e","_layer","target","_fnOnMouseOut","_fnOnEachFeature","layer","on","mouseover","bind","mouseout","_createChoroplethMap","option","statJson","jsonCube","configSlice","zhMapSlice","createGeoSlice","_hmIdCluster","addTo","geoJSON","style","onEachFeature","gradeControl","ChoroplethMap","hmUrlGeoJson","getLeaflet","Promise","resolve","import","then","getGeoJson","url","fetch","response","draw","setView","tileLayer","attribution"],"mappings":"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","file":"ChoroplethMap.js","sourcesContent":["import JsonStatFn from './JsonStatFn';\r\nimport clusterMaker from '../../math/k-means';\r\n\r\n/*eslint-disable no-undef */\r\nif ( process.env.NODE_ENV !== 'development'){\r\n  System.config({\r\n    baseURL: \"/\"\r\n  });\r\n}\r\n/*eslint-enable no-undef */\r\n\r\nconst URL_LEAFLET = 'lib/leaflet.js'\r\n    , URL_EU_GEOJSON = 'data/geo/eu-stat.geo.json'\r\n    , NUMBER_OF_CLUSTERS = 6\r\n    , NUMBER_OF_ITERATION = 100\r\n    , _clusterColors = [\r\n          '#9ecae1', '#6baed6',\r\n          '#4292c6', '#2171b5',\r\n          '#08519c', '#08306b',\r\n          '#74c476'\r\n      ];\r\n\r\nconst _findFeature = function(arr=[], value){\r\n  let i=0, len=arr.length;\r\n  for(; i<len; i++){\r\n     const feature = arr[i]\r\n     if (feature.properties.id === value){\r\n       return feature;\r\n     }\r\n  }\r\n  return undefined;\r\n};\r\n\r\n\r\nconst _fnMergeGeoAndValue = function(sGeo, dGeo, json){\r\n  const points = [];\r\n  let minValue = Number.POSITIVE_INFINITY\r\n    , maxValue = Number.NEGATIVE_INFINITY;\r\n  sGeo.forEach((cell, index) => {\r\n    const feature = _findFeature(json.features, dGeo.id[index]);\r\n    if (feature && cell.value){\r\n      feature.properties.value = cell.value;\r\n\r\n      const point = [ cell.value, 0];\r\n      point.id = feature.properties.id;\r\n      points.push(point);\r\n\r\n      if (minValue>cell.value) { minValue = cell.value; }\r\n      if (maxValue<cell.value) { maxValue = cell.value; }\r\n    }\r\n  })\r\n  if (points.length === 0){\r\n    const point = [0, 0];\r\n    point.id = 'ID';\r\n    points.push(point);\r\n  }\r\n  return { minValue, maxValue, points };\r\n}\r\n\r\nconst _fnCreateClusters = function(points, n, iteration){\r\n  clusterMaker.k(n);\r\n  clusterMaker.iterations(iteration);\r\n  clusterMaker.data(points);\r\n  return clusterMaker.unarySortedClusters();\r\n};\r\n\r\nconst _fnCreateHmIdCluster = function(clusters){\r\n  const hm = {};\r\n  clusters.forEach((cluster, i) => {\r\n    for (const point of cluster.points){\r\n      hm[point.id] = i;\r\n    }\r\n  })\r\n  return hm;\r\n};\r\n\r\nconst _fnMergeGeoJsonAndClusters = function(geoJson, hmIdCluster, maxCluster){\r\n  geoJson.features.forEach((feature ) => {\r\n    const _properties = feature.properties\r\n        , _id = _properties.id\r\n    if (_id){\r\n      const _cluster = hmIdCluster[_id];\r\n      _properties.cluster = (typeof _cluster !== \"undefined\")\r\n             ? _cluster\r\n             : maxCluster;\r\n    } else {\r\n      _properties.cluster = maxCluster;\r\n    }\r\n  })\r\n};\r\n\r\n\r\nconst _fnStyle = function(feature){\r\n  return {\r\n    \"color\" : 'green',\r\n    \"fillColor\" : _clusterColors[feature.properties.cluster],\r\n    \"weight\": 1,\r\n    \"fillOpacity\": 0.7,\r\n    \"opacity\": 0.65\r\n  }\r\n}\r\n\r\n\r\nconst _fnCreateInfoControl = function(L){\r\n  const wgInfo = L.control();\r\n  wgInfo.onAdd = function(map){\r\n    this._div = L.DomUtil.create('div', 'control-info');\r\n    this.update();\r\n    return this._div;\r\n  }\r\n  wgInfo.update = function(props){\r\n    if (props){\r\n      const { label, value } = props\r\n\r\n      this._div.innerHTML = `<b>${label}</b><br><b>${value ? value : 'uknown'}</b>`\r\n    }\r\n  }\r\n  return wgInfo;\r\n}\r\n\r\nconst _fnCalcUpper = function(_clusters, index){\r\n  const _arrL = _clusters[index].points\r\n      , _arrH = _clusters[index+1].points\r\n      , _upLow = _arrL[_arrL.length-1][0]\r\n      , _upUp = ( _arrH[0] )\r\n           ? _arrH[0][0]\r\n           : _upLow;\r\n\r\n  return (_upLow + (_upUp - _upLow)/2);\r\n}\r\n\r\nconst _fnCreateItemInnerHtml = function(color, from, to){\r\n  return `<i style=\"opacity:0.7;background:${color};\">${from}&ndash;${to}</i><br/>`;\r\n}\r\n\r\nconst _fnCreateGradeControl = function(minValue, maxValue, _clusters, L){\r\n  const gradeContorl = L.control({ position: 'bottomleft' })\r\n  gradeContorl.onAdd = function(map){\r\n      const _div = L.DomUtil.create('div', 'control-grade');\r\n\r\n      let _upperPrev = Math.round(_fnCalcUpper(_clusters, 0));\r\n      _div.innerHTML = _fnCreateItemInnerHtml(_clusterColors[0], Math.floor(minValue), _upperPrev);\r\n\r\n      let i, _upperNext;\r\n      for(i=1; i<NUMBER_OF_CLUSTERS-1; i++){\r\n        _upperNext = Math.round(_fnCalcUpper(_clusters, i));\r\n        _div.innerHTML += _fnCreateItemInnerHtml(_clusterColors[i], _upperPrev, _upperNext);\r\n        _upperPrev = _upperNext;\r\n      }\r\n      _div.innerHTML += _fnCreateItemInnerHtml(_clusterColors[NUMBER_OF_CLUSTERS-1], _upperPrev, Math.round(maxValue));\r\n\r\n      return _div;\r\n    }\r\n\r\n  return gradeContorl;\r\n}\r\n\r\nconst _fnOnMouseOver = function(infoControl, e){\r\n  const _layer = e.target;\r\n  infoControl.update(_layer.feature.properties);\r\n}\r\nconst  _fnOnMouseOut = function(infoControl, e){\r\n  //infoControl.update()\r\n}\r\nconst _fnOnEachFeature = function(infoControl, feature, layer){\r\n   layer.on({\r\n     mouseover : _fnOnMouseOver.bind(null, infoControl),\r\n     mouseout : _fnOnMouseOut.bind(null, infoControl)\r\n   })\r\n}\r\n\r\nconst _createChoroplethMap = function(option){\r\n  const { jsonCube:statJson, geoJson, zhMapSlice:configSlice, map, L } = option\r\n       , { dGeo, sGeo } = JsonStatFn.createGeoSlice(statJson, configSlice)\r\n       , { minValue, maxValue, points } = _fnMergeGeoAndValue(sGeo, dGeo, geoJson)\r\n       , _clusters = _fnCreateClusters(points, NUMBER_OF_CLUSTERS, NUMBER_OF_ITERATION)\r\n       , _hmIdCluster = _fnCreateHmIdCluster(_clusters);\r\n\r\n  _fnMergeGeoJsonAndClusters(geoJson, _hmIdCluster, NUMBER_OF_CLUSTERS);\r\n\r\n  const infoControl = _fnCreateInfoControl(L);\r\n  infoControl.addTo(map);\r\n\r\n  L.geoJSON(geoJson, {\r\n     style : _fnStyle,\r\n     onEachFeature : _fnOnEachFeature.bind(null, infoControl)\r\n  }).addTo(map);\r\n\r\n\r\n  if ( points.length > 1) {\r\n    const gradeControl = _fnCreateGradeControl(minValue, maxValue, _clusters, L)\r\n    gradeControl.addTo(map);\r\n  }\r\n\r\n  return option;\r\n}\r\n\r\nconst ChoroplethMap = {\r\n  hmUrlGeoJson : {},\r\n  L : undefined,\r\n\r\n  getLeaflet(){\r\n    if (this.L){\r\n      return Promise.resolve(this.L);\r\n    } else {\r\n      return System.import(URL_LEAFLET)\r\n                .then( L => { return this.L = L; })\r\n    }\r\n  },\r\n\r\n  getGeoJson(url){\r\n     const geoJson = this.hmUrlGeoJson[url]\r\n     if (geoJson){\r\n       return Promise.resolve(geoJson);\r\n     } else {\r\n       return fetch(url)\r\n               .then( (response) => { return response.json(); })\r\n               .then( (geoJson ) => { return this.hmUrlGeoJson[url] = geoJson; })\r\n     }\r\n  },\r\n\r\n  draw(id, jsonCube, zhMapSlice){\r\n    return this.getLeaflet()\r\n             .then( (L) => {\r\n                const map = L.map(id).setView([58.00, 10.00], 3);\r\n\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                     id: 'addis',\r\n                     attribution: '&copy; <a  href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                }).addTo(map);\r\n                return { jsonCube, zhMapSlice, L, map };\r\n             })\r\n             .then ( (option) => {\r\n                 return this.getGeoJson(URL_EU_GEOJSON)\r\n                           .then( (geoJson) => {\r\n                              option.geoJson = geoJson;\r\n                              return option;\r\n                           });\r\n            })\r\n            .then( (option) => {\r\n                return Promise.resolve(_createChoroplethMap(option));\r\n            });\r\n  }\r\n};\r\n\r\nexport default ChoroplethMap\r\n"]}