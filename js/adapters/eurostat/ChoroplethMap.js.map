{"version":3,"sources":["../../../src/adapters/eurostat/ChoroplethMap.js"],"names":["URL_EU_GEOJSON","NUMBER_OF_CLUSTERS","NUMBER_OF_ITERATION","COLORS","_findFeature","features","value","Array","isArray","undefined","i","length","properties","id","_fnMergeGeoAndValue","sGeo","dGeo","json","points","minValue","Number","POSITIVE_INFINITY","maxValue","NEGATIVE_INFINITY","forEach","cell","index","feature","point","push","_fnCreateHmIdCluster","clusters","hm","cluster","_fnMergeGeoJsonAndClusters","geoJson","hmIdCluster","maxCluster","_properties","_id","_cluster","_fnStyle","_fnCreateEl","tag","className","cssText","el","document","createElement","style","_fnCreateInfoControl","L","mapId","wgInfo","control","onAdd","map","idEl","divEl","update","props","elInfo","MapFactory","crInfo","getElementById","updateCluster","color","from","to","elClusterInfo","crClusterInfo","_fnCalcUpper","arrL","arrH","upLow","upUp","_fnCreateRowEl","wg","_n","addEventListener","event","innerHTML","_fnCreateFooterEl","_fnCreateGradeControl","gradeContorl","position","_div","_upperPrev","_upperNext","mathFn","toFixed","appendChild","_fnOnMouseOver","infoControl","e","_layer","target","_fnOnMouseOut","_fnOnEachFeature","layer","on","mouseover","bind","mouseout","_fnAddGeoSeria","statJson","configSlice","time","seriaSlice","geo","seria","JsonStatFn","crGeoSeria","_createChoroplethMap","option","jsonCube","zhMapSlice","createGeoSlice","_points","_clusters","clusterMaker","crUnarySortedCluster","_hmIdCluster","addTo","geoJSON","onEachFeature","gradeControl","_crGeoJson","_geoJson","ChoroplethMap","hmUrlGeoJson","mapOption","doubleClickZoom","getLeaflet","Promise","resolve","then","getGeoJson","url","fetch","response","draw","setView","tileLayer"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\r\n\r\nimport JsonStatFn from './JsonStatFn'\r\nimport clusterMaker from '../../math/k-means'\r\nimport mathFn from '../../math/mathFn'\r\nimport safeGet from '../../utils/safeGet'\r\nimport merge from '../../utils/merge'\r\n\r\nimport MapFactory from '../../components/factories/MapFactory'\r\n\r\nconst URL_EU_GEOJSON = 'data/geo/eu-stat.geo.json'\r\n, NUMBER_OF_CLUSTERS = 6\r\n, NUMBER_OF_ITERATION = 100\r\n, COLORS = [\r\n   '#9ecae1', '#6baed6',\r\n   '#4292c6', '#2171b5',\r\n   '#08519c', '#08306b',\r\n   '#74c476'\r\n  ];\r\n\r\nconst _findFeature = function(features, value){\r\n  if (!Array.isArray(features)) {\r\n    return undefined;\r\n  }\r\n  for(let i=0; i<features.length; i++){\r\n    if (features[i] && features[i].properties \r\n      && features[i].properties.id === value){\r\n      return features[i];\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\n\r\nconst _fnMergeGeoAndValue = function(sGeo, dGeo, json){\r\n  const points = [];\r\n  let minValue = Number.POSITIVE_INFINITY\r\n    , maxValue = Number.NEGATIVE_INFINITY;\r\n  sGeo.forEach((cell, index) => {\r\n    const feature = _findFeature(json.features, dGeo.id[index])\r\n        , value = cell.value;\r\n    if (feature && value){\r\n      feature.properties.value = value;\r\n\r\n      const point = [ value, 0 ];\r\n      point.id = feature.properties.id;\r\n      points.push(point);\r\n\r\n      if (minValue>value) { minValue = value; }\r\n      if (maxValue<value) { maxValue = value; }\r\n    }\r\n  })\r\n  if (points.length === 0){\r\n    const point = [0, 0];\r\n    point.id = 'ID';\r\n    points.push(point);\r\n  }\r\n  return { minValue, maxValue, points };\r\n}\r\n\r\nconst _fnCreateHmIdCluster = function(clusters){\r\n  const hm = {};\r\n  clusters.forEach((cluster, i) => {\r\n    for (const point of cluster.points){\r\n      hm[point.id] = i;\r\n    }\r\n  })\r\n  return hm;\r\n};\r\n\r\nconst _fnMergeGeoJsonAndClusters = function(geoJson, hmIdCluster, maxCluster){\r\n  geoJson.features.forEach((feature ) => {\r\n    const _properties = feature.properties\r\n        , _id = _properties.id\r\n    if (_id){\r\n      const _cluster = hmIdCluster[_id];\r\n      _properties.cluster = (typeof _cluster !== \"undefined\")\r\n             ? _cluster\r\n             : maxCluster;\r\n    } else {\r\n      _properties.cluster = maxCluster;\r\n    }\r\n  })\r\n};\r\n\r\n\r\nconst _fnStyle = function(feature){\r\n  return {\r\n    \"color\" : 'green',\r\n    \"fillColor\" : COLORS[feature.properties.cluster],\r\n    \"weight\": 1,\r\n    \"fillOpacity\": 0.7,\r\n    \"opacity\": 0.65\r\n  }\r\n}\r\n\r\nconst _fnCreateEl = function(tag, className='', cssText='', id){\r\n  const el = document.createElement(tag)\r\n  el.className = className\r\n  el.style.cssText = cssText\r\n  if (id) {\r\n    el.id = id;\r\n  }\r\n  return el;\r\n}\r\n\r\n\r\nconst _fnCreateInfoControl = function(L, mapId){\r\n  const wgInfo = L.control();\r\n  wgInfo.onAdd = function(map){\r\n    this.idEl = mapId + '_info-control'\r\n    this.divEl = _fnCreateEl('div', 'control-info', '', this.idEl)\r\n    return this.divEl;\r\n  }\r\n  wgInfo.update = function(props){\r\n    if (props){\r\n      const elInfo = MapFactory.crInfo(props);\r\n      render(elInfo, document.getElementById(this.idEl))\r\n    }\r\n  }\r\n  wgInfo.updateCluster = function(cluster, color, from, to){\r\n    if (cluster){\r\n      const elClusterInfo = MapFactory.crClusterInfo({ cluster, color, from, to });\r\n      render(elClusterInfo, document.getElementById(this.idEl))\r\n    }\r\n  }\r\n  return wgInfo;\r\n}\r\n\r\nconst _fnCalcUpper = function(clusters, index, maxValue){\r\n  if (clusters.length - 1 === index) {\r\n    return maxValue;\r\n  }\r\n  const arrL = safeGet(clusters, `[${index}].points`, [[0]])\r\n      , arrH = safeGet(clusters, `[${index+1}].points`, [[0]])\r\n      , upLow = arrL[arrL.length-1][0]\r\n      , upUp = ( arrH[0] ) ? arrH[0][0] : upLow;\r\n\r\n  return (upLow + (upUp - upLow)/2);\r\n}\r\n\r\nconst _fnCreateRowEl = function(color, from, to, cluster, wg){\r\n  const _n = safeGet(cluster, `points.length`, 0)\r\n  const el = _fnCreateEl(\r\n     'p', '',\r\n     `opacity: 0.7; background: ${color}; padding: 5px 6px; cursor: pointer;`\r\n   )\r\n  el.addEventListener('click', function(event){\r\n    wg.updateCluster(cluster, color, from, to)\r\n  })\r\n  el.innerHTML = `<span>${from}&ndash;${to}<span>\r\n                  <span style=\"float: right; color: black; padding-left: 16px\">${_n}</span>`\r\n  return el;\r\n}\r\nconst _fnCreateFooterEl = function(){\r\n  const el = _fnCreateEl('div');\r\n  el.innerHTML = `<p style=\"opacity:0.65;background:green;padding: 3px 6px\">No Data</p>\r\n                  <p style=\"color:black;padding-top: 5px;\">Source: Eurostat</p>`\r\n  return el;\r\n}\r\n\r\nconst _fnCreateGradeControl = function(minValue, maxValue, clusters, L, wg){\r\n  const gradeContorl = L.control({ position: 'bottomleft' })\r\n  gradeContorl.onAdd = function(map){\r\n      const _div = _fnCreateEl('div', 'control-grade');\r\n\r\n      let _upperPrev, _upperNext;\r\n      _upperPrev = mathFn.toFixed(minValue)\r\n      clusters.forEach((cluster, index) => {\r\n        _upperNext = mathFn.toFixed(_fnCalcUpper(clusters, index, maxValue))\r\n        _div.appendChild( _fnCreateRowEl(\r\n            COLORS[index], _upperPrev, _upperNext, cluster, wg\r\n        ))\r\n        _upperPrev = _upperNext;\r\n      })\r\n      _div.appendChild(_fnCreateFooterEl())\r\n\r\n      return _div;\r\n    }\r\n\r\n  return gradeContorl;\r\n}\r\n\r\nconst _fnOnMouseOver = function(infoControl, e){\r\n  const _layer = e.target;\r\n  infoControl.update(_layer.feature.properties);\r\n}\r\nconst  _fnOnMouseOut = function(infoControl, e){\r\n  //infoControl.update()\r\n}\r\nconst _fnOnEachFeature = function(infoControl, feature, layer){\r\n   layer.on({\r\n     mouseover: _fnOnMouseOver.bind(null, infoControl),\r\n     mouseout: _fnOnMouseOut.bind(null, infoControl)\r\n   })\r\n}\r\n\r\nconst _fnAddGeoSeria = (points, statJson, configSlice) => {\r\n  /* eslint-disable no-unused-vars */\r\n  const { time, ...seriaSlice } = configSlice;\r\n  /* eslint-enable no-unused-vars */\r\n  return points.map(point => {\r\n    seriaSlice.geo = point.id\r\n    point.seria = JsonStatFn.crGeoSeria(statJson, seriaSlice)\r\n    return point;\r\n  });\r\n}\r\n\r\nconst _createChoroplethMap = function(option){\r\n  const { jsonCube:statJson, geoJson, zhMapSlice:configSlice, map, L, mapId } = option\r\n       , { dGeo, sGeo, time } = JsonStatFn.createGeoSlice(statJson, configSlice)\r\n       , { minValue, maxValue, points } = _fnMergeGeoAndValue(sGeo, dGeo, geoJson)\r\n       , _points = _fnAddGeoSeria(points, statJson, configSlice)\r\n       , _clusters = clusterMaker.crUnarySortedCluster(_points, NUMBER_OF_CLUSTERS, NUMBER_OF_ITERATION)\r\n       , _hmIdCluster = _fnCreateHmIdCluster(_clusters);\r\n\r\n  _fnMergeGeoJsonAndClusters(geoJson, _hmIdCluster, NUMBER_OF_CLUSTERS);\r\n  const infoControl = _fnCreateInfoControl(L, mapId);\r\n  infoControl.addTo(map);\r\n\r\n  L.geoJSON(geoJson, {\r\n     style : _fnStyle,\r\n     onEachFeature : _fnOnEachFeature.bind(null, infoControl)\r\n  }).addTo(map);\r\n\r\n\r\n  if ( _points.length > 1) {\r\n    const gradeControl = _fnCreateGradeControl(\r\n      minValue, maxValue, _clusters, L, infoControl\r\n    )\r\n    gradeControl.addTo(map);\r\n  }\r\n\r\n  option.time = time\r\n  return option;\r\n}\r\n\r\nconst _crGeoJson = (geoJson) => {\r\n  const _geoJson = merge(true, {}, geoJson)\r\n  _geoJson.features.forEach(feature => {\r\n     feature.properties.value = null\r\n  });\r\n  return _geoJson;\r\n}\r\n\r\nconst ChoroplethMap = {\r\n  hmUrlGeoJson: {},\r\n  L: undefined,\r\n  mapOption: {\r\n    doubleClickZoom: false\r\n  },\r\n\r\n  getLeaflet(){\r\n    if (this.L){\r\n      return Promise.resolve(this.L);\r\n    } else {\r\n      return import(\r\n        /* webpackChunkName: \"leaflet\" */\r\n        /* webpackMode: \"lazy\" */\r\n        'leaflet'\r\n      ).then(L => {\r\n        return this.L = L;\r\n      });\r\n    }\r\n  },\r\n\r\n  getGeoJson(url){\r\n     const geoJson = this.hmUrlGeoJson[url];\r\n     if (geoJson){\r\n       return Promise.resolve(_crGeoJson(geoJson));\r\n     } else {\r\n       return fetch(url)\r\n         .then(response => response.json())\r\n         .then(geoJson => this.hmUrlGeoJson[url] = geoJson)\r\n     }\r\n  },\r\n\r\n  draw(id, jsonCube, zhMapSlice){\r\n    return this.getLeaflet()\r\n       .then( (L) => {\r\n          const map = L.map(id, this.mapOption)\r\n            .setView([58.00, 10.00], 3);\r\n\r\n          /*\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n               id: 'addis',\r\n               attribution: '&copy; <a  href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n               errorTileUrl: ''\r\n          }).addTo(map);\r\n          */\r\n\r\n          L.tileLayer('', {\r\n               id: id + '_tile'\r\n          }).addTo(map);\r\n\r\n          return {\r\n            jsonCube, zhMapSlice,\r\n            L, map, mapId: id\r\n          };\r\n       })\r\n       .then(option => {\r\n          return this.getGeoJson(URL_EU_GEOJSON)\r\n           .then( (geoJson) => {\r\n              option.geoJson = geoJson;\r\n              return option;\r\n           });\r\n       })\r\n       .then(option => Promise.resolve(\r\n         _createChoroplethMap(option)\r\n       ));\r\n  }\r\n};\r\n\r\nexport default ChoroplethMap\r\n"],"file":"ChoroplethMap.js"}