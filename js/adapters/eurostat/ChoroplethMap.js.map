{"version":3,"sources":["../../../src/adapters/eurostat/ChoroplethMap.js"],"names":["URL_EU_GEOJSON","NUMBER_OF_CLUSTERS","NUMBER_OF_ITERATION","COLORS","_isArr","Array","isArray","_assign","Object","assign","_crElement","tag","document","createElement","_getElementById","id","getElementById","_crPromise","value","Promise","resolve","_findFeature","features","i","length","properties","_mergeGeoAndValue","sGeo","dGeo","json","points","minValue","Number","POSITIVE_INFINITY","maxValue","NEGATIVE_INFINITY","forEach","cell","index","feature","status","point","push","_crHmIdCluster","clusters","hm","cluster","_mergeGeoJsonAndClusters","geoJson","hmIdCluster","maxCluster","_properties","_id","_cluster","_crStyle","_crEl","className","cssText","el","style","_crInfoControl","L","mapId","control","onAdd","map","idEl","divEl","update","props","elInfo","MapFactory","crInfo","updateCluster","color","from","to","elClusterInfo","crClusterInfo","_calcUpper","arrL","arrH","upLow","upUp","_crRowEl","wg","_n","addEventListener","event","innerHTML","_crFooterEl","_crGradeControl","gradeContorl","position","_div","_upperPrev","_upperNext","appendChild","_onMouseOver","infoControl","e","_layer","target","_fnOnEachFeature","layer","on","mouseover","bind","_addGeoSeria","statJson","configSlice","time","seriaSlice","geo","seria","JsonStatFn","crGeoSeria","_crChoroplethMap","option","jsonCube","zhMapSlice","dfTime","createGeoSlice","_points","_clusters","clusterMaker","crUnarySortedCluster","_hmIdCluster","addTo","geoJSON","onEachFeature","gradeControl","_crGeoJson","_geoJson","ChoroplethMap","hmUrlGeoJson","undefined","mapOption","doubleClickZoom","zoomSnap","minZoom","maxZoom","getLeaflet","then","getGeoJson","url","fetch","response","draw","options","_loadCss","_draw","_isCss","reject","_linkEl","rel","href","onload","onerror","remove","head","childNodes","insertBefore","nextSibling","setView","tileLayer"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\r\n\r\nimport JsonStatFn from './JsonStatFn'\r\nimport clusterMaker from '../../math/k-means'\r\nimport { toFixed } from '../../math/mathFn'\r\nimport merge from '../../utils/merge'\r\n\r\nimport MapFactory from '../../components/factories/MapFactory'\r\n\r\nconst URL_EU_GEOJSON = 'data/geo/eu-stat.geo.json'\r\n, NUMBER_OF_CLUSTERS = 6\r\n, NUMBER_OF_ITERATION = 100\r\n, COLORS = [\r\n   '#9ecae1', '#6baed6',\r\n   '#4292c6', '#2171b5',\r\n   '#08519c', '#08306b',\r\n   '#74c476'\r\n  ];\r\n\r\nconst _isArr = Array.isArray\r\n, _assign = Object.assign\r\n, _crElement = tag => document.createElement(tag)\r\n, _getElementById = id => document.getElementById(id)\r\n, _crPromise = value => Promise.resolve(value);\r\n\r\nconst _findFeature = function(features, id){\r\n  if (!_isArr(features)) {\r\n    return;\r\n  }\r\n  for(let i=0; i<features.length; i++){\r\n    if (features?.[i]?.properties.id === id){\r\n      return features[i];\r\n    }\r\n  }\r\n  return;\r\n};\r\n\r\n\r\nconst _mergeGeoAndValue = function(sGeo, dGeo, json){\r\n  const points = [];\r\n  let minValue = Number.POSITIVE_INFINITY\r\n    , maxValue = Number.NEGATIVE_INFINITY;\r\n  sGeo.forEach((cell, index) => {\r\n    const feature = _findFeature(json.features, dGeo.id[index])\r\n    , { value, status } = cell;\r\n    if (feature && value){\r\n      feature.properties.value = value;\r\n\r\n      const point = [value, 0];\r\n      point.status = status\r\n      point.id = feature.properties.id;\r\n      points.push(point);\r\n\r\n      if (minValue>value) { minValue = value; }\r\n      if (maxValue<value) { maxValue = value; }\r\n    }\r\n  })\r\n  if (points.length === 0){\r\n    const point = [0, 0];\r\n    point.id = 'ID';\r\n    points.push(point);\r\n  }\r\n  return { minValue, maxValue, points };\r\n}\r\n\r\nconst _crHmIdCluster = function(clusters){\r\n  const hm = {};\r\n  clusters.forEach((cluster, i) => {\r\n    for (const point of cluster.points){\r\n      hm[point.id] = i;\r\n    }\r\n  })\r\n  return hm;\r\n};\r\n\r\nconst _mergeGeoJsonAndClusters = function(geoJson, hmIdCluster, maxCluster){\r\n  geoJson.features.forEach((feature ) => {\r\n    const _properties = feature.properties\r\n        , _id = _properties.id\r\n    if (_id){\r\n      const _cluster = hmIdCluster[_id];\r\n      _properties.cluster = (typeof _cluster !== \"undefined\")\r\n             ? _cluster\r\n             : maxCluster;\r\n    } else {\r\n      _properties.cluster = maxCluster;\r\n    }\r\n  })\r\n};\r\n\r\n\r\nconst _crStyle = (feature) => ({\r\n  \"color\": 'green',\r\n  \"fillColor\": COLORS[feature.properties.cluster],\r\n  \"weight\": 1,\r\n  \"fillOpacity\": 0.7,\r\n  \"opacity\": 0.65\r\n});\r\n\r\nconst _crEl = function(tag, className='', cssText='', id){\r\n  const el = _crElement(tag)\r\n  el.className = className\r\n  el.style.cssText = cssText\r\n  if (id) {\r\n    el.id = id;\r\n  }\r\n  return el;\r\n};\r\n\r\nconst _crInfoControl = (L, mapId) => _assign(L.control(), {\r\n  onAdd(map){\r\n    this.idEl = mapId + '_info-control'\r\n    this.divEl = _crEl('div', 'control-info', '', this.idEl)\r\n    return this.divEl;\r\n  },\r\n  update(props){\r\n    if (props){\r\n      const elInfo = MapFactory.crInfo(props);\r\n      render(elInfo, _getElementById(this.idEl))\r\n    }\r\n  },\r\n  updateCluster(cluster, color, from, to){\r\n    if (cluster){\r\n      const elClusterInfo = MapFactory.crClusterInfo({ cluster, color, from, to });\r\n      render(elClusterInfo, _getElementById(this.idEl))\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst _calcUpper = function(clusters, index, maxValue){\r\n  if (clusters.length - 1 === index) {\r\n    return maxValue;\r\n  }\r\n  const arrL = clusters?.[index]?.points ?? [[0]]\r\n      , arrH = clusters?.[index+1].points ?? [[0]]\r\n      , upLow = arrL[arrL.length-1][0]\r\n      , upUp = arrH[0] ? arrH[0][0] : upLow;\r\n\r\n  return (upLow + (upUp - upLow)/2);\r\n}\r\n\r\nconst _crRowEl = function(color, from, to, cluster, wg){\r\n  const _n = cluster?.points?.length ?? 0\r\n  , el = _crEl('p', '',\r\n     `opacity: 0.7; background: ${color}; padding: 5px 6px; cursor: pointer;`\r\n   )\r\n  el.addEventListener('click', function(event){\r\n    wg.updateCluster(cluster, color, from, to)\r\n  })\r\n  el.innerHTML = `<span>${from}&ndash;${to}<span>\r\n                  <span style=\"float: right; color: black; padding-left: 16px\">${_n}</span>`\r\n  return el;\r\n}\r\nconst _crFooterEl = function(){\r\n  const el = _crEl('div');\r\n  el.innerHTML = `<p style=\"opacity:0.65;background:green;padding: 3px 6px\">No Data</p>\r\n                  <p style=\"color:black;padding-top: 5px;\">Source: Eurostat</p>`\r\n  return el;\r\n}\r\n\r\nconst _crGradeControl = function(minValue, maxValue, clusters, L, wg){\r\n  const gradeContorl = L.control({ position: 'bottomleft' })\r\n  gradeContorl.onAdd = function(map){\r\n      const _div = _crEl('div', 'control-grade');\r\n\r\n      let _upperPrev, _upperNext;\r\n      _upperPrev = toFixed(minValue)\r\n      clusters.forEach((cluster, index) => {\r\n        _upperNext = toFixed(_calcUpper(clusters, index, maxValue))\r\n        _div.appendChild( _crRowEl(\r\n            COLORS[index], _upperPrev, _upperNext, cluster, wg\r\n        ))\r\n        _upperPrev = _upperNext;\r\n      })\r\n      _div.appendChild(_crFooterEl())\r\n\r\n      return _div;\r\n    }\r\n\r\n  return gradeContorl;\r\n}\r\n\r\nconst _onMouseOver = function(infoControl, e){\r\n  const _layer = e.target;\r\n  infoControl.update(_layer.feature.properties);\r\n}\r\n/*\r\nconst  _onMouseOut = function(infoControl, e){\r\n  //infoControl.update()\r\n}\r\n*/\r\nconst _fnOnEachFeature = function(infoControl, feature, layer){\r\n   layer.on({\r\n     mouseover: _onMouseOver.bind(null, infoControl),\r\n     //mouseout: _onMouseOut.bind(null, infoControl)\r\n   })\r\n}\r\n\r\nconst _addGeoSeria = (points, statJson, configSlice) => {\r\n  /* eslint-disable no-unused-vars */\r\n  const { time, ...seriaSlice } = configSlice;\r\n  /* eslint-enable no-unused-vars */\r\n  return points.map(point => {\r\n    seriaSlice.geo = point.id\r\n    point.seria = JsonStatFn.crGeoSeria(statJson, seriaSlice)\r\n    return point;\r\n  });\r\n}\r\n\r\nconst _crChoroplethMap = function(option){\r\n  const {\r\n    jsonCube:statJson, geoJson, zhMapSlice:configSlice,\r\n    map, L, mapId, time:dfTime\r\n  } = option\r\n  , { dGeo, sGeo, time } = JsonStatFn.createGeoSlice(statJson, configSlice, dfTime)\r\n  , { minValue, maxValue, points } = _mergeGeoAndValue(sGeo, dGeo, geoJson)\r\n  , _points = _addGeoSeria(points, statJson, configSlice)\r\n  , _clusters = clusterMaker.crUnarySortedCluster(_points, NUMBER_OF_CLUSTERS, NUMBER_OF_ITERATION)\r\n  , _hmIdCluster = _crHmIdCluster(_clusters);\r\n\r\n  _mergeGeoJsonAndClusters(geoJson, _hmIdCluster, NUMBER_OF_CLUSTERS);\r\n  const infoControl = _crInfoControl(L, mapId);\r\n  infoControl.addTo(map);\r\n\r\n  L.geoJSON(geoJson, {\r\n     style : _crStyle,\r\n     onEachFeature : _fnOnEachFeature.bind(null, infoControl)\r\n  }).addTo(map);\r\n\r\n\r\n  if ( _points.length > 1) {\r\n    const gradeControl = _crGradeControl(\r\n      minValue, maxValue, _clusters, L, infoControl\r\n    )\r\n    gradeControl.addTo(map);\r\n  }\r\n\r\n  option.time = time\r\n  return option;\r\n}\r\n\r\nconst _crGeoJson = (geoJson) => {\r\n  const _geoJson = merge(true, {}, geoJson)\r\n  _geoJson.features.forEach(feature => {\r\n     feature.properties.value = null\r\n  });\r\n  return _geoJson;\r\n}\r\n\r\nconst ChoroplethMap = {\r\n  hmUrlGeoJson: {},\r\n  L: undefined,\r\n  mapOption: {\r\n    doubleClickZoom: false,\r\n    zoomSnap: 0.5,\r\n    minZoom: 1,\r\n    maxZoom: 4\r\n  },\r\n\r\n  getLeaflet(){\r\n    if (this.L){\r\n      return _crPromise(this.L);\r\n    } else {\r\n      return import(\r\n        /* webpackChunkName: \"leaflet\" */\r\n        /* webpackMode: \"lazy\" */\r\n        'leaflet'\r\n      ).then(L => {\r\n        return this.L = L;\r\n      });\r\n    }\r\n  },\r\n\r\n  getGeoJson(url){\r\n     const geoJson = this.hmUrlGeoJson[url];\r\n     if (geoJson){\r\n       return _crPromise(_crGeoJson(geoJson));\r\n     } else {\r\n       return fetch(url)\r\n         .then(response => response.json())\r\n         .then(geoJson => this.hmUrlGeoJson[url] = geoJson)\r\n     }\r\n  },\r\n\r\n\r\n  draw(options){\r\n    return this._loadCss()\r\n      .then(() => this._draw(options));\r\n  },\r\n\r\n  _loadCss(){\r\n    return this._isCss\r\n      ? _crPromise()\r\n      : new Promise((resolve, reject) => {\r\n          const _linkEl = _assign(_crElement(\"link\"), {\r\n            rel: \"stylesheet\",\r\n            href: \"css/leaflet.css\",\r\n            onload: () => {\r\n              this._isCss = true\r\n              resolve()\r\n            },\r\n            onerror: () => {\r\n              _linkEl.remove()\r\n              reject()\r\n            }\r\n          })\r\n          // Insert it at the end of the head in a legacy-friendly manner\r\n          const { head } = document\r\n          , { childNodes } = head;\r\n          head.insertBefore(_linkEl, childNodes[childNodes.length - 1].nextSibling);\r\n      })\r\n  },\r\n\r\n  _draw({ id, jsonCube, zhMapSlice, time }){\r\n    return this.getLeaflet()\r\n       .then( (L) => {\r\n          const map = L.map(id, this.mapOption)\r\n            .setView([58.00, 10.00], 3);\r\n\r\n          /*\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n               id: 'addis',\r\n               attribution: '&copy; <a  href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n               errorTileUrl: ''\r\n          }).addTo(map);\r\n          */\r\n\r\n          L.tileLayer('', {\r\n               id: id + '_tile'\r\n          }).addTo(map);\r\n\r\n          return {\r\n            jsonCube, zhMapSlice, time,\r\n            L, map, mapId: id\r\n          };\r\n       })\r\n       .then(option => {\r\n          return this.getGeoJson(URL_EU_GEOJSON)\r\n           .then(geoJson => {\r\n              option.geoJson = geoJson;\r\n              return option;\r\n           });\r\n       })\r\n       .then(option => _crPromise(\r\n         _crChoroplethMap(option)\r\n       ));\r\n  }\r\n};\r\n\r\nexport default ChoroplethMap\r\n"],"file":"ChoroplethMap.js"}