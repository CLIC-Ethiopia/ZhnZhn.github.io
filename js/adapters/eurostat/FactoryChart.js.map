{"version":3,"sources":["../../../src/adapters/eurostat/FactoryChart.js"],"names":["DF_COLOR","_assign","Object","assign","BAR_CHART","type","marginTop","height","DATA_LABELS","enabled","color","crop","overflow","zIndex","style","fontSize","SCATTER_CHART","inverted","_crColumnConfig","seriaColor","chart","panKey","undefined","panning","title","text","subtitle","xAxis","categories","crosshair","gridLineWidth","yAxis","min","opposite","lineWidth","tickLength","labels","x","gridLineDashStyle","legend","align","verticalAlign","layout","y","plotOptions","column","minPointLength","pointPlacement","pointWidth","pointPadding","borderWidth","groupPadding","shadow","bar","series","name","_crBarConfig","option","config","seriaType","dataLabels","_crDotConfig","marker","symbol","radius","_r","COLUMN_SET","BAR_SET","BAR_WITH_LABELS","DOT_SET","FactoryChart","createConfig","_crConfig"],"mappings":"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","sourcesContent":["\r\nconst DF_COLOR = '#7cb5ec';\r\nconst _assign = Object.assign;\r\n\r\nconst BAR_CHART = {\r\n  type: 'bar',\r\n  marginTop: 75,\r\n  height: 600\r\n};\r\nconst DATA_LABELS = {\r\n  enabled: true,\r\n  color: 'black',\r\n  crop: false,\r\n  overflow: 'allow',\r\n  zIndex: 10,\r\n  style: {\r\n    fontSize: '14px'\r\n  }\r\n};\r\nconst SCATTER_CHART = {\r\n  type: 'scatter',\r\n  inverted: true,\r\n  marginTop: 75,\r\n  height: 600,\r\n};\r\n\r\nconst _crColumnConfig = ({ seriaColor=DF_COLOR }) => ({\r\n  chart: {\r\n    type: 'column',\r\n    marginTop: 60,\r\n    panKey: undefined,\r\n    panning: false\r\n  },\r\n  title: {\r\n    text: ''\r\n  },\r\n  subtitle: {\r\n    text: ''\r\n  },\r\n  xAxis: {\r\n    categories: [],\r\n    type: \"category\",\r\n    crosshair: true,\r\n    gridLineWidth : 0\r\n  },\r\n  yAxis: {\r\n    min: 0,\r\n    opposite: true,\r\n    lineWidth: 0,\r\n    tickLength: 0,\r\n    labels: {\r\n      x: 3\r\n    },\r\n    title: {\r\n      text: ''\r\n    },\r\n    gridLineDashStyle: 'Solid',\r\n    gridLineWidth: 0.2\r\n  },\r\n  legend : {\r\n    enabled : true,\r\n    align: 'right',\r\n    verticalAlign: 'top',\r\n    layout: 'horizontal',\r\n    x:  0,\r\n    y: -42\r\n  },\r\n  plotOptions: {\r\n    column : {\r\n      color: seriaColor,\r\n      minPointLength : 5,\r\n      pointPlacement: 0,\r\n      pointWidth : 6,\r\n      pointPadding : 0,\r\n      borderWidth : 0,\r\n      groupPadding : 0.2,\r\n      shadow : false\r\n    },\r\n    bar : {\r\n      color: seriaColor,\r\n      minPointLength : 5,\r\n      pointWidth : 4,\r\n      pointPadding : 0,\r\n      borderWidth : 0,\r\n      groupPadding : 0.2,\r\n      shadow : false\r\n    }\r\n  },\r\n  series: [{ name: 'Column'}]\r\n});\r\nconst _crBarConfig = (option) => {\r\n  const config = _crColumnConfig(option);\r\n  _assign(config.chart, BAR_CHART )\r\n  if (option.seriaType === 'BAR_WITH_LABELS') {\r\n    config.plotOptions.bar.dataLabels = {...DATA_LABELS}\r\n  }\r\n  return config;\r\n};\r\nconst _crDotConfig = (option) => {\r\n  const { seriaColor } = option;\r\n  const config = _crColumnConfig(option);\r\n  _assign(config.chart, SCATTER_CHART)\r\n  /*\r\n  _assign(config.xAxis, {\r\n    gridLineDashStyle: \"Dot\",\r\n    gridLineWidth: 1\r\n  })\r\n  */\r\n  _assign(config.series[0], {\r\n    //color: hexToRgba(seriaColor),\r\n    color: seriaColor,\r\n    marker: {\r\n      symbol: 'circle',\r\n      radius: 5\r\n    }\r\n  })\r\n  return config;\r\n};\r\n\r\nconst _r = {\r\n  COLUMN_SET: _crColumnConfig,\r\n  BAR_SET: _crBarConfig,\r\n  BAR_WITH_LABELS: _crBarConfig,\r\n  DOT_SET: _crDotConfig\r\n};\r\n\r\nconst FactoryChart = {\r\n  createConfig: (option={}) => {\r\n    const _crConfig = _r[option.seriaType];\r\n    return _crConfig\r\n      ? _crConfig(option)\r\n      : {};\r\n  }\r\n};\r\n\r\nexport default FactoryChart\r\n"],"file":"FactoryChart.js"}