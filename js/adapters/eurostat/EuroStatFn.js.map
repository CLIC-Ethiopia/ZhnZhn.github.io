{"version":3,"sources":["../../../src/adapters/eurostat/EuroStatFn.js"],"names":["setPlotLinesMinMax","ChartFn","compareByDate","AdapterFn","valueMoving","findMinY","joinBy","crItemConf","COLOR","EU","EA","NOT_EU_MEMBER","C","EU_CODES","EA_CODES","EU_MEMBER","_crDescr","extension","_ext","datasetId","subTitle","_id","_sub","_d","description","trim","_colorSeriaIn","config","codes","color","data","series","forEach","p","indexOf","c","_colorSeriaNotIn","_isLineSeria","type","_filterZeroCategories","categories","_data","_arrC","y","push","length","filter","_isYearOrMapFrequencyKey","key","mapFrequency","_crPoint","x","status","_setZoomMinMaxTo","isNotZoomToMinMax","min","yAxis","zhNotZoomToMinMax","_setHeightIfBarTo","seriaType","height","chart","_height","EuroStatFn","createData","json","crTimeIndexAndValue","timeIndex","value","max","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","Object","keys","_valueIndex","convertToUTC","sort","toPointArr","map","replace","setDataAndInfo","option","title","subtitle","Chart","setDefaultTitle","zhConfig","createZhConfig","info","createDatasetInfo","setInfo","setCategories","tooltip","Tooltip","category","time","xAxis","name","fTooltip","itemCaption","crItemCaption","itemTime","colorSeries","addToCategoryConfig","isFilterZero","_r","setTooltip","crCategoryTooltip","categorySimple","str","_period","toUpperCase","arrDate","split","_month","parseInt","_day","Date","UTC","_arrS","setLineExtrems","plotLines","calcMinY","maxPoint","minPoint","crDataSource","dfTable","dataSource","crLinkConf","href","_href","linkFn","item","dataset","url","itemConf","_itemKey","id","label","updated","toDate","fromDate","dimension","index"],"mappings":"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","sourcesContent":["import Chart from '../../charts/Chart';\r\nimport ChartFn from '../../charts/ChartFn';\r\nimport Tooltip from '../../charts/Tooltip';\r\n\r\nimport AdapterFn from '../AdapterFn';\r\n\r\nconst { setPlotLinesMinMax } = ChartFn;\r\n\r\nconst {\r\n  compareByDate,\r\n  valueMoving,\r\n  findMinY,\r\n  joinBy,\r\n  crItemConf\r\n} = AdapterFn;\r\n\r\nconst COLOR = {\r\n  EU: \"#0088ff\",\r\n  EA: \"#ff5800\",\r\n  NOT_EU_MEMBER: '#8085e9',\r\n};\r\nconst C = {\r\n  EU_CODES: [\"EU\", \"EU28\", \"EU27_2020\", \"G20\", \"Group of Twenty\" ],\r\n  EA_CODES: [\"EA\", \"EA11\", \"EA12\", \"EA13\", \"EA15\", \"EA16\", \"EA17\", \"EA18\", \"EA19\"],\r\n  EU_MEMBER: [\r\n    \"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\",\r\n    \"Czechia\", \"Denmark\", \"Estonia\", \"Finland\", \"France\",\r\n    \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\",\r\n    \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\",\r\n    \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\",\r\n    \"Spain\", \"Sweden\"\r\n  ]\r\n};\r\n\r\nconst _crDescr = (extension) => {\r\n  const _ext = extension || {}\r\n    , { datasetId, subTitle } = _ext\r\n    , _id = `DatasetId: ${datasetId}`\r\n    , _sub = subTitle ? `Metric: ${subTitle}` : ''\r\n    , _d = _ext.description || '';\r\n   return (`${_d} ${_id} ${_sub}`).trim();\r\n};\r\n\r\nconst _colorSeriaIn = (config, codes, color) => {\r\n  const data = config.series[0].data;\r\n  data.forEach(p => {\r\n     if (codes.indexOf(p.c) !== -1 && !p.color) {\r\n       p.color = color\r\n     }\r\n  })\r\n};\r\nconst _colorSeriaNotIn = (config, codes, color) => {\r\n  const data = config.series[0].data;\r\n  data.forEach(p => {\r\n     if (codes.indexOf(p.c) === -1 && !p.color) {\r\n       p.color = color\r\n     }\r\n  })\r\n};\r\n\r\n\r\nconst _isLineSeria = type => type\r\n  && (type === 'AREA' || type === 'SPLINE');\r\n\r\nconst _filterZeroCategories = (data, categories) => {\r\n  const _data = [], _arrC = [];\r\n  data.forEach(p => {\r\n    if (p.y !== 0) { _data.push(p) }\r\n    else { _arrC.push(p.c) }\r\n  })\r\n  if (_arrC.length !== 0) {\r\n    categories = categories\r\n       .filter(c => _arrC.indexOf(c) === -1)\r\n  }\r\n  return { data: _data, categories };\r\n};\r\n\r\nconst _isYearOrMapFrequencyKey = (key, mapFrequency) => !mapFrequency\r\n  || mapFrequency === \"Y\"\r\n  || key.indexOf(mapFrequency) !== -1;\r\n\r\nconst _crPoint = (x, y, status) => status\r\n  && status !== ':' && status.length === 1\r\n   ? [ x, y, status ]\r\n   : [ x, y ];\r\n\r\nconst _setZoomMinMaxTo = (config, isNotZoomToMinMax, min) => {\r\n  if (isNotZoomToMinMax) {\r\n    config.yAxis.zhNotZoomToMinMax = true\r\n  } else {\r\n    config.yAxis.min = min\r\n  }\r\n}\r\nconst _setHeightIfBarTo = (config, seriaType, categories) => {\r\n  if (seriaType === 'BAR_SET' || seriaType === 'BAR_WITH_LABELS'){\r\n    const { height } = config.chart\r\n    , _height = 100 + 17*categories.length;\r\n    config.chart.height = _height < height\r\n       ? _height : height\r\n  }\r\n};\r\n\r\nconst EuroStatFn = {\r\n   joinBy,\r\n   findMinY,\r\n\r\n  createData(json, mapFrequency){\r\n    const { timeIndex, value, status } = EuroStatFn.crTimeIndexAndValue(json)\r\n    , data = [];\r\n    let max = Number.NEGATIVE_INFINITY\r\n      , min = Number.POSITIVE_INFINITY;\r\n    Object.keys(timeIndex).forEach(key => {\r\n       if (_isYearOrMapFrequencyKey(key, mapFrequency)) {\r\n         const _valueIndex = timeIndex[key]\r\n         , y = value[_valueIndex];\r\n         if (y != null){\r\n           data.push(_crPoint(\r\n             EuroStatFn.convertToUTC(key),\r\n             y, status[_valueIndex]\r\n           ));\r\n           if (y>=max) { max = y; }\r\n           if (y<=min) { min = y; }\r\n         }\r\n       }\r\n    })\r\n    return {\r\n      data: data.sort(compareByDate),\r\n      max, min\r\n    };\r\n  },\r\n\r\n  toPointArr(json){\r\n    const { timeIndex, value, status } = EuroStatFn.crTimeIndexAndValue(json)\r\n    , data = [];\r\n    Object.keys(timeIndex).map((key) => {\r\n       const _valueIndex = timeIndex[key]\r\n       , y = value[_valueIndex];\r\n       if ( y != null ){\r\n         data.push(_crPoint(\r\n           key.replace('M', '-'),\r\n           y, status[_valueIndex]\r\n         ));\r\n       }\r\n    })\r\n\r\n    return data;\r\n  },\r\n\r\n  setDataAndInfo({ config, data, json, option }){\r\n    const { title, subtitle, seriaType } = option;\r\n    Chart.setDefaultTitle(config, title, subtitle);\r\n\r\n    config.zhConfig = EuroStatFn.createZhConfig(json, option);\r\n    config.info = EuroStatFn.createDatasetInfo(json);\r\n\r\n    if (_isLineSeria(seriaType)){\r\n      config.valueMoving = valueMoving(data)\r\n    }\r\n\r\n    config.series[0].data = data;\r\n  },\r\n\r\n  setInfo({ config, json, option }){\r\n    config.info = EuroStatFn.createDatasetInfo(json);\r\n  },\r\n\r\n  setCategories({\r\n    config, categories, min,\r\n    tooltip=Tooltip.category,\r\n    option\r\n  }){\r\n    const { time, isNotZoomToMinMax, seriaType } = option;\r\n    config.xAxis.categories = categories\r\n    _setZoomMinMaxTo(config, isNotZoomToMinMax, min)\r\n\r\n    config.series[0].name = time\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n\r\n    config.zhConfig.itemCaption = EuroStatFn.crItemCaption(option)\r\n    config.zhConfig.itemTime = time\r\n\r\n    _setHeightIfBarTo(config, seriaType, categories)\r\n  },\r\n\r\n  colorSeries(config){\r\n    _colorSeriaIn(config, C.EU_CODES, COLOR.EU)\r\n    _colorSeriaIn(config, C.EA_CODES, COLOR.EA)\r\n    _colorSeriaNotIn(config, C.EU_MEMBER, COLOR.NOT_EU_MEMBER)\r\n  },\r\n\r\n  addToCategoryConfig(config, { json, option, data, categories, min }){\r\n    if (option.isFilterZero) {\r\n      const _r = _filterZeroCategories(data, categories);\r\n      data = _r.data\r\n      categories = _r.categories\r\n    }\r\n    EuroStatFn.setDataAndInfo({ config, data, json, option })\r\n    EuroStatFn.setCategories({ config, categories, min, option })\r\n    EuroStatFn.colorSeries(config)\r\n  },\r\n\r\n  setTooltip({ config, tooltip }) {\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n  },\r\n\r\n  crCategoryTooltip: () => {\r\n    return Chart.fTooltip(Tooltip.categorySimple);\r\n  },\r\n\r\n\r\n  convertToUTC(str){\r\n    const _period = (str && str[4] || '').toUpperCase();\r\n    if (_period === 'M') {\r\n      const arrDate = str.split('M')\r\n      , _month = parseInt(arrDate[1], 10)-1\r\n      , _day = (_month === 1) ? 28 : 30;\r\n      return Date.UTC(arrDate[0], _month, _day);\r\n    }\r\n    if (_period === 'Q'){\r\n      const arrDate = str.split('Q')\r\n      , _month = (parseInt(arrDate[1], 10)*3) - 1;\r\n      return Date.UTC(arrDate[0], _month, 30);\r\n    }\r\n    if (_period === 'S') {\r\n      const _arrS = str.split('S');\r\n      return _arrS[1] === '1'\r\n        ? Date.UTC(_arrS[0], 5, 30)\r\n        : Date.UTC(_arrS[0], 11, 31);\r\n    }\r\n    return parseInt(str, 10) > 1970\r\n      ? Date.UTC(str, 11, 31)\r\n      : Date.UTC(1970, 11, 31);\r\n  },\r\n\r\n  setLineExtrems({ config, max, min, isNotZoomToMinMax }){\r\n    const plotLines = config.yAxis.plotLines;\r\n    setPlotLinesMinMax({ plotLines, min, max })\r\n\r\n    if (!isNotZoomToMinMax){\r\n      config.yAxis.min = Chart.calcMinY({\r\n        maxPoint: max,\r\n        minPoint: min\r\n      });\r\n    }\r\n  },\r\n\r\n  crItemCaption: ({ title }) => joinBy(\": \", \"EU\", title),\r\n\r\n  crDataSource: ({ dfTable, dataSource }) => dfTable\r\n    ? `${dataSource} (${dfTable})`\r\n    : dataSource || \"Eurostat\",\r\n\r\n  crLinkConf: (json, { dfTable }) => {\r\n    const { href } = json\r\n    , _href = href && href.replace\r\n        ? href.replace('http', 'https')\r\n        : href;\r\n    return {\r\n      linkFn: 'ES',\r\n      item: {\r\n        dataset: dfTable,\r\n        href: _href\r\n      }\r\n    };\r\n  },\r\n\r\n  createZhConfig(json, option){\r\n    const {\r\n      key, itemCaption,\r\n      url\r\n    } = option\r\n    , dataSource = EuroStatFn.crDataSource(option)\r\n    , itemConf = url\r\n        ? {\r\n            _itemKey: key,\r\n            ...crItemConf(option),\r\n            dataSource\r\n          }\r\n        : void 0;\r\n\r\n    return {\r\n      id: key, key, itemCaption,\r\n      itemConf,\r\n      dataSource,\r\n      ...EuroStatFn.crLinkConf(json, option)\r\n    };\r\n  },\r\n\r\n  createDatasetInfo({ label, updated, extension }){\r\n    return {\r\n      name: label,\r\n      description: _crDescr(extension),\r\n      toDate: updated,\r\n      fromDate: '1996-01-30'\r\n    };\r\n  },\r\n\r\n  crTimeIndexAndValue: (json) => {\r\n    const { dimension={}, value=[], status={} } = json\r\n        , { time={} } = dimension\r\n        , { category={} } = time\r\n        , { index:timeIndex=0 } = category;\r\n    return { timeIndex, value, status };\r\n  }\r\n}\r\n\r\nexport default EuroStatFn\r\n"],"file":"EuroStatFn.js"}