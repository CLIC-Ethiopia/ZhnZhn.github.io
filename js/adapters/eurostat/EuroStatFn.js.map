{"version":3,"sources":["../../../src/adapters/eurostat/EuroStatFn.js"],"names":["setPlotLinesMinMax","ChartFn","valueMoving","AdapterFn","findMinY","appendWithColon","DF_SLICE_TITLE","COLOR","EU","EA","NOT_EU_MEMBER","C","EU_CODES","EA_CODES","EU_MEMBER","_crDescr","extension","_ext","datasetId","subTitle","_id","_sub","_d","description","trim","_colorSeriaIn","config","codes","color","data","series","forEach","p","indexOf","c","_colorSeriaNotIn","_isDataDes","d","length","_isLineSeria","type","_filterZeroCategories","categories","_data","_arrC","y","push","filter","EuroStatFn","createData","timeIndex","value","max","Number","NEGATIVE_INFINITY","min","POSITIVE_INFINITY","Object","keys","map","key","pointValue","convertToUTC","reverse","toPointArr","replace","setDataAndInfo","json","option","title","subtitle","seriaType","Chart","setDefaultTitle","zhConfig","createZhConfig","info","createDatasetInfo","zhSeriaId","setInfo","setCategories","tooltip","Tooltip","category","time","isNotZoomToMinMax","xAxis","yAxis","zhNotZoomToMinMax","name","fTooltip","itemCaption","crItemCaption","itemTime","colorSeries","addToCategoryConfig","isFilterZero","_r","setTooltip","crCategoryTooltip","categorySimple","str","arrDate","split","_month","parseInt","_day","Date","UTC","_arrS","setLineExtrems","plotLines","calcMinY","maxPoint","minPoint","dfSliceTitle","href","_href","dataSource","dfTable","_dataSource","id","isWithoutAdd","linkFn","item","dataset","label","updated","toDate","fromDate","crTimeIndexAndValue","dimension","index"],"mappings":"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","sourcesContent":["import Chart from '../../charts/Chart';\r\nimport ChartFn from '../../charts/ChartFn';\r\nimport Tooltip from '../../charts/Tooltip';\r\n\r\nimport AdapterFn from '../AdapterFn';\r\n\r\nconst { setPlotLinesMinMax } = ChartFn;\r\n\r\nconst {\r\n  valueMoving, findMinY,\r\n  appendWithColon\r\n} = AdapterFn;\r\n\r\nconst DF_SLICE_TITLE = 'EU';\r\n\r\nconst COLOR = {\r\n  EU: \"#0088ff\",\r\n  EA: \"#ff5800\",\r\n  NOT_EU_MEMBER: '#8085e9',\r\n};\r\nconst C = {\r\n  EU_CODES: [\"EU\", \"EU15\", \"EU25\", \"EU27\", \"EU28\", \"EU27_2019\", \"G20\", \"Group of Twenty\" ],\r\n  EA_CODES: [\"EA\", \"EA11\", \"EA12\", \"EA13\", \"EA15\", \"EA16\", \"EA17\", \"EA18\", \"EA19\"],\r\n  EU_MEMBER: [\r\n    \"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\",\r\n    \"Czechia\", \"Denmark\", \"Estonia\", \"Finland\", \"France\",\r\n    \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\",\r\n    \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\",\r\n    \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\",\r\n    \"Spain\", \"Sweden\", \"United Kingdom\"\r\n  ]\r\n};\r\n\r\nconst _crDescr = (extension) => {\r\n  const _ext = extension || {}\r\n    , { datasetId, subTitle } = _ext\r\n    , _id = `DatasetId: ${datasetId}`\r\n    , _sub = subTitle ? `Metric: ${subTitle}` : ''\r\n    , _d = _ext.description || '';\r\n   return (`${_d} ${_id} ${_sub}`).trim();\r\n};\r\n\r\nconst _colorSeriaIn = (config, codes, color) => {\r\n  const data = config.series[0].data;\r\n  data.forEach(p => {\r\n     if (codes.indexOf(p.c) !== -1 && !p.color) {\r\n       p.color = color\r\n     }\r\n  })\r\n};\r\nconst _colorSeriaNotIn = (config, codes, color) => {\r\n  const data = config.series[0].data;\r\n  data.forEach(p => {\r\n     if (codes.indexOf(p.c) === -1 && !p.color) {\r\n       p.color = color\r\n     }\r\n  })\r\n};\r\n\r\nconst _isDataDes = d => d.length>0\r\n  && d[0][0]>d[d.length-1][0];\r\n\r\nconst _isLineSeria = type => type\r\n  && (type === 'AREA' || type === 'SPLINE');\r\n\r\nconst _filterZeroCategories = (data, categories) => {\r\n  const _data = [], _arrC = [];\r\n  data.forEach(p => {\r\n    if (p.y !== 0) { _data.push(p) }\r\n    else { _arrC.push(p.c) }\r\n  })\r\n  if (_arrC.length !== 0) {\r\n    categories = categories\r\n       .filter(c => _arrC.indexOf(c) === -1)\r\n  }\r\n  return { data: _data, categories };\r\n};\r\n\r\nconst EuroStatFn = {\r\n\r\n  createData(timeIndex, value){\r\n    const data = [];\r\n    let max = Number.NEGATIVE_INFINITY\r\n      , min = Number.POSITIVE_INFINITY;\r\n\r\n    Object.keys(timeIndex).map((key) => {\r\n       const pointValue = value[timeIndex[key]];\r\n       if ( !(pointValue == null) ){\r\n         data.push([\r\n            this.convertToUTC(key),\r\n            pointValue\r\n          ]);\r\n\r\n          if (pointValue>=max) { max = pointValue; }\r\n          if (pointValue<=min) { min = pointValue; }\r\n       }\r\n    })\r\n\r\n    return {\r\n      data: _isDataDes(data) ? data.reverse() : data,\r\n      max, min\r\n    };\r\n  },\r\n\r\n  toPointArr(timeIndex, value){\r\n    const data = [];\r\n    Object.keys(timeIndex).map((key) => {\r\n       const pointValue = value[timeIndex[key]];\r\n       if ( !(pointValue == null) ){\r\n         data.push([\r\n            key.replace('M', '-'),\r\n            pointValue\r\n          ]);\r\n       }\r\n    })\r\n\r\n    return data;\r\n  },\r\n\r\n  setDataAndInfo({ config, data, json, option }){\r\n    const { title, subtitle, seriaType } = option;\r\n    Chart.setDefaultTitle(config, title, subtitle);\r\n\r\n    config.zhConfig = this.createZhConfig(json, option);\r\n    config.info = this.createDatasetInfo(json);\r\n\r\n    if (_isLineSeria(seriaType)){\r\n      config.valueMoving = valueMoving(data)\r\n    }\r\n\r\n    config.series[0].zhSeriaId = option.key;\r\n    config.series[0].data = data;\r\n  },\r\n\r\n  setInfo({ config, json, option }){\r\n    config.info = this.createDatasetInfo(json);\r\n  },\r\n\r\n  setCategories({\r\n    config, categories, min,\r\n    tooltip=Tooltip.category,\r\n    option\r\n  }){\r\n    const { time, isNotZoomToMinMax } = option;\r\n    config.xAxis.categories = categories\r\n    if (isNotZoomToMinMax) {\r\n      config.yAxis.zhNotZoomToMinMax = true\r\n    } else {\r\n      config.yAxis.min = min\r\n    }\r\n    config.series[0].name = time\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n\r\n    config.zhConfig.itemCaption = EuroStatFn.crItemCaption(option)\r\n    config.zhConfig.itemTime = time\r\n  },\r\n\r\n  colorSeries(config){\r\n    _colorSeriaIn(config, C.EU_CODES, COLOR.EU)\r\n    _colorSeriaIn(config, C.EA_CODES, COLOR.EA)\r\n    _colorSeriaNotIn(config, C.EU_MEMBER, COLOR.NOT_EU_MEMBER)\r\n  },\r\n\r\n  addToCategoryConfig(config, { json, option, data, categories, min }){\r\n    if (option.isFilterZero) {\r\n      const _r = _filterZeroCategories(data, categories);\r\n      data = _r.data\r\n      categories = _r.categories\r\n    }\r\n    EuroStatFn.setDataAndInfo({ config, data, json, option })\r\n    EuroStatFn.setCategories({ config, categories, min, option })\r\n    EuroStatFn.colorSeries(config)\r\n  },\r\n\r\n  setTooltip({ config, tooltip }) {\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n  },\r\n\r\n  crCategoryTooltip: () => {\r\n    return Chart.fTooltip(Tooltip.categorySimple);\r\n  },\r\n\r\n\r\n  convertToUTC(str){\r\n    if (str.indexOf('M') !== -1) {\r\n      const arrDate = str.split('M')\r\n          , _month = parseInt(arrDate[1], 10)-1\r\n          , _day = (_month === 1) ? 28 : 30;\r\n      return Date.UTC(arrDate[0], _month, _day);\r\n    }\r\n    if (str.indexOf('Q') !== -1){\r\n      const arrDate = str.split('Q')\r\n          , _month = (parseInt(arrDate[1], 10)*3) - 1;\r\n      return Date.UTC(arrDate[0], _month, 30);\r\n    }\r\n    if (str.indexOf('S' !== -1)) {\r\n      const _arrS = str.split('S');\r\n      return _arrS[1] === '1'\r\n        ? Date.UTC(_arrS[0], 5, 30)\r\n        : Date.UTC(_arrS[0], 11, 31);\r\n    }\r\n    return Date.UTC(str, 11, 31);\r\n  },\r\n\r\n  setLineExtrems({ config, max, min, isNotZoomToMinMax }){\r\n    const plotLines = config.yAxis.plotLines;\r\n    setPlotLinesMinMax({ plotLines, min, max })\r\n\r\n    if (!isNotZoomToMinMax){\r\n      config.yAxis.min = Chart.calcMinY({\r\n        maxPoint: max,\r\n        minPoint: min\r\n      });\r\n    }\r\n  },\r\n\r\n  crItemCaption: ({ subtitle, dfSliceTitle }) => {\r\n    return appendWithColon(\r\n      dfSliceTitle || DF_SLICE_TITLE,\r\n      subtitle\r\n    );\r\n  },\r\n\r\n  createZhConfig(json, option){\r\n    const { href } = json\r\n        , _href = href && href.replace\r\n            ? href.replace('http', 'https')\r\n            : href\r\n        , {\r\n            key, itemCaption,\r\n            dataSource,\r\n            dfTable\r\n          } = option\r\n        , _dataSource = dfTable\r\n             ? `${dataSource} (${dfTable})`\r\n             : dataSource;\r\n    return {\r\n      id: key,\r\n      key: key,\r\n      itemCaption: itemCaption,\r\n      //isWithoutIndicator: true,\r\n      isWithoutAdd: true,\r\n      dataSource: _dataSource,\r\n      linkFn: 'ES',\r\n      item: {\r\n        dataset: dfTable,\r\n        href: _href\r\n      }\r\n    }\r\n  },\r\n\r\n  createDatasetInfo(json){\r\n    const {\r\n      label,\r\n      updated,\r\n      extension\r\n    } = json;\r\n    return {\r\n      name: label,\r\n      description: _crDescr(extension),\r\n      toDate: updated,\r\n      fromDate: '1996-01-30'\r\n    };\r\n  },\r\n\r\n  findMinY: findMinY,\r\n\r\n  crTimeIndexAndValue: (json) => {\r\n    const { dimension={}, value=[] } = json\r\n        , { time={} } = dimension\r\n        , { category={} } = time\r\n        , { index:timeIndex=0 } = category;\r\n    return { timeIndex, value };\r\n  }\r\n}\r\n\r\nexport default EuroStatFn\r\n"],"file":"EuroStatFn.js"}