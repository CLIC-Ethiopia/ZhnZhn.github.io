{"version":3,"sources":["../../../src/adapters/eurostat/EuroStatFn.js"],"names":["COLOR","EU","EA","EU_MEMBER","C","EU_CODES","EA_CODES","SPAN_UNIT","_rFrequency","default","m","q","_crDataSourceLink","json","href","_crSubTitle","subTitle","_is","value","element","_colorSeria","config","categories","codes","color","data","series","forEach","_index","findIndex","code","EuroStatFn","createData","timeIndex","max","Number","NEGATIVE_INFINITY","min","POSITIVE_INFINITY","Object","keys","map","key","pointValue","push","convertToUTC","toPointArr","replace","setDataAndInfo","option","title","subtitle","seriaType","setDefaultTitle","zhConfig","createZhConfig","info","createDatasetInfo","toUpperCase","valueMoving","zhSeriaId","setInfo","setCategories","time","tooltip","category","xAxis","yAxis","name","fTooltip","itemCaption","itemTime","colorEU","setTooltip","str","indexOf","arrDate","split","_month","parseInt","_day","Date","UTC","setLineExtrems","isNotZoomToMinMax","plotLines","label","text","fnNumberFormat","calcMinY","maxPoint","minPoint","dataSource","id","isWithoutIndicator","isWithoutAdd","group","arr","_frequency","length","extension","description","_descr","newest_available_date","updated","oldest_available_date","frequency","findMinY"],"mappings":"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","file":"EuroStatFn.js","sourcesContent":["import ChartConfig from '../../charts/ChartConfig';\r\nimport Chart from '../../charts/Chart';\r\nimport Tooltip from '../../charts/Tooltip';\r\n\r\nimport QuandlFn2 from '../QuandlFn2';\r\nimport AdapterFn from '../AdapterFn';\r\n\r\nimport ChoroplethMapSlice from './ChoroplethMapSlice';\r\n\r\nconst COLOR = {\r\n  EU: \"#0088FF\",\r\n  EA: \"#FF5800\",\r\n  EU_MEMBER: \"#7CB5EC\"\r\n};\r\nconst C = {\r\n  EU_CODES: [\"EU\", \"EU27\", \"EU28\"],\r\n  EA_CODES: [\"EA\", \"EA18\", \"EA19\"],\r\n  EU_MEMBER: [\r\n    \"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\",\r\n    \"Czech Republic\", \"Denmark\", \"Estonia\", \"Finland\", \"France\",\r\n    \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\",\r\n    \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\",\r\n    \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\",\r\n    \"Spain\", \"Sweden\", \"United Kingdom\"\r\n  ]\r\n};\r\n\r\nconst SPAN_UNIT = '<span style=\"color:#1b75bb;font-weight:bold;\">Unit: </span>';\r\n\r\nconst _rFrequency = {\r\n  default : '',\r\n  m : 'Monthly',\r\n  q : 'Quarterly'\r\n}\r\n\r\nconst _crDataSourceLink = function(json){\r\n  const { href } = json\r\n  return (href)\r\n            ? `<a href=${href}>Eurostat Data Link</a>`\r\n            : '';\r\n}\r\n\r\nconst _crSubTitle = function(subTitle){\r\n  return `<span style=\"color:black;font-weight:bold;\">${subTitle}</span>`;\r\n}\r\n\r\nconst _is = (value) => (element) => element === value;\r\n\r\nconst _colorSeria = (config, categories, codes, color) => {\r\n  const data = config.series[0].data;\r\n  codes.forEach(code => {\r\n    const _index = categories.findIndex(_is(code))\r\n    if (_index !== -1) {\r\n      data[_index].color = color\r\n    }\r\n  })\r\n}\r\n\r\nconst EuroStatFn = {\r\n\r\n  createData(timeIndex, value){\r\n    const data = [];\r\n    let max = Number.NEGATIVE_INFINITY\r\n      , min = Number.POSITIVE_INFINITY;\r\n\r\n    Object.keys(timeIndex).map((key) => {\r\n       const pointValue = value[timeIndex[key]];\r\n       if ( !(pointValue == null) ){\r\n         data.push([\r\n            this.convertToUTC(key),\r\n            pointValue\r\n          ]);\r\n\r\n          if (pointValue>=max) { max = pointValue; }\r\n          if (pointValue<=min) { min = pointValue; }\r\n       }\r\n    })\r\n\r\n    return { data, max, min };\r\n  },\r\n\r\n  toPointArr(timeIndex, value){\r\n    const data = [];\r\n    Object.keys(timeIndex).map((key) => {\r\n       const pointValue = value[timeIndex[key]];\r\n       if ( !(pointValue == null) ){\r\n         data.push([\r\n            key.replace('M', '-'),\r\n            pointValue\r\n          ]);\r\n       }\r\n    })\r\n\r\n    return data;\r\n  },\r\n\r\n  setDataAndInfo({ config, data, json, option }){\r\n    const { title, subtitle, seriaType='AREA' } = option;\r\n    Chart.setDefaultTitle(config, title, subtitle);\r\n\r\n    config.zhConfig = this.createZhConfig(option);\r\n    config.info = this.createDatasetInfo(json, option);\r\n\r\n    if (seriaType && seriaType.toUpperCase() === 'AREA'){\r\n      config.valueMoving = AdapterFn.valueMoving(data)\r\n    }\r\n\r\n    config.series[0].zhSeriaId = option.key;\r\n    config.series[0].data = data;\r\n  },\r\n\r\n  setInfo({ config, json, option }){\r\n    config.info = this.createDatasetInfo(json, option);\r\n  },\r\n\r\n  setCategories({\r\n    config, categories, min, time, subtitle,\r\n    tooltip=Tooltip.category\r\n  }){\r\n    config.xAxis.categories = categories\r\n    config.yAxis.min = min\r\n    config.series[0].name = time\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n\r\n    config.zhConfig.itemCaption = `EU: ${subtitle}`\r\n    config.zhConfig.itemTime = time\r\n  },\r\n\r\n  colorEU({ config, categories }){\r\n    _colorSeria(config, categories, C.EU_CODES, COLOR.EU)\r\n    _colorSeria(config, categories, C.EA_CODES, COLOR.EA)\r\n    _colorSeria(config, categories, C.EU_MEMBER, COLOR.EU_MEMBER)\r\n  },\r\n\r\n  setTooltip({ config, tooltip }) {\r\n    config.tooltip = Chart.fTooltip(tooltip)\r\n  },\r\n\r\n  convertToUTC(str){\r\n    if (str.indexOf('M') !== -1) {\r\n      const arrDate = str.split('M')\r\n          , _month = parseInt(arrDate[1], 10)-1\r\n          , _day = (_month === 1) ? 28 : 30\r\n\r\n      return Date.UTC(arrDate[0], _month, _day);\r\n    } else if (str.indexOf('Q') !== -1){\r\n      const arrDate = str.split('Q')\r\n          , _month = (parseInt(arrDate[1], 10)*3) - 1\r\n\r\n      return Date.UTC(arrDate[0], _month, 30);\r\n    } else {\r\n      return Date.UTC(str, 11, 31);\r\n    }\r\n  },\r\n\r\n  setLineExtrems({ config, max, min, isNotZoomToMinMax }){\r\n    const plotLines = config.yAxis.plotLines;\r\n\r\n    if ( max>Number.NEGATIVE_INFINITY ){\r\n      plotLines[0].value = max;\r\n      plotLines[0].label.text = ChartConfig.fnNumberFormat(max);\r\n    }\r\n    if ( min<Number.POSITIVE_INFINITY ){\r\n      plotLines[1].value = min;\r\n      plotLines[1].label.text = ChartConfig.fnNumberFormat(min);\r\n    }\r\n\r\n    if (!isNotZoomToMinMax){\r\n      config.yAxis.min = Chart.calcMinY({ maxPoint: max, minPoint: min });\r\n    }\r\n\r\n  },\r\n\r\n  createZhConfig(option){\r\n    const { key, itemCaption, dataSource } = option\r\n    return {\r\n      id : key,\r\n      key : key,\r\n      itemCaption : itemCaption,\r\n      isWithoutIndicator : true,\r\n      isWithoutAdd : true,\r\n      dataSource\r\n    }\r\n  },\r\n\r\n  createDatasetInfo(json, option){\r\n    const  { group='' } = option\r\n        ,  arr = group.split('_')\r\n        , _frequency = (_rFrequency[arr[arr.length-1]])\r\n              ? _rFrequency[arr[arr.length-1]]\r\n              : _rFrequency.default\r\n        , { extension={} } = json\r\n        , { description, subTitle } = extension;\r\n\r\n    let _descr = '';\r\n    if (subTitle){\r\n      _descr = SPAN_UNIT + _crSubTitle(subTitle) + '<br>';\r\n    }\r\n    if (description) {\r\n      _descr = _descr + description + '<br>';\r\n    }\r\n    _descr = _descr + _crDataSourceLink(json);\r\n\r\n    return {\r\n      name : json.label,\r\n      description : _descr,\r\n      newest_available_date : json.updated,\r\n      oldest_available_date : '1996-01-30',\r\n      frequency : _frequency\r\n    }\r\n  },\r\n\r\n  findMinY(data){\r\n    return QuandlFn2.findMinY(data);\r\n  },\r\n\r\n  ...ChoroplethMapSlice\r\n}\r\n\r\nexport default EuroStatFn\r\n"]}