{"version":3,"sources":["../../../src/adapters/eurostat/toAreaYearly.js"],"names":["toAreaYearly","createConfig","json","option","fn","crTimeIndexAndValue","timeIndex","value","data","toPointArr","title","subtitle","dataSource","config","toYearly","toConfig","reverse","itemCaption","setInfo","createSeria","seria","ChartConfig","fSeries","Object","assign","zhSeriaId","zhValueText"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AAClBC,EAAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,gCACDC,uBAAGC,mBAAH,CAAuBH,IAAvB,CADC;AAAA,QACtBI,SADsB,yBACtBA,SADsB;AAAA,QACXC,KADW,yBACXA,KADW;AAAA,QAExBC,IAFwB,GAEjBJ,uBAAGK,UAAH,CAAcH,SAAd,EAAyBC,KAAzB,CAFiB;AAAA,QAGtBG,KAHsB,GAGUP,MAHV,CAGtBO,KAHsB;AAAA,QAGfC,QAHe,GAGUR,MAHV,CAGfQ,QAHe;AAAA,QAGLC,UAHK,GAGUT,MAHV,CAGLS,UAHK;AAAA,QAIxBC,MAJwB,GAIfC,qBAASC,QAAT,CACPP,IAAI,CAACQ,OAAL,EADO,EACS;AAChBN,MAAAA,KAAK,EAALA,KADgB;AACTC,MAAAA,QAAQ,EAARA,QADS;AAEhBM,MAAAA,WAAW,EAAEP,KAAK,GAAG,IAAR,GAAeC,QAFZ;AAGhBJ,MAAAA,KAAK,EAAEG,KAAK,GAAG,GAAR,GAAcC,QAHL;AAIhBC,MAAAA,UAAU,EAAVA;AAJgB,KADT,CAJe;;AAY7BR,2BAAGc,OAAH,CAAW;AAAEL,MAAAA,MAAM,EAANA,MAAF;AAAUX,MAAAA,IAAI,EAAJA,IAAV;AAAgBC,MAAAA,MAAM,EAANA;AAAhB,KAAX;;AACA,WAAOU,MAAP;AACF,GAfiB;AAiBlBM,EAAAA,WAAW,EAAE,qBAACjB,IAAD,EAAOC,MAAP,EAAkB;AAC7B,QAAMiB,KAAK,GAAGC,wBAAYC,OAAZ,EAAd;;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqB;AACnBK,MAAAA,SAAS,EAAE,aADQ;AAEnBC,MAAAA,WAAW,EAAE;AAFM,KAArB;AAIA,WAAON,KAAP;AACD;AAxBiB,CAArB;eA4BepB,Y","sourcesContent":["import ChartConfig from '../../charts/ChartConfig'\r\nimport fn from './EuroStatFn';\r\nimport toYearly from '../toYearly'\r\n\r\nconst toAreaYearly = {\r\n   createConfig: (json, option) => {\r\n     const { timeIndex, value } = fn.crTimeIndexAndValue(json)\r\n         , data = fn.toPointArr(timeIndex, value)\r\n         , { title, subtitle, dataSource } = option\r\n         , config = toYearly.toConfig(\r\n             data.reverse(), {\r\n             title, subtitle,\r\n             itemCaption: title + ': ' + subtitle,\r\n             value: title + '_' + subtitle,\r\n             dataSource\r\n           })\r\n\r\n      fn.setInfo({ config, json, option });\r\n      return config;\r\n   },\r\n\r\n   createSeria: (json, option) => {\r\n     const seria = ChartConfig.fSeries()\r\n     Object.assign(seria, {\r\n       zhSeriaId: 'Empty_Seria',\r\n       zhValueText: 'Empty Seria'\r\n     })\r\n     return seria;\r\n   }\r\n\r\n};\r\n\r\nexport default toAreaYearly\r\n"],"file":"toAreaYearly.js"}