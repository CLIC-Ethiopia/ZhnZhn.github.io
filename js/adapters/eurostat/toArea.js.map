{"version":3,"sources":["../../../src/adapters/eurostat/toArea.js"],"names":["createData","EuroStatFn","setDataAndInfo","setLineExtrems","findMinY","toArea","createConfig","json","option","isNotZoomToMinMax","seriaType","seriaColor","seriaWidth","mapFrequency","data","max","min","_type","toLowerCase","config","ChartConfig","crAreaConfig","createSeria","itemCaption","crSeria","minY","zhValueText"],"mappings":";;;;;;;AAAA;;AAEA;;IAGEA,U,GAIEC,sB,CAJFD,U;IACAE,c,GAGED,sB,CAHFC,c;IACAC,c,GAEEF,sB,CAFFE,c;IACAC,Q,GACEH,sB,CADFG,Q;AAGF,IAAMC,MAAM,GAAG;AACZC,EAAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,QAE1BC,iBAF0B,GAKvBD,MALuB,CAE1BC,iBAF0B;AAAA,QAG1BC,SAH0B,GAKvBF,MALuB,CAG1BE,SAH0B;AAAA,QAGfC,UAHe,GAKvBH,MALuB,CAGfG,UAHe;AAAA,QAGHC,UAHG,GAKvBJ,MALuB,CAGHI,UAHG;AAAA,QAI1BC,YAJ0B,GAKvBL,MALuB,CAI1BK,YAJ0B;AAAA,sBAMPb,UAAU,CAACO,IAAD,EAAOM,YAAP,CANH;AAAA,QAM1BC,IAN0B,eAM1BA,IAN0B;AAAA,QAMpBC,GANoB,eAMpBA,GANoB;AAAA,QAMfC,GANe,eAMfA,GANe;AAAA,QAO5BC,KAP4B,GAOpB,OAAOP,SAAP,KAAqB,QAArB,GACJA,SAAS,CAACQ,WAAV,EADI,GAEJ,QATwB;AAAA,QAU5BC,MAV4B,GAUnBC,wBAAYC,YAAZ,CAAyB;AAChCX,MAAAA,SAAS,EAAEO,KADqB;AAEhCN,MAAAA,UAAU,EAAVA,UAFgC;AAEpBC,MAAAA,UAAU,EAAVA;AAFoB,KAAzB,CAVmB;;AAc7BV,IAAAA,cAAc,CAAC;AAAEiB,MAAAA,MAAM,EAANA,MAAF;AAAUL,MAAAA,IAAI,EAAJA,IAAV;AAAgBP,MAAAA,IAAI,EAAJA,IAAhB;AAAsBC,MAAAA,MAAM,EAANA;AAAtB,KAAD,CAAd;AACAL,IAAAA,cAAc,CAAC;AAAEgB,MAAAA,MAAM,EAANA,MAAF;AAAUJ,MAAAA,GAAG,EAAHA,GAAV;AAAeC,MAAAA,GAAG,EAAHA,GAAf;AAAoBP,MAAAA,iBAAiB,EAAjBA;AAApB,KAAD,CAAd;AAEA,WAAOU,MAAP;AACF,GAnBW;AAqBZG,EAAAA,WAAW,EAAE,qBAACf,IAAD,EAAOC,MAAP,EAAkB;AAAA,uBACZR,UAAU,CAACO,IAAD,CADE;AAAA,QACrBO,IADqB,gBACrBA,IADqB;AAAA,QAEzBS,WAFyB,GAE0Bf,MAF1B,CAEzBe,WAFyB;AAAA,QAEZb,SAFY,GAE0BF,MAF1B,CAEZE,SAFY;AAAA,QAEDC,UAFC,GAE0BH,MAF1B,CAEDG,UAFC;AAAA,QAEWC,UAFX,GAE0BJ,MAF1B,CAEWI,UAFX;;AAI7B,WAAOQ,wBAAYI,OAAZ,CAAoB;AACzBd,MAAAA,SAAS,EAATA,SADyB;AACdC,MAAAA,UAAU,EAAVA,UADc;AACFC,MAAAA,UAAU,EAAVA,UADE;AAEzBE,MAAAA,IAAI,EAAJA,IAFyB;AAGzBW,MAAAA,IAAI,EAAErB,QAAQ,CAACU,IAAD,CAHW;AAIzBY,MAAAA,WAAW,EAAEH;AAJY,KAApB,CAAP;AAMD;AA/BW,CAAf;eAkCelB,M","sourcesContent":["import ChartConfig from '../../charts/ChartConfig';\r\n\r\nimport EuroStatFn from './EuroStatFn';\r\n\r\nconst {\r\n  createData,\r\n  setDataAndInfo,\r\n  setLineExtrems,\r\n  findMinY\r\n} = EuroStatFn\r\n\r\nconst toArea = {\r\n   createConfig: (json, option) => {\r\n     const {\r\n         isNotZoomToMinMax,\r\n         seriaType, seriaColor, seriaWidth,\r\n         mapFrequency\r\n        } = option\r\n     , { data, max, min } = createData(json, mapFrequency)\r\n     , _type = typeof seriaType === 'string'\r\n         ? seriaType.toLowerCase()\r\n         : 'spline'\r\n     , config = ChartConfig.crAreaConfig({\r\n         seriaType: _type,\r\n         seriaColor, seriaWidth\r\n       });\r\n      setDataAndInfo({ config, data, json, option });\r\n      setLineExtrems({ config, max, min, isNotZoomToMinMax });\r\n\r\n      return config;\r\n   },\r\n\r\n   createSeria: (json, option) => {\r\n     const { data } = createData(json)\r\n     , { itemCaption, seriaType, seriaColor, seriaWidth } = option;\r\n\r\n     return ChartConfig.crSeria({\r\n       seriaType, seriaColor, seriaWidth,\r\n       data,\r\n       minY: findMinY(data),\r\n       zhValueText: itemCaption\r\n     });\r\n   }\r\n};\r\n\r\nexport default toArea\r\n"],"file":"toArea.js"}