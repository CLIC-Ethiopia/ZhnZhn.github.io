{"version":3,"sources":["../../../src/adapters/eurostat/toArea.js"],"names":["crTimeIndexAndValue","EuroStatFn","createData","setDataAndInfo","setLineExtrems","findMinY","toArea","createConfig","json","option","timeIndex","value","isNotZoomToMinMax","seriaType","seriaColor","seriaWidth","mapFrequency","data","max","min","_type","toLowerCase","config","ChartConfig","crAreaConfig","createSeria","itemCaption","crSeria","minY","zhSeriaId","key","zhValueText"],"mappings":";;;;;;;AAAA;;AAEA;;IAGEA,mB,GAKEC,sB,CALFD,mB;IACAE,U,GAIED,sB,CAJFC,U;IACAC,c,GAGEF,sB,CAHFE,c;IACAC,c,GAEEH,sB,CAFFG,c;IACAC,Q,GACEJ,sB,CADFI,Q;AAGF,IAAMC,MAAM,GAAG;AACZC,EAAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,+BACDT,mBAAmB,CAACQ,IAAD,CADlB;AAAA,QACtBE,SADsB,wBACtBA,SADsB;AAAA,QACXC,KADW,wBACXA,KADW;AAAA,QAG1BC,iBAH0B,GAMvBH,MANuB,CAG1BG,iBAH0B;AAAA,QAI1BC,SAJ0B,GAMvBJ,MANuB,CAI1BI,SAJ0B;AAAA,QAIfC,UAJe,GAMvBL,MANuB,CAIfK,UAJe;AAAA,QAIHC,UAJG,GAMvBN,MANuB,CAIHM,UAJG;AAAA,QAK1BC,YAL0B,GAMvBP,MANuB,CAK1BO,YAL0B;AAAA,sBAOPd,UAAU,CAACQ,SAAD,EAAYC,KAAZ,EAAmBK,YAAnB,CAPH;AAAA,QAO1BC,IAP0B,eAO1BA,IAP0B;AAAA,QAOpBC,GAPoB,eAOpBA,GAPoB;AAAA,QAOfC,GAPe,eAOfA,GAPe;AAAA,QAQ5BC,KAR4B,GAQpB,OAAOP,SAAP,KAAqB,QAArB,GACJA,SAAS,CAACQ,WAAV,EADI,GAEJ,QAVwB;AAAA,QAW5BC,MAX4B,GAWnBC,wBAAYC,YAAZ,CAAyB;AAChCX,MAAAA,SAAS,EAAEO,KADqB;AAEhCN,MAAAA,UAAU,EAAVA,UAFgC;AAEpBC,MAAAA,UAAU,EAAVA;AAFoB,KAAzB,CAXmB;;AAe7BZ,IAAAA,cAAc,CAAC;AAAEmB,MAAAA,MAAM,EAANA,MAAF;AAAUL,MAAAA,IAAI,EAAJA,IAAV;AAAgBT,MAAAA,IAAI,EAAJA,IAAhB;AAAsBC,MAAAA,MAAM,EAANA;AAAtB,KAAD,CAAd;AACAL,IAAAA,cAAc,CAAC;AAAEkB,MAAAA,MAAM,EAANA,MAAF;AAAUJ,MAAAA,GAAG,EAAHA,GAAV;AAAeC,MAAAA,GAAG,EAAHA,GAAf;AAAoBP,MAAAA,iBAAiB,EAAjBA;AAApB,KAAD,CAAd;AAEA,WAAOU,MAAP;AACF,GApBW;AAsBZG,EAAAA,WAAW,EAAE,qBAACjB,IAAD,EAAOC,MAAP,EAAkB;AAAA,gCACAT,mBAAmB,CAACQ,IAAD,CADnB;AAAA,QACrBE,SADqB,yBACrBA,SADqB;AAAA,QACVC,KADU,yBACVA,KADU;AAAA,QAEzBe,WAFyB,GAE0BjB,MAF1B,CAEzBiB,WAFyB;AAAA,QAEZb,SAFY,GAE0BJ,MAF1B,CAEZI,SAFY;AAAA,QAEDC,UAFC,GAE0BL,MAF1B,CAEDK,UAFC;AAAA,QAEWC,UAFX,GAE0BN,MAF1B,CAEWM,UAFX;AAAA,uBAGhBb,UAAU,CAACQ,SAAD,EAAYC,KAAZ,CAHM;AAAA,QAGzBM,IAHyB,gBAGzBA,IAHyB;;AAK7B,WAAOM,wBAAYI,OAAZ,CAAoB;AACzBd,MAAAA,SAAS,EAATA,SADyB;AACdC,MAAAA,UAAU,EAAVA,UADc;AACFC,MAAAA,UAAU,EAAVA,UADE;AAEzBE,MAAAA,IAAI,EAAJA,IAFyB;AAGzBW,MAAAA,IAAI,EAAEvB,QAAQ,CAACY,IAAD,CAHW;AAIzBY,MAAAA,SAAS,EAAEpB,MAAM,CAACqB,GAJO;AAKzBC,MAAAA,WAAW,EAAEL;AALY,KAApB,CAAP;AAOD;AAlCW,CAAf;eAqCepB,M","sourcesContent":["import ChartConfig from '../../charts/ChartConfig';\r\n\r\nimport EuroStatFn from './EuroStatFn';\r\n\r\nconst {\r\n  crTimeIndexAndValue,\r\n  createData,\r\n  setDataAndInfo,\r\n  setLineExtrems,\r\n  findMinY\r\n} = EuroStatFn\r\n\r\nconst toArea = {\r\n   createConfig: (json, option) => {\r\n     const { timeIndex, value } = crTimeIndexAndValue(json)\r\n     , {\r\n         isNotZoomToMinMax,\r\n         seriaType, seriaColor, seriaWidth,\r\n         mapFrequency\r\n        } = option\r\n     , { data, max, min } = createData(timeIndex, value, mapFrequency)\r\n     , _type = typeof seriaType === 'string'\r\n         ? seriaType.toLowerCase()\r\n         : 'spline'\r\n     , config = ChartConfig.crAreaConfig({\r\n         seriaType: _type,\r\n         seriaColor, seriaWidth\r\n       });\r\n      setDataAndInfo({ config, data, json, option });\r\n      setLineExtrems({ config, max, min, isNotZoomToMinMax });\r\n\r\n      return config;\r\n   },\r\n\r\n   createSeria: (json, option) => {\r\n     const { timeIndex, value } = crTimeIndexAndValue(json)\r\n     , { itemCaption, seriaType, seriaColor, seriaWidth } = option\r\n     , { data } = createData(timeIndex, value);\r\n\r\n     return ChartConfig.crSeria({\r\n       seriaType, seriaColor, seriaWidth,\r\n       data,\r\n       minY: findMinY(data),\r\n       zhSeriaId: option.key,\r\n       zhValueText: itemCaption\r\n     });\r\n   }\r\n};\r\n\r\nexport default toArea\r\n"],"file":"toArea.js"}