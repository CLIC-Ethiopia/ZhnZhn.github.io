{"version":3,"sources":["../../../../src/adapters/eurostat/__tests__/EuroStatApi.test.js"],"names":["URL","apiFn","QUERY_TAIL","DF_TAIL","TYPE","describe","DF_TABLE","ITEMS","id","value","COLUMN_SET","test","options","_type","dfTable","items","url","api","getRequestUrl","expect","toBe","time","undefined","seriaType"],"mappings":";;;;AAAA;;AACA;;IAEQA,G,GAA6BC,iB,CAA7BD,G;IAAKE,U,GAAwBD,iB,CAAxBC,U;IAAYC,O,GAAYF,iB,CAAZE,O;AAEzB,IAAMC,IAAI,GAAG,SAAb;AAEAC,QAAQ,CAAC,eAAD,EAAkB,YAAI;AAC5B,MAAMC,QAAQ,GAAG,SAAjB;AACA,MAAMC,KAAK,GAAG,CACZ;AAACC,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GADY,EAEZ;AAACD,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAFY,CAAd;AAIA,MAAMC,UAAU,GAAG,YAAnB;AAEAC,EAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAI;AAClD,QAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAET,IADO;AAEdU,MAAAA,OAAO,EAAER,QAFK;AAGdS,MAAAA,KAAK,YAAMR,KAAN;AAHS,KAAhB;AAAA,QAKAS,GAAG,GAAGC,wBAAIC,aAAJ,CAAkBN,OAAlB,CALN;;AAMAO,IAAAA,MAAM,CAACH,GAAD,CAAN,CAAYI,IAAZ,MAAoBpB,GAApB,GAA0BM,QAA1B,oBAAiDJ,UAAjD;AACH,GARG,CAAJ;AASAS,EAAAA,IAAI,CAAC,mDAAD,EAAsD,YAAI;AAC5D,QAAMU,IAAI,GAAG,IAAb;;AACA,QAAMT,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAET,IADO;AAEdU,MAAAA,OAAO,EAAER,QAFK;AAGdS,MAAAA,KAAK,GAAIO,SAAJ,SAAkBf,KAAlB,CAHS;AAIdgB,MAAAA,SAAS,EAAEb,UAJG;AAKdW,MAAAA,IAAI,EAAJA;AALc,KAAhB;AAAA,QAOAL,GAAG,GAAGC,wBAAIC,aAAJ,CAAkBN,OAAlB,CAPN;;AAQAO,IAAAA,MAAM,CAACH,GAAD,CAAN,CAAYI,IAAZ,MAAoBpB,GAApB,GAA0BM,QAA1B,0BAAuDe,IAAvD,SAA+DlB,OAA/D;AACD,GAXG,CAAJ;AAaD,CA9BO,CAAR","sourcesContent":["import api from '../EuroStatApi'\r\nimport apiFn from '../api/apiFn'\r\n\r\nconst { URL, QUERY_TAIL, DF_TAIL } = apiFn;\r\n\r\nconst TYPE = 'selectN';\r\n\r\ndescribe('getRequestUrl', ()=>{\r\n  const DF_TABLE = 'table_1';\r\n  const ITEMS = [\r\n    {id: 'n1', value: 'v1'},\r\n    {id: 'n2', value: 'v2'}\r\n  ];\r\n  const COLUMN_SET = 'COLUMN_SET';\r\n\r\n  test('should return valid url for crUrlN spline', ()=>{\r\n      const options = {\r\n        _type: TYPE,\r\n        dfTable: DF_TABLE,\r\n        items: [...ITEMS]\r\n      },\r\n      url = api.getRequestUrl(options);\r\n      expect(url).toBe(`${URL}${DF_TABLE}?n1=v1&n2=v2${QUERY_TAIL}`)\r\n  })\r\n  test('should return valid url for crUrlN category chart', ()=>{\r\n    const time = 2017;\r\n    const options = {\r\n      _type: TYPE,\r\n      dfTable: DF_TABLE,\r\n      items: [ undefined, ...ITEMS ],\r\n      seriaType: COLUMN_SET,\r\n      time\r\n    },\r\n    url = api.getRequestUrl(options);\r\n    expect(url).toBe(`${URL}${DF_TABLE}?n1=v1&n2=v2&time=${time}&${DF_TAIL}`)\r\n  })\r\n\r\n})\r\n"],"file":"EuroStatApi.test.js"}