{"version":3,"sources":["../../../src/adapters/eurostat/toColumn.js"],"names":["toColumn","createConfig","json","option","configSlice","zhMapSlice","time","subtitle","trJsonToCategory","then","categories","data","min","config","createColumnConfig","setDataAndInfo","setCategories","colorEU","createSeria","chart","options","xAxis","trJsonToSeria","zhSeriaId","zhValueText","minY","findMinY","name"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW;AACfC,gBAAe,sBAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,QACZC,WADY,GAC0BD,MAD1B,CACvBE,UADuB;AAAA,uBAC0BF,MAD1B,CACCG,IADD;AAAA,QACCA,IADD,gCACM,EADN;AAAA,2BAC0BH,MAD1B,CACUI,QADV;AAAA,QACUA,QADV,oCACmB,EADnB;;AAE/B,WAAO,qBAAWC,gBAAX,CAA4BN,IAA5B,EAAkCE,WAAlC,EACHK,IADG,CACE,gBAA+B;AAAA,UAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,GAAU,QAAVA,GAAU;;AAClC,UAAMC,SAAS,uBAAaC,kBAAb,EAAf;AACA,2BAAWC,cAAX,CAA0B,EAAEF,cAAF,EAAUF,UAAV,EAAgBT,UAAhB,EAAsBC,cAAtB,EAA1B;AACA,2BAAWa,aAAX,CAAyB,EAAEH,cAAF,EAAUH,sBAAV,EAAsBE,QAAtB,EAA2BN,UAA3B,EAAiCC,kBAAjC,EAAzB;AACA,2BAAWU,OAAX,CAAmB,EAAEJ,cAAF,EAAUH,sBAAV,EAAnB;AACA,aAAOG,MAAP;AACF,KAPG,CAAP;AAQD,GAXc;;AAafK,eAAc,qBAAChB,IAAD,EAAOC,MAAP,EAAegB,KAAf,EAAyB;AACrC,QAAMT,aAAaS,MAAMC,OAAN,CAAcC,KAAd,CAAoB,CAApB,EAAuBX,UAA1C;AACM,QAAaN,WAAb,GAA6BD,MAA7B,CAAEE,UAAF;AAAA,QACEC,IADF,GACWF,WADX,CACEE,IADF;AAAA,QAEAK,IAFA,GAEO,qBAAWW,aAAX,CAAyBpB,IAAzB,EAA+BE,WAA/B,EAA4CM,UAA5C,CAFP;;;AAIN,WAAO;AACLa,iBAAY,WADP;AAELC,mBAAc,OAFT;AAGLC,YAAO,qBAAWC,QAAX,CAAoBf,IAApB,CAHF;AAILgB,YAAMrB,IAJD;AAKLK,YAAOA;AALF,KAAP;AAOD;AA1Bc,CAAjB;;kBA6BeX,Q","file":"toColumn.js","sourcesContent":["\r\nimport FactoryChart from './FactoryChart';\r\nimport JsonStatFn from './JsonStatFn';\r\nimport EuroStatFn from './EuroStatFn';\r\n\r\nconst toColumn = {\r\n  createConfig : (json, option) => {\r\n    const { zhMapSlice:configSlice, time='', subtitle='' } = option\r\n    return JsonStatFn.trJsonToCategory(json, configSlice)\r\n       .then(({ categories, data, min }) => {\r\n          const config = FactoryChart.createColumnConfig()\r\n          EuroStatFn.setDataAndInfo({ config, data, json, option })\r\n          EuroStatFn.setCategories({ config, categories, min, time, subtitle })\r\n          EuroStatFn.colorEU({ config, categories })\r\n          return config;\r\n       });\r\n  },\r\n\r\n  createSeria : (json, option, chart) => {\r\n    const categories = chart.options.xAxis[0].categories;\r\n    const { zhMapSlice:configSlice } = option\r\n        , { time } = configSlice\r\n        , data = JsonStatFn.trJsonToSeria(json, configSlice, categories)\r\n\r\n    return {\r\n      zhSeriaId : 'optionKey',\r\n      zhValueText : 'Value',\r\n      minY : EuroStatFn.findMinY(data),\r\n      name: time,\r\n      data : data\r\n    };\r\n  }\r\n}\r\n\r\nexport default toColumn\r\n"]}