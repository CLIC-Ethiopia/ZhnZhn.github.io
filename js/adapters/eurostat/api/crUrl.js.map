{"version":3,"sources":["../../../../src/adapters/eurostat/api/crUrl.js"],"names":["URL","apiFn","QUERY_TAIL","isCategory","createMapValue","mapFn","createMapSlice","crUrl","option","seriaType","metric","geo","itemMap","time","_geo","_metric","indexOf","mapValue","mapSlice","_mapValue","zhMapSlice"],"mappings":";;;;;;;;;AAAA;;AACA;;IAEQA,G,GAAgCC,iB,CAAhCD,G;IAAKE,U,GAA2BD,iB,CAA3BC,U;IAAYC,U,GAAeF,iB,CAAfE,U;IACjBC,c,GAAmCC,iB,CAAnCD,c;IAAgBE,c,GAAmBD,iB,CAAnBC,c;;AAExB,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,MAAD,EAAY;AAAA,MAEtBC,SAFsB,GAMpBD,MANoB,CAEtBC,SAFsB;AAAA,MAGtBC,MAHsB,GAMpBF,MANoB,CAGtBE,MAHsB;AAAA,MAGdC,GAHc,GAMpBH,MANoB,CAGdG,GAHc;AAAA,MAItBC,OAJsB,GAMpBJ,MANoB,CAItBI,OAJsB;AAAA,MAKtBC,IALsB,GAMpBL,MANoB,CAKtBK,IALsB;;AAQxB,MAAI,CAACV,UAAU,CAACM,SAAD,CAAf,EAA2B;AACzB,QAAMK,IAAI,YAAUH,GAApB;AAAA,QACEI,OAAO,GAAIL,MAAM,CAACM,OAAP,CAAe,GAAf,MAAwB,CAAC,CAA1B,GACHN,MADG,SAENA,MAHN;;AAKA,gBAAUV,GAAV,GAAgBe,OAAhB,SAA2BD,IAA3B,GAAkCZ,UAAlC;AACD;;AAfuB,MAiBhBe,QAjBgB,GAiBOL,OAjBP,CAiBhBK,QAjBgB;AAAA,MAiBNC,QAjBM,GAiBON,OAjBP,CAiBNM,QAjBM;AAAA,MAkBlBC,SAlBkB,GAkBNF,QAAQ,IAAIb,cAAc,CAACI,MAAD,EAASI,OAAT,CAlBpB;;AAmBxB,MAAIH,SAAS,KAAK,KAAlB,EAAyB;AACvBD,IAAAA,MAAM,CAACY,UAAP,GAAoBF,QAAQ,iCACnBA,QADmB;AACTL,MAAAA,IAAI,EAAJA;AADS,uCAEnBP,cAAc,CAACE,MAAD,EAASI,OAAT,CAFK;AAEcC,MAAAA,IAAI,EAAJA;AAFd,MAA5B;AAGA,gBAAUb,GAAV,GAAgBmB,SAAhB;AACD,GALD,MAKO;AACL,gBAAUnB,GAAV,GAAgBmB,SAAhB,cAAkCN,IAAlC;AACD;AACF,CA3BD;;eA6BeN,K","sourcesContent":["import apiFn from './apiFn'\r\nimport mapFn from './mapFn'\r\n\r\nconst { URL, QUERY_TAIL, isCategory } = apiFn;\r\nconst { createMapValue, createMapSlice } = mapFn;\r\n\r\nconst crUrl = (option) => {\r\n  const {\r\n    seriaType,\r\n    metric, geo,\r\n    itemMap,\r\n    time\r\n  } = option;\r\n\r\n  if (!isCategory(seriaType)){\r\n    const _geo = `geo=${geo}`\r\n    , _metric = (metric.indexOf('?') === -1)\r\n        ? `${metric}?`\r\n        : metric;\r\n\r\n    return `${URL}${_metric}&${_geo}${QUERY_TAIL}`;\r\n  }\r\n\r\n  const { mapValue, mapSlice } = itemMap\r\n      , _mapValue = mapValue || createMapValue(option, itemMap);\r\n  if (seriaType === 'MAP') {\r\n    option.zhMapSlice = mapSlice\r\n      ? { ...mapSlice, time }\r\n      : { ...createMapSlice(option, itemMap), time };\r\n    return `${URL}${_mapValue}`;\r\n  } else {\r\n    return `${URL}${_mapValue}&time=${time}`;\r\n  }\r\n};\r\n\r\nexport default crUrl\r\n"],"file":"crUrl.js"}