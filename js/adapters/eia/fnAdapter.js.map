{"version":3,"sources":["../../../src/adapters/eia/fnAdapter.js"],"names":["CHART_URL","_toUTC","str","length","_year","substring","_month","parseInt","_day","Date","UTC","_crZhConfig","json","option","dataSource","key","id","series","series_id","_crDescr","s","description","units","source","updated","replace","_crInfo","_s","name","crTitle","items","dfTitle","_s1","_s2","_s3","_subtitle","title","subtitle","crData","data","map","arr","x","y","reverse","crConfOption","zhConfig","info"],"mappings":"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","sourcesContent":["import { getCaption } from '../AdapterFn';\r\n\r\nconst CHART_URL = \"https://www.eia.gov/opendata/embed.php?type=chart&series_id=\";\r\n\r\nconst _toUTC = (str) => {\r\n  if (str.length === 6) {\r\n    const _year = str.substring(0, 4)\r\n    , _month = parseInt(str.substring(4), 10)-1\r\n    , _day = (_month === 1) ? 28 : 30;\r\n    return Date.UTC(_year, _month, _day);\r\n  }\r\n  if (str.length === 4) {\r\n    return Date.UTC(str, 11, 31);\r\n  }\r\n};\r\n\r\nconst _crZhConfig = (json, option) => {\r\n  const { dataSource, key } = option\r\n  , id = json.series[0].series_id;\r\n  return {\r\n    id, key,\r\n    //itemCaption: title,\r\n    dataSource\r\n  };\r\n};\r\n\r\nconst _crDescr = (s) => {\r\n  const {\r\n    description='',\r\n    units='',\r\n    source='',\r\n    series_id='',\r\n    updated\r\n  } = s;\r\n  return `<p>${description}</p>\r\n  <p>Units: ${units}</p>\r\n  <p>Source: ${source}</p>\r\n  <p>Updated: ${updated ? updated.replace('T', ' '): ''}</p>\r\n  <p>Id: ${series_id}</p>\r\n  <p><a href=\"${CHART_URL}${series_id}\" style=\"padding-top: 4px;\">EIA Chart</a></p>`;\r\n};\r\n\r\nconst _crInfo = (json) => {\r\n  const _s = json.series[0]\r\n  return {\r\n    name: _s.name,\r\n    description: _crDescr(_s)\r\n  };\r\n}\r\n\r\n/* [ [\"201806\", 1000], ... ] */\r\nexport const crTitle = ({\r\n  items=[],\r\n  dfTitle\r\n}) => {\r\n  const _s1 = getCaption(items[0])\r\n  , _s2 = getCaption(items[1])\r\n  , _s3 = getCaption(items[2])\r\n  , _subtitle = `${_s2}${_s3 ? ':' : ''} ${_s3}`;\r\n\r\n  return {\r\n    title: `${_s1}: ${dfTitle}`,\r\n    subtitle: _subtitle\r\n  };\r\n}\r\n\r\nexport const crData = (\r\n  json\r\n) => json.series[0].data\r\n   .map(arr => ({\r\n      x: _toUTC(arr[0]),\r\n      y: arr[1]\r\n   }))\r\n   .reverse();\r\n\r\nexport const crConfOption = (\r\n  option,\r\n  json\r\n) => ({\r\n  zhConfig: _crZhConfig(json, option),\r\n  info: _crInfo(json)\r\n})\r\n"],"file":"fnAdapter.js"}