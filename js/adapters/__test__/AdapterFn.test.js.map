{"version":3,"sources":["../../../src/adapters/__test__/AdapterFn.test.js"],"names":["ymdToUTC","AdapterFn","toUpperCaseFirst","isYNumber","findMinY","findMaxY","joinBy","Y","r","d","YM","YMD","describe","fn","test","forEach","expect","toBe","EMPTY","String","undefined","str","Date","now","y","NaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","DATA_ARR","DATA_POINT","x"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\n\r\nconst {\r\n  ymdToUTC,\r\n  toUpperCaseFirst,\r\n  isYNumber,\r\n  findMinY,\r\n  findMaxY,\r\n  joinBy\r\n} = AdapterFn;\r\n\r\nconst Y = [\r\n  { in: '2017', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2016', r: 1483142400000, d: '31-12-2016' },\r\n  { in: '2015', r: 1451520000000, d: '31-12-2015' },\r\n  { in: '2000', r: 978220800000, d: '31-12-2000' },\r\n]\r\n\r\n//Date.UTC(y, m-1, d)\r\nconst YM = [\r\n  { in: '2017-12', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2017-11', r: 1512000000000, d: '30-11-2017' },\r\n  { in: '2017-10', r: 1509408000000, d: '31-10-2017' },\r\n\r\n  { in: '2017-9', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-09', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-8', r: 1504137600000, d: '31-08-2017' },\r\n  { in: '2017-08', r: 1504137600000, d: '31-08-2017' },\r\n\r\n  { in: '2017-1', r: 1485820800000, d: '31-01-2017' },\r\n  { in: '2017-01', r: 1485820800000, d: '31-01-2017' },\r\n];\r\n\r\nconst YMD = [\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-1', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n]\r\n\r\ndescribe('ymdToUTC', () => {\r\n  const fn = ymdToUTC;\r\n  test('should return UTC msc of 31, December of year from YYYY', () => {\r\n    Y.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of last day of month from YYYY-MM', () => {\r\n    YM.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of day (00:00:00 UTC) from YYYY-MM-DD', () => {\r\n    YMD.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n});\r\n\r\ndescribe('toUpperCaseFirst', ()=> {\r\n  const fn = toUpperCaseFirst;\r\n  const EMPTY = '';\r\n  test('should return string with first upper case letter for string or String input', ()=>{\r\n    expect(fn('abc')).toBe('Abc')\r\n    expect(fn('aBc')).toBe('ABc')\r\n    expect(fn('aBC')).toBe('ABC')\r\n  })\r\n  test('should retunr empty string for instance of String', ()=> {\r\n    expect(fn(new String('abc'))).toBe('')\r\n    expect(fn(new String('aBc'))).toBe('')\r\n    expect(fn(new String('aBC'))).toBe('')\r\n  })\r\n  test('should return empty string in edge case', ()=>{\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn([])).toBe(EMPTY)\r\n\r\n    expect(fn({str: 'abc'})).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(/\\s/)).toBe(EMPTY)\r\n    expect(fn(Date.now())).toBe(EMPTY)\r\n  })\r\n\r\n})\r\n\r\ndescribe('isYNumber', () => {\r\n  const fn = isYNumber\r\n  test('should return true for object with property y number', () => {\r\n    expect(fn({y: 10})).toBe(true)\r\n    expect(fn({y: 1})).toBe(true)\r\n    expect(fn({y: 0})).toBe(true)\r\n    expect(fn({y: -1})).toBe(true)\r\n  })\r\n  test('should return false for object with property y not number', ()=>{\r\n    expect(fn({y: null})).toBe(false)\r\n    expect(fn({y: NaN})).toBe(false)\r\n    expect(fn({y: 'str'})).toBe(false)\r\n    expect(fn({y: undefined})).toBe(false)\r\n    expect(fn({y: true})).toBe(false)\r\n    expect(fn({y: false})).toBe(false)\r\n    expect(fn({y: Number.POSITIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: Number.NEGATIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: []})).toBe(false)\r\n    expect(fn({y: {}})).toBe(false)\r\n    expect(fn({y: ()=>{} })).toBe(false)\r\n  })\r\n})\r\n\r\nconst DATA_ARR = [ [0, 0.3], [0, 0.31], [0, 0.29] ];\r\nconst DATA_POINT = [ {x:0, y: 0.3},{x:0, y: 0.31},{x:0, y: 0.29} ];\r\n\r\ndescribe('findMinY', ()=>{\r\n  const fn = findMinY;\r\n  test('should return minY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.29)\r\n  })\r\n  test('should return minY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.29)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('findMaxY', ()=>{\r\n  const fn = findMaxY;\r\n  test('should return maxY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.31)\r\n  })\r\n  test('should return maxY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.31)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('joinBy', () => {\r\n  test('should join by delimeter', () => {\r\n    expect(joinBy('.')).toBe('')\r\n    expect(joinBy('.', 'a')).toBe('a')\r\n    expect(joinBy('.', 'a', 'b')).toBe('a.b')\r\n  })\r\n  test('should filter falsy values', () => {\r\n    expect(joinBy('.', '', 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', null, 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', void 0, 'b', 'c')).toBe('b.c')\r\n  })\r\n})\r\n"],"file":"AdapterFn.test.js"}