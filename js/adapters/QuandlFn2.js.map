{"version":3,"sources":["../../src/adapters/QuandlFn2.js"],"names":["QuandlFn2","isPrevDateAfter","arr","checkedDate","predicate","length","prevDate","x","Math","abs","valueOf","createDatasetInfo","json","dataset","name","description","newest_available_date","oldest_available_date","frequency","database_code","dataset_code","_description","sanitize","createZhConfig","option","item","stock","title","subtitle","id","value","key","columnName","dataColumn","itemCaption","fromDate","seriaColumnNames","linkFn","limitRemaining","createPercent","bValue","bTotal","eq","times","div","toFixed","createValueMoving","bNowValue","bPrevValue","_bDelta","minus","_direction","gt","DOWN","gte","UP","EQUAL","round","_bPercent","_bNowValue","fnNumberFormat","delta","percent","toString","direction","createValueMovingFromSeria","seria","len","date","formatTo","getRecentDate","millisUTC","d","toLowerCase","Date","getUTCFullYear","setTitleToConfig","config","text","findColumnIndex","obj","column_names","Array","isArray","_columnName","i","max","undefined","getDataColumnIndex","_dataColumn","_columnIndex","findMinY","data","minY","Number","POSITIVE_INFINITY"],"mappings":"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","file":"QuandlFn2.js","sourcesContent":["import Big from 'big.js';\r\nimport DOMPurify from 'purify';\r\n\r\nimport DateUtils from '../utils/DateUtils';\r\nimport { Direction } from '../constants/Type';\r\nimport ChartConfig from '../charts/ChartConfig';\r\n\r\nconst QuandlFn2 = {\r\n\r\n  isPrevDateAfter(arr, checkedDate, predicate){\r\n     const length = arr.length;\r\n     if (length === 0){\r\n       return true;\r\n     }\r\n     const prevDate = arr[length-1].x;\r\n     if (Math.abs((checkedDate.valueOf()-prevDate.valueOf())/(24*60*60*1000)) < predicate){\r\n       return false;\r\n     } else {\r\n       return true;\r\n     }\r\n  },\r\n\r\n  createDatasetInfo(json){\r\n     const { dataset={} } = json\r\n         , {\r\n           name='', description='',\r\n           newest_available_date='', oldest_available_date='',\r\n           frequency='',\r\n           database_code='', dataset_code=''\r\n          } = dataset\r\n         , _description = DOMPurify.sanitize(description)                                   ;\r\n\r\n     return  {\r\n       name,\r\n       newest_available_date,\r\n       oldest_available_date,\r\n       frequency,\r\n       database_code, dataset_code,\r\n       description : _description\r\n    };\r\n  },\r\n\r\n  createZhConfig(option){\r\n    return {\r\n      item : option.stock,\r\n      title : option.title,\r\n      subtitle : (option.subtitle) ? option.subtitle : '',\r\n      id : option.value,\r\n      key : option.key,\r\n      columnName : option.columnName,\r\n      dataColumn: option.dataColumn,\r\n      itemCaption : option.itemCaption,\r\n      fromDate : option.fromDate,\r\n      seriaColumnNames : option.seriaColumnNames,\r\n      linkFn : option.linkFn,\r\n      limitRemaining : option.limitRemaining\r\n    }\r\n  },\r\n\r\n  createPercent({ bValue=Big('0.0'), bTotal=Big('0.0') }){\r\n    return (!bTotal.eq(Big(0.0)) )\r\n              ? bValue.times(100).div(bTotal).abs().toFixed(2)\r\n              : Big(0.0);\r\n  },\r\n\r\n  createValueMoving({ bNowValue=Big('0.0'), bPrevValue=Big('0.0') }){\r\n\r\n    let _bDelta = bPrevValue.minus(bNowValue)\r\n      , _direction;\r\n    if (_bDelta.gt(0.0)){\r\n      _direction = Direction.DOWN;\r\n    } else if (!_bDelta.gte(0.0)){\r\n      _direction = Direction.UP;\r\n    } else {\r\n      _direction = Direction.EQUAL;\r\n    }\r\n\r\n    _bDelta = _bDelta.abs().round(4);\r\n\r\n    const _bPercent = this.createPercent({ bValue:_bDelta, bTotal: bPrevValue });\r\n\r\n    let _bNowValue = Big(bNowValue).round(4);\r\n    if ( _bNowValue.gt('1000000') ){\r\n      _bNowValue = bNowValue.toFixed(0);\r\n      _bDelta = _bDelta.toFixed(0);\r\n    }\r\n\r\n    return {\r\n      value : ChartConfig.fnNumberFormat(_bNowValue),\r\n      delta : ChartConfig.fnNumberFormat(_bDelta),\r\n      percent : _bPercent.toString() + '%',\r\n      direction : _direction\r\n    };\r\n  },\r\n\r\n  createValueMovingFromSeria(seria){\r\n    const len = seria.length\r\n        , bNowValue = (len>0)\r\n             ? ( (seria[len-1][1]) ? seria[len-1][1] : '0.0' )\r\n             : '0.0'\r\n        , bPrevValue = (len>1)\r\n             ? ( (seria[len-2][1] ) ? Big(seria[len-2][1]) : Big(0.0) )\r\n             : Big(0.0)\r\n        , date = (len>0)\r\n             ? DateUtils.formatTo(seria[len-1][0])\r\n             : ''\r\n\r\n    return  { ...this.createValueMoving({ bNowValue, bPrevValue }), date }\r\n  },\r\n\r\n  getRecentDate(seria=[], json){\r\n     const len = seria.length\r\n         , { dataset={} } = json\r\n         , { frequency='' } = dataset\r\n         , millisUTC = (len>0 && seria[len-1][0] && typeof seria[len-1][0]==='number')\r\n              ? seria[len-1][0]\r\n              : ''\r\n         , d = (millisUTC)\r\n              ? (frequency.toLowerCase() === 'annual')\r\n                   ? new Date(millisUTC).getUTCFullYear()\r\n                   : DateUtils.formatTo(millisUTC)\r\n              : '';\r\n      return d\r\n  },\r\n\r\n  setTitleToConfig(config={}, option={}){\r\n    const {title, subtitle} = option;\r\n    config.title.text = (title) ? title : '';\r\n    config.subtitle.text = (subtitle) ? `${subtitle}:` : '';\r\n  },\r\n\r\n  findColumnIndex(obj, columnName=''){\r\n     const column_names = (Array.isArray(obj))\r\n             ? obj\r\n             : (obj.dataset.column_names) ? obj.dataset.column_names : []\r\n         , _columnName = columnName.toLowerCase();\r\n\r\n     if ( columnName && column_names ) {\r\n        for (let i=0, max=column_names.length; i<max; i++){\r\n          if (column_names[i].toLowerCase() === _columnName){\r\n            return i;\r\n          }\r\n        }\r\n     }\r\n     return undefined;\r\n  },\r\n\r\n  getDataColumnIndex(json, option){\r\n    const { columnName, dataColumn } = option\r\n        , _dataColumn = this.findColumnIndex(json, columnName)\r\n        , _columnIndex = (_dataColumn)\r\n              ? _dataColumn\r\n              : (dataColumn) ? dataColumn : 1;\r\n\r\n     return _columnIndex;\r\n  },\r\n\r\n  findMinY(data=[]){\r\n    let minY = Number.POSITIVE_INFINITY;\r\n    for (let i=0, max=data.length; i<max; i++){\r\n      if ( data[i][1]<minY ) {\r\n        minY = data[i][1]\r\n      }\r\n    }\r\n\r\n    if ( minY !== Number.POSITIVE_INFINITY) {\r\n      return minY;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default QuandlFn2\r\n"]}