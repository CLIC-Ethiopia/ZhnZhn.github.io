{"version":3,"sources":["../../src/adapters/QuandlFn2.js"],"names":["QuandlFn2","isPrevDateAfter","arr","checkedDate","predicate","length","prevDate","x","Math","abs","valueOf","createDatasetInfo","json","dataset","name","description","newest_available_date","oldest_available_date","frequency","database_code","dataset_code","_description","sanitize","createZhConfig","option","item","title","subtitle","id","value","key","columnName","dataColumn","itemCaption","fromDate","seriaColumnNames","linkFn","limitRemaining","dataSource","_dataSource","createPercent","bValue","bTotal","calcPercent","createValueMoving","bNowValue","bPrevValue","crValueMoving","nowValue","prevValue","Direction","fnFormat","fnNumberFormat","getRecentDate","seria","millisUTC","len","d","toLowerCase","Date","getUTCFullYear","formatTo","setTitleToConfig","config","text","findColumnIndex","obj","column_names","Array","isArray","_columnName","i","max","undefined","getDataColumnIndex","_dataColumn","_columnIndex","findMinY","data","minY","Number","POSITIVE_INFINITY"],"mappings":"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","file":"QuandlFn2.js","sourcesContent":["import Big from 'big.js';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport mathFn from '../math/mathFn';\r\n\r\nimport DateUtils from '../utils/DateUtils';\r\nimport { Direction } from '../constants/Type';\r\nimport ChartConfig from '../charts/ChartConfig';\r\n\r\nconst QuandlFn2 = {\r\n\r\n  isPrevDateAfter(arr, checkedDate, predicate){\r\n     const length = arr.length;\r\n     if (length === 0){\r\n       return true;\r\n     }\r\n     const prevDate = arr[length-1].x;\r\n     if (Math.abs((checkedDate.valueOf()-prevDate.valueOf())/(24*60*60*1000)) < predicate){\r\n       return false;\r\n     } else {\r\n       return true;\r\n     }\r\n  },\r\n\r\n  createDatasetInfo(json){\r\n     const { dataset={} } = json\r\n         , {\r\n           name='', description='',\r\n           newest_available_date='', oldest_available_date='',\r\n           frequency='',\r\n           database_code='', dataset_code=''\r\n          } = dataset\r\n         , _description = DOMPurify.sanitize(description)                                   ;\r\n\r\n     return  {\r\n       name,\r\n       newest_available_date,\r\n       oldest_available_date,\r\n       frequency,\r\n       database_code, dataset_code,\r\n       description : _description\r\n    };\r\n  },\r\n\r\n  createZhConfig(option){\r\n    const {\r\n            item, title, subtitle='',\r\n            value:id, key, columnName, dataColumn,\r\n            itemCaption, fromDate, seriaColumnNames,\r\n            linkFn, limitRemaining, dataSource\r\n          } = option\r\n        , _dataSource = dataSource\r\n             ? `Quandl: ${dataSource}`\r\n             : 'Quandl';\r\n    return {\r\n      item,\r\n      title, subtitle,\r\n      id, key,\r\n      columnName, dataColumn, itemCaption,\r\n      fromDate, seriaColumnNames,\r\n      linkFn,\r\n      limitRemaining,\r\n      dataSource: _dataSource\r\n    }\r\n  },\r\n\r\n  createPercent({ bValue=Big('0.0'), bTotal=Big('0.0') }){\r\n    return mathFn.calcPercent({ bValue, bTotal });\r\n  },\r\n\r\n  createValueMoving({ bNowValue=Big('0.0'), bPrevValue=Big('0.0') }){\r\n    return mathFn.crValueMoving({\r\n      nowValue: bNowValue,\r\n      prevValue: bPrevValue,\r\n      Direction: Direction,\r\n      fnFormat: ChartConfig.fnNumberFormat\r\n    });\r\n  },\r\n\r\n  getRecentDate(seria=[], json){\r\n     const len = seria.length\r\n         , { dataset={} } = json\r\n         , { frequency='' } = dataset\r\n         , millisUTC = (len>0 && seria[len-1][0] && typeof seria[len-1][0]==='number')\r\n              ? seria[len-1][0]\r\n              : ''\r\n         , d = (millisUTC)\r\n              ? (frequency.toLowerCase() === 'annual')\r\n                   ? new Date(millisUTC).getUTCFullYear()\r\n                   : DateUtils.formatTo(millisUTC)\r\n              : '';\r\n      return d\r\n  },\r\n\r\n  setTitleToConfig(config={}, option={}){\r\n    const {title, subtitle} = option;\r\n    config.title.text = (title) ? title : '';\r\n    config.subtitle.text = (subtitle) ? `${subtitle}:` : '';\r\n  },\r\n\r\n  findColumnIndex(obj, columnName=''){\r\n     const column_names = Array.isArray(obj)\r\n             ? obj\r\n             : obj.dataset.column_names\r\n                  ? obj.dataset.column_names\r\n                  : []\r\n         , _columnName = columnName.toLowerCase();\r\n\r\n     if ( columnName && column_names ) {\r\n        for (let i=0, max=column_names.length; i<max; i++){\r\n          if (column_names[i].toLowerCase() === _columnName){\r\n            return i;\r\n          }\r\n        }\r\n     }\r\n     return undefined;\r\n  },\r\n\r\n  getDataColumnIndex(json, option){\r\n    const { columnName, dataColumn } = option\r\n        , _dataColumn = this.findColumnIndex(json, columnName)\r\n        , _columnIndex = (_dataColumn)\r\n              ? _dataColumn\r\n              : (dataColumn) ? dataColumn : 1;\r\n\r\n     return _columnIndex;\r\n  },\r\n\r\n  findMinY(data=[]){\r\n    let minY = Number.POSITIVE_INFINITY;\r\n    for (let i=0, max=data.length; i<max; i++){\r\n      if ( data[i][1]<minY ) {\r\n        minY = data[i][1]\r\n      }\r\n    }\r\n\r\n    if ( minY !== Number.POSITIVE_INFINITY) {\r\n      return minY;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default QuandlFn2\r\n"]}