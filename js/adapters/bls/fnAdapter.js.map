{"version":3,"sources":["../../../src/adapters/bls/fnAdapter.js"],"names":["ymdToUTC","getYear","getCurrentYear","joinBy","AdapterFn","_crZhConfig","_itemKey","itemCaption","dataSource","dfTitle","linkItem","id","key","item","linkFn","_crInfo","name","fnAdapter","crHm","crError","crData","json","data","Results","series","_data","forEach","p","year","period","value","_m","parseInt","replace","push","x","y","parseFloat","reverse","crConfOption","option","zhConfig","info"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAM;AACJA,EAAAA,QADI;AAEJC,EAAAA,OAFI;AAGJC,EAAAA,cAHI;AAIJC,EAAAA;AAJI,IAKFC,kBALJ;;AAOA,MAAMC,WAAW,GAAG;AAAA,MAAC;AACnBC,IAAAA,QADmB;AAEnBC,IAAAA,WAFmB;AAGnBC,IAAAA,UAHmB;AAGPC,IAAAA,OAHO;AAInBC,IAAAA;AAJmB,GAAD;AAAA,SAKb;AACLC,IAAAA,EAAE,EAAEL,QADC;AACSM,IAAAA,GAAG,EAAEN,QADd;AAELO,IAAAA,IAAI,EAAE,EAAE,GAAGH;AAAL,KAFD;AAGLI,IAAAA,MAAM,EAAE,IAHH;AAILP,IAAAA,WAJK;AAKLC,IAAAA,UAAU,EAAEL,MAAM,CAAC,IAAD,EAAOK,UAAP,EAAmBC,OAAnB;AALb,GALa;AAAA,CAApB;;AAaA,MAAMM,OAAO,GAAG;AAAA,MAAC;AAAER,IAAAA;AAAF,GAAD;AAAA,SAAsB;AACpCS,IAAAA,IAAI,EAAET;AAD8B,GAAtB;AAAA,CAAhB;;AAIA,MAAMU,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAJA,UADgB;AAEhBC,EAAAA,OAAO,EAAPA,aAFgB;AAGhBlB,EAAAA,OAHgB;AAIhBC,EAAAA,cAJgB;AAMhBkB,EAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,UAAMC,IAAI,GAAGD,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBF,IAApC;AAAA,UACKG,KAAK,GAAG,EADb;AAEAH,IAAAA,IAAI,CAACI,OAAL,CAAaC,CAAC,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,MAAM,GAAC,EAAf;AAAmBC,QAAAA;AAAnB,UAA6BH,CAAnC;AAAA,YACMI,EAAE,GAAGC,QAAQ,CAAC,CAAC,KAAGH,MAAJ,EAAYI,OAAZ,CAAoB,GAApB,EAAwB,EAAxB,CAAD,EAA8B,EAA9B,CADnB;;AAEA,UAAI,OAAOF,EAAP,KAAc,QAAd,IAA0BA,EAAE,GAAC,CAA7B,IAAkCA,EAAE,GAAC,EAAzC,EAA6C;AAC3CN,QAAAA,KAAK,CAACS,IAAN,CAAW;AACRC,UAAAA,CAAC,EAAEnC,QAAQ,CAAI4B,IAAJ,SAAYG,EAAZ,CADH;AAERK,UAAAA,CAAC,EAAEC,UAAU,CAACP,KAAD;AAFL,SAAX;AAID;AACF,KATD;AAUA,WAAOL,KAAK,CAACa,OAAN,EAAP;AACD,GApBe;AAsBhBC,EAAAA,YAAY,EAAGC,MAAD,KAAa;AACzBC,IAAAA,QAAQ,EAAEpC,WAAW,CAACmC,MAAD,CADI;AAEzBE,IAAAA,IAAI,EAAE3B,OAAO,CAACyB,MAAD;AAFY,GAAb;AAtBE,CAAlB;eA6BevB,S","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport { crHm, crError } from '../crFn';\r\n\r\nconst {\r\n  ymdToUTC,\r\n  getYear,\r\n  getCurrentYear,\r\n  joinBy\r\n} = AdapterFn;\r\n\r\nconst _crZhConfig = ({\r\n  _itemKey,\r\n  itemCaption,\r\n  dataSource, dfTitle,\r\n  linkItem\r\n}) => ({\r\n  id: _itemKey, key: _itemKey,\r\n  item: { ...linkItem },\r\n  linkFn: 'DF',\r\n  itemCaption,\r\n  dataSource: joinBy(\": \", dataSource, dfTitle)\r\n});\r\n\r\nconst _crInfo = ({ itemCaption }) => ({\r\n  name: itemCaption\r\n});\r\n\r\nconst fnAdapter = {\r\n  crHm,\r\n  crError,\r\n  getYear,\r\n  getCurrentYear,\r\n\r\n  crData: (json) => {\r\n    const data = json.Results.series[0].data\r\n       , _data = [];\r\n    data.forEach(p => {\r\n      const { year, period='', value } = p\r\n          , _m = parseInt((''+period).replace('M',''), 10)\r\n      if (typeof _m === 'number' && _m>0 && _m<13) {\r\n        _data.push({\r\n           x: ymdToUTC(`${year}-${_m}`),\r\n           y: parseFloat(value)\r\n        });\r\n      }\r\n    })\r\n    return _data.reverse();\r\n  },\r\n\r\n  crConfOption: (option) => ({\r\n    zhConfig: _crZhConfig(option),\r\n    info: _crInfo(option)\r\n  })\r\n\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}