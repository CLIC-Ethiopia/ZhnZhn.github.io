{"version":3,"sources":["../../src/adapters/crAdapterOHLCV.js"],"names":["valueMoving","AdapterFn","_crCaptionDf","title","subtitle","_crIdDf","_itemKey","_getArrDf","json","_crAddConfigDf","crAdapterOHLCV","seriaOption","crCaption","crId","getArr","crAddConfig","toDate","toConfig","option","id","dataOption","arr","dC","dMfi","config","stockConfig","addCaption","add","data","legend","addZhPointsIf","toSeries","isAllSeries","stockSeria","toSeria"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAM;AACJA,EAAAA;AADI,IAEFC,kBAFJ;;AAIA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,SAA0B;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA1B;AAAA,CAArB;AAAA,MACEC,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAkBA,QAAlB;AAAA,CADZ;AAAA,MAEEC,SAAS,GAAGC,IAAI,IAAIA,IAFtB;AAAA,MAGEC,cAAc,GAAG,MAAM,CAAE,CAH3B;;AAKA,MAAMC,cAAc,GAAG;AAAA,MAAC;AACtBC,IAAAA,WAAW,GAAC,EADU;AAEtBC,IAAAA,SAAS,GAACV,YAFY;AAGtBW,IAAAA,IAAI,GAACR,OAHiB;AAItBS,IAAAA,MAAM,GAACP,SAJe;AAKtBQ,IAAAA,WAAW,GAACN,cALU;AAMtBO,IAAAA;AANsB,GAAD;AAAA,SAOhB;AACLC,IAAAA,QAAQ,CAACT,IAAD,EAAOU,MAAP,EAAc;AACpB,YAAM;AAAEf,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBQ,SAAS,CAACM,MAAD,EAASV,IAAT,CAArC;AAAA,YACEW,EAAE,GAAGN,IAAI,CAACK,MAAD,CADX;AAAA,YAEEE,UAAU,GAAG,uCAAkB;AAC7BC,QAAAA,GAAG,EAAEP,MAAM,CAACN,IAAD,EAAOU,MAAP,CADkB;AAE7BF,QAAAA,MAF6B;AAG7BL,QAAAA,WAH6B;AAGhBO,QAAAA;AAHgB,OAAlB,CAFf;AAAA,YAOE;AAAEI,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeH,UAPjB;AAAA,YAQEI,MAAM,GAAG,8BACNC,WADM,CACMN,EADN,EACUC,UADV,EAENM,UAFM,CAEKvB,KAFL,EAEYC,QAFZ,EAGNuB,GAHM,CAGF;AACF3B,QAAAA,WAAW,EAAEA,WAAW,CAACsB,EAAD,CADtB;AAEF,WAAGP,WAAW,CAAC;AACZP,UAAAA,IADY;AACNU,UAAAA,MADM;AACEU,UAAAA,IAAI,EAAEN,EADR;AAEZH,UAAAA,EAFY;AAERhB,UAAAA,KAFQ;AAEDC,UAAAA;AAFC,SAAD;AAFZ,OAHE,EAULuB,GAVK,CAUD,UAVC,EAUW;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAVX,EAWLC,aAXK,CAWSP,IAXT,EAYLN,QAZK,EARX;AAsBA,aAAO;AAAEO,QAAAA;AAAF,OAAP;AACD,KAzBI;;AA2BLO,IAAAA,QAAQ,CAACvB,IAAD,EAAOU,MAAP,EAAc;AACpB,YAAMC,EAAE,GAAGN,IAAI,CAACK,MAAD,CAAf;AAAA,YACE;AAAEU,QAAAA;AAAF,UAAW,uCAAkB;AAC5BP,QAAAA,GAAG,EAAEP,MAAM,CAACN,IAAD,EAAOU,MAAP,CADiB;AAE5BF,QAAAA,MAF4B;AAG5BL,QAAAA,WAAW,EAAE,EAAE,GAAGA,WAAL;AAAkBqB,UAAAA,WAAW,EAAE;AAA/B,SAHe;AAI5Bd,QAAAA;AAJ4B,OAAlB,CADb;AAOA,aAAO,8BACJe,UADI,CACOd,EADP,EACWS,IADX,EAEJM,OAFI,EAAP;AAGD;;AAtCI,GAPgB;AAAA,CAAvB;;eAgDexB,c","sourcesContent":["import Builder from '../charts/ConfigBuilder'\r\nimport AdapterFn from './AdapterFn'\r\nimport { stockSeriesLegend } from './legendFn';\r\nimport { toStockSeriesData } from './AdapterStockFn'\r\n\r\nconst {\r\n  valueMoving\r\n} = AdapterFn;\r\n\r\nconst _crCaptionDf = ({ title, subtitle }) => ({ title, subtitle })\r\n, _crIdDf = ({ _itemKey }) => _itemKey\r\n, _getArrDf = json => json\r\n, _crAddConfigDf = () => {};\r\n\r\nconst crAdapterOHLCV = ({\r\n  seriaOption={},\r\n  crCaption=_crCaptionDf,\r\n  crId=_crIdDf,\r\n  getArr=_getArrDf,\r\n  crAddConfig=_crAddConfigDf,\r\n  toDate\r\n}) => ({\r\n  toConfig(json, option){\r\n    const { title, subtitle } = crCaption(option, json)\r\n    , id = crId(option)\r\n    , dataOption = toStockSeriesData({\r\n        arr: getArr(json, option),\r\n        toDate,\r\n        seriaOption, option\r\n      })\r\n    , { dC, dMfi } = dataOption\r\n    , config = Builder()\r\n        .stockConfig(id, dataOption)\r\n        .addCaption(title, subtitle)\r\n        .add({\r\n           valueMoving: valueMoving(dC),\r\n           ...crAddConfig({\r\n              json, option, data: dC,\r\n              id, title, subtitle\r\n           })\r\n         })\r\n         .add('zhConfig', { legend: stockSeriesLegend() })\r\n         .addZhPointsIf(dMfi)\r\n         .toConfig();\r\n\r\n    return { config };\r\n  },\r\n\r\n  toSeries(json, option){\r\n    const id = crId(option)\r\n    , { data } = toStockSeriesData({\r\n       arr: getArr(json, option),\r\n       toDate,\r\n       seriaOption: { ...seriaOption, isAllSeries: false },\r\n       option\r\n     });\r\n    return Builder()\r\n      .stockSeria(id, data)\r\n      .toSeria();\r\n  }\r\n})\r\n\r\nexport default crAdapterOHLCV\r\n"],"file":"crAdapterOHLCV.js"}