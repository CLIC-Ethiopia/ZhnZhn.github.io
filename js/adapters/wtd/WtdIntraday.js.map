{"version":3,"sources":["../../../src/adapters/wtd/WtdIntraday.js"],"names":["stockSeriesLegend","AdapterFn","valueMoving","crSeriesData","IntradayFns","crDataVm","_crZhConfig","id","dataSource","key","isWithoutAdd","legend","_crIntradayConfigOption","data","zhConfig","WtdIntraday","crKey","option","value","two","toConfig","json","_itemId","intraday","dH","dL","dO","minClose","maxClose","dColumn","dVolume","_dataVm","config","intradayConfig","addCaption","add"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;IAGEA,iB,GAEEC,qB,CAFFD,iB;IACAE,W,GACED,qB,CADFC,W;IAIAC,Y,GAEEC,uB,CAFFD,Y;IACAE,Q,GACED,uB,CADFC,Q;;AAGF,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAKC,UAAL;AAAA,SAAqB;AACvCD,IAAAA,EAAE,EAAEA,EADmC;AAEvCE,IAAAA,GAAG,EAAEF,EAFkC;AAGvCG,IAAAA,YAAY,EAAE,IAHyB;AAIvCC,IAAAA,MAAM,EAAEX,iBAAiB,EAJc;AAKvCQ,IAAAA,UAAU,EAAEA;AAL2B,GAArB;AAAA,CAApB;;AAQA,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,MAAGL,EAAH,QAAGA,EAAH;AAAA,MAAOM,IAAP,QAAOA,IAAP;AAAA,MAAaL,UAAb,QAAaA,UAAb;AAAA,SAA+B;AAC7DM,IAAAA,QAAQ,EAAER,WAAW,CAACC,EAAD,EAAKC,UAAL,CADwC;AAE7DN,IAAAA,WAAW,EAAEA,WAAW,CAACW,IAAD;AAFqC,GAA/B;AAAA,CAAhC;;AAKA,IAAME,WAAW,GAAG;AAClBC,EAAAA,KADkB,iBACZC,MADY,EACL;AAAA,QACHC,KADG,GACYD,MADZ,CACHC,KADG;AAAA,QACIC,GADJ,GACYF,MADZ,CACIE,GADJ;AAEX,WAAUD,KAAV,UAAoBC,GAApB;AACD,GAJiB;AAKlBC,EAAAA,QALkB,oBAKTC,IALS,EAKHJ,MALG,EAKK;AAAA,QACbK,OADa,GACWL,MADX,CACbK,OADa;AAAA,QACJd,UADI,GACWS,MADX,CACJT,UADI;AAAA,wBAMfL,YAAY,CAACkB,IAAI,CAACE,QAAN,EAAgBN,MAAhB,EAAwBK,OAAxB,CANG;AAAA,QAGjBT,IAHiB,iBAGjBA,IAHiB;AAAA,QAGXW,EAHW,iBAGXA,EAHW;AAAA,QAGPC,EAHO,iBAGPA,EAHO;AAAA,QAGHC,EAHG,iBAGHA,EAHG;AAAA,QAIjBC,QAJiB,iBAIjBA,QAJiB;AAAA,QAIPC,QAJO,iBAIPA,QAJO;AAAA,QAKjBC,OALiB,iBAKjBA,OALiB;AAAA,QAKRC,OALQ,iBAKRA,OALQ;AAAA,QAOnBC,OAPmB,GAOT1B,QAAQ,CAACQ,IAAD,CAPC;AAAA,QASnBmB,MATmB,GASV,iCACNC,cADM,CACS;AACb1B,MAAAA,EAAE,EAAEe,OADS;AAEbT,MAAAA,IAAI,EAAJA,IAFa;AAEPW,MAAAA,EAAE,EAAFA,EAFO;AAEHC,MAAAA,EAAE,EAAFA,EAFG;AAECC,MAAAA,EAAE,EAAFA,EAFD;AAGbC,MAAAA,QAAQ,EAARA,QAHa;AAGHC,MAAAA,QAAQ,EAARA,QAHG;AAIbE,MAAAA,OAAO,EAAPA,OAJa;AAIJD,MAAAA,OAAO,EAAPA;AAJI,KADT,EAONK,UAPM,CAOKZ,OAPL,EAQNa,GARM,CAQFvB,uBAAuB,CAAC;AAC1BL,MAAAA,EAAE,EAAEe,OADsB;AAE1BT,MAAAA,IAAI,EAAEkB,OAFoB;AAG1BvB,MAAAA,UAAU,EAAVA;AAH0B,KAAD,CARrB,EAaNY,QAbM,EATU;;AAwBrB,WAAO;AAAEY,MAAAA,MAAM,EAANA;AAAF,KAAP;AACD;AA9BiB,CAApB;eAiCejB,W","sourcesContent":["import Builder from '../../charts/ConfigBuilder'\r\n\r\nimport AdapterFn from '../AdapterFn'\r\nimport IntradayFns from '../IntradayFns'\r\n\r\nconst {\r\n  stockSeriesLegend,\r\n  valueMoving\r\n} = AdapterFn;\r\n\r\nconst {\r\n  crSeriesData,\r\n  crDataVm\r\n} = IntradayFns;\r\n\r\nconst _crZhConfig = (id, dataSource) => ({\r\n  id: id,\r\n  key: id,\r\n  isWithoutAdd: true,\r\n  legend: stockSeriesLegend(),\r\n  dataSource: dataSource\r\n});\r\n\r\nconst _crIntradayConfigOption = ({ id, data, dataSource }) => ({\r\n  zhConfig: _crZhConfig(id, dataSource),\r\n  valueMoving: valueMoving(data)\r\n});\r\n\r\nconst WtdIntraday = {\r\n  crKey(option){\r\n    const { value, two } = option;\r\n    return `${value} (${two}min)`;\r\n  },\r\n  toConfig(json, option) {\r\n    const { _itemId, dataSource } = option\r\n    , {\r\n        data, dH, dL, dO,\r\n        minClose, maxClose,\r\n        dColumn, dVolume\r\n      } = crSeriesData(json.intraday, option, _itemId)\r\n    , _dataVm = crDataVm(data)\r\n    //, { timezone_name='' } = json\r\n    , config = Builder()\r\n        .intradayConfig({\r\n           id: _itemId,\r\n           data, dH, dL, dO,\r\n           minClose, maxClose,\r\n           dVolume, dColumn\r\n         })\r\n        .addCaption(_itemId)\r\n        .add(_crIntradayConfigOption({\r\n           id: _itemId,\r\n           data: _dataVm,\r\n           dataSource\r\n        }))\r\n        .toConfig();\r\n\r\n    return { config };\r\n  }\r\n};\r\n\r\nexport default WtdIntraday\r\n"],"file":"WtdIntraday.js"}