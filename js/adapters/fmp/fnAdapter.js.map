{"version":3,"sources":["../../../src/adapters/fmp/fnAdapter.js"],"names":["crError","AdapterFn","getFromDate","getCaption","getValue","joinBy","ymdToUTC","valueMoving","crItemLink","compareByDate","crItemConf","crValueConf","crSeria","_isNaN","Number","isNaN","_isHistorical","dfPn","_crHistoricalItemConf","data","option","itemCaption","dataSource","items","dfT","_itemKey","_crZhConfig","itemConf","id","key","_crName","map","item","caption","join","_crDescription","bind","_crInfo","_itemUrl","name","description","fnAdapter","crData","metrics","propName","_data","forEach","_v","parseFloat","push","date","reverse","sort","crCaption","title","subtitle","crConfigOption","json","zhConfig","info"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\n\r\nconst {\r\n  crError,\r\n  getFromDate,\r\n  getCaption,\r\n  getValue,\r\n  joinBy,\r\n  ymdToUTC,\r\n  valueMoving,\r\n  crItemLink,\r\n  compareByDate,\r\n  crItemConf,\r\n  crValueConf,\r\n  crSeria\r\n} = AdapterFn;\r\n\r\nconst _isNaN = Number.isNaN || isNaN\r\n\r\nconst _isHistorical = dfPn => dfPn === 'historical';\r\nconst _crHistoricalItemConf = (data, option) => {\r\n  const {\r\n    itemCaption, dataSource,\r\n    items, dfT, dfPn\r\n  } = option;\r\n  return {\r\n    ...crItemConf(option),\r\n    ...crValueConf(data),\r\n    _itemKey: 'FMP/' + itemCaption,\r\n    dataSource,\r\n    items, dfT, dfPn\r\n  };\r\n}\r\n\r\nconst _crZhConfig = (data, option) => {\r\n  const {\r\n    _itemKey,\r\n    itemCaption,\r\n    dataSource,\r\n    dfPn\r\n  } = option\r\n  , itemConf = _isHistorical(dfPn)\r\n      ? _crHistoricalItemConf(data, option)\r\n      : void 0;\r\n  return {\r\n    id: _itemKey, key: _itemKey,\r\n    itemCaption,\r\n    itemConf,\r\n    dataSource\r\n  }\r\n};\r\n\r\nconst _crName = items => items\r\n  .map(item => item.caption)\r\n  .join(': ');\r\nconst _crDescription = crItemLink\r\n  .bind(null, 'Financial Modeling Prep');\r\n\r\nconst _crInfo = ({ items, _itemUrl }) => ({\r\n  name: _crName(items),\r\n  description: _crDescription(_itemUrl)\r\n});\r\n\r\nconst fnAdapter = {\r\n  crError,\r\n  getFromDate,\r\n  getCaption,\r\n  getValue,\r\n  crSeria,\r\n\r\n  crData: (metrics, propName) => {\r\n    const _data = [];\r\n    metrics.forEach(item => {\r\n      const _v = parseFloat(item[propName]);\r\n      if (!_isNaN(_v)) {\r\n        _data.push([ymdToUTC(item.date), _v])\r\n      }\r\n    })\r\n    return _data.reverse().sort(compareByDate);\r\n  },\r\n\r\n  crCaption: ({ items }) => ({\r\n    title: getCaption(items[0]),\r\n    subtitle: joinBy(': ',\r\n       getCaption(items[1]),\r\n       getCaption(items[2])\r\n    )\r\n  }),\r\n\r\n  crConfigOption: ({ json, option, data }) => ({\r\n    zhConfig: _crZhConfig(data, option),\r\n    valueMoving: valueMoving(data),\r\n    info: _crInfo(option)\r\n  })\r\n};\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}