{"version":3,"sources":["../../../src/adapters/fmp/fnAdapter.js"],"names":["_assign","Object","assign","_crHistoricalItemConf","data","option","itemCaption","dataSource","items","dfT","dfPn","_itemKey","_crHistZhConfig","itemConf","_crName","map","getCaption","join","_crInfo","_itemUrl","name","crData","json","_propName","_metrics","_data","forEach","item","_v","parseFloat","push","date","reverse","sort","compareByDate","crCaption","title","subtitle","addConfOption","info","crHistOption","zhConfig"],"mappings":";;;;;AAAA;;;;;;AAKA;;;;AAWA;;AAMO,MAAMA,OAAO,GAAGC,MAAM,CAACC,MAAvB;;;AAEP,MAAMC,qBAAqB,GAAG,CAC5BC,IAD4B,EAE5BC,MAF4B,KAGzB;AACH,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,GAJI;AAKJC,IAAAA;AALI,MAMFL,MANJ;AAOA,SAAO,EACL,GAAG,sBAAWA,MAAX,CADE;AAEL,OAAG,uBAAYD,IAAZ,CAFE;AAGLO,IAAAA,QAAQ,EAAE,SAASL,WAHd;AAILC,IAAAA,UAJK;AAKLC,IAAAA,KALK;AAKEC,IAAAA,GALF;AAKOC,IAAAA;AALP,GAAP;AAOD,CAlBD;;AAoBA,MAAME,eAAe,GAAG,CACtBR,IADsB,EAEtBC,MAFsB,MAGlB,EACJ,GAAG,2BAAWA,MAAX,CADC;AAEJQ,EAAAA,QAAQ,EAAEV,qBAAqB,CAACC,IAAD,EAAOC,MAAP;AAF3B,CAHkB,CAAxB;;AAQA,MAAMS,OAAO,GAAGN,KAAK,IAAIA,KAAK,CAC3BO,GADsB,CAClBC,qBADkB,EAEtBC,IAFsB,CAEjB,IAFiB,CAAzB;;AAIA,MAAMC,OAAO,GAAG;AAAA,MAAC;AACfV,IAAAA,KADe;AAEfW,IAAAA;AAFe,GAAD;AAAA,SAGT;AACLC,IAAAA,IAAI,EAAEN,OAAO,CAACN,KAAD;AADR,GAHS;AAAA,CAAhB;;AAOO,MAAMa,MAAM,GAAG,CACpBC,IADoB,EAEpBjB,MAFoB,KAGjB;AACH,QAAM;AAAEK,IAAAA,IAAF;AAAQa,IAAAA;AAAR,MAAsBlB,MAA5B;AAAA,QACEmB,QAAQ,GAAGd,IAAI,GAAGY,IAAI,CAACZ,IAAD,CAAP,GAAgBY,IADjC;AAAA,QAEEG,KAAK,GAAG,EAFV;;AAGAD,EAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACvB,UAAMC,EAAE,GAAGC,UAAU,CAACF,IAAI,CAACJ,SAAD,CAAL,CAArB;;AACA,QAAI,CAAC,uBAAOK,EAAP,CAAL,EAAiB;AACfH,MAAAA,KAAK,CAACK,IAAN,CAAW,CAAC,yBAASH,IAAI,CAACI,IAAd,CAAD,EAAsBH,EAAtB,CAAX;AACD;AACF,GALD;;AAMA,SAAOH,KAAK,CAACO,OAAN,GAAgBC,IAAhB,CAAqBC,0BAArB,CAAP;AACD,CAdM;;;;AAgBA,MAAMC,SAAS,GAAG;AAAA,MAAC;AAAE3B,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACvC4B,IAAAA,KAAK,EAAE,2BAAW5B,KAAK,CAAC,CAAD,CAAhB,CADgC;AAEvC6B,IAAAA,QAAQ,EAAE,uBAAO,IAAP,EACP,2BAAW7B,KAAK,CAAC,CAAD,CAAhB,CADO,EAEP,2BAAWA,KAAK,CAAC,CAAD,CAAhB,CAFO;AAF6B,GAAhB;AAAA,CAAlB;;;;AAQA,MAAM8B,aAAa,GAAIjC,MAAD,KAAa;AACxCkC,EAAAA,IAAI,EAAErB,OAAO,CAACb,MAAD;AAD2B,CAAb,CAAtB;;;;AAIA,MAAMmC,YAAY,GAAG;AAAA,MAAC;AAC3BnC,IAAAA,MAD2B;AAE3BD,IAAAA;AAF2B,GAAD;AAAA,SAGrB;AACLmC,IAAAA,IAAI,EAAErB,OAAO,CAACb,MAAD,CADR;AAELoC,IAAAA,QAAQ,EAAE7B,eAAe,CAACR,IAAD,EAAOC,MAAP;AAFpB,GAHqB;AAAA,CAArB","sourcesContent":["export {\r\n  getFromDate,\r\n  getCaption,\r\n  getValue,\r\n} from '../AdapterFn';\r\nexport {\r\n  crError\r\n} from '../crFn';\r\n\r\nimport {\r\n  _isNaN,\r\n  crZhConfig,\r\n  getCaption,\r\n  joinBy,\r\n  ymdToUTC\r\n} from '../AdapterFn';\r\nimport { compareByDate } from '../compareByFn';\r\nimport {\r\n  crItemConf,\r\n  crValueConf\r\n} from '../crFn';\r\n\r\nexport const _assign = Object.assign;\r\n\r\nconst _crHistoricalItemConf = (\r\n  data,\r\n  option\r\n) => {\r\n  const {\r\n    itemCaption,\r\n    dataSource,\r\n    items,\r\n    dfT,\r\n    dfPn\r\n  } = option;\r\n  return {\r\n    ...crItemConf(option),\r\n    ...crValueConf(data),\r\n    _itemKey: 'FMP/' + itemCaption,\r\n    dataSource,\r\n    items, dfT, dfPn\r\n  };\r\n}\r\n\r\nconst _crHistZhConfig = (\r\n  data,\r\n  option\r\n) => ({\r\n  ...crZhConfig(option),\r\n  itemConf: _crHistoricalItemConf(data, option)\r\n});\r\n\r\nconst _crName = items => items\r\n  .map(getCaption)\r\n  .join(': ');\r\n\r\nconst _crInfo = ({\r\n  items,\r\n  _itemUrl\r\n}) => ({\r\n  name: _crName(items)\r\n});\r\n\r\nexport const crData = (\r\n  json,\r\n  option\r\n) => {\r\n  const { dfPn, _propName } = option\r\n  , _metrics = dfPn ? json[dfPn] : json\r\n  , _data = [];\r\n  _metrics.forEach(item => {\r\n    const _v = parseFloat(item[_propName]);\r\n    if (!_isNaN(_v)) {\r\n      _data.push([ymdToUTC(item.date), _v])\r\n    }\r\n  })\r\n  return _data.reverse().sort(compareByDate);\r\n}\r\n\r\nexport const crCaption = ({ items }) => ({\r\n  title: getCaption(items[0]),\r\n  subtitle: joinBy(': ',\r\n     getCaption(items[1]),\r\n     getCaption(items[2])\r\n  )\r\n})\r\n\r\nexport const addConfOption = (option) => ({\r\n  info: _crInfo(option)\r\n})\r\n\r\nexport const crHistOption = ({\r\n  option,\r\n  data\r\n}) => ({\r\n  info: _crInfo(option),\r\n  zhConfig: _crHistZhConfig(data, option),\r\n})\r\n"],"file":"fnAdapter.js"}