{"version":3,"sources":["../../../src/adapters/fmp/FmpApi.js"],"names":["getCaption","fnAdapter","getValue","crError","getFromDate","C","URI","ERR_EMPTY","_isArr","Array","isArray","_assign","Object","assign","_crDataSource","dataSource","dialogConf","contFullCaption","REG_BLANKS","_toLowerCamelCase","str","toLowerCase","replace","substring","_crDfPropName","item","dfT","_caption","_assignDf","option","items","it1","it2","it3","_symbol","isUpper","_period","_propName","_query","_itemUrl","itemCaption","_assignHp","fromDate","_fromDate","_rAssign","DF","historical","FmpApi","getRequestUrl","_assignTo","dfPn","apiKey","checkResponse","json","options","_json","symbol","Error"],"mappings":"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","sourcesContent":["import fnAdapter from './fnAdapter'\r\n\r\nconst {\r\n  getCaption,\r\n  getValue,\r\n  crError,\r\n  getFromDate\r\n} = fnAdapter;\r\n\r\nconst C = {\r\n  URI: 'https://financialmodelingprep.com/api/v3',\r\n  ERR_EMPTY: 'Response is empty'\r\n};\r\n\r\nconst _isArr = Array.isArray\r\nconst _assign = Object.assign;\r\n\r\nconst _crDataSource = ({ dataSource, dialogConf={} }) =>\r\n  dataSource || dialogConf.contFullCaption || '';\r\n\r\nconst REG_BLANKS = /\\s/g;\r\nconst _toLowerCamelCase = str => str[0].toLowerCase()\r\n  + str.replace(REG_BLANKS,'').substring(1);\r\n\r\nconst _crDfPropName = (item, dfT) => {\r\n  const _caption = getCaption(item);\r\n  return dfT !== \"ratios\"\r\n    ? _caption\r\n    : _toLowerCamelCase(_caption);\r\n};\r\n\r\nconst _assignDf = option => {\r\n  const { dfT, items=[] } = option\r\n  , [ it1, it2 , it3 ] = items\r\n  , _symbol = getValue(it1, {isUpper: true})\r\n  , _period = getValue(it3)\r\n  , _propName = _crDfPropName(it2, dfT)\r\n  , _query = _period\r\n      ? `period=${_period}`\r\n      : ''\r\n  , _itemUrl = `${C.URI}/${dfT}/${_symbol}?${_query}`;\r\n\r\n  _assign(option, {\r\n    _symbol,\r\n    _itemUrl, _period,\r\n    _propName,\r\n    itemCaption: _symbol+'_'+_propName,\r\n    dataSource: _crDataSource(option)\r\n  })\r\n};\r\n\r\nconst _assignHp = option => {\r\n  const {\r\n     dfT, items=[], fromDate\r\n  } = option\r\n  , _fromDate = fromDate || getFromDate(3)\r\n  , _symbol = getValue(items[0], {isUpper: true})\r\n  //, _itemUrl = `${C.URI}/${dfT}/${_symbol}?from=${_fromDate}&serietype=line`;\r\n  , _itemUrl = `${C.URI}/${dfT}/${_symbol}?from=${_fromDate}`;\r\n\r\n  _assign(option, {\r\n    _symbol,\r\n    _itemUrl,\r\n    _propName: 'close',\r\n    itemCaption: _symbol,\r\n    dataSource: _crDataSource(option)\r\n  })\r\n};\r\n\r\nconst _rAssign = {\r\n  DF: _assignDf,\r\n  historical: _assignHp\r\n};\r\n\r\nconst FmpApi = {\r\n  getRequestUrl(option){\r\n    const _assignTo = _rAssign[option.dfPn]\r\n      || _rAssign.DF;\r\n    _assignTo(option)\r\n    const { apiKey } = option;\r\n    return `${option._itemUrl}&apikey=${apiKey}`;\r\n  },\r\n\r\n  checkResponse(json, options){\r\n    const { dfPn, _symbol } = options\r\n    , _json = json || {};\r\n    if (!dfPn && _isArr(_json) && _json[0].symbol === _symbol\r\n     || _isArr(_json[dfPn]) && _json.symbol === _symbol) {\r\n       return true;\r\n    }\r\n    throw crError(\r\n      _symbol,\r\n      _json.Error || C.ERR_EMPTY\r\n    );\r\n  }\r\n};\r\n\r\nexport default FmpApi\r\n"],"file":"FmpApi.js"}