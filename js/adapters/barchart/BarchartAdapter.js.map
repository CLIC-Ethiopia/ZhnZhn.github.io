{"version":3,"sources":["../../../src/adapters/barchart/BarchartAdapter.js"],"names":["DESCR","_crInfo","caption","description","frequency","name","newest_available_date","getFromDate","oldest_available_date","_crZhConfig","id","value","columnName","dataSource","key","linkFn","isWithLegend","legend","stockSeriesLegend","_crSeriesData","chartId","json","isAllSeries","results","data","dataOpen","dataHigh","dataLow","dataVolume","dataVolumeColumn","dataATH","dataMfi","_prevClose","minClose","Number","POSITIVE_INFINITY","maxClose","NEGATIVE_INFINITY","forEach","item","tradingDay","open","high","low","close","volume","_date","ymdToUTC","push","volumeColumnPoint","date","option","_high","_low","athPoint","prevClose","_crChartId","_crConfig","title","_chartId","config","initBaseArea","add","spacingTop","addCaption","addTooltip","fnBasePointFormatter","valueMoving","info","zhConfig","zhFnAddSeriesSma","zhFnRemoveSeries","addZhVolumeConfig","addZhATHConfig","addZhPoints","setMinMax","setStockSerias","toConfig","isDrawDeltaExtrems","isNotZoomToMinMax","BarchartAdapter","_config","toSeries","parentId","_id","initBaseSeria","addPoints"],"mappings":"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","file":"BarchartAdapter.js","sourcesContent":["\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport AdapterFn from '../AdapterFn'\r\nimport Tooltip from '../../charts/Tooltip'\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\n\r\nimport { fnAddSeriesSma, fnRemoveSeries, fnGetConfigMfi } from '../IndicatorSma';\r\n\r\nconst DESCR = \"Copyright Â© 2017. All <a href='https://www.barchartmarketdata.com'>market data</a> provided by Barchart Market Data Solutions.<br><br>\" +\r\n              \"BATS market data is at least 15-minutes delayed. Forex market data is at least 10-minutes delayed. AMEX, NASDAQ, NYSE and futures market data (CBOT, CME, COMEX and NYMEX) is end-of-day. Information is provided 'as is' and solely for informational purposes, not for trading purposes or advice, and is delayed. To see all exchange delays and terms of use, please see our <a href='https://www.barchart.com/agreement.php'>disclaimer.</a>\"\r\n\r\nconst _crInfo = (caption) => ({\r\n  description: DESCR,\r\n  frequency: \"Daily\",\r\n  name: caption,\r\n  newest_available_date: DateUtils.getFromDate(0),\r\n  oldest_available_date: DateUtils.getFromDate(2)\r\n});\r\n\r\nconst _crZhConfig = (id, value) => ({\r\n  columnName: \"Close\",\r\n  dataSource: \"Barchart Market Data Solutions\",\r\n  id: id,\r\n  key: value,\r\n  linkFn: \"NASDAQ\",\r\n  isWithLegend: true,\r\n  legend: AdapterFn.stockSeriesLegend()\r\n});\r\n\r\nconst _crSeriesData = (chartId, json={}, isAllSeries=true ) => {\r\n  const { results=[] } = json\r\n      , data = []\r\n      , dataOpen = [], dataHigh = [], dataLow = []\r\n      , dataVolume = [], dataVolumeColumn = []\r\n      , dataATH = [], dataMfi = [];\r\n  let _prevClose\r\n    , minClose = Number.POSITIVE_INFINITY\r\n    , maxClose = Number.NEGATIVE_INFINITY;\r\n  results.forEach(item => {\r\n    const {\r\n           tradingDay='',\r\n           open, high, low, close, volume\r\n          } = item\r\n        , _date = AdapterFn.ymdToUTC(tradingDay);\r\n\r\n    data.push([_date, close])\r\n\r\n    if (isAllSeries) {\r\n      if (minClose > close) { minClose = close }\r\n      if (maxClose < close ) { maxClose = close }\r\n\r\n      dataOpen.push([_date, open])\r\n      dataHigh.push([_date, high])\r\n      dataLow.push([_date, low])\r\n      dataVolume.push([_date, volume])\r\n      dataVolumeColumn.push(\r\n          AdapterFn.volumeColumnPoint({\r\n             open, close, volume, date: _date,\r\n             option: { _high: high, _low: low }\r\n          })\r\n      )\r\n      dataMfi.push([tradingDay, close, high, low, close, volume])\r\n      if (typeof _prevClose !== 'undefined'){\r\n        dataATH.push(\r\n           AdapterFn.athPoint({\r\n             date: _date, prevClose: _prevClose, open\r\n           })\r\n        )\r\n      }\r\n      _prevClose = close\r\n     }\r\n  })\r\n\r\n  return {\r\n    data, minClose, maxClose,\r\n    dataOpen, dataHigh, dataLow,\r\n    dataVolume, dataVolumeColumn,\r\n    dataATH, dataMfi\r\n  };\r\n\r\n}\r\n\r\nconst _crChartId = (option) => {\r\n  const { value='' } = option;\r\n  return `B/${value}`;\r\n}\r\n\r\nconst _crConfig = (json, option) => {\r\n  const  { value='', title='' } = option\r\n      , _chartId = _crChartId(option)\r\n      , {\r\n          data, minClose, maxClose,\r\n          dataOpen, dataHigh, dataLow,\r\n          dataVolume, dataVolumeColumn,\r\n          dataATH, dataMfi\r\n        } = _crSeriesData(_chartId, json)\r\n      , config = ConfigBuilder()\r\n         .initBaseArea()\r\n         .add('chart', { spacingTop: 25 })\r\n         .addCaption(title)\r\n         .addTooltip(Tooltip.fnBasePointFormatter)\r\n         .add({\r\n            valueMoving: AdapterFn.valueMoving(data),\r\n            info: _crInfo(title),\r\n            zhConfig: _crZhConfig(_chartId, value),\r\n            zhFnAddSeriesSma: fnAddSeriesSma,\r\n            zhFnRemoveSeries: fnRemoveSeries\r\n          })\r\n          .addZhVolumeConfig(_chartId, dataVolumeColumn, dataVolume)\r\n          .addZhATHConfig(_chartId, dataATH)\r\n          .addZhPoints(dataMfi, fnGetConfigMfi)\r\n          .setMinMax(minClose, maxClose)\r\n          .setStockSerias(_chartId, data, dataHigh, dataLow, dataOpen)\r\n          .toConfig();\r\n  return {\r\n    config,\r\n    isDrawDeltaExtrems:false,\r\n    isNotZoomToMinMax:false\r\n  };\r\n}\r\n\r\nconst BarchartAdapter = {\r\n  toConfig(json, option) {\r\n    const _config = _crConfig(json, option);\r\n    return _config;\r\n  },\r\n\r\n  toSeries(json, option) {\r\n    const { parentId } = option\r\n        , _id = `${parentId}_${_crChartId(option)}`\r\n        , { data } = _crSeriesData(_id, json, false);\r\n    return ConfigBuilder()\r\n      .initBaseSeria()\r\n      .addPoints(_id, data)\r\n      .toConfig();\r\n  }\r\n}\r\n\r\nexport default BarchartAdapter\r\n"]}