{"version":3,"sources":["../../../src/adapters/__tests__/AdapterFn.test.js"],"names":["Y","in","r","d","YM","YMD","describe","fn","ymdToUTC","test","forEach","expect","toBe","isYNumber","y","NaN","undefined","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isNumberOrNull","it","toFloatOrEmpty","DATA_ARR","DATA_POINT","x","findMinY","findMaxY","valueMoving","direction","DT_EMPTY","toEqual","date","Date","UTC","value","_value","delta","_deltaAbs","percent","_percentAbs","DT_UP","valueTo","dateTo","DT_EQUAL"],"mappings":"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","sourcesContent":["/**\r\n * @jest-environment jsdom\r\n */\r\n//Highcharts dateFormat from AdapterFn require jsdom\r\n\"use strict\";\r\nimport {\r\n  ymdToUTC,\r\n  isYNumber,\r\n  isNumberOrNull,\r\n  toFloatOrEmpty,\r\n  findMinY,\r\n  findMaxY,\r\n  joinBy,\r\n  valueMoving\r\n} from '../AdapterFn';\r\n//import { Direction } from '../../constants/Type'\r\nimport {\r\n  DT_EMPTY,\r\n  DT_UP,\r\n  DT_EQUAL\r\n} from '../../constants/DirectionType';\r\n\r\nconst Y = [\r\n  { in: '2017', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2016', r: 1483142400000, d: '31-12-2016' },\r\n  { in: '2015', r: 1451520000000, d: '31-12-2015' },\r\n  { in: '2000', r: 978220800000, d: '31-12-2000' },\r\n]\r\n\r\n//Date.UTC(y, m-1, d)\r\nconst YM = [\r\n  { in: '2017-12', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2017-11', r: 1512000000000, d: '30-11-2017' },\r\n  { in: '2017-10', r: 1509408000000, d: '31-10-2017' },\r\n\r\n  { in: '2017-9', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-09', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-8', r: 1504137600000, d: '31-08-2017' },\r\n  { in: '2017-08', r: 1504137600000, d: '31-08-2017' },\r\n\r\n  { in: '2017-1', r: 1485820800000, d: '31-01-2017' },\r\n  { in: '2017-01', r: 1485820800000, d: '31-01-2017' },\r\n];\r\n\r\nconst YMD = [\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-1', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n]\r\n\r\ndescribe('ymdToUTC', () => {\r\n  const fn = ymdToUTC;\r\n  test('should return UTC msc of 31, December of year from YYYY', () => {\r\n    Y.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of last day of month from YYYY-MM', () => {\r\n    YM.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of day (00:00:00 UTC) from YYYY-MM-DD', () => {\r\n    YMD.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n});\r\n\r\ndescribe('isYNumber', () => {\r\n  const fn = isYNumber\r\n  test('should return true for object with property y number', () => {\r\n    expect(fn({y: 10})).toBe(true)\r\n    expect(fn({y: 1})).toBe(true)\r\n    expect(fn({y: 0})).toBe(true)\r\n    expect(fn({y: -1})).toBe(true)\r\n  })\r\n  test('should return false for object with property y not number', ()=>{\r\n    expect(fn({y: null})).toBe(false)\r\n    expect(fn({y: NaN})).toBe(false)\r\n    expect(fn({y: 'str'})).toBe(false)\r\n    expect(fn({y: undefined})).toBe(false)\r\n    expect(fn({y: true})).toBe(false)\r\n    expect(fn({y: false})).toBe(false)\r\n    expect(fn({y: Number.POSITIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: Number.NEGATIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: []})).toBe(false)\r\n    expect(fn({y: {}})).toBe(false)\r\n    expect(fn({y: ()=>{} })).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNumberOrNull', ()=>{\r\n  const fn = isNumberOrNull\r\n  it('should return true for number and null or false', ()=>{\r\n    expect(fn(123)).toBe(true)\r\n    expect(fn(12.3)).toBe(true)\r\n    expect(fn(1.23)).toBe(true)\r\n    expect(fn(null)).toBe(true)\r\n\r\n    expect(fn('123')).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(NaN)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('toFloatOrEmpty', ()=>{\r\n  const fn = toFloatOrEmpty\r\n  it('should convert input to float or return empty str', ()=>{\r\n    expect(fn('1.23')).toBe(1.23)\r\n    expect(fn('')).toBe('')\r\n    expect(fn('str')).toBe('')\r\n  })\r\n})\r\n\r\nconst DATA_ARR = [ [0, 0.3], [0, 0.31], [0, 0.29] ];\r\nconst DATA_POINT = [ {x:0, y: 0.3},{x:0, y: 0.31},{x:0, y: 0.29} ];\r\n\r\ndescribe('findMinY', ()=>{\r\n  const fn = findMinY;\r\n  test('should return minY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.29)\r\n  })\r\n  test('should return minY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.29)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('findMaxY', ()=>{\r\n  const fn = findMaxY;\r\n  test('should return maxY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.31)\r\n  })\r\n  test('should return maxY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.31)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('joinBy', () => {\r\n  test('should join by delimeter', () => {\r\n    expect(joinBy('.')).toBe('')\r\n    expect(joinBy('.', 'a')).toBe('a')\r\n    expect(joinBy('.', 'a', 'b')).toBe('a.b')\r\n  })\r\n  test('should filter falsy values', () => {\r\n    expect(joinBy('.', '', 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', null, 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', void 0, 'b', 'c')).toBe('b.c')\r\n  })\r\n})\r\n\r\ndescribe('valueMoving', ()=>{\r\n  const fn = valueMoving\r\n  it('should return echo data and direction empty for !arr input', ()=>{\r\n    const direction = { direction: DT_EMPTY }\r\n    expect(fn('')).toEqual({ date: '', ...direction })\r\n    expect(fn(null)).toEqual({ date: null, ...direction })\r\n    expect(fn()).toEqual({ date: void 0, ...direction })\r\n    expect(fn({})).toEqual({ date: {}, ...direction })\r\n    expect(fn('str')).toEqual({ date: 'str', ...direction })\r\n  })\r\n  it('should return valueMoving obj for arr input', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2018, 11, 31), 10000], [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '10 000',\r\n      _deltaAbs: '10000',\r\n      percent: '100.00%',\r\n      _percentAbs: '100.00',\r\n      direction: DT_UP,\r\n\r\n      valueTo: '10 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2018'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for arr input with 1 point', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: DT_EQUAL,\r\n\r\n      valueTo: '20 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2019'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for empty arr', ()=>{\r\n    expect(fn([])).toEqual({\r\n      value: '0',\r\n      _value: '0',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: DT_EQUAL,\r\n\r\n      valueTo: '0',\r\n      date: '',\r\n      dateTo: ''\r\n    })\r\n  })\r\n})\r\n"],"file":"AdapterFn.test.js"}