{"version":3,"sources":["../../../src/adapters/__tests__/AdapterFn.test.js"],"names":["crError","AdapterFn","crId","crItemLink","crVolumePoint","crAthPoint","legendItem","stockSeriesLegend","ymdToUTC","toUpperCaseFirst","isYNumber","isNumberOrNull","toFloatOrEmpty","findMinY","findMaxY","joinBy","valueMoving","crItemConf","crValueConf","describe","it","expect","toBe","Y","r","d","YM","YMD","fn","test","forEach","EMPTY","String","undefined","str","Date","now","y","NaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","DATA_ARR","DATA_POINT","x","direction","Direction","toEqual","date","UTC","value","_value","delta","_deltaAbs","percent","_percentAbs","UP","valueTo","dateTo","EQUAL","title","subtitle","itemCaption"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\n\r\nimport { Direction } from '../../constants/Type'\r\n\r\nconst {\r\n  crError,\r\n  crId,\r\n  crItemLink,\r\n\r\n  crVolumePoint,\r\n  crAthPoint,\r\n\r\n  legendItem,\r\n  stockSeriesLegend,\r\n\r\n  ymdToUTC,\r\n  toUpperCaseFirst,\r\n  isYNumber,\r\n  isNumberOrNull,\r\n  toFloatOrEmpty,\r\n  findMinY,\r\n  findMaxY,\r\n  joinBy,\r\n  valueMoving,\r\n  crItemConf,\r\n  crValueConf\r\n} = AdapterFn;\r\n\r\ndescribe('added fns', ()=>{\r\n  it('should have next fns', ()=>{\r\n    expect(typeof crError).toBe('function')\r\n    expect(typeof crId).toBe('function')\r\n    expect(typeof crItemLink).toBe('function')\r\n\r\n    expect(typeof crVolumePoint).toBe('function')\r\n    expect(typeof crAthPoint).toBe('function')\r\n\r\n    expect(typeof legendItem).toBe('function')\r\n    expect(typeof stockSeriesLegend).toBe('function')\r\n  })\r\n})\r\n\r\nconst Y = [\r\n  { in: '2017', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2016', r: 1483142400000, d: '31-12-2016' },\r\n  { in: '2015', r: 1451520000000, d: '31-12-2015' },\r\n  { in: '2000', r: 978220800000, d: '31-12-2000' },\r\n]\r\n\r\n//Date.UTC(y, m-1, d)\r\nconst YM = [\r\n  { in: '2017-12', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2017-11', r: 1512000000000, d: '30-11-2017' },\r\n  { in: '2017-10', r: 1509408000000, d: '31-10-2017' },\r\n\r\n  { in: '2017-9', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-09', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-8', r: 1504137600000, d: '31-08-2017' },\r\n  { in: '2017-08', r: 1504137600000, d: '31-08-2017' },\r\n\r\n  { in: '2017-1', r: 1485820800000, d: '31-01-2017' },\r\n  { in: '2017-01', r: 1485820800000, d: '31-01-2017' },\r\n];\r\n\r\nconst YMD = [\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-1', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n]\r\n\r\ndescribe('ymdToUTC', () => {\r\n  const fn = ymdToUTC;\r\n  test('should return UTC msc of 31, December of year from YYYY', () => {\r\n    Y.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of last day of month from YYYY-MM', () => {\r\n    YM.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of day (00:00:00 UTC) from YYYY-MM-DD', () => {\r\n    YMD.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n});\r\n\r\ndescribe('toUpperCaseFirst', ()=> {\r\n  const fn = toUpperCaseFirst;\r\n  const EMPTY = '';\r\n  test('should return string with first upper case letter for string or String input', ()=>{\r\n    expect(fn('abc')).toBe('Abc')\r\n    expect(fn('aBc')).toBe('ABc')\r\n    expect(fn('aBC')).toBe('ABC')\r\n  })\r\n  test('should retunr empty string for instance of String', ()=> {\r\n    expect(fn(new String('abc'))).toBe('')\r\n    expect(fn(new String('aBc'))).toBe('')\r\n    expect(fn(new String('aBC'))).toBe('')\r\n  })\r\n  test('should return empty string in edge case', ()=>{\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn([])).toBe(EMPTY)\r\n\r\n    expect(fn({str: 'abc'})).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(/\\s/)).toBe(EMPTY)\r\n    expect(fn(Date.now())).toBe(EMPTY)\r\n  })\r\n\r\n})\r\n\r\ndescribe('isYNumber', () => {\r\n  const fn = isYNumber\r\n  test('should return true for object with property y number', () => {\r\n    expect(fn({y: 10})).toBe(true)\r\n    expect(fn({y: 1})).toBe(true)\r\n    expect(fn({y: 0})).toBe(true)\r\n    expect(fn({y: -1})).toBe(true)\r\n  })\r\n  test('should return false for object with property y not number', ()=>{\r\n    expect(fn({y: null})).toBe(false)\r\n    expect(fn({y: NaN})).toBe(false)\r\n    expect(fn({y: 'str'})).toBe(false)\r\n    expect(fn({y: undefined})).toBe(false)\r\n    expect(fn({y: true})).toBe(false)\r\n    expect(fn({y: false})).toBe(false)\r\n    expect(fn({y: Number.POSITIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: Number.NEGATIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: []})).toBe(false)\r\n    expect(fn({y: {}})).toBe(false)\r\n    expect(fn({y: ()=>{} })).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNumberOrNull', ()=>{\r\n  const fn = isNumberOrNull\r\n  it('should return true for number and null or false', ()=>{\r\n    expect(fn(123)).toBe(true)\r\n    expect(fn(12.3)).toBe(true)\r\n    expect(fn(1.23)).toBe(true)\r\n    expect(fn(null)).toBe(true)\r\n\r\n    expect(fn('123')).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(NaN)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('toFloatOrEmpty', ()=>{\r\n  const fn = toFloatOrEmpty\r\n  it('should convert input to float or return empty str', ()=>{\r\n    expect(fn('1.23')).toBe(1.23)\r\n    expect(fn('')).toBe('')\r\n    expect(fn('str')).toBe('')\r\n  })\r\n})\r\n\r\nconst DATA_ARR = [ [0, 0.3], [0, 0.31], [0, 0.29] ];\r\nconst DATA_POINT = [ {x:0, y: 0.3},{x:0, y: 0.31},{x:0, y: 0.29} ];\r\n\r\ndescribe('findMinY', ()=>{\r\n  const fn = findMinY;\r\n  test('should return minY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.29)\r\n  })\r\n  test('should return minY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.29)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('findMaxY', ()=>{\r\n  const fn = findMaxY;\r\n  test('should return maxY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.31)\r\n  })\r\n  test('should return maxY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.31)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('joinBy', () => {\r\n  test('should join by delimeter', () => {\r\n    expect(joinBy('.')).toBe('')\r\n    expect(joinBy('.', 'a')).toBe('a')\r\n    expect(joinBy('.', 'a', 'b')).toBe('a.b')\r\n  })\r\n  test('should filter falsy values', () => {\r\n    expect(joinBy('.', '', 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', null, 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', void 0, 'b', 'c')).toBe('b.c')\r\n  })\r\n})\r\n\r\ndescribe('valueMoving', ()=>{\r\n  const fn = valueMoving\r\n  it('should return echo data and direction empty for !arr input', ()=>{\r\n    const direction = { direction: Direction.EMPTY }\r\n    expect(fn('')).toEqual({ date: '', ...direction })\r\n    expect(fn(null)).toEqual({ date: null, ...direction })\r\n    expect(fn()).toEqual({ date: void 0, ...direction })\r\n    expect(fn({})).toEqual({ date: {}, ...direction })\r\n    expect(fn('str')).toEqual({ date: 'str', ...direction })\r\n  })\r\n  it('should return valueMoving obj for arr input', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2018, 11, 31), 10000], [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '10 000',\r\n      _deltaAbs: '10000',\r\n      percent: '100.00%',\r\n      _percentAbs: '100.00',\r\n      direction: Direction.UP,\r\n\r\n      valueTo: '10 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2018'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for arr input with 1 point', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: Direction.EQUAL,\r\n\r\n      valueTo: '20 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2019'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for empty arr', ()=>{\r\n    expect(fn([])).toEqual({\r\n      value: '0',\r\n      _value: '0',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: Direction.EQUAL,\r\n\r\n      valueTo: '0',\r\n      date: '',\r\n      dateTo: ''\r\n    })\r\n  })\r\n})\r\n\r\ndescribe('crItemConf', ()=>{\r\n  const fn = crItemConf\r\n  it('should create obj with item conf', ()=>{\r\n    expect(fn({\r\n      title: 'title',\r\n      subtitle: null,\r\n      itemCaption: void 0\r\n    })).toEqual({\r\n      title: 'title'\r\n    })\r\n  })\r\n})\r\n\r\ndescribe('crValueConf', ()=>{\r\n  const fn = crValueConf\r\n  it('should return {x, y} recent point from data', ()=>{\r\n    expect(fn([[3, 3], [1, 2]])).toEqual({ x: 1, y: 2 })\r\n    expect(fn([{x:3, y:3}, {x:1, y:2}])).toEqual({ x: 1, y: 2 })\r\n  })\r\n  it('should use str 0.0 for y not number', ()=>{\r\n    expect(fn([[3, 3], [1, null]])).toEqual({ x: 1, y: '0.0' })\r\n    expect(fn([{x:3, y:3}, {x:1, y:NaN}])).toEqual({ x: 1, y: '0.0' })\r\n  })\r\n})\r\n"],"file":"AdapterFn.test.js"}