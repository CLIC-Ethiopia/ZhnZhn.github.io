{"version":3,"sources":["../../../src/adapters/__tests__/AdapterFn.test.js"],"names":["ymdToUTC","isYNumber","isNumberOrNull","toFloatOrEmpty","findMinY","findMaxY","joinBy","valueMoving","crValueConf","AdapterFn","Y","in","r","d","YM","YMD","describe","fn","test","forEach","expect","toBe","y","NaN","undefined","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","it","DATA_ARR","DATA_POINT","x","direction","Direction","EMPTY","toEqual","date","Date","UTC","value","_value","delta","_deltaAbs","percent","_percentAbs","UP","valueTo","dateTo","EQUAL"],"mappings":"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","sourcesContent":["/**\r\n * @jest-environment jsdom\r\n */\r\n//Highcharts dateFormat from AdapterFn require jsdom\r\n\"use strict\";\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nimport { Direction } from '../../constants/Type'\r\n\r\nconst {\r\n  ymdToUTC,\r\n  isYNumber,\r\n  isNumberOrNull,\r\n  toFloatOrEmpty,\r\n  findMinY,\r\n  findMaxY,\r\n  joinBy,\r\n  valueMoving,  \r\n  crValueConf\r\n} = AdapterFn;\r\n\r\nconst Y = [\r\n  { in: '2017', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2016', r: 1483142400000, d: '31-12-2016' },\r\n  { in: '2015', r: 1451520000000, d: '31-12-2015' },\r\n  { in: '2000', r: 978220800000, d: '31-12-2000' },\r\n]\r\n\r\n//Date.UTC(y, m-1, d)\r\nconst YM = [\r\n  { in: '2017-12', r: 1514678400000, d: '31-12-2017' },\r\n  { in: '2017-11', r: 1512000000000, d: '30-11-2017' },\r\n  { in: '2017-10', r: 1509408000000, d: '31-10-2017' },\r\n\r\n  { in: '2017-9', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-09', r: 1506729600000, d: '30-09-2017' },\r\n  { in: '2017-8', r: 1504137600000, d: '31-08-2017' },\r\n  { in: '2017-08', r: 1504137600000, d: '31-08-2017' },\r\n\r\n  { in: '2017-1', r: 1485820800000, d: '31-01-2017' },\r\n  { in: '2017-01', r: 1485820800000, d: '31-01-2017' },\r\n];\r\n\r\nconst YMD = [\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-01', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-1-1', r: 1514764800000, d: '01-01-2018' },\r\n  { in: '2018-01-01', r: 1514764800000, d: '01-01-2018' },\r\n]\r\n\r\ndescribe('ymdToUTC', () => {\r\n  const fn = ymdToUTC;\r\n  test('should return UTC msc of 31, December of year from YYYY', () => {\r\n    Y.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of last day of month from YYYY-MM', () => {\r\n    YM.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n  test('should return UTC msc of day (00:00:00 UTC) from YYYY-MM-DD', () => {\r\n    YMD.forEach(d => {\r\n      expect(fn(d.in)).toBe(d.r)\r\n    })\r\n  })\r\n\r\n});\r\n\r\ndescribe('isYNumber', () => {\r\n  const fn = isYNumber\r\n  test('should return true for object with property y number', () => {\r\n    expect(fn({y: 10})).toBe(true)\r\n    expect(fn({y: 1})).toBe(true)\r\n    expect(fn({y: 0})).toBe(true)\r\n    expect(fn({y: -1})).toBe(true)\r\n  })\r\n  test('should return false for object with property y not number', ()=>{\r\n    expect(fn({y: null})).toBe(false)\r\n    expect(fn({y: NaN})).toBe(false)\r\n    expect(fn({y: 'str'})).toBe(false)\r\n    expect(fn({y: undefined})).toBe(false)\r\n    expect(fn({y: true})).toBe(false)\r\n    expect(fn({y: false})).toBe(false)\r\n    expect(fn({y: Number.POSITIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: Number.NEGATIVE_INFINITY})).toBe(false)\r\n    expect(fn({y: []})).toBe(false)\r\n    expect(fn({y: {}})).toBe(false)\r\n    expect(fn({y: ()=>{} })).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNumberOrNull', ()=>{\r\n  const fn = isNumberOrNull\r\n  it('should return true for number and null or false', ()=>{\r\n    expect(fn(123)).toBe(true)\r\n    expect(fn(12.3)).toBe(true)\r\n    expect(fn(1.23)).toBe(true)\r\n    expect(fn(null)).toBe(true)\r\n\r\n    expect(fn('123')).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(NaN)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('toFloatOrEmpty', ()=>{\r\n  const fn = toFloatOrEmpty\r\n  it('should convert input to float or return empty str', ()=>{\r\n    expect(fn('1.23')).toBe(1.23)\r\n    expect(fn('')).toBe('')\r\n    expect(fn('str')).toBe('')\r\n  })\r\n})\r\n\r\nconst DATA_ARR = [ [0, 0.3], [0, 0.31], [0, 0.29] ];\r\nconst DATA_POINT = [ {x:0, y: 0.3},{x:0, y: 0.31},{x:0, y: 0.29} ];\r\n\r\ndescribe('findMinY', ()=>{\r\n  const fn = findMinY;\r\n  test('should return minY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.29)\r\n  })\r\n  test('should return minY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.29)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('findMaxY', ()=>{\r\n  const fn = findMaxY;\r\n  test('should return maxY for points arrays', ()=>{\r\n     expect(fn(DATA_ARR)).toBe(0.31)\r\n  })\r\n  test('should return maxY for points object', ()=>{\r\n    expect(fn(DATA_POINT)).toBe(0.31)\r\n  })\r\n  test('should return undefined in edge case', ()=>{\r\n    expect(fn()).toBe(undefined)\r\n    expect(fn([])).toBe(undefined)\r\n    expect(fn([[0]])).toBe(undefined)\r\n    expect(fn([{x:0}])).toBe(undefined)\r\n  })\r\n})\r\n\r\ndescribe('joinBy', () => {\r\n  test('should join by delimeter', () => {\r\n    expect(joinBy('.')).toBe('')\r\n    expect(joinBy('.', 'a')).toBe('a')\r\n    expect(joinBy('.', 'a', 'b')).toBe('a.b')\r\n  })\r\n  test('should filter falsy values', () => {\r\n    expect(joinBy('.', '', 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', null, 'b', 'c')).toBe('b.c')\r\n    expect(joinBy('.', void 0, 'b', 'c')).toBe('b.c')\r\n  })\r\n})\r\n\r\ndescribe('valueMoving', ()=>{\r\n  const fn = valueMoving\r\n  it('should return echo data and direction empty for !arr input', ()=>{\r\n    const direction = { direction: Direction.EMPTY }\r\n    expect(fn('')).toEqual({ date: '', ...direction })\r\n    expect(fn(null)).toEqual({ date: null, ...direction })\r\n    expect(fn()).toEqual({ date: void 0, ...direction })\r\n    expect(fn({})).toEqual({ date: {}, ...direction })\r\n    expect(fn('str')).toEqual({ date: 'str', ...direction })\r\n  })\r\n  it('should return valueMoving obj for arr input', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2018, 11, 31), 10000], [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '10 000',\r\n      _deltaAbs: '10000',\r\n      percent: '100.00%',\r\n      _percentAbs: '100.00',\r\n      direction: Direction.UP,\r\n\r\n      valueTo: '10 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2018'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for arr input with 1 point', ()=>{\r\n    expect(fn([\r\n      [Date.UTC(2019, 11, 31), 20000]\r\n    ])).toEqual({\r\n      value: '20 000',\r\n      _value: '20000',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: Direction.EQUAL,\r\n\r\n      valueTo: '20 000',\r\n      date: '31-12-2019',\r\n      dateTo: '31-12-2019'\r\n    })\r\n  })\r\n  it('should return valueMoving obj for empty arr', ()=>{\r\n    expect(fn([])).toEqual({\r\n      value: '0',\r\n      _value: '0',\r\n      delta: '0',\r\n      _deltaAbs: '0',\r\n      percent: '0.00%',\r\n      _percentAbs: '0.00',\r\n      direction: Direction.EQUAL,\r\n\r\n      valueTo: '0',\r\n      date: '',\r\n      dateTo: ''\r\n    })\r\n  })\r\n})\r\n\r\ndescribe('crValueConf', ()=>{\r\n  const fn = crValueConf\r\n  it('should return {x, y} recent point from data', ()=>{\r\n    expect(fn([[3, 3], [1, 2]])).toEqual({ x: 1, y: 2 })\r\n    expect(fn([{x:3, y:3}, {x:1, y:2}])).toEqual({ x: 1, y: 2 })\r\n  })\r\n  it('should use str 0.0 for y not number', ()=>{\r\n    expect(fn([[3, 3], [1, null]])).toEqual({ x: 1, y: '0.0' })\r\n    expect(fn([{x:3, y:3}, {x:1, y:NaN}])).toEqual({ x: 1, y: '0.0' })\r\n  })\r\n})\r\n"],"file":"AdapterFn.test.js"}