{"version":3,"sources":["../../../src/adapters/__tests__/crFn.test.js"],"names":["describe","fn","crError","it","expect","toEqual","errCaption","message","hm","Object","getPrototypeOf","toBe","toString","valueOf","props","a","b","crItemConf","title","subtitle","itemCaption"],"mappings":";;AAAA;;AAMAA,QAAQ,CAAC,SAAD,EAAY,MAAI;AACtB,QAAMC,EAAE,GAAGC,aAAX;AACAC,EAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAI;AAC9BC,IAAAA,MAAM,CAACH,EAAE,CAAC,SAAD,EAAY,KAAZ,CAAH,CAAN,CAA6BI,OAA7B,CAAqC;AACnCC,MAAAA,UAAU,EAAE,SADuB;AAEnCC,MAAAA,OAAO,EAAE;AAF0B,KAArC;AAID,GALC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,gDAAD,EAAmD,MAAI;AACvDC,IAAAA,MAAM,CAACH,EAAE,EAAH,CAAN,CAAaI,OAAb,CAAqB;AACnBC,MAAAA,UAAU,EAAE,EADO;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAID,GALC,CAAF;AAMD,CAdO,CAAR;AAgBAP,QAAQ,CAAC,MAAD,EAAS,MAAI;AACnBG,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAI;AACjD,UAAMK,EAAE,GAAG,iBAAX;AACAJ,IAAAA,MAAM,CAACK,MAAM,CAACC,cAAP,CAAsBF,EAAtB,CAAD,CAAN,CAAkCG,IAAlC,CAAuC,IAAvC;AACAP,IAAAA,MAAM,CAACI,EAAE,CAACI,QAAJ,CAAN,CAAoBD,IAApB,CAAyB,KAAK,CAA9B;AACAP,IAAAA,MAAM,CAACI,EAAE,CAACK,OAAJ,CAAN,CAAmBF,IAAnB,CAAwB,KAAK,CAA7B;AACD,GALC,CAAF;AAMAR,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAI;AAClC,UAAMW,KAAK,GAAG;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE;AAAb,KAAd;AACAZ,IAAAA,MAAM,CAAC,gBAAKU,KAAL,CAAD,CAAN,CAAoBT,OAApB,CAA4BS,KAA5B;AACD,GAHC,CAAF;AAID,CAXO,CAAR;AAaAd,QAAQ,CAAC,YAAD,EAAe,MAAI;AACzB,QAAMC,EAAE,GAAGgB,gBAAX;AACAd,EAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAI;AACzCC,IAAAA,MAAM,CAACH,EAAE,CAAC;AACRiB,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,QAAQ,EAAE,IAFF;AAGRC,MAAAA,WAAW,EAAE,KAAK;AAHV,KAAD,CAAH,CAAN,CAIIf,OAJJ,CAIY;AACVa,MAAAA,KAAK,EAAE;AADG,KAJZ;AAOD,GARC,CAAF;AASD,CAXO,CAAR","sourcesContent":["import {\r\n  crHm,\r\n  crError,\r\n  crItemConf\r\n} from '../crFn';\r\n\r\ndescribe('crError', ()=>{\r\n  const fn = crError\r\n  it('should create err obj', ()=>{\r\n    expect(fn('caption', 'msg')).toEqual({\r\n      errCaption: 'caption',\r\n      message: 'msg'\r\n    })\r\n  })\r\n  it('should replace void 0 values by default values', ()=>{\r\n    expect(fn()).toEqual({\r\n      errCaption: '',\r\n      message: 'No data available for request.'\r\n    })\r\n  })\r\n})\r\n\r\ndescribe('crHm', ()=>{\r\n  it('should create object with null prototype', ()=>{\r\n    const hm = crHm();\r\n    expect(Object.getPrototypeOf(hm)).toBe(null)\r\n    expect(hm.toString).toBe(void 0)\r\n    expect(hm.valueOf).toBe(void 0)\r\n  })\r\n  it('should add props from arg', ()=>{\r\n    const props = { a: 'a', b: 'b'};\r\n    expect(crHm(props)).toEqual(props)\r\n  })\r\n})\r\n\r\ndescribe('crItemConf', ()=>{\r\n  const fn = crItemConf\r\n  it('should create obj with item conf', ()=>{\r\n    expect(fn({\r\n      title: 'title',\r\n      subtitle: null,\r\n      itemCaption: void 0\r\n    })).toEqual({\r\n      title: 'title'\r\n    })\r\n  })\r\n})\r\n"],"file":"crFn.test.js"}