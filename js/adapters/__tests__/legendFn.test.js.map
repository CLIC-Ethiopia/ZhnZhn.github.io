{"version":3,"sources":["../../../src/adapters/__tests__/legendFn.test.js"],"names":["legendItem","legendFn","stockSeriesLegend","describe","fn","it","expect","toEqual","index","color","name","isVisible","C","S_STOCK_CLOSE","S_HIGH","S_LOW","S_OPEN"],"mappings":";;;;AAAA;;AACA;;IAEQA,U,GAAkCC,oB,CAAlCD,U;IAAYE,iB,GAAsBD,oB,CAAtBC,iB;AAEpBC,QAAQ,CAAC,YAAD,EAAe,YAAI;AACzB,MAAMC,EAAE,GAAGJ,UAAX;AACAK,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAI;AACtCC,IAAAA,MAAM,CAACF,EAAE,CAAC,CAAD,EAAI,MAAJ,EAAY,MAAZ,EAAoB,IAApB,CAAH,CAAN,CAAoCG,OAApC,CAA4C;AAC1CC,MAAAA,KAAK,EAAE,CADmC;AAChCC,MAAAA,KAAK,EAAE,MADyB;AACjBC,MAAAA,IAAI,EAAE,MADW;AAE1CC,MAAAA,SAAS,EAAE;AAF+B,KAA5C;AAID,GALC,CAAF;AAMAN,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAI;AACxDC,IAAAA,MAAM,CAACF,EAAE,CAAC,CAAD,EAAI,MAAJ,EAAY,MAAZ,CAAH,CAAN,CAA8BG,OAA9B,CAAsC;AACpCC,MAAAA,KAAK,EAAE,CAD6B;AAC1BC,MAAAA,KAAK,EAAE,MADmB;AACXC,MAAAA,IAAI,EAAE,MADK;AAEpCC,MAAAA,SAAS,EAAE;AAFyB,KAAtC;AAID,GALC,CAAF;AAMD,CAdO,CAAR;AAgBAR,QAAQ,CAAC,mBAAD,EAAsB,YAAI;AAChC,MAAMC,EAAE,GAAGF,iBAAX;AACAG,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAI;AAC3CC,IAAAA,MAAM,CAACF,EAAE,EAAH,CAAN,CAAaG,OAAb,CAAqB,CACpB;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAEG,kBAAEC,aAArB;AAAoCH,MAAAA,IAAI,EAAE,OAA1C;AAAmDC,MAAAA,SAAS,EAAE;AAA9D,KADoB,EAEpB;AAAEH,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAEG,kBAAEE,MAArB;AAA6BJ,MAAAA,IAAI,EAAE,MAAnC;AAA2CC,MAAAA,SAAS,EAAE;AAAtD,KAFoB,EAGpB;AAAEH,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAEG,kBAAEG,KAArB;AAA4BL,MAAAA,IAAI,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE;AAApD,KAHoB,EAIpB;AAAEH,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAEG,kBAAEI,MAArB;AAA6BN,MAAAA,IAAI,EAAE,MAAnC;AAA2CC,MAAAA,SAAS,EAAE;AAAtD,KAJoB,CAArB;AAMD,GAPC,CAAF;AAQD,CAVO,CAAR","sourcesContent":["import legendFn from '../legendFn'\r\nimport C from '../../constants/Color'\r\n\r\nconst { legendItem, stockSeriesLegend } = legendFn\r\n\r\ndescribe('legendItem', ()=>{\r\n  const fn = legendItem\r\n  it('should create legend item obj', ()=>{\r\n    expect(fn(0, 'blue', 'name', true)).toEqual({\r\n      index: 0, color: 'blue', name: 'name',\r\n      isVisible: true\r\n    })\r\n  })\r\n  it('should use default value for isVisible as false', ()=>{\r\n    expect(fn(0, 'blue', 'name')).toEqual({\r\n      index: 0, color: 'blue', name: 'name',\r\n      isVisible: false\r\n    })\r\n  })\r\n})\r\n\r\ndescribe('stockSeriesLegend', ()=>{\r\n  const fn = stockSeriesLegend\r\n  it('should create stock series legends', ()=>{\r\n    expect(fn()).toEqual([\r\n     { index: 0, color: C.S_STOCK_CLOSE, name: 'Close', isVisible: true },\r\n     { index: 1, color: C.S_HIGH, name: 'High', isVisible: false },\r\n     { index: 2, color: C.S_LOW, name: 'Low', isVisible: false },\r\n     { index: 3, color: C.S_OPEN, name: 'Open', isVisible: false },\r\n    ])\r\n  })\r\n})\r\n"],"file":"legendFn.test.js"}