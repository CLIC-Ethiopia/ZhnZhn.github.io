{"version":3,"sources":["../../../src/adapters/stat-uk/fnAdapter.js"],"names":["getValue","ymdToUTC","compareByDate","joinBy","AdapterFn","_crItemLink","crItemLink","bind","MONTH_HM","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","QUARTER_HM","q1","q2","q3","q4","_getTimeObj","dimensions","Time","_mmmYyToMls","str","_arr","split","_m","trim","_yStr","_yPrefix","_yyyyQqToMls","_yyyy","_q","_mm","toLowerCase","NaN","_fCrToMls","observations","_item","href","indexOf","_isNumber","n","_crName","unit_of_measure","title","subtitle","_crDescr","links","dataset_metadata","_crInfo","json","option","name","description","fnAdapter","crError","crData","_data","_toMsl","i","length","item","observation","id","_x","_y","parseFloat","push","sort","addConfOption","info"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAM;AACJA,EAAAA,QADI;AAEJC,EAAAA,QAFI;AAGJC,EAAAA,aAHI;AAIJC,EAAAA;AAJI,IAKFC,kBALJ;;AAOA,MAAMC,WAAW,GAAGC,iBAAWC,IAAX,CAAgB,IAAhB,EAAsB,sBAAtB,CAApB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAE,IADU;AAEfC,EAAAA,GAAG,EAAE,IAFU;AAGfC,EAAAA,GAAG,EAAE,IAHU;AAIfC,EAAAA,GAAG,EAAE,IAJU;AAKfC,EAAAA,GAAG,EAAE,IALU;AAMfC,EAAAA,GAAG,EAAE,IANU;AAOfC,EAAAA,GAAG,EAAE,IAPU;AAQfC,EAAAA,GAAG,EAAE,IARU;AASfC,EAAAA,GAAG,EAAE,IATU;AAUfC,EAAAA,GAAG,EAAE,IAVU;AAWfC,EAAAA,GAAG,EAAE,IAXU;AAYfC,EAAAA,GAAG,EAAE;AAZU,CAAjB;AAeA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,EAAE,EAAE,IAFa;AAGjBC,EAAAA,EAAE,EAAE,IAHa;AAIjBC,EAAAA,EAAE,EAAE;AAJa,CAAnB;;AAOA,MAAMC,WAAW,GAAGC,UAAU,IAAI,CAACA,UAAU,IAAI,EAAf,EAC/BC,IAD+B,IACvB,EADX,C,CAGA;;;AACA,MAAMC,WAAW,GAAGC,GAAG,IAAI;AACzB,QAAMC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAb;AAAA,QACEC,EAAE,GAAGzB,QAAQ,CAACuB,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,EAAD,CADf;AAAA,QAEEC,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,EAFV;AAAA,QAGEE,QAAQ,GAAGD,KAAK,GAAG,IAAR,GAAe,IAAf,GAAsB,IAHnC;;AAIA,SAAOlC,QAAQ,MAAImC,QAAJ,GAAeD,KAAf,SAAwBF,EAAxB,CAAf;AACD,CAND,C,CAQA;;;AACA,MAAMI,YAAY,GAAGP,GAAG,IAAI;AAC1B,QAAM,CAAEQ,KAAF,EAASC,EAAE,GAAC,EAAZ,IAAmBT,GAAG,IAAIA,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAP,IAAyB,EAAlD;AAAA,QACEQ,GAAG,GAAGnB,UAAU,CAACkB,EAAE,CAACL,IAAH,GAAUO,WAAV,EAAD,CADlB;;AAEA,SAAOH,KAAK,IAAIE,GAAT,GACHvC,QAAQ,CAAIqC,KAAJ,SAAaE,GAAb,CADL,GAEHE,GAFJ;AAGD,CAND;;AAQA,MAAMC,SAAS,GAAGC,YAAY,IAAI;AAChC,QAAMC,KAAK,GAAGD,YAAY,CAAC,CAAD,CAAZ,IAAmB,EAAjC;AAAA,QACE;AAAEE,IAAAA,IAAI,GAAC;AAAP,MAAcpB,WAAW,CAACmB,KAAK,CAAClB,UAAP,CAD3B;;AAEA,SAAOmB,IAAI,CAACC,OAAL,CAAa,SAAb,MAA4B,CAAC,CAA7B,GACHV,YADG,GAEHR,WAFJ;AAGD,CAND;;AAQA,MAAMmB,SAAS,GAAGC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAClBA,CAAC,GAACA,CAAF,KAAM,CADX;;AAGA,MAAMC,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAtB;AAAA,SACdlD,MAAM,CAAC,IAAD,EAAOkD,QAAP,EAAiBD,KAAjB,EAAwBD,eAAxB,CADQ;AAAA,CAAhB;;AAGA,MAAMG,QAAQ,GAAG,SAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC9B,QAAM;AAAET,IAAAA;AAAF,MAAW,CAACS,KAAK,IAAI,EAAV,EAAcC,gBAAd,IAAkC,EAAnD;AACA,SAAOV,IAAI,GAAGzC,WAAW,CAACyC,IAAD,CAAd,GAAuB,EAAlC;AACD,CAHD;;AAKA,MAAMW,OAAO,GAAG,CAACC,IAAD,EAAOC,MAAP,MAAmB;AACjCC,EAAAA,IAAI,EAAEV,OAAO,CAACQ,IAAD,EAAOC,MAAP,CADoB;AAEjCE,EAAAA,WAAW,EAAEP,QAAQ,CAACI,IAAD;AAFY,CAAnB,CAAhB;;AAMA,MAAMI,SAAS,GAAG;AAChB9D,EAAAA,QADgB;AAEhB+D,EAAAA,OAAO,EAAPA,aAFgB;AAIhBC,EAAAA,MAAM,EAAGN,IAAD,IAAU;AAChB,UAAMO,KAAK,GAAG,EAAd;AAAA,UACE;AAAErB,MAAAA;AAAF,QAAmBc,IADrB;AAAA,UAEEQ,MAAM,GAAGvB,SAAS,CAACC,YAAD,CAFpB;;AAGA,QAAIuB,CAAC,GAAC,CAAN;;AACA,WAAMA,CAAC,GAACvB,YAAY,CAACwB,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,YAAME,IAAI,GAAGzB,YAAY,CAACuB,CAAD,CAAzB;AAAA,YACE;AAAExC,QAAAA,UAAF;AAAc2C,QAAAA;AAAd,UAA8BD,IADhC;AAAA,YAEE;AAAEE,QAAAA;AAAF,UAAS7C,WAAW,CAACC,UAAD,CAFtB;AAAA,YAGE6C,EAAE,GAAGN,MAAM,CAACK,EAAD,CAHb;AAAA,YAIEE,EAAE,GAAGC,UAAU,CAACJ,WAAD,CAJjB;;AAKA,UAAItB,SAAS,CAACwB,EAAD,CAAT,IAAiBxB,SAAS,CAACyB,EAAD,CAA9B,EAAoC;AAClCR,QAAAA,KAAK,CAACU,IAAN,CAAW,CAACH,EAAD,EAAKC,EAAL,CAAX;AACD;AACF;;AACD,WAAOR,KAAK,CAACW,IAAN,CAAW1E,aAAX,CAAP;AACD,GApBe;AAqBhB2E,EAAAA,aAAa,EAAE,CAAClB,MAAD,EAASD,IAAT,MAAmB;AAChCoB,IAAAA,IAAI,EAAErB,OAAO,CAACC,IAAD,EAAOC,MAAP;AADmB,GAAnB;AArBC,CAAlB;eA0BeG,S","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport { crError, crItemLink } from '../crFn';\r\n\r\nconst {\r\n  getValue,\r\n  ymdToUTC,\r\n  compareByDate,\r\n  joinBy\r\n} = AdapterFn\r\n\r\nconst _crItemLink = crItemLink.bind(null, 'ONS Dataset Metadata');\r\n\r\nconst MONTH_HM = {\r\n  Jan: '01',\r\n  Feb: '02',\r\n  Mar: '03',\r\n  Apr: '04',\r\n  May: '05',\r\n  Jun: '06',\r\n  Jul: '07',\r\n  Aug: '08',\r\n  Sep: '09',\r\n  Oct: '10',\r\n  Nov: '11',\r\n  Dec: '12'\r\n}\r\n\r\nconst QUARTER_HM = {\r\n  q1: \"03\",\r\n  q2: \"06\",\r\n  q3: \"09\",\r\n  q4: \"12\"\r\n}\r\n\r\nconst _getTimeObj = dimensions => (dimensions || {})\r\n  .Time || {};\r\n\r\n//Jan-20\r\nconst _mmmYyToMls = str => {\r\n  const _arr = str.split('-')\r\n  , _m = MONTH_HM[_arr[0].trim()]\r\n  , _yStr = _arr[1].trim()\r\n  , _yPrefix = _yStr < '30' ? '20' : '19';\r\n  return ymdToUTC(`${_yPrefix}${_yStr}-${_m}`);\r\n}\r\n\r\n//2010-q1\r\nconst _yyyyQqToMls = str => {\r\n  const [ _yyyy, _q='' ] = str && str.split('-') || []\r\n  , _mm = QUARTER_HM[_q.trim().toLowerCase()];\r\n  return _yyyy && _mm\r\n    ? ymdToUTC(`${_yyyy}-${_mm}`)\r\n    : NaN;\r\n}\r\n\r\nconst _fCrToMls = observations => {\r\n  const _item = observations[0] || {}\r\n  , { href='' } = _getTimeObj(_item.dimensions)\r\n  return href.indexOf('yyyy-qq') !== -1\r\n    ? _yyyyQqToMls\r\n    : _mmmYyToMls;\r\n}\r\n\r\nconst _isNumber = n => typeof n === 'number'\r\n && (n-n===0);\r\n\r\nconst _crName = ({ unit_of_measure }, { title, subtitle }) =>\r\n  joinBy(': ', subtitle, title, unit_of_measure);\r\n\r\nconst _crDescr = ({ links }) => {\r\n  const { href } = (links || {}).dataset_metadata || {};\r\n  return href ? _crItemLink(href) : '';\r\n}\r\n\r\nconst _crInfo = (json, option) => ({\r\n  name: _crName(json, option),\r\n  description: _crDescr(json)\r\n})\r\n\r\n\r\nconst fnAdapter = {\r\n  getValue,\r\n  crError,\r\n\r\n  crData: (json) => {\r\n    const _data = []\r\n    , { observations } = json\r\n    , _toMsl = _fCrToMls(observations);\r\n    let i=0;\r\n    for (;i<observations.length; i++){\r\n      const item = observations[i]\r\n      , { dimensions, observation } = item\r\n      , { id } = _getTimeObj(dimensions)\r\n      , _x = _toMsl(id)\r\n      , _y = parseFloat(observation)\r\n      if (_isNumber(_x) && _isNumber(_y)) {\r\n        _data.push([_x, _y])\r\n      }\r\n    }\r\n    return _data.sort(compareByDate);\r\n  },\r\n  addConfOption: (option, json) => ({\r\n    info: _crInfo(json, option)\r\n  })\r\n}\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}