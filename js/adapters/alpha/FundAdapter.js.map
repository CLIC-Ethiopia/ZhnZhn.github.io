{"version":3,"sources":["../../../src/adapters/alpha/FundAdapter.js"],"names":["Builder","crConfigType1","ymdToUTC","fnAdapter","compareByDate","_isNan","Number","isNaN","_crData","json","option","dfItem","dfPeriod","_pnReport","_reports","_data","forEach","item","_y","parseInt","push","fiscalDateEnding","sort","_crZhConfig","_itemKey","itemCaption","dataSource","id","key","_crConfigOption","zhConfig","FundAdapter","crKey","toConfig","data","confOption","config","toSeries","crSeria","adapter","type"],"mappings":";;;;;;;AAAA;;AACA;;AAEM,IAAEA,OAAF,GAAcC,wBAAd,CAAED,OAAF;AAAA,IAEJE,QAFI,GAIFC,qBAJE,CAEJD,QAFI;AAAA,IAGJE,aAHI,GAIFD,qBAJE,CAGJC,aAHI;AAAA,IAKJC,MALI,GAKKC,MAAM,CAACC,KAAP,IAAgBA,KALrB;;AAON,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAAA,MACxBC,MADwB,GACHD,MADG,CACxBC,MADwB;AAAA,MAChBC,QADgB,GACHF,MADG,CAChBE,QADgB;AAAA,MAE9BC,SAF8B,GAElBD,QAAQ,KAAK,GAAb,GACP,eADO,GAEP,kBAJyB;AAAA,MAK9BE,QAL8B,GAKnBL,IAAI,CAACI,SAAD,CAAJ,IAAmB,EALA;AAAA,MAM9BE,KAN8B,GAMtB,EANsB;;AAQhCD,EAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvB,QAAMC,EAAE,GAAGC,QAAQ,CAACF,IAAI,CAACN,MAAD,CAAL,EAAe,EAAf,CAAnB;;AACA,QAAI,CAACN,MAAM,CAACa,EAAD,CAAX,EAAiB;AACfH,MAAAA,KAAK,CAACK,IAAN,CAAW,CAAClB,QAAQ,CAACe,IAAI,CAACI,gBAAN,CAAT,EAAkCH,EAAlC,CAAX;AACD;AACF,GALD;;AAMA,SAAOH,KAAK,CAACO,IAAN,CAAWlB,aAAX,CAAP;AACD,CAfD;;AAiBA,IAAMmB,WAAW,GAAG,SAAdA,WAAc;AAAA,MAClBC,QADkB,QAClBA,QADkB;AAAA,MAElBC,WAFkB,QAElBA,WAFkB;AAAA,MAGlBC,UAHkB,QAGlBA,UAHkB;AAAA,SAIb;AACLC,IAAAA,EAAE,EAAEH,QADC;AACSI,IAAAA,GAAG,EAAEJ,QADd;AAELC,IAAAA,WAAW,EAAXA,WAFK;AAGLC,IAAAA,UAAU,EAAVA;AAHK,GAJa;AAAA,CAApB;;AAUA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACnB,MAAD;AAAA,SAAa;AACnC;AACAoB,IAAAA,QAAQ,EAAEP,WAAW,CAACb,MAAD;AAFc,GAAb;AAAA,CAAxB;;AAKA,IAAMqB,WAAW,GAAG;AAClBC,EAAAA,KADkB,iBACZtB,MADY,EACL;AACX,WAAOA,MAAM,CAACc,QAAd;AACD,GAHiB;AAIlBS,EAAAA,QAJkB,oBAITxB,IAJS,EAIHC,MAJG,EAII;AACpB,QAAMwB,IAAI,GAAG1B,OAAO,CAACC,IAAD,EAAOC,MAAP,CAApB;AAAA,QACEyB,UAAU,GAAGN,eAAe,CAACnB,MAAD,CAD9B;;AAEA,WAAO;AACL0B,MAAAA,MAAM,EAAE,8BAAc;AACpB1B,QAAAA,MAAM,EAANA,MADoB;AACZwB,QAAAA,IAAI,EAAJA,IADY;AACNC,QAAAA,UAAU,EAAVA;AADM,OAAd;AADH,KAAP;AAKD,GAZiB;AAalBE,EAAAA,QAbkB,oBAaT5B,IAbS,EAaHC,MAbG,EAaI;AACpB,WAAOV,OAAO,CAACsC,OAAR,CAAgB;AACrBC,MAAAA,OAAO,EAAER,WADY;AAErBtB,MAAAA,IAAI,EAAJA,IAFqB;AAEfC,MAAAA,MAAM,EAANA,MAFe;AAGrB8B,MAAAA,IAAI,EAAE;AAHe,KAAhB,CAAP;AAKD;AAnBiB,CAApB;eAsBeT,W","sourcesContent":["import crConfigType1 from '../../charts/crConfigType1'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst { Builder } = crConfigType1\r\n, {\r\n  ymdToUTC,\r\n  compareByDate\r\n} = fnAdapter\r\n, _isNan = Number.isNaN || isNaN;\r\n\r\nconst _crData = (json, option) => {\r\n  const { dfItem, dfPeriod } = option\r\n  , _pnReport = dfPeriod === 'A'\r\n       ? 'annualReports'\r\n       : 'quarterlyReports'\r\n  , _reports = json[_pnReport] || []\r\n  , _data = [];\r\n\r\n  _reports.forEach(item => {\r\n    const _y = parseInt(item[dfItem], 10)\r\n    if (!_isNan(_y)) {\r\n      _data.push([ymdToUTC(item.fiscalDateEnding), _y])\r\n    }\r\n  })\r\n  return _data.sort(compareByDate);\r\n}\r\n\r\nconst _crZhConfig = ({\r\n  _itemKey,\r\n  itemCaption,\r\n  dataSource,\r\n}) => ({\r\n  id: _itemKey, key: _itemKey,\r\n  itemCaption,\r\n  dataSource\r\n});\r\n\r\nconst _crConfigOption = (option) => ({\r\n  //valueMoving: valueMoving(data),\r\n  zhConfig: _crZhConfig(option)\r\n})\r\n\r\nconst FundAdapter = {\r\n  crKey(option){\r\n    return option._itemKey;\r\n  },\r\n  toConfig(json, option){\r\n    const data = _crData(json, option)\r\n    , confOption = _crConfigOption(option);\r\n    return {\r\n      config: crConfigType1({\r\n        option, data, confOption,\r\n      })\r\n    };\r\n  },\r\n  toSeries(json, option){\r\n    return Builder.crSeria({\r\n      adapter: FundAdapter,\r\n      json, option,\r\n      type: 'spline'\r\n    });\r\n  }\r\n};\r\n\r\nexport default FundAdapter\r\n"],"file":"FundAdapter.js"}