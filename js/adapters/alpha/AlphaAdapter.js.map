{"version":3,"sources":["../../../src/adapters/alpha/AlphaAdapter.js"],"names":["C","TWO_YEARS_DAYS","TA","MACD","MACD_S","MACD_H","STOCH","SLOW_K","SLOW_D","BBANDS","BBANDS_U","BBANDS_M","BBANDS_L","BLACK","color","RED","BLUE","COLOR_BLUE_A","GREEN","_crZhConfig","id","key","itemCaption","dataSource","_crValuePropName","indicator","_crValue","json","option","forDays","_indicator","value","dateKeys","Object","keys","sort","reverse","_len","length","max","_toDataArrs","arrProp","i","j","_date","_x","_v","result","_maxProp","push","ymdtToUTC","parseFloat","_crSplineSeria","data","ticket","valueText","assign","fSeries","type","visible","marker","symbol","zhSeriaId","zhValueText","_crSeriaData","_data","_crSeria","_crMacdSeries","_arrs","sMcad","sSignal","sHist","shadow","borderWidth","pointPlacement","pointPadding","groupPadding","turboThreshold","_crStochSeries","sSlowK","sSlowD","_crBbandsSeries","sMiddle","sUpper","sLow","_rSeries","DF","AlphaAdapter","toConfig","_chartId","_title","_series","toSeries","config","initBaseArea","add","spacingTop","addCaption","clearSeries","addSeries","isDrawDeltaExtrems","isNotZoomToMinMax","_fnToSeries"],"mappings":"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","file":"AlphaAdapter.js","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\n\r\nimport {\r\n  fnAddSeriesSma, fnRemoveSeries\r\n} from '../IndicatorSma'\r\n\r\n\r\nconst C = {\r\n  TWO_YEARS_DAYS: 501,\r\n  TA: 'Technical Analysis:',\r\n\r\n  MACD: 'MACD',\r\n  MACD_S: 'MACD_Signal',\r\n  MACD_H: 'MACD_Hist',\r\n\r\n  STOCH: 'STOCH',\r\n  SLOW_K: 'SlowK',\r\n  SLOW_D: 'SlowD',\r\n\r\n  BBANDS: 'BBANDS',\r\n  BBANDS_U: 'Real Upper Band',\r\n  BBANDS_M: 'Real Middle Band',\r\n  BBANDS_L: 'Real Lower Band',\r\n\r\n  BLACK: { color: 'black' },\r\n  RED: { color: '#f44336' },\r\n  BLUE: { color: 'rgb(47, 126, 216)' },\r\n  COLOR_BLUE_A: 'rgba(47, 126, 216, 0.75)',\r\n  GREEN: { color: '#4caf50' }\r\n}\r\n\r\nconst _crZhConfig = (id) => ({\r\n  id: id,\r\n  key: id,\r\n  itemCaption: id,\r\n  dataSource: \"Alpha Vantage\"\r\n});\r\n\r\nconst _crValuePropName = (indicator) => {\r\n  switch(indicator){\r\n    case 'AD': return 'Chaikin A/D';\r\n    default: return indicator;\r\n  }\r\n};\r\n\r\nconst _crValue = ( json, option ) => {\r\n  const {\r\n          indicator,\r\n          forDays=C.TWO_YEARS_DAYS\r\n        } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , value = json[`${C.TA} ${_indicator}`]\r\n      , dateKeys = value\r\n           ? Object.keys(value).sort().reverse()\r\n           : []\r\n      , _len = dateKeys.length\r\n      , max = _len < forDays\r\n          ? _len-1\r\n          : forDays;\r\n    return { value, dateKeys, max };\r\n}\r\n\r\nconst _toDataArrs = ({dateKeys, value, max}, arrProp) => {\r\n  let i, j, _date, _x, _v;\r\n\r\n  const result=[], _maxProp=arrProp.length;\r\n  for(j=0; j<_maxProp;j++) {\r\n    result.push([])\r\n  }\r\n\r\n  for(i=max; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _x = AdapterFn.ymdtToUTC(_date)\r\n    _v = value[_date]\r\n    for(j=0; j<_maxProp; j++){\r\n      result[j].push([_x, parseFloat(_v[arrProp[j]])])\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst _crSplineSeria = ({data, ticket, valueText}, option) => {\r\n  return Object.assign(ChartConfig.fSeries(), {\r\n            type: 'spline',\r\n            visible: true,\r\n            data: data,\r\n            marker: {\r\n              symbol: 'circle'\r\n            },\r\n            zhSeriaId: ticket + '_' + valueText ,\r\n            zhValueText: valueText\r\n          }, option);\r\n}\r\n\r\nconst _crSeriaData = (json, option) => {\r\n  const { indicator } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , { value, dateKeys, max } = _crValue(json, option)\r\n      , _data = [];\r\n\r\n  let i=max, _date, _v;\r\n  for(; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _v = parseFloat(value[_date][_indicator])\r\n    _data.push([ AdapterFn.ymdtToUTC(_date), _v])\r\n  }\r\n\r\n  return _data;\r\n}\r\n\r\nconst _crSeria = (json, option ) => {\r\n  const { indicator, ticket } = option\r\n      , _data = _crSeriaData(json, option);\r\n  return _crSplineSeria({\r\n           data: _data, valueText: indicator, ticket\r\n         });\r\n}\r\n\r\n\r\nconst _crMacdSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option),\r\n           [C.MACD, C.MACD_S, C.MACD_H]\r\n        )\r\n      , sMcad = _crSplineSeria({\r\n           data: _arrs[0], valueText: C.MACD, ticket\r\n        }, C.BLACK)\r\n      , sSignal = _crSplineSeria({\r\n           data: _arrs[1], valueText: C.MACD_S, ticket\r\n        }, C.RED)\r\n      , sHist = Object.assign(ChartConfig.fSeries(), {\r\n           color: C.COLOR_BLUE_A,\r\n           data: _arrs[2],\r\n           zhSeriaId: ticket + '_' + C.MACD_H,\r\n           zhValueText: C.MACD_H,\r\n           type: 'column',\r\n           visible: false,\r\n           shadow: false,\r\n           borderWidth: 0,\r\n           pointPlacement: 'on',\r\n           pointPadding: 0,\r\n           groupPadding: 0,\r\n           turboThreshold: 20000\r\n        });\r\n\r\n  return [ sHist, sSignal, sMcad ];\r\n}\r\n\r\nconst _crStochSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option), [C.SLOW_K, C.SLOW_D]\r\n        )\r\n      , sSlowK = _crSplineSeria({\r\n          data: _arrs[0], valueText: C.SLOW_K, ticket\r\n        }, C.BLUE)\r\n     , sSlowD = _crSplineSeria({\r\n          data: _arrs[1], valueText: C.SLOW_D, ticket\r\n       }, C.RED);\r\n\r\n  return [sSlowK, sSlowD];\r\n}\r\n\r\nconst _crBbandsSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option),\r\n           [C.BBANDS_M, C.BBANDS_U, C.BBANDS_L]\r\n        )\r\n      , sMiddle = _crSplineSeria({\r\n          data: _arrs[0], valueText: C.BBANDS_M, ticket\r\n        }, C.BLUE)\r\n     , sUpper = _crSplineSeria({\r\n          data: _arrs[1], valueText: C.BBANDS_U, ticket\r\n       }, C.GREEN)\r\n     , sLow = _crSplineSeria({\r\n            data: _arrs[2], valueText: C.BBANDS_L, ticket\r\n       }, C.RED);\r\n\r\n    return [sMiddle, sUpper, sLow];\r\n}\r\n\r\nconst _rSeries = {\r\n  DF: _crSeria,\r\n  [C.MACD]: _crMacdSeries,\r\n  [C.STOCH]: _crStochSeries,\r\n  [C.BBANDS]: _crBbandsSeries,\r\n}\r\n\r\nconst AlphaAdapter = {\r\n  toConfig(json, option) {\r\n    const { ticket, value } = option\r\n        , _chartId = `${ticket}-${value}`\r\n        , _title = `${ticket}: ${value}`\r\n        , _series = this.toSeries(json, option)\r\n        , config = ConfigBuilder()\r\n            .initBaseArea()\r\n            .add('chart', { spacingTop: 25 })\r\n            .addCaption(_title)\r\n            .clearSeries()\r\n            .addSeries(_series)\r\n            .add('zhConfig', _crZhConfig(_chartId))\r\n            .add('zhFnAddSeriesSma', fnAddSeriesSma)\r\n            .add('zhFnRemoveSeries', fnRemoveSeries)\r\n            .toConfig();\r\n    return {\r\n      config,\r\n      isDrawDeltaExtrems:false,\r\n      isNotZoomToMinMax:false\r\n    };\r\n  },\r\n\r\n  toSeries(json, option) {\r\n    const _fnToSeries = _rSeries[option.indicator];\r\n    if (_fnToSeries){\r\n      return _fnToSeries(json, option);\r\n    } else {\r\n      return _rSeries.DF(json, option);\r\n    }\r\n  }\r\n};\r\n\r\nexport default AlphaAdapter\r\n"]}