{"version":3,"sources":["../../../src/adapters/alpha/AlphaAdapter.js"],"names":["C","TWO_YEARS_DAYS","TA","MACD","MACD_S","MACD_H","STOCH","SLOW_K","SLOW_D","BBANDS","BBANDS_U","BBANDS_M","BBANDS_L","BLACK","color","RED","BLUE","COLOR_BLUE_A","GREEN","_crZhConfig","id","key","itemCaption","dataSource","_crValuePropName","indicator","_crValue","json","option","forDays","_indicator","value","dateKeys","Object","keys","sort","reverse","_len","length","max","_toDataArrs","arrProp","i","j","_date","_x","_v","result","_maxProp","push","AdapterFn","ymdtToUTC","parseFloat","_crSplineSeria","data","ticket","valueText","assign","ChartConfig","fSeries","type","visible","marker","symbol","zhSeriaId","zhValueText","_crSeriaData","_data","_crSeria","_crMacdSeries","_arrs","sMcad","sSignal","sHist","shadow","borderWidth","pointPlacement","pointPadding","groupPadding","turboThreshold","_crStochSeries","sSlowK","sSlowD","_crBbandsSeries","sMiddle","sUpper","sLow","_rSeries","DF","AlphaAdapter","toConfig","_chartId","_title","_series","toSeries","config","areaConfig","spacingTop","addCaption","clearSeries","addSeries","add","zhConfig","isDrawDeltaExtrems","isNotZoomToMinMax","_fnToSeries"],"mappings":"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","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nconst C = {\r\n  TWO_YEARS_DAYS: 501,\r\n  TA: 'Technical Analysis:',\r\n\r\n  MACD: 'MACD',\r\n  MACD_S: 'MACD_Signal',\r\n  MACD_H: 'MACD_Hist',\r\n\r\n  STOCH: 'STOCH',\r\n  SLOW_K: 'SlowK',\r\n  SLOW_D: 'SlowD',\r\n\r\n  BBANDS: 'BBANDS',\r\n  BBANDS_U: 'Real Upper Band',\r\n  BBANDS_M: 'Real Middle Band',\r\n  BBANDS_L: 'Real Lower Band',\r\n\r\n  BLACK: { color: 'black' },\r\n  RED: { color: '#f44336' },\r\n  BLUE: { color: 'rgb(47, 126, 216)' },\r\n  COLOR_BLUE_A: 'rgba(47, 126, 216, 0.75)',\r\n  GREEN: { color: '#4caf50' }\r\n}\r\n\r\nconst _crZhConfig = (id) => ({\r\n  id: id,\r\n  key: id,\r\n  itemCaption: id,\r\n  dataSource: \"Alpha Vantage\"\r\n});\r\n\r\nconst _crValuePropName = (indicator) => {\r\n  switch(indicator){\r\n    case 'AD': return 'Chaikin A/D';\r\n    default: return indicator;\r\n  }\r\n};\r\n\r\nconst _crValue = ( json, option ) => {\r\n  const {\r\n          indicator,\r\n          forDays=C.TWO_YEARS_DAYS\r\n        } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , value = json[`${C.TA} ${_indicator}`]\r\n      , dateKeys = value\r\n           ? Object.keys(value).sort().reverse()\r\n           : []\r\n      , _len = dateKeys.length\r\n      , max = _len < forDays\r\n          ? _len-1\r\n          : forDays;\r\n    return { value, dateKeys, max };\r\n}\r\n\r\nconst _toDataArrs = ({dateKeys, value, max}, arrProp) => {\r\n  let i, j, _date, _x, _v;\r\n\r\n  const result=[], _maxProp=arrProp.length;\r\n  for(j=0; j<_maxProp;j++) {\r\n    result.push([])\r\n  }\r\n\r\n  for(i=max; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _x = AdapterFn.ymdtToUTC(_date)\r\n    _v = value[_date]\r\n    for(j=0; j<_maxProp; j++){\r\n      result[j].push([_x, parseFloat(_v[arrProp[j]])])\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst _crSplineSeria = ({data, ticket, valueText}, option) => {\r\n  return Object.assign(ChartConfig.fSeries(), {\r\n            type: 'spline',\r\n            visible: true,\r\n            data: data,\r\n            marker: {\r\n              symbol: 'circle'\r\n            },\r\n            zhSeriaId: ticket + '_' + valueText ,\r\n            zhValueText: valueText\r\n          }, option);\r\n}\r\n\r\nconst _crSeriaData = (json, option) => {\r\n  const { indicator } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , { value, dateKeys, max } = _crValue(json, option)\r\n      , _data = [];\r\n\r\n  let i=max, _date, _v;\r\n  for(; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _v = parseFloat(value[_date][_indicator])\r\n    _data.push([ AdapterFn.ymdtToUTC(_date), _v])\r\n  }\r\n\r\n  return _data;\r\n}\r\n\r\nconst _crSeria = (json, option ) => {\r\n  const { indicator, ticket } = option\r\n      , _data = _crSeriaData(json, option);\r\n  return _crSplineSeria({\r\n           data: _data, valueText: indicator, ticket\r\n         });\r\n}\r\n\r\n\r\nconst _crMacdSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option),\r\n           [C.MACD, C.MACD_S, C.MACD_H]\r\n        )\r\n      , sMcad = _crSplineSeria({\r\n           data: _arrs[0], valueText: C.MACD, ticket\r\n        }, C.BLACK)\r\n      , sSignal = _crSplineSeria({\r\n           data: _arrs[1], valueText: C.MACD_S, ticket\r\n        }, C.RED)\r\n      , sHist = Object.assign(ChartConfig.fSeries(), {\r\n           color: C.COLOR_BLUE_A,\r\n           data: _arrs[2],\r\n           zhSeriaId: ticket + '_' + C.MACD_H,\r\n           zhValueText: C.MACD_H,\r\n           type: 'column',\r\n           visible: false,\r\n           shadow: false,\r\n           borderWidth: 0,\r\n           pointPlacement: 'on',\r\n           pointPadding: 0,\r\n           groupPadding: 0,\r\n           turboThreshold: 20000\r\n        });\r\n\r\n  return [ sHist, sSignal, sMcad ];\r\n}\r\n\r\nconst _crStochSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option), [C.SLOW_K, C.SLOW_D]\r\n        )\r\n      , sSlowK = _crSplineSeria({\r\n          data: _arrs[0], valueText: C.SLOW_K, ticket\r\n        }, C.BLUE)\r\n     , sSlowD = _crSplineSeria({\r\n          data: _arrs[1], valueText: C.SLOW_D, ticket\r\n       }, C.RED);\r\n\r\n  return [sSlowK, sSlowD];\r\n}\r\n\r\nconst _crBbandsSeries = (json, option) => {\r\n  const { ticket } = option\r\n      , _arrs = _toDataArrs(\r\n           _crValue(json, option),\r\n           [C.BBANDS_M, C.BBANDS_U, C.BBANDS_L]\r\n        )\r\n      , sMiddle = _crSplineSeria({\r\n          data: _arrs[0], valueText: C.BBANDS_M, ticket\r\n        }, C.BLUE)\r\n     , sUpper = _crSplineSeria({\r\n          data: _arrs[1], valueText: C.BBANDS_U, ticket\r\n       }, C.GREEN)\r\n     , sLow = _crSplineSeria({\r\n            data: _arrs[2], valueText: C.BBANDS_L, ticket\r\n       }, C.RED);\r\n\r\n    return [sMiddle, sUpper, sLow];\r\n}\r\n\r\nconst _rSeries = {\r\n  DF: _crSeria,\r\n  [C.MACD]: _crMacdSeries,\r\n  [C.STOCH]: _crStochSeries,\r\n  [C.BBANDS]: _crBbandsSeries,\r\n}\r\n\r\nconst AlphaAdapter = {\r\n  toConfig(json, option) {\r\n    const { ticket, value } = option\r\n        , _chartId = `${ticket}-${value}`\r\n        , _title = `${ticket}: ${value}`\r\n        , _series = this.toSeries(json, option)\r\n        , config = Builder()\r\n            .areaConfig({ spacingTop: 25 })\r\n            .addCaption(_title)\r\n            .clearSeries()\r\n            .addSeries(_series)\r\n            .add({ zhConfig: _crZhConfig(_chartId) })\r\n            .toConfig();\r\n    return {\r\n      config,\r\n      isDrawDeltaExtrems:false,\r\n      isNotZoomToMinMax:false\r\n    };\r\n  },\r\n\r\n  toSeries(json, option) {\r\n    const _fnToSeries = _rSeries[option.indicator];\r\n    if (_fnToSeries){\r\n      return _fnToSeries(json, option);\r\n    } else {\r\n      return _rSeries.DF(json, option);\r\n    }\r\n  }\r\n};\r\n\r\nexport default AlphaAdapter\r\n"],"file":"AlphaAdapter.js"}