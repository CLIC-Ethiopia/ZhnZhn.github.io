{"version":3,"sources":["../../../src/adapters/alpha/fnAdapter.js"],"names":["getValue","AdapterFn","getCaption","crItemConf","crValueConf","stockSeriesLegend","valueMoving","ymdToUTC","compareByDate","_crItemConf","option","id","dataSource","data","indicator","ticket","dfT","dfSubId","interval","_itemKey","_crZhConfig","config","itemConf","key","legend","fnAdapter","crIntradayConfigOption","zhConfig"],"mappings":";;;;;;;;;AACA;;IAGEA,Q,GAQEC,qB,CARFD,Q;IACAE,U,GAOED,qB,CAPFC,U;IACAC,U,GAMEF,qB,CANFE,U;IACAC,W,GAKEH,qB,CALFG,W;IACAC,iB,GAIEJ,qB,CAJFI,iB;IACAC,W,GAGEL,qB,CAHFK,W;IACAC,Q,GAEEN,qB,CAFFM,Q;IACAC,a,GACEP,qB,CADFO,a;;AAGF,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyBC,MAAzB,EAAoC;AAAA,MAAlCC,EAAkC,QAAlCA,EAAkC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAC9CC,SAD8C,GACAJ,MADA,CAC9CI,SAD8C;AAAA,MACnCC,MADmC,GACAL,MADA,CACnCK,MADmC;AAAA,MAC3BC,GAD2B,GACAN,MADA,CAC3BM,GAD2B;AAAA,MACtBC,OADsB,GACAP,MADA,CACtBO,OADsB;AAAA,MACbC,QADa,GACAR,MADA,CACbQ,QADa;AAEtD,SAAOJ,SAAS,KAAK,mBAAd;AAECK,IAAAA,QAAQ,EAAER;AAFX,KAGIR,UAAU,CAACO,MAAD,CAHd,EAIIN,WAAW,CAACS,IAAD,CAJf;AAKCG,IAAAA,GAAG,EAAHA,GALD;AAKMC,IAAAA,OAAO,EAAPA,OALN;AAKeC,IAAAA,QAAQ,EAARA,QALf;AAKyBJ,IAAAA,SAAS,EAATA,SALzB;AAKoCC,IAAAA,MAAM,EAANA,MALpC;AAMCH,IAAAA,UAAU,EAAVA;AAND,OAQH,KAAK,CART;AASD,CAXD;;AAaA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASX,MAAT,EAAoB;AAAA,MAC9BC,EAD8B,GACXU,MADW,CAC9BV,EAD8B;AAAA,MAC1BC,UAD0B,GACXS,MADW,CAC1BT,UAD0B;AAAA,MAEpCU,QAFoC,GAEzBb,WAAW,CAACY,MAAD,EAASX,MAAT,CAFc;;AAGtC,SAAO;AACLC,IAAAA,EAAE,EAAFA,EADK;AACDY,IAAAA,GAAG,EAAEZ,EADJ;AAELW,IAAAA,QAAQ,EAARA,QAFK;AAGLE,IAAAA,MAAM,EAAEnB,iBAAiB,EAHpB;AAILO,IAAAA,UAAU,EAAEA,UAAU,IAAI;AAJrB,GAAP;AAMD,CATD;;AAWA,IAAMa,SAAS,GAAG;AAChBzB,EAAAA,QAAQ,EAARA,QADgB;AAEhBE,EAAAA,UAAU,EAAVA,UAFgB;AAGhBI,EAAAA,WAAW,EAAXA,WAHgB;AAIhBC,EAAAA,QAAQ,EAARA,QAJgB;AAKhBC,EAAAA,aAAa,EAAbA,aALgB;AAMhBkB,EAAAA,sBAAsB,EAAE,gCAACL,MAAD,EAASX,MAAT;AAAA,WAAqB;AAC3CiB,MAAAA,QAAQ,EAAEP,WAAW,CAACC,MAAD,EAASX,MAAT,CADsB;AAE3CJ,MAAAA,WAAW,EAAEA,WAAW,CAACe,MAAM,CAACR,IAAR;AAFmB,KAArB;AAAA;AANR,CAAlB;eAYeY,S","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nconst {\r\n  getValue,\r\n  getCaption,\r\n  crItemConf,\r\n  crValueConf,\r\n  stockSeriesLegend,\r\n  valueMoving,\r\n  ymdToUTC,\r\n  compareByDate\r\n} = AdapterFn;\r\n\r\nconst _crItemConf = ({id, dataSource, data}, option) => {\r\n  const { indicator, ticket, dfT, dfSubId, interval } = option;\r\n  return indicator === 'TIME_SERIES_DAILY'\r\n     ? {\r\n          _itemKey: id,\r\n          ...crItemConf(option),\r\n          ...crValueConf(data),\r\n          dfT, dfSubId, interval, indicator, ticket,\r\n          dataSource\r\n       }\r\n    : void 0;\r\n};\r\n\r\nconst _crZhConfig = (config, option) => {\r\n  const { id, dataSource } = config\r\n  , itemConf = _crItemConf(config, option);\r\n  return {\r\n    id, key: id,\r\n    itemConf,\r\n    legend: stockSeriesLegend(),\r\n    dataSource: dataSource || \"Alpha Vantage\"\r\n  }\r\n};\r\n\r\nconst fnAdapter = {\r\n  getValue,\r\n  getCaption,\r\n  valueMoving,\r\n  ymdToUTC,\r\n  compareByDate,\r\n  crIntradayConfigOption: (config, option) => ({\r\n    zhConfig: _crZhConfig(config, option),\r\n    valueMoving: valueMoving(config.data)\r\n  })\r\n}\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}