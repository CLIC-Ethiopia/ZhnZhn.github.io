{"version":3,"sources":["../../../src/adapters/alpha/IndicatorAdapter.js"],"names":["ymdToUTC","AdapterFn","C","TWO_YEARS_DAYS","TA","MACD","MACD_S","MACD_H","STOCH","SLOW_K","SLOW_D","BBANDS","BBANDS_U","BBANDS_M","BBANDS_L","BLACK","color","RED","BLUE","COLOR_BLUE_A","GREEN","_assign","Object","assign","_crZhConfig","id","key","itemCaption","dataSource","_crValuePropName","indicator","_crValue","json","option","forDays","_indicator","value","dateKeys","keys","sort","reverse","_len","length","max","_toDataArrs","arrProp","i","j","_date","_x","_v","result","_maxProp","push","parseFloat","_crSplineSeria","data","valueText","ChartConfig","crSeria","type","visible","marker","symbol","zhValueText","_crSeriaData","_data","_crSeria","_crMacdSeries","_arrs","sMcad","sSignal","sHist","shadow","borderWidth","pointPlacement","pointPadding","groupPadding","turboThreshold","_crStochSeries","sSlowK","sSlowD","_crBbandsSeries","sMiddle","sUpper","sLow","_rSeries","DF","IndicatorAdapter","crKey","ticket","chartId","toConfig","_title","_series","toSeries","config","areaConfig","spacingTop","addCaption","clearSeries","addSeries","add","zhConfig","isDrawDeltaExtrems","isNotZoomToMinMax","_crSeries"],"mappings":"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","sourcesContent":["\r\nimport AdapterFn from '../AdapterFn'\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nconst { ymdToUTC } = AdapterFn\r\n\r\nconst C = {\r\n  TWO_YEARS_DAYS: 501,\r\n  TA: 'Technical Analysis:',\r\n\r\n  MACD: 'MACD',\r\n  MACD_S: 'MACD_Signal',\r\n  MACD_H: 'MACD_Hist',\r\n\r\n  STOCH: 'STOCH',\r\n  SLOW_K: 'SlowK',\r\n  SLOW_D: 'SlowD',\r\n\r\n  BBANDS: 'BBANDS',\r\n  BBANDS_U: 'Real Upper Band',\r\n  BBANDS_M: 'Real Middle Band',\r\n  BBANDS_L: 'Real Lower Band',\r\n\r\n  BLACK: { color: 'black' },\r\n  RED: { color: '#f44336' },\r\n  BLUE: { color: 'rgb(47, 126, 216)' },\r\n  COLOR_BLUE_A: 'rgba(47, 126, 216, 0.75)',\r\n  GREEN: { color: '#4caf50' }\r\n}\r\n\r\nconst _assign = Object.assign\r\n\r\nconst _crZhConfig = (id) => ({\r\n  id: id,\r\n  key: id,\r\n  itemCaption: id,\r\n  dataSource: \"Alpha Vantage\"\r\n});\r\n\r\nconst _crValuePropName = (indicator) => {\r\n  switch(indicator){\r\n    case 'AD': return 'Chaikin A/D';\r\n    default: return indicator;\r\n  }\r\n};\r\n\r\nconst _crValue = ( json, option ) => {\r\n  const {\r\n          indicator,\r\n          forDays=C.TWO_YEARS_DAYS\r\n        } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , value = json[`${C.TA} ${_indicator}`]\r\n      , dateKeys = value\r\n           ? Object.keys(value).sort().reverse()\r\n           : []\r\n      , _len = dateKeys.length\r\n      , max = _len < forDays\r\n          ? _len-1\r\n          : forDays;\r\n    return { value, dateKeys, max };\r\n}\r\n\r\nconst _toDataArrs = ({dateKeys, value, max}, arrProp) => {\r\n  let i, j, _date, _x, _v;\r\n\r\n  const result=[], _maxProp=arrProp.length;\r\n  for(j=0; j<_maxProp;j++) {\r\n    result.push([])\r\n  }\r\n\r\n  for(i=max; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _x = ymdToUTC(_date)\r\n    _v = value[_date]\r\n    for(j=0; j<_maxProp; j++){\r\n      result[j].push([_x, parseFloat(_v[arrProp[j]])])\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst _crSplineSeria = ({ data, valueText }, option) =>\r\n  _assign(ChartConfig.crSeria(), {\r\n    type: 'spline',\r\n    visible: true,\r\n    data: data,\r\n    marker: {\r\n      symbol: 'circle'\r\n    },\r\n    zhValueText: valueText\r\n  }, option);\r\n\r\n\r\nconst _crSeriaData = (json, option) => {\r\n  const { indicator } = option\r\n      , _indicator = _crValuePropName(indicator)\r\n      , { value, dateKeys, max } = _crValue(json, option)\r\n      , _data = [];\r\n\r\n  let i=max, _date, _v;\r\n  for(; i>-1; i--) {\r\n    _date = dateKeys[i]\r\n    _v = parseFloat(value[_date][_indicator])\r\n    _data.push([ymdToUTC(_date), _v])\r\n  }\r\n\r\n  return _data;\r\n}\r\n\r\nconst _crSeria = (json, option ) => {\r\n  const { indicator } = option\r\n  , _data = _crSeriaData(json, option);\r\n  return _crSplineSeria({\r\n    data: _data,\r\n    valueText: indicator\r\n  });\r\n}\r\n\r\n\r\nconst _crMacdSeries = (json, option) => {\r\n  const _arrs = _toDataArrs(\r\n     _crValue(json, option),\r\n     [C.MACD, C.MACD_S, C.MACD_H]\r\n  )\r\n  , sMcad = _crSplineSeria({\r\n       data: _arrs[0], valueText: C.MACD\r\n    }, C.BLACK)\r\n  , sSignal = _crSplineSeria({\r\n       data: _arrs[1], valueText: C.MACD_S\r\n    }, C.RED)\r\n  , sHist = _assign(ChartConfig.crSeria(), {\r\n       color: C.COLOR_BLUE_A,\r\n       data: _arrs[2],\r\n       zhValueText: C.MACD_H,\r\n       type: 'column',\r\n       visible: false,\r\n       shadow: false,\r\n       borderWidth: 0,\r\n       pointPlacement: 'on',\r\n       pointPadding: 0,\r\n       groupPadding: 0,\r\n       turboThreshold: 20000\r\n    });\r\n\r\n  return [ sHist, sSignal, sMcad ];\r\n}\r\n\r\nconst _crStochSeries = (json, option) => {\r\n  const _arrs = _toDataArrs(\r\n    _crValue(json, option), [C.SLOW_K, C.SLOW_D]\r\n  )\r\n  , sSlowK = _crSplineSeria({\r\n      data: _arrs[0], valueText: C.SLOW_K\r\n    }, C.BLUE)\r\n , sSlowD = _crSplineSeria({\r\n      data: _arrs[1], valueText: C.SLOW_D\r\n   }, C.RED);\r\n\r\n  return [sSlowK, sSlowD];\r\n}\r\n\r\nconst _crBbandsSeries = (json, option) => {\r\n  const _arrs = _toDataArrs(\r\n      _crValue(json, option),\r\n      [C.BBANDS_M, C.BBANDS_U, C.BBANDS_L]\r\n    )\r\n    , sMiddle = _crSplineSeria({\r\n        data: _arrs[0], valueText: C.BBANDS_M\r\n      }, C.BLUE)\r\n   , sUpper = _crSplineSeria({\r\n        data: _arrs[1], valueText: C.BBANDS_U\r\n     }, C.GREEN)\r\n   , sLow = _crSplineSeria({\r\n          data: _arrs[2], valueText: C.BBANDS_L\r\n     }, C.RED);\r\n\r\n    return [sMiddle, sUpper, sLow];\r\n}\r\n\r\nconst _rSeries = {\r\n  DF: _crSeria,\r\n  [C.MACD]: _crMacdSeries,\r\n  [C.STOCH]: _crStochSeries,\r\n  [C.BBANDS]: _crBbandsSeries,\r\n}\r\n\r\nconst IndicatorAdapter = {\r\n  crKey(option){\r\n    const { ticket, value } = option;\r\n    return (option.chartId = `${ticket}-${value}`);\r\n  },\r\n  toConfig(json, option) {\r\n    const { ticket, value, chartId } = option\r\n        //, _chartId = `${ticket}-${value}`\r\n        , _title = `${ticket}: ${value}`\r\n        , _series = this.toSeries(json, option)\r\n        , config = Builder()\r\n            .areaConfig({ spacingTop: 25 })\r\n            .addCaption(_title)\r\n            .clearSeries()\r\n            .addSeries(_series)\r\n            .add({ zhConfig: _crZhConfig(chartId) })\r\n            .toConfig();\r\n    return {\r\n      config,\r\n      isDrawDeltaExtrems: false,\r\n      isNotZoomToMinMax: false\r\n    };\r\n  },\r\n\r\n  toSeries(json, option) {\r\n    const _crSeries = _rSeries[option.indicator]\r\n      || _rSeries.DF;\r\n    return _crSeries(json, option);\r\n  }\r\n};\r\n\r\nexport default IndicatorAdapter\r\n"],"file":"IndicatorAdapter.js"}