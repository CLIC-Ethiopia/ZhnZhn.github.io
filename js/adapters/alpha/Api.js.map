{"version":3,"sources":["../../../src/adapters/alpha/Api.js"],"names":["getValue","fnAdapter","getCaption","C","ROOT","ERR_PROP","REQ_ERROR","RES_EMPTY","MSG_EMPTY","_assign","Object","assign","_crError","errCaption","message","AlphaApi","getRequestUrl","option","indicator","ticket","period","apiKey","dfFn","_fn","interval","outputsize","items","itemCaption","_symbol","replace","dfItem","dfPeriod","checkResponse","json"],"mappings":"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","sourcesContent":["\r\nimport isEmpty from '../../utils/isEmpty'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst {\r\n  getValue,\r\n  getCaption\r\n} = fnAdapter\r\n\r\nconst C = {\r\n  ROOT: 'https://www.alphavantage.co/query',\r\n\r\n  ERR_PROP: 'Error Message',\r\n  REQ_ERROR: 'Request Error',\r\n  RES_EMPTY: 'Response Empty',\r\n  MSG_EMPTY: 'Empty response from data provider'\r\n};\r\n\r\nconst _assign = Object.assign\r\n\r\nconst _crError = (errCaption, message) => ({\r\n  errCaption, message\r\n});\r\n\r\nconst AlphaApi = {\r\n  getRequestUrl(option) {\r\n    const { indicator='SMA', ticket='MSFT', period='50', apiKey, dfFn } = option\r\n    , _fn = dfFn || indicator;\r\n    switch(_fn){\r\n      case 'SECTOR':\r\n        return `${C.ROOT}?function=${_fn}&apikey=${apiKey}`;\r\n      case 'TIME_SERIES_INTRADAY':{\r\n        const { interval } = option;\r\n        return `${C.ROOT}?function=${_fn}&interval=${interval}&symbol=${ticket}&apikey=${apiKey}`;\r\n      }\r\n      case 'TIME_SERIES_DAILY': {\r\n        const { outputsize='compact' } = option;\r\n        return `${C.ROOT}?function=${_fn}&outputsize=${outputsize}&symbol=${ticket}&apikey=${apiKey}`;\r\n      }\r\n      case 'TIME_SERIES_DAILY_ADJUSTED': {\r\n        const { outputsize } = option;\r\n        return `${C.ROOT}?function=${_fn}&outputsize=${outputsize}&symbol=${ticket}&apikey=${apiKey}`;\r\n      }\r\n      case 'INCOME_STATEMENT':\r\n      case 'BALANCE_SHEET':\r\n      case 'CASH_FLOW': {\r\n        const { items, itemCaption } = option\r\n        , _symbol = getValue(items[0]);\r\n        _assign(option, {\r\n          itemCaption: itemCaption.replace(getCaption(items[0]), _symbol),\r\n          dfItem: getValue(items[1]),\r\n          dfPeriod: getValue(items[2])\r\n        })\r\n        return `${C.ROOT}?function=${_fn}&symbol=${_symbol}&apikey=${apiKey}`;\r\n      }\r\n      default:\r\n        return `${C.ROOT}?function=${indicator}&symbol=${ticket}&interval=daily&time_period=${period}&series_type=close&apikey=${apiKey}`;\r\n    }\r\n  },\r\n\r\n  checkResponse(json){\r\n    if (isEmpty(json)) {\r\n      throw _crError(C.RES_EMPTY, C.MSG_EMPTY);\r\n    }\r\n    if (!json[C.ERR_PROP]) {\r\n      return true;\r\n    } else {\r\n      throw _crError( C.REQ_ERROR, json[C.ERR_PROP]);\r\n    }\r\n  }\r\n}\r\n\r\nexport default AlphaApi\r\n"],"file":"Api.js"}