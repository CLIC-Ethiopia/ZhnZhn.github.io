{"version":3,"sources":["../../../src/adapters/alpha/EarnAdapter.js"],"names":["crData","json","option","dfPeriod","_pnReport","_reports","_data","forEach","reportedEPS","fiscalDateEnding","_y","push","sort","compareByDate","_adapter","EarnAdapter"],"mappings":";;;;;;;AAAA;;AACA;;AAOA,MAAMA,MAAM,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,MAArB;AAAA,QACEE,SAAS,GAAGD,QAAQ,KAAK,GAAb,GACP,gBADO,GAEP,mBAHP;AAAA,QAIEE,QAAQ,GAAGJ,IAAI,CAACG,SAAD,CAAJ,IAAmB,EAJhC;AAAA,QAKEE,KAAK,GAAG,EALV;;AAMAD,EAAAA,QAAQ,CAACE,OAAT,CAAiB,QAAuC;AAAA,QAAtC;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAsC;;AACtD,UAAMC,EAAE,GAAG,wBAAQF,WAAR,CAAX;;AACA,QAAI,CAAC,uBAAOE,EAAP,CAAL,EAAiB;AACfJ,MAAAA,KAAK,CAACK,IAAN,CAAW,CAAC,yBAASF,gBAAT,CAAD,EAA6BC,EAA7B,CAAX;AACD;AACF,GALD;;AAMA,SAAOJ,KAAK,CAACM,IAAN,CAAWC,wBAAX,CAAP;AACD,CAdD;;AAgBA,IAAIC,QAAJ;;AACA,MAAMC,WAAW,GAAG,MAAMD,QAAQ,KAC5BA,QAAQ,GAAG,4BAAe;AAAEd,EAAAA;AAAF,CAAf,CADiB,CAAlC;;eAGee,W","sourcesContent":["import crAdapterType1 from '../crAdapterType1';\r\nimport {\r\n  ymdToUTC,\r\n  compareByDate,\r\n  roundBy,\r\n  _isNaN\r\n} from './fnAdapter';\r\n\r\nconst crData = (json, option) => {\r\n  const { dfPeriod } = option\r\n  , _pnReport = dfPeriod === 'A'\r\n       ? 'annualEarnings'\r\n       : 'quarterlyEarnings'\r\n  , _reports = json[_pnReport] || []\r\n  , _data = [];\r\n  _reports.forEach(({ reportedEPS, fiscalDateEnding }) => {\r\n    const _y = roundBy(reportedEPS)\r\n    if (!_isNaN(_y)) {\r\n      _data.push([ymdToUTC(fiscalDateEnding), _y])\r\n    }\r\n  })\r\n  return _data.sort(compareByDate);\r\n};\r\n\r\nlet _adapter;\r\nconst EarnAdapter = () => _adapter\r\n  || (_adapter = crAdapterType1({ crData }));\r\n\r\nexport default EarnAdapter\r\n"],"file":"EarnAdapter.js"}