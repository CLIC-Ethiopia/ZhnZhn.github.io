{"version":3,"sources":["../../../src/adapters/alpha/AlphaIntradayAdapter.js"],"names":["ymdToUTC","AdapterFn","ymdhmsToUTC","volumeColumnPoint","crIntradayConfigOption","fnAdapter","INTRADAY","DAILY_ADJUSTED","C","TIME_START_DAY","TIME_CLOSE_DAY","START_DAY","CLOSE_DAY","CLOSE","HIGH","LOW","OPEN","_fMarker","color","radius","enabled","fillColor","_fMarkerColor","date","marker","indexOf","_crSeriaOptions","dfT","hasFilterZero","hasDividend","_isIntraday","_isAdjusted","notFilterZero","isDividend","toUTC","pnClose","pnVolume","PN_DIVIDENT","PN_ADJ_CLOSE","_addDividendPointTo","arr","dateMs","p","_exValue","parseFloat","push","ChartConfig","fMarkerExDividend","x","exValue","price","_notZeros","v1","v2","_crSeriaData","json","option","config","chartId","interval","_propName","_value","_dateKeys","Object","keys","sort","_data","_dataDividend","_dataVolume","_dataVolumeColumn","_dataHigh","_dataLow","_dataOpen","i","_max","length","_minClose","Number","POSITIVE_INFINITY","_maxClose","NEGATIVE_INFINITY","_dateMs","_date","_point","_open","_high","_low","_closeV","_close","_volume","y","open","close","volume","setStockSerias","data","dataDividend","minClose","maxClose","dVolume","dColumn","_toDataDaily","filter","_crChartOptions","dataDaily","seriaTooltip","Tooltip","fnBasePointFormatterT","fnBasePointFormatter","volumeTooltip","volumeDmyt","AlphaIntradayAdapter","toConfig","baseConfig","fBaseAreaConfig","value","dataSource","_chartId","minY","maxY","init","add","spacingTop","addCaption","addTooltip","id","addMinMax","addDividend","addMiniVolume","tooltipColumn","Chart","fTooltip","toSeries","Error"],"mappings":"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","sourcesContent":["\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nimport Chart from '../../charts/Chart'\r\nimport Tooltip from '../../charts/Tooltip'\r\n\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst {\r\n   ymdToUTC,\r\n   ymdhmsToUTC,\r\n   volumeColumnPoint\r\n} = AdapterFn;\r\n\r\nconst { crIntradayConfigOption } = fnAdapter;\r\n\r\n//const DAILY = 'Daily';\r\nconst INTRADAY = 'INTRADAY'\r\nconst DAILY_ADJUSTED = 'DAILY_ADJUSTED'\r\n\r\nconst C = {\r\n  TIME_START_DAY: '09:30:00',\r\n  TIME_CLOSE_DAY: '16:00:00',\r\n\r\n  START_DAY: \"#90ed7d\",\r\n  CLOSE_DAY: \"#f7a35c\",\r\n  CLOSE: \"#2f7ed8\",\r\n  HIGH: \"#4caf50\",\r\n  LOW: \"#f44336\",\r\n  OPEN: \"#90ed7d\"\r\n}\r\n\r\nconst _fMarker = color => ({\r\n  radius: 3,\r\n  enabled: true,\r\n  fillColor: color\r\n});\r\n\r\nconst _fMarkerColor = (date) => {\r\n  let marker, color;\r\n  if (date.indexOf(C.TIME_START_DAY) !== -1) {\r\n    marker = _fMarker(C.START_DAY)\r\n    color = C.START_DAY\r\n  } else if (date.indexOf(C.TIME_CLOSE_DAY) !== -1) {\r\n    marker = _fMarker(C.CLOSE_DAY)\r\n    color = C.CLOSE_DAY\r\n  }\r\n  return { marker, color };\r\n}\r\n\r\nconst _crSeriaOptions = ({ dfT, hasFilterZero, hasDividend }) => {\r\n  const _isIntraday = dfT === INTRADAY;\r\n  const _isAdjusted = dfT === DAILY_ADJUSTED;\r\n  return {\r\n    notFilterZero: !hasFilterZero,\r\n    isDividend: _isAdjusted && hasDividend,\r\n    toUTC: _isIntraday\r\n      ? ymdhmsToUTC\r\n      : ymdToUTC,\r\n    pnClose: _isAdjusted\r\n      ? '5. adjusted close'\r\n      : '4. close',\r\n    pnVolume: _isAdjusted\r\n      ? '6. volume'\r\n      : '5. volume'\r\n  };\r\n};\r\n\r\nconst PN_DIVIDENT = '7. dividend amount';\r\nconst PN_ADJ_CLOSE = '5. adjusted close';\r\nconst _addDividendPointTo = (arr, dateMs, p) => {\r\n  const _exValue = p[PN_DIVIDENT]\r\n    && parseFloat(p[PN_DIVIDENT]);\r\n  if (_exValue) {\r\n    arr.push({\r\n      ...ChartConfig.fMarkerExDividend(), ...{\r\n         x: dateMs,\r\n         exValue: _exValue,\r\n         price: parseFloat(p[PN_ADJ_CLOSE])\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nconst _notZeros = (v1, v2) => v1 !== 0 && v2 !== 0;\r\n\r\nconst _crSeriaData = (json, option, config, chartId) => {\r\n  const { interval } = option\r\n  , _propName = `Time Series (${interval})`\r\n  , _value = json[_propName]\r\n  , _dateKeys = ( _value)\r\n       ? Object.keys(_value).sort()\r\n       : []\r\n  , _data = [], _dataDividend = []\r\n  , _dataVolume = [], _dataVolumeColumn = []\r\n  , _dataHigh = [], _dataLow = [], _dataOpen = []\r\n  , {\r\n    notFilterZero, isDividend,\r\n    toUTC, pnClose, pnVolume\r\n  } = _crSeriaOptions(option);\r\n\r\n  let i = 0, _max = _dateKeys.length\r\n  , _minClose = Number.POSITIVE_INFINITY\r\n  , _maxClose = Number.NEGATIVE_INFINITY\r\n  , _dateMs\r\n  , _date, _point\r\n  , _open, _high, _low, _closeV, _close, _volume ;\r\n  for (i; i<_max; i++) {\r\n    _date = _dateKeys[i]\r\n    _point = _value[_date]\r\n    _closeV = parseFloat(_point['4. close'])\r\n    _close = parseFloat(_point[pnClose])\r\n\r\n    if (notFilterZero || _notZeros(_closeV, _close) ) {\r\n      _open = parseFloat(_point['1. open'])\r\n      _high = parseFloat(_point['2. high'])\r\n      _low = parseFloat(_point['3. low'])\r\n      _volume = parseFloat(_point[pnVolume])\r\n\r\n      _dateMs = toUTC(_date)\r\n      _data.push({\r\n        x: _dateMs, y: _close, ..._fMarkerColor(_date)\r\n      })\r\n\r\n      _dataHigh.push([_dateMs, _high])\r\n      _dataLow.push([_dateMs, _low])\r\n      _dataOpen.push([_dateMs, _open])\r\n\r\n      _dataVolume.push([_dateMs, _volume])\r\n      _dataVolumeColumn.push(\r\n          volumeColumnPoint({\r\n             open: _open,\r\n             close: _closeV,\r\n             volume: _volume,\r\n             date: _dateMs,\r\n             option: { _high: _high, _low: _low }\r\n          })\r\n      )\r\n      if (isDividend) {\r\n        _addDividendPointTo(_dataDividend, _dateMs, _point)\r\n      }\r\n\r\n      if (_minClose > _close) {\r\n        _minClose = _close\r\n      }\r\n      if (_maxClose < _close ) {\r\n        _maxClose = _close\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  ChartConfig.setStockSerias(\r\n    config, _data, _dataHigh, _dataLow, _dataOpen, chartId\r\n  )\r\n\r\n\r\n  return {\r\n    data: _data,\r\n    dataDividend: _dataDividend,\r\n    minClose: _minClose,\r\n    maxClose: _maxClose,\r\n    dVolume: _dataVolume,\r\n    dColumn: _dataVolumeColumn\r\n  };\r\n}\r\n\r\nconst _toDataDaily = (data) => {\r\n  return data.filter(p => p.color === C.CLOSE_DAY);\r\n}\r\n\r\nconst _crChartOptions = (dfT, data) => {\r\n  const _isIntraday = dfT === INTRADAY;\r\n  return {\r\n    dataDaily: _isIntraday\r\n       ? _toDataDaily(data)\r\n       : data,\r\n    seriaTooltip: _isIntraday\r\n      ? Tooltip.fnBasePointFormatterT\r\n      : Tooltip.fnBasePointFormatter,\r\n    volumeTooltip: _isIntraday\r\n      ? Tooltip.volumeDmyt\r\n      : Tooltip.volume\r\n  };\r\n};\r\n\r\nconst AlphaIntradayAdapter = {\r\n  toConfig(json, option){\r\n    const baseConfig = ChartConfig.fBaseAreaConfig()\r\n    , {\r\n      value, interval, dfT,\r\n      dataSource\r\n    } = option\r\n    , _chartId = value\r\n    , {\r\n        data, minClose, maxClose,\r\n        dataDividend,\r\n        dColumn, dVolume\r\n      } = _crSeriaData(json, option, baseConfig, _chartId )\r\n    , {\r\n        dataDaily,\r\n        seriaTooltip, volumeTooltip\r\n      } = _crChartOptions(dfT, data);\r\n\r\n    option.minY = minClose\r\n    option.maxY = maxClose\r\n\r\n    const config = ConfigBuilder()\r\n      .init(baseConfig)\r\n      .add('chart', { spacingTop: 25 })\r\n      .addCaption(value, `Time Series (${interval})`)\r\n      .addTooltip(seriaTooltip)\r\n      .add({\r\n        ...crIntradayConfigOption({\r\n          id: _chartId,\r\n          data: dataDaily,\r\n          dataSource\r\n        })\r\n      })\r\n      .addMinMax(dataDaily, option)\r\n      .addDividend({ dataDividend, minClose, maxClose })\r\n      .addMiniVolume({\r\n        id: _chartId,\r\n        dVolume, dColumn,\r\n        tooltipColumn: Chart.fTooltip(volumeTooltip)\r\n      })\r\n      .toConfig();\r\n\r\n    return { config };\r\n  },\r\n\r\n  toSeries(json, option){\r\n    throw new Error('ZH_1000');\r\n  }\r\n}\r\n\r\nexport default AlphaIntradayAdapter\r\n"],"file":"AlphaIntradayAdapter.js"}