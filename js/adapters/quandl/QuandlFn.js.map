{"version":3,"sources":["../../../src/adapters/quandl/QuandlFn.js"],"names":["mlsToDmy","dt","_isArr","Array","isArray","_isStr","str","_isNumber","n","Number","isNaN","_crItemCaption","dfItemCaption","items","itemCaption","caption","_isStrEqTo","strTo","toLowerCase","QuandlFn","getData","json","dataset","datatable","data","getColumnNames","column_names","columns","map","c","name","isPrevDateAfter","arr","checkedDate","predicate","length","prevDate","x","Math","abs","valueOf","createDatasetInfo","description","newest_available_date","oldest_available_date","frequency","database_code","dataset_code","toDate","fromDate","createZhConfig","option","item","title","subtitle","id","value","key","columnName","dataColumn","seriaColumnNames","linkFn","dataSource","_dataSource","_itemCaption","itemConf","_itemKey","createPercent","bValue","bTotal","mathFn","calcPercent","createValueMoving","bNowValue","bPrevValue","crValueMoving","nowValue","prevValue","Direction","fnFormat","formatAllNumber","getRecentDate","seria","len","mlsUTC","Date","getUTCFullYear","setTitleToConfig","config","text","findColumnIndex","obj","_columnName","i","max","getDataColumnIndex","_dataColumn"],"mappings":"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","sourcesContent":["import Big from 'big.js';\r\n\r\nimport formatAllNumber from '../../utils/formatAllNumber'\r\nimport mathFn from '../../math/mathFn';\r\n\r\nimport dt from '../../utils/DateUtils';\r\nimport { Direction } from '../../constants/Type';\r\n\r\nconst { mlsToDmy } = dt;\r\n\r\nconst _isArr = Array.isArray;\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isNumber = n => typeof n === 'number'\r\n  && !Number.isNaN(n);\r\n\r\nconst _crItemCaption = ({ dfItemCaption, items, itemCaption }) => _isNumber(dfItemCaption)\r\n  && _isArr(items) && items[dfItemCaption-1]\r\n      ? items[dfItemCaption-1].caption || itemCaption\r\n      : itemCaption;\r\n\r\nconst _isStrEqTo = (str, strTo) => _isStr(str)\r\n && str.toLowerCase() === strTo;\r\n\r\nconst QuandlFn = {\r\n  getData: (json) => {\r\n    const { dataset={}, datatable={} } = json;\r\n    return dataset.data || datatable.data || [];\r\n  },\r\n\r\n  getColumnNames: (json) => {\r\n    const { dataset, datatable } = json;\r\n    if (dataset) {\r\n      return dataset.column_names || [];\r\n    }\r\n    if (datatable && _isArr(datatable.columns)) {\r\n      return datatable.columns.map(c => c.name);\r\n    }\r\n    return [];\r\n  },\r\n\r\n  isPrevDateAfter(arr, checkedDate, predicate){\r\n     const length = arr.length;\r\n     if (length === 0){\r\n       return true;\r\n     }\r\n     const prevDate = arr[length-1].x;\r\n     if (Math.abs((checkedDate.valueOf()-prevDate.valueOf())/(24*60*60*1000)) < predicate){\r\n       return false;\r\n     } else {\r\n       return true;\r\n     }\r\n  },\r\n\r\n  createDatasetInfo(json){\r\n     const { dataset={} } = json\r\n     , {\r\n       name='', description='',\r\n       newest_available_date='',\r\n       oldest_available_date='',\r\n       frequency='',\r\n       database_code='',\r\n       dataset_code=''\r\n     } = dataset;\r\n\r\n     return  {\r\n       name,\r\n       toDate: newest_available_date,\r\n       fromDate: oldest_available_date,\r\n       frequency,\r\n       database_code,\r\n       dataset_code,\r\n       description\r\n    };\r\n  },\r\n\r\n  createZhConfig(option){\r\n    const {\r\n            item, title, subtitle='',\r\n            value:id, key, columnName, dataColumn,\r\n            fromDate, seriaColumnNames,\r\n            linkFn, dataSource\r\n          } = option\r\n        , _dataSource = dataSource\r\n             ? `Quandl: ${dataSource}`\r\n             : 'Quandl'\r\n        , _itemCaption = _crItemCaption(option);\r\n    return {\r\n      item,\r\n      title, subtitle,\r\n      id, key,\r\n      linkFn,\r\n      itemConf: {\r\n        _itemKey: id,\r\n        columnName, dataColumn,\r\n        fromDate, seriaColumnNames\r\n      },\r\n      itemCaption: _itemCaption,\r\n      dataSource: _dataSource\r\n    };\r\n  },\r\n\r\n  createPercent({ bValue=Big('0.0'), bTotal=Big('0.0') }){\r\n    return mathFn.calcPercent({ bValue, bTotal });\r\n  },\r\n\r\n  createValueMoving({ bNowValue=Big('0.0'), bPrevValue=Big('0.0') }){\r\n    return mathFn.crValueMoving({\r\n      nowValue: bNowValue,\r\n      prevValue: bPrevValue,\r\n      Direction: Direction,\r\n      fnFormat: formatAllNumber\r\n    });\r\n  },\r\n\r\n  getRecentDate(seria=[], json){\r\n     const len = seria.length\r\n         , { dataset={} } = json\r\n         , { frequency='' } = dataset\r\n         , mlsUTC = (len>0 && seria[len-1][0] && _isNumber(seria[len-1][0]) )\r\n              ? seria[len-1][0]\r\n              : '';\r\n      return mlsUTC\r\n         ? frequency.toLowerCase() === 'annual'\r\n              ? new Date(mlsUTC).getUTCFullYear()\r\n              : mlsToDmy(mlsUTC)\r\n         : '';\r\n  },\r\n\r\n  setTitleToConfig(config, option={}){\r\n    const { title, subtitle } = option;\r\n    config.title.text = title || '';\r\n    config.subtitle.text = subtitle ? `${subtitle}:` : '';\r\n  },\r\n\r\n  findColumnIndex(obj, columnName=''){\r\n     const column_names = _isArr(obj)\r\n       ? obj\r\n       : QuandlFn.getColumnNames(obj)\r\n     , _columnName = columnName.toLowerCase();\r\n\r\n     if ( _columnName && column_names ) {\r\n      for (let i=0, max=column_names.length; i<max; i++){\r\n       if ( _isStrEqTo(column_names[i], _columnName) ) {\r\n         return i;\r\n       }\r\n      }\r\n     }\r\n     return void 0;\r\n  },\r\n\r\n  getDataColumnIndex(json, option){\r\n    const { columnName, dataColumn } = option\r\n    , _dataColumn = QuandlFn.findColumnIndex(json, columnName);\r\n    return _dataColumn || dataColumn || 1;\r\n  }\r\n\r\n};\r\n\r\nexport default QuandlFn\r\n"],"file":"QuandlFn.js"}