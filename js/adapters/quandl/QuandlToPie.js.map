{"version":3,"sources":["../../../src/adapters/quandl/QuandlToPie.js"],"names":["_fnCalcPieLegendHeight","length","Chart","HEIGHT","LEGEND_ROW_HEIGHT","Math","ceil","_fnAddPercentToItem","item","bTotal","_bPercent","QuandlFn2","createPercent","bValue","y","gte","name","_fnCreateTopDonutData","data","isPercent","arr","_bTotal90","times","bArrTotal","i","max","push","plus","eq","minus","nameFull","color","parseFloat","fCreatePieConfig","json","option","config","ChartConfig","fBasePieConfig","sliceItems","items","value","zhSeriaId","ChartType","SEMI_DONUT","jsonData","dataset","jsonData1","jsonData2","_year1","split","_year2","_data1","_data2","_bTotal1","_bTotal2","forEach","index","y1","y2","_name","caption","substring","_dataTop1","sort","AdapterFn","compareByY","reverse","_dataTop2","series","fInnerPieSeria","center","year","fOuterPieSeria","isShowInLegend","setTitleToConfig","Object","assign","chart","height","valueMoving","zhConfig","info","createDatasetInfo"],"mappings":"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","sourcesContent":["\r\nimport Big from 'big.js';\r\n\r\nimport AdapterFn from '../AdapterFn';\r\nimport { ChartType } from '../../constants/Type';\r\nimport formatAllNumber from '../../utils/formatAllNumber'\r\nimport Chart from '../../charts/Chart';\r\nimport ChartConfig from '../../charts/ChartConfig';\r\n\r\nimport {\r\n  crValueMoving,\r\n  crZhConfig\r\n} from './StackedFn';\r\nimport QuandlFn2 from './QuandlFn2';\r\n\r\nconst _fnCalcPieLegendHeight = function(length){\r\n  if (length !== 0){\r\n    return Chart.HEIGHT + Chart.LEGEND_ROW_HEIGHT*(Math.ceil(length / 4) - 1);\r\n  } else {\r\n    return Chart.HEIGHT;\r\n  }\r\n}\r\n\r\nconst _fnAddPercentToItem = function(item, bTotal){\r\n  const _bPercent = QuandlFn2.createPercent({ bValue : Big(item.y), bTotal: bTotal});\r\n  if (Big(_bPercent).gte('10.00')) {\r\n     item.name = item.name + ' ' + _bPercent;\r\n  } else {\r\n     item.name = item.name + '  ' + _bPercent;\r\n  }\r\n}\r\n\r\nconst _fnCreateTopDonutData = function({\r\n  data=[], bTotal=Big('0.0'), isPercent=false\r\n}){\r\n  const arr = []\r\n      , _bTotal90 = bTotal.times(0.9);\r\n  let bArrTotal = Big('0.0');\r\n  for (let i=0, max=data.length; i<max; i++ ){\r\n    let item = data[i];\r\n    if ( i === 0 ||\r\n         !bArrTotal.gte(_bTotal90) ||\r\n         i === max-1 )\r\n    {\r\n      if (isPercent) {\r\n        _fnAddPercentToItem(item, bTotal);\r\n      }\r\n      arr.push(item);\r\n    } else { break; }\r\n\r\n    bArrTotal = bArrTotal.plus(item.y);\r\n  }\r\n  if (!bArrTotal.eq(bTotal)) {\r\n    bArrTotal = bTotal.minus(bArrTotal);\r\n    arr.push({\r\n      name : 'Other ' + QuandlFn2.createPercent({ bValue: bArrTotal, bTotal: bTotal}),\r\n      nameFull : 'Other',\r\n      color : 'gray',\r\n      y : parseFloat(bArrTotal)\r\n    })\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport const fCreatePieConfig = function(json, option){\r\n   const config = ChartConfig.fBasePieConfig()\r\n       , {sliceItems:items=[], value=''} = option\r\n       , zhSeriaId = `${value}_${ChartType.SEMI_DONUT}`\r\n       , jsonData = (json.dataset && json.dataset.data) ? json.dataset.data : []\r\n       , jsonData1 = jsonData[0]\r\n       , jsonData2 = jsonData[1]\r\n       , _year1 = (jsonData1[0]) ? jsonData1[0].split('-')[0] : ''\r\n       , _year2 = (jsonData2[0]) ? jsonData2[0].split('-')[0] : ''\r\n       , _data1 = []\r\n       , _data2 = [];\r\n\r\n   let _bTotal1 = Big('0.0');\r\n   let _bTotal2 = Big('0.0');\r\n\r\n\r\n   items.forEach((item, index) =>{\r\n       let y1 = jsonData1[item.value];\r\n       let y2 = jsonData2[item.value];\r\n       if (y1){\r\n         //const _nameFull = item.caption.replace(/;/g, '<br/>')\r\n         const _name = item.caption.split(';')[0].substring(0, 9);\r\n         _data1.push({name : _name, nameFull: item.caption, y: y1});\r\n         _bTotal1 = _bTotal1.plus(y1);\r\n       }\r\n       if (y2){\r\n         _data2.push({nameFull: item.caption, y: y2});\r\n         _bTotal2 = _bTotal2.plus(y2);\r\n       }\r\n   });\r\n\r\n   const _dataTop1 = _fnCreateTopDonutData({\r\n     data: _data1.sort(AdapterFn.compareByY).reverse(),\r\n     bTotal : _bTotal1,\r\n     isPercent : true\r\n   });\r\n   const _dataTop2 = _fnCreateTopDonutData({\r\n     data: _data2.sort(AdapterFn.compareByY).reverse(),\r\n     bTotal: _bTotal2\r\n   });\r\n\r\n   config.series = [\r\n      ChartConfig.fInnerPieSeria({\r\n       center : ['20%', '80%'],\r\n       year : _year1,\r\n       bTotal : formatAllNumber(_bTotal1)\r\n      })\r\n    , ChartConfig.fOuterPieSeria({\r\n        zhSeriaId : zhSeriaId,\r\n        center  : ['20%', '80%'],\r\n        data : _dataTop1,\r\n        isShowInLegend : true\r\n      })\r\n    , ChartConfig.fInnerPieSeria({\r\n        center : ['70%', '80%'],\r\n        year : _year2,\r\n        bTotal : formatAllNumber(_bTotal2)\r\n      })\r\n    , ChartConfig.fOuterPieSeria({\r\n        zhSeriaId : zhSeriaId,\r\n        center  : ['70%', '80%'],\r\n        data : _dataTop2\r\n     })\r\n   ];\r\n\r\n   QuandlFn2.setTitleToConfig(config, option);\r\n\r\n   Object.assign(config, {\r\n     chart: {\r\n       height: _fnCalcPieLegendHeight(_dataTop1.length)\r\n     },\r\n     valueMoving: crValueMoving(_bTotal1, _year1, _bTotal2, _year2),\r\n     zhConfig: crZhConfig(option, zhSeriaId),\r\n     info: QuandlFn2.createDatasetInfo(json)\r\n   })\r\n\r\n   return { config };\r\n}\r\n"],"file":"QuandlToPie.js"}