{"version":3,"sources":["../../../src/adapters/quandl/QuandlAdapter.js"],"names":["getData","QuandlFn2","getColumnNames","crDividendSeria","ChartConfig","crSplitRatioSeria","setMinMaxPlotLines","ChartFn","_assign","Object","assign","C","OPEN","CLOSE","PRICE","LOW","HIGH","VOLUME","EX_DIVIDEND","SPLIT_RATIO","UNKNOWN","COLOR_BLUE","_notNull2","a","b","_fnConvertToUTC","point","result","arrDate","split","dateUTC","Date","UTC","parseInt","_fnCheckExtrems","yPointIndex","maxPoint","minPoint","_fnAddToSeria","seria","push","_fnAddSplitRatio","splitRationIndex","dataSplitRatio","x","splitRatio","parseFloat","toFixed","price","fMarkerSplitRatio","_fnAddExDividend","exDividendIndex","dataExDividend","exValue","marker","fMarkerExDividend","isPrevDateAfter","dataLabels","y","_fnAddVolume","optionIndex","volume","open","close","low","high","dataVolume","dataVolumeColumn","_open","undefined","AdapterFn","volumeColumnPoint","date","option","_low","_high","_fnAddATH","dataATH","len","length","_prevPoint","athPoint","prevClose","_fnAddHighLow","dataHighLow","_closeValue","_openValue","_bHigh","minus","_bLow","_dayHigh","_dayLow","dayHigh","dayLow","_fnAddCustomSeries","columns","legendSeries","i","max","data","_fLegendConfig","seriaColumnNames","column_names","j","_len","ChartLegend","fLegendConfig","columnName","columnIndex","findColumnIndex","_fnCreatePointFlow","json","fnStep","dataset","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","_closeIndex","exDividend","bind","_isTransform","transform","fnPointsFlow","pipe","_fnSeriesPipe","points","sort","compareByDate","_max","zhPoints","minY","Chart","calcMinY","_fnSetYForPoints","_fnAddSeriesExDivident","config","chartId","series","chart","spacingBottom","_fnAddSeriesSplitRatio","_fnCheckIsMfi","names","zhIsMfi","_fnCheckIsMomAth","zhIsMomAth","_fnSetChartTitle","title","subtitle","setDefaultTitle","_fnSetLegendSeriesToConfig","legend","name","zhValueText","index","color","isVisible","symbol","isSecondAxes","fSeries","zhSeriaId","visible","fSeriaMarker","zhConfig","fnGetSeries","dataColumn","value","isDrawDeltaExtrems","isNotZoomToMinMax","dfR","createZhConfig","info","createDatasetInfo","init","add","valueMoving","addMiniVolume","id","dColumn","dVolume","addMiniATH","addMiniHL","toConfig","isWithLegend","fnConfigAxes","plotLines","yAxis","_data","_maxIndex","_recentValue","min","fnQuandlFlow","_fCreateAreaConfig","fBaseAreaConfig","getDataColumnIndex","_fToConfig","builder","_fToSeria","toSeria","_rToConfig","ChartType","AREA","SEMI_DONUT","fCreatePieConfig","STACKED_AREA","fCreateStackedAreaConfig","STACKED_AREA_PERCENT","STACKED_COLUMN","fCreateStackedColumnConfig","STACKED_COLUMN_PERCENT","TREE_MAP","fCreateTreeMapConfig","YEARLY","toYearly","SCATTER","ToScatter","SCATTER_UP","SCATTER_DOWN","_crSeriaData","yIndex","map","p","ymdToUTC","_toSeria","parentId","substring","findMinY","_rToSeria","DF","QuandlAdapter","seriaType","toSeries"],"mappings":"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","sourcesContent":["\r\nimport Big from 'big.js';\r\n\r\nimport pipe from '../../utils/pipe'\r\n\r\nimport {ChartType} from '../../constants/Type';\r\nimport Chart from '../../charts/Chart';\r\nimport ChartFn from '../../charts/ChartFn'\r\nimport ChartConfig from '../../charts/ChartConfig';\r\nimport ChartLegend from '../../charts/ChartLegend';\r\nimport ConfigBuilder from '../../charts/ConfigBuilder';\r\n\r\nimport AdapterFn from '../AdapterFn';\r\nimport QuandlFn2 from './QuandlFn2';\r\n\r\nimport {fCreatePieConfig} from './QuandlToPie';\r\nimport {fCreateStackedAreaConfig} from './QuandlToStackedArea';\r\nimport {fCreateStackedColumnConfig} from './QuandlToStackedColumn';\r\nimport {fCreateTreeMapConfig} from './QuandlToTreeMap';\r\nimport toYearly from '../toYearly'\r\nimport ToScatter from './ToScatter'\r\n\r\nconst { getData, getColumnNames } = QuandlFn2;\r\n\r\nconst {\r\n  crDividendSeria,\r\n  crSplitRatioSeria\r\n} = ChartConfig;\r\nconst {\r\n  setMinMaxPlotLines\r\n} = ChartFn;\r\nconst _assign = Object.assign;\r\n\r\nconst C = {\r\n  OPEN : \"Open\",\r\n  CLOSE : \"Close\",\r\n  PRICE: 'Price',\r\n  LOW : \"Low\",\r\n  HIGH : \"High\",\r\n  VOLUME : \"Volume\",\r\n  EX_DIVIDEND : \"Ex-Dividend\",\r\n  SPLIT_RATIO : \"Split Ratio\",\r\n  UNKNOWN : \"Unknown\",\r\n\r\n  COLOR_BLUE: '#2f7ed8',\r\n}\r\n\r\n\r\nconst _notNull2 = (a, b) => a !== null && b !== null;\r\n\r\nconst _fnConvertToUTC = function(point, result){\r\n   const arrDate = point[0].split('-');\r\n   result.dateUTC = Date.UTC(arrDate[0], (parseInt(arrDate[1], 10)-1), arrDate[2]);\r\n   result.point = point;\r\n   return result;\r\n}\r\n\r\nconst _fnCheckExtrems = function(result){\r\n  const {point, yPointIndex, maxPoint, minPoint} = result;\r\n  if (!(point[yPointIndex] == null) && point[yPointIndex]>=maxPoint){\r\n    result.maxPoint = point[yPointIndex];\r\n  }\r\n  if (!(point[yPointIndex] == null) && point[yPointIndex]<=minPoint) {\r\n    result.minPoint = point[yPointIndex];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddToSeria = function(result){\r\n   const {seria, dateUTC, point, yPointIndex} = result;\r\n   seria.push([dateUTC, point[yPointIndex]]);\r\n\r\n   return result;\r\n}\r\n\r\nconst _fnAddSplitRatio = function(splitRationIndex, result){\r\n  const { point, dateUTC, yPointIndex, dataSplitRatio } = result;\r\n  if (point[splitRationIndex] !== 1){\r\n    const x = dateUTC\r\n        , splitRatio = parseFloat(point[splitRationIndex].toFixed(2))\r\n        , price = point[yPointIndex];\r\n\r\n    dataSplitRatio.push(_assign(ChartConfig.fMarkerSplitRatio(), {x, splitRatio, price}));\r\n  }\r\n  return result;\r\n}\r\n\r\nconst _fnAddExDividend = function(exDividendIndex, result){\r\n     const { point, dateUTC, yPointIndex, dataExDividend } = result;\r\n\r\n     if (point[exDividendIndex] !== 0){\r\n       const x = dateUTC\r\n           //, exValue = parseFloat(point[exDividendIndex].toFixed(2))\r\n           , exValue = point[exDividendIndex]\r\n           , price = point[yPointIndex]\r\n           , marker = _assign(\r\n                ChartConfig.fMarkerExDividend(),\r\n                { x, exValue, price }\r\n             );\r\n       if (!QuandlFn2.isPrevDateAfter(dataExDividend, x , 14)) {\r\n         marker.dataLabels.y = 0;\r\n       }\r\n       dataExDividend.push(marker);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst _fnAddVolume = function(optionIndex, result){\r\n  const { volume, open, close=4, low=3, high=2 } = optionIndex\r\n      , { point, dateUTC, dataVolume, dataVolumeColumn } = result\r\n      , _open = (open) ? point[open] : undefined;\r\n\r\n  dataVolume.push([dateUTC, point[volume]]);\r\n  dataVolumeColumn.push( AdapterFn.volumeColumnPoint({\r\n    open: _open, close: point[close], date: dateUTC, volume: point[volume],\r\n    option: {_low: point[low], _high: point[high]},\r\n  }))\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddATH = function(optionIndex, result){\r\n  const { open=1 } = optionIndex\r\n      , { dateUTC, point, seria, dataATH } = result\r\n      , len = seria.length;\r\n\r\n  if (len>1) {\r\n    const _prevPoint = seria[len-2];\r\n    dataATH.push(AdapterFn.athPoint({\r\n      date: dateUTC, prevClose: _prevPoint[1], open: point[open]\r\n    }))\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddHighLow = function(optionIndex, result){\r\n  const { open=1, high=2, low=3 } = optionIndex\r\n  , { dateUTC, yPointIndex, point, dataHighLow } = result\r\n  , _closeValue = point[yPointIndex]\r\n  , _openValue = _notNull2(point[open], _closeValue)\r\n       ? point[open]\r\n       : C.UNKNOWN\r\n  , _bHigh = _notNull2(point[high], _closeValue)\r\n       ? Big(point[high]).minus(_closeValue)\r\n       : Big('0.0')\r\n  , _bLow = _notNull2(point[low], _closeValue)\r\n       ? Big(point[low]).minus(_closeValue)\r\n       : Big('0.0')\r\n  , _dayHigh = point[high] || C.UNKNOWN\r\n  , _dayLow = point[low] || C.UNKNOWN;\r\n\r\n  dataHighLow.push({\r\n    x : dateUTC,\r\n    high : parseFloat(_bHigh),\r\n    low : parseFloat(_bLow),\r\n    open : _openValue,\r\n    dayHigh : _dayHigh,\r\n    dayLow : _dayLow,\r\n    close : _closeValue\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnAddCustomSeries = function(columns, result){\r\n   const { dateUTC, point, legendSeries } = result;\r\n   let i=0, max=columns.length;\r\n   for (; i<max; i++ ){\r\n      legendSeries[i].data.push([dateUTC, point[columns[i]]])\r\n   }\r\n}\r\n\r\nconst _fLegendConfig = function(seriaColumnNames, column_names){\r\n  const legendSeries = []\r\n      , columns =[];\r\n\r\n  if (seriaColumnNames[0] === 'All'){\r\n    let j=1, _len = column_names.length;\r\n    for (j; j<_len; j++){\r\n      legendSeries.push(\r\n        ChartLegend.fLegendConfig(column_names[j])\r\n      )\r\n      columns.push(j)\r\n    }\r\n  } else {\r\n    let i=0, max=seriaColumnNames.length;\r\n    for (; i<max; i++ ){\r\n       const columnName = seriaColumnNames[i]\r\n           , columnIndex = QuandlFn2.findColumnIndex(column_names, columnName);\r\n       if (columnIndex) {\r\n          legendSeries.push(\r\n            ChartLegend.fLegendConfig(columnName)\r\n          )\r\n          columns.push(columnIndex)\r\n       }\r\n    }\r\n  }\r\n\r\n  return { legendSeries, columns };\r\n}\r\n\r\nconst _fnCreatePointFlow = function(json, yPointIndex, option){\r\n\r\n  const fnStep = [_fnConvertToUTC, _fnCheckExtrems, _fnAddToSeria]\r\n      , { dataset={} } = json\r\n      , column_names = getColumnNames(json)\r\n      , result = {\r\n         yPointIndex : yPointIndex,\r\n         minPoint : Number.POSITIVE_INFINITY,\r\n         maxPoint : Number.NEGATIVE_INFINITY,\r\n         seria : [],\r\n         dataVolume : [], dataVolumeColumn : [],\r\n         dataExDividend : [], dataSplitRatio : [],\r\n         dataATH : [], dataHighLow : []\r\n      };\r\n\r\n  const open = QuandlFn2.findColumnIndex(column_names, C.OPEN)\r\n      , _closeIndex = QuandlFn2.findColumnIndex(column_names, C.CLOSE)\r\n      , close = ( typeof _closeIndex !== 'undefined')\r\n          ? _closeIndex\r\n          : QuandlFn2.findColumnIndex(column_names, C.PRICE)\r\n      , low = QuandlFn2.findColumnIndex(column_names, C.LOW)\r\n      , high = QuandlFn2.findColumnIndex(column_names, C.HIGH)\r\n      , volume = QuandlFn2.findColumnIndex(column_names, C.VOLUME)\r\n      , exDividend = QuandlFn2.findColumnIndex(column_names, C.EX_DIVIDEND)\r\n      , splitRatio = QuandlFn2.findColumnIndex(column_names, C.SPLIT_RATIO);\r\n\r\n\r\n  if (volume){\r\n    fnStep.push(_fnAddVolume.bind(null, {\r\n      volume, open, close, low, high\r\n    }));\r\n  }\r\n\r\n  const _isTransform = dataset.transform && dataset.transform !== 'none';\r\n  if (exDividend && !_isTransform) {\r\n    fnStep.push(_fnAddExDividend.bind(null, exDividend));\r\n  }\r\n\r\n  if (splitRatio && !_isTransform){\r\n    fnStep.push(_fnAddSplitRatio.bind(null, splitRatio));\r\n  }\r\n\r\n  if (open){\r\n    fnStep.push(_fnAddATH.bind(null, { open }));\r\n  }\r\n\r\n  if (high && low ){\r\n    fnStep.push(_fnAddHighLow.bind(null, { open, high, low }));\r\n  }\r\n\r\n  const { seriaColumnNames } = option;\r\n  if (seriaColumnNames) {\r\n    const { legendSeries, columns } = _fLegendConfig(seriaColumnNames, column_names);\r\n\r\n    if (legendSeries.length !== 0){\r\n      result.legendSeries = legendSeries\r\n      fnStep.push(_fnAddCustomSeries.bind(null, columns))\r\n    }\r\n  }\r\n\r\n  return {\r\n    //fnPointsFlow : flow(fnStep),\r\n    fnPointsFlow : pipe(...fnStep),\r\n    result : result\r\n  };\r\n}\r\n\r\n\r\nconst _fnSeriesPipe = function(json, yPointIndex, option){\r\n  const { fnPointsFlow, result } = _fnCreatePointFlow(json, yPointIndex, option)\r\n      , data = getData(json)\r\n      , points = data.sort(AdapterFn.compareByDate);\r\n\r\n  let i=0, _max=points.length;\r\n  for(; i<_max; i++) {\r\n    fnPointsFlow(points[i], result)\r\n  }\r\n\r\n  _assign(result, {\r\n    zhPoints: points,\r\n    minY: Chart.calcMinY(result)\r\n  })\r\n\r\n  return result;\r\n}\r\n\r\nconst _fnSetYForPoints = function(data, y){\r\n  let i=0, max=data.length;\r\n  for (; i<max; i++ ){\r\n    data[i].y = y;\r\n  }\r\n}\r\n\r\nconst _fnAddSeriesExDivident = function(config, data, chartId, y){\r\n  if (data.length>0){\r\n    _fnSetYForPoints(data, y);\r\n    config.series.push(crDividendSeria(data, chartId));\r\n    config.chart.spacingBottom = 40;\r\n  }\r\n}\r\n\r\nconst _fnAddSeriesSplitRatio = function(config, data, chartId, y){\r\n  if (data.length>0){\r\n    _fnSetYForPoints(data, y);\r\n    config.series.push(crSplitRatioSeria(data, chartId));\r\n    config.chart.spacingBottom = 40;\r\n  }\r\n};\r\n\r\nconst _fnCheckIsMfi = function(config, json, zhPoints){\r\n  const names = getColumnNames(json);\r\n  if ( names[2] === C.HIGH && names[3] === C.LOW  &&\r\n       names[4] === C.CLOSE && names[5] === C.VOLUME) {\r\n    _assign(config, {\r\n      zhPoints: zhPoints,\r\n      zhIsMfi: true\r\n    })\r\n  }\r\n};\r\nconst _fnCheckIsMomAth = function(config, json, zhPoints) {\r\n  const names = getColumnNames(json)\r\n  if ( names[1] === C.OPEN && names[4] === C.CLOSE) {\r\n    _assign(config, {\r\n      zhPoints: zhPoints,\r\n      zhIsMomAth: true\r\n    })\r\n  }\r\n}\r\n\r\nconst _fnSetChartTitle = function(config, option){\r\n  const { title, subtitle } = option;\r\n  if (title){\r\n    Chart.setDefaultTitle(config, title, subtitle)\r\n  }\r\n}\r\n\r\nconst _fnSetLegendSeriesToConfig = function(legendSeries, config, chartId){\r\n  const legend = []\r\n      , _len = config.series.length;\r\n\r\n  if (_len !== 0){\r\n     legend.push({\r\n        name: config.series[0].zhValueText,\r\n        index: 0,\r\n        color: C.COLOR_BLUE,\r\n        isVisible : true\r\n    });\r\n  }\r\n\r\n  let i=0, max=legendSeries.length;\r\n  for (i; i<max; i++){\r\n    const { data, name, color, symbol, isSecondAxes } = legendSeries[i]\r\n        , seria = ChartConfig.fSeries({\r\n             zhSeriaId : i + '_' + chartId,\r\n             zhValueText : name,\r\n             visible : false,\r\n             marker : Chart.fSeriaMarker({ color, symbol }),\r\n             color: color,\r\n             data : data\r\n          });\r\n\r\n     if (!isSecondAxes){\r\n        config.series.push(seria);\r\n        legend.push({\r\n          name : name,\r\n          index : config.series.length - 1,\r\n          color : color,\r\n          isVisible : false\r\n        });\r\n     } else {\r\n       legend.push({\r\n          name : name,\r\n          color : color,\r\n          isVisible : false,\r\n          isSecondAxes : true,\r\n          seria : seria\r\n        });\r\n     }\r\n  }\r\n\r\n  config.zhConfig.legend = legend;\r\n};\r\n\r\nconst fnGetSeries = function(config, json, option){\r\n   const {\r\n           dataColumn:yPointIndex,\r\n           value:chartId,\r\n           isDrawDeltaExtrems, isNotZoomToMinMax,\r\n           dfR\r\n         } = option;\r\n\r\n   _fnSetChartTitle(config, option);\r\n   config.zhConfig = QuandlFn2.createZhConfig(option);\r\n   config.info = QuandlFn2.createDatasetInfo(json);\r\n\r\n   const {\r\n     seria, minPoint, maxPoint, minY,\r\n     dataExDividend, dataSplitRatio,\r\n     dataVolume, dataVolumeColumn,\r\n     dataATH, dataHighLow,\r\n     legendSeries, zhPoints\r\n   } = _fnSeriesPipe(json, yPointIndex, option);\r\n\r\n   _fnCheckIsMfi(config, json, zhPoints);\r\n   _fnCheckIsMomAth(config, json, zhPoints);\r\n\r\n   config.series[0].data = seria;\r\n   config.series[0].zhSeriaId = chartId;\r\n\r\n   _fnAddSeriesExDivident(config, dataExDividend, chartId, minY);\r\n   _fnAddSeriesSplitRatio(config, dataSplitRatio, chartId, minY);\r\n\r\n   config = ConfigBuilder()\r\n     .init(config)\r\n     .add({\r\n       valueMoving: AdapterFn.valueMoving(seria, dfR)\r\n     })\r\n     .addMiniVolume({\r\n       id: chartId,\r\n       dColumn: dataVolumeColumn,\r\n       dVolume: dataVolume\r\n     })\r\n     .addMiniATH({\r\n       id: chartId,\r\n       data: dataATH\r\n     })\r\n     .addMiniHL({\r\n       id: chartId,\r\n       data: dataHighLow\r\n     })\r\n     .toConfig();\r\n\r\n    if (legendSeries){\r\n      _fnSetLegendSeriesToConfig(legendSeries, config, chartId)\r\n      config.zhConfig.isWithLegend = true\r\n    }\r\n\r\n   return {\r\n     config,\r\n     minPoint, maxPoint, minY,\r\n     isDrawDeltaExtrems, isNotZoomToMinMax\r\n   };\r\n}\r\n\r\nconst fnConfigAxes = function(result){\r\n  const {\r\n          config, minPoint, maxPoint, minY,\r\n          isDrawDeltaExtrems, isNotZoomToMinMax\r\n        } = result\r\n      , plotLines = config.yAxis.plotLines\r\n      , _data = config.series[0].data\r\n      , _maxIndex = _data.length - 1\r\n      , _recentValue = _maxIndex > -1\r\n           ? _data[_maxIndex][1]\r\n           : 0;\r\n\r\n  setMinMaxPlotLines({ plotLines,\r\n    min: minPoint, max: maxPoint,\r\n    value: _recentValue,\r\n    isDrawDeltaExtrems\r\n  })\r\n  if (!isNotZoomToMinMax){\r\n    config.yAxis.min = minY\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n//const fnQuandlFlow = flow(fnGetSeries, fnConfigAxes);\r\nconst fnQuandlFlow = pipe(fnGetSeries, fnConfigAxes);\r\n\r\nconst _fCreateAreaConfig = function(json, option){\r\n  const config = ChartConfig.fBaseAreaConfig()\r\n      , { columnName } = option;\r\n\r\n  option.dataColumn = QuandlFn2.getDataColumnIndex(json, option);\r\n  if ( columnName ){\r\n    config.series[0].zhValueText = columnName;\r\n  }\r\n\r\n  return fnQuandlFlow(config, json, option);\r\n}\r\n\r\nconst _fToConfig = builder => (json, option) => {\r\n  const data = getData(json);\r\n  return { config: builder.toConfig(data, option) };\r\n}\r\nconst _fToSeria = builder => (json, option, chart) => {\r\n  const data = getData(json);\r\n  return builder.toSeria(data, option, chart);\r\n}\r\n\r\nconst _rToConfig = {\r\n  [ChartType.AREA] : _fCreateAreaConfig,\r\n  [ChartType.SEMI_DONUT] : fCreatePieConfig,\r\n  [ChartType.STACKED_AREA] : fCreateStackedAreaConfig,\r\n  [ChartType.STACKED_AREA_PERCENT] : fCreateStackedAreaConfig,\r\n  [ChartType.STACKED_COLUMN] : fCreateStackedColumnConfig,\r\n  [ChartType.STACKED_COLUMN_PERCENT] : fCreateStackedColumnConfig,\r\n  [ChartType.TREE_MAP] : fCreateTreeMapConfig,\r\n  [ChartType.YEARLY]: _fToConfig(toYearly),\r\n  [ChartType.SCATTER]: _fToConfig(ToScatter),\r\n  [ChartType.SCATTER_UP]: _fToConfig(ToScatter),\r\n  [ChartType.SCATTER_DOWN]: _fToConfig(ToScatter)\r\n}\r\n\r\nconst _crSeriaData = (data, yIndex) => {\r\n  return data\r\n    .map(p => [ AdapterFn.ymdToUTC(p[0]), p[yIndex] ])\r\n    .sort(AdapterFn.compareByDate);\r\n};\r\n\r\nconst _toSeria = (json, option) => {\r\n  const { value:chartId, parentId } = option\r\n      , yPointIndex = QuandlFn2.getDataColumnIndex(json, option)\r\n      , data = _crSeriaData(getData(json), yPointIndex)\r\n      , seria = _assign(\r\n           ChartConfig.fSeries(), {\r\n             zhSeriaId: parentId + '_' + chartId,\r\n             zhValueText: chartId.substring(0,12),\r\n             data: data,\r\n             minY: AdapterFn.findMinY(data)\r\n           }\r\n         );\r\n\r\n  return seria;\r\n}\r\n\r\nconst _rToSeria = {\r\n  DF: _toSeria,\r\n  [ChartType.SCATTER]: _fToSeria(ToScatter),\r\n  [ChartType.SCATTER_UP]: _fToSeria(ToScatter),\r\n  [ChartType.SCATTER_DOWN]: _fToSeria(ToScatter)\r\n}\r\n\r\nconst QuandlAdapter = {\r\n  toConfig(json, option){\r\n     const { seriaType=ChartType.AREA } = option\r\n         , config = _rToConfig[seriaType](json, option);\r\n     return config;\r\n  },\r\n\r\n  toSeries(json, option, chart){\r\n    const { seriaType } = option\r\n       , _toSeria = _rToSeria[seriaType] || _rToSeria.DF\r\n       , seria = _toSeria(json, option, chart);\r\n    return seria;\r\n  }\r\n\r\n}\r\n\r\nexport default QuandlAdapter;\r\n"],"file":"QuandlAdapter.js"}