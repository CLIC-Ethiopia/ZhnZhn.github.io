{"version":3,"sources":["../../../src/adapters/quandl/toScatter.js"],"names":["C","COLOR_PLUS","COLOR_MINUS","_crZhConfig","option","dataSource","id","key","_calcScatterY","chart","seriaType","CHT_SCATTER_UP","max","min","yAxis","onePercent","CHT_SCATTER_DOWN","_updateLabelY","p","dataLabels","y","_crSeria","arr","data","map","date","v","_color","_p","ChartConfig","crMarkerExDividend","Object","assign","x","exValue","type","tooltip","pointFormatter","Tooltip","headerFormat","_getSeriaFrom","config","seria","series","_d","toScatter","toConfig","areaConfig","add","zhConfig","toSeria"],"mappings":"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","sourcesContent":["import {\r\n  CHT_SCATTER_UP,\r\n  CHT_SCATTER_DOWN\r\n} from '../../constants/ChartType';\r\n\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Tooltip from '../../charts/Tooltip'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nimport { ymdToUTC } from '../AdapterFn';\r\nimport { crId } from '../crFn';\r\n\r\nconst C = {\r\n  COLOR_PLUS: '#4caf50',\r\n  COLOR_MINUS: '#f44336'\r\n}\r\n\r\nconst _crZhConfig = (option) => {\r\n  const { dataSource } = option\r\n      , id = crId();\r\n  return {\r\n    id, key: id,\r\n    dataSource\r\n  };\r\n}\r\n\r\nconst _calcScatterY = (option, chart) => {\r\n  const { seriaType=CHT_SCATTER_UP } = option\r\n  , { max, min } = chart.yAxis[0]\r\n  , onePercent = (max - min)/100;\r\n  return seriaType === CHT_SCATTER_DOWN\r\n    ? min + 4*onePercent\r\n    : max - 7*onePercent;\r\n}\r\n\r\n\r\nconst _updateLabelY = (p, seriaType) => {\r\n  if (seriaType === CHT_SCATTER_UP) {\r\n     p.dataLabels.y = 0\r\n  }\r\n}\r\n\r\nconst _crSeria = (arr, option) => {\r\n  const { seriaType=CHT_SCATTER_UP } = option;\r\n  const data = arr.map(p => {\r\n    const date = p[0]\r\n        , v = p[1]\r\n        , _color = v >= 0 ? C.COLOR_PLUS : C.COLOR_MINUS\r\n        , _p = ChartConfig.crMarkerExDividend(_color);\r\n\r\n    _updateLabelY(_p, seriaType)\r\n    return Object.assign(_p, {\r\n         x: ymdToUTC(date),\r\n         exValue: v,\r\n         ...p\r\n      });\r\n  })\r\n  return {\r\n    type: 'scatter',\r\n    tooltip: {\r\n      pointFormatter: Tooltip.exValue,\r\n      headerFormat: ''\r\n    },\r\n    data: data\r\n  };\r\n}\r\n\r\nconst _getSeriaFrom = (config, option, chart) => {\r\n  const y = _calcScatterY(option, chart)\r\n      , seria = config.series[0]\r\n      , _d = seria.data.map(p => {\r\n         p.y = y\r\n         return p;\r\n      });\r\n  seria.data = _d\r\n  return seria;\r\n}\r\n\r\nconst toScatter = {\r\n\r\n  toConfig: (data, option) => {\r\n    const seria = _crSeria(data, option)\r\n        , config = Builder()\r\n           .areaConfig()\r\n           .add({ zhConfig: _crZhConfig(option) })\r\n           .toConfig();\r\n    config.series[0] = seria\r\n    return config;\r\n  },\r\n\r\n  toSeria: (data, option, chart) => {\r\n    const config = toScatter.toConfig(data, option)\r\n        , seria = _getSeriaFrom(config, option, chart)\r\n    return seria;\r\n  }\r\n\r\n}\r\n\r\nexport default toScatter\r\n"],"file":"toScatter.js"}