{"version":3,"sources":["../../../src/adapters/quandl/fnStacked.js"],"names":["_assign","Object","assign","crStackedAreaConfig","ChartConfig","crStackedColumnConfig","setTitleToConfig","QuandlFn","createZhConfig","createValueMoving","createDatasetInfo","_setCaption","config","option","stacking","PERCENT","title","fnStacked","crZhConfig","id","isWithoutIndicator","crValueMoving","bNowTotal","date","bPrevTotal","dateTo","bNowValue","bPrevValue","split","valueTo","isDenyToChange","crConfigOption","json","series","value","seriaType","valueMoving","zhConfig","info","crConfig","type","percentType","jsonData","dataset","data","sliceItems","items100","chartType","stackedOption","categories"],"mappings":"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","sourcesContent":["import formatAllNumber from '../../utils/formatAllNumber';\r\nimport ChartConfig from '../../charts/ChartConfig';\r\n\r\nimport { fnCreateStackedConfig } from './StackedFn';\r\nimport QuandlFn from './QuandlFn';\r\n\r\nconst _assign = Object.assign\r\n, {\r\n    crStackedAreaConfig,\r\n    crStackedColumnConfig\r\n  } = ChartConfig\r\n, {\r\n  setTitleToConfig,\r\n  createZhConfig,\r\n  createValueMoving,\r\n  createDatasetInfo\r\n} = QuandlFn\r\n\r\nconst _setCaption = (config, option, stacking) => {\r\n  const PERCENT = stacking === 'percent'\r\n     ? ':PERCENT' : ''\r\n  option.title = `${option.title}${PERCENT}`\r\n  setTitleToConfig(config, option);\r\n}\r\n\r\nconst fnStacked = {\r\n  crZhConfig: (option, id) => _assign(\r\n    createZhConfig(option), {\r\n       id, isWithoutIndicator: true\r\n    }\r\n  ),\r\n  crValueMoving: (bNowTotal, date, bPrevTotal, dateTo) => _assign(\r\n    createValueMoving({\r\n      bNowValue: bNowTotal,\r\n      bPrevValue: bPrevTotal\r\n    }),{\r\n      date: date,\r\n      dateTo: dateTo.split('-')[0],\r\n      valueTo: formatAllNumber(bPrevTotal),\r\n      isDenyToChange: true\r\n    }\r\n  ),\r\n\r\n  crConfigOption: (\r\n    { bNowTotal, date, bPrevTotal, dateTo, series },\r\n    json, option) => {\r\n      const { value='', seriaType } = option\r\n      , id = `${value}_${seriaType}`;\r\n      return {\r\n        series: series,\r\n        valueMoving: fnStacked.crValueMoving(bNowTotal, date, bPrevTotal, dateTo),\r\n        zhConfig: fnStacked.crZhConfig(option, id),\r\n        info: createDatasetInfo(json)\r\n    };\r\n  },\r\n\r\n  crConfig: ({ type, percentType, json, option}) => {\r\n    const jsonData = json.dataset.data\r\n    , { sliceItems:items100=[], seriaType:chartType } = option\r\n    , stacking = chartType === percentType\r\n        ? 'percent' : 'normal'\r\n    , stackedOption = fnCreateStackedConfig({ jsonData, items100, chartType, stacking })\r\n    , crConfig = type === 'column'\r\n         ? crStackedColumnConfig\r\n         : crStackedAreaConfig\r\n    , config = crConfig({\r\n         categories: stackedOption.categories,\r\n         stacking\r\n     });\r\n\r\n    _setCaption(config, option, stacking)\r\n    _assign(config, fnStacked.crConfigOption(stackedOption, json, option))\r\n    return { config };\r\n  }\r\n}\r\n\r\nexport default fnStacked\r\n"],"file":"fnStacked.js"}