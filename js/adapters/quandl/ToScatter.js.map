{"version":3,"sources":["../../../src/adapters/quandl/ToScatter.js"],"names":["C","COLOR_PLUS","COLOR_MINUS","_crZhConfig","option","dataSource","id","AdapterFn","crId","key","isWithoutAdd","isWithLegend","_calcScatterY","chart","seriaType","CT","SCATTER_UP","yAxis","max","min","onePercent","SCATTER_DOWN","_updateLabelY","p","dataLabels","y","_crSeria","arr","data","map","date","v","_color","_p","ChartConfig","fMarkerExDividend","Object","assign","x","ymdToUTC","exValue","type","tooltip","pointFormatter","Tooltip","headerFormat","_getSeriaFrom","config","seria","series","_d","ToScatter","toConfig","areaConfig","add","zhConfig","toSeria"],"mappings":"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","sourcesContent":["\r\nimport { ChartType as CT } from '../../constants/Type'\r\n\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Tooltip from '../../charts/Tooltip'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nimport AdapterFn from '../AdapterFn'\r\n\r\nconst C = {\r\n  COLOR_PLUS: '#4caf50',\r\n  COLOR_MINUS: '#f44336'\r\n}\r\n\r\nconst _crZhConfig = (option) => {\r\n  const { dataSource } = option\r\n      , id = AdapterFn.crId();\r\n  return {\r\n    id, key: id,\r\n    isWithoutAdd: true,\r\n    isWithLegend: false,\r\n    dataSource\r\n  };\r\n}\r\n\r\nconst _calcScatterY = (option, chart) => {\r\n  const { seriaType=CT.SCATTER_UP } = option\r\n      , { max, min } = chart.yAxis[0]\r\n      , onePercent = (max - min)/100;\r\n  switch(seriaType){\r\n    case CT.SCATTER_DOWN:\r\n      return (min + 4*onePercent);\r\n    default:\r\n      return (max - 7*onePercent);\r\n  }\r\n}\r\n\r\n\r\nconst _updateLabelY = (p, seriaType) => {\r\n  if (seriaType === CT.SCATTER_UP) {\r\n     p.dataLabels.y = 0\r\n  }\r\n}\r\n\r\nconst _crSeria = (arr, option) => {\r\n  const { seriaType=CT.SCATTER_UP } = option;\r\n  const data = arr.map(p => {\r\n    const date = p[0]\r\n        , v = p[1]\r\n        , _color = v >= 0 ? C.COLOR_PLUS : C.COLOR_MINUS\r\n        , _p = ChartConfig.fMarkerExDividend(_color);\r\n\r\n    _updateLabelY(_p, seriaType)\r\n    return Object.assign(_p, {\r\n         x: AdapterFn.ymdToUTC(date),\r\n         exValue: v,\r\n         ...p\r\n      });\r\n  })\r\n  return {\r\n    type: 'scatter',\r\n    tooltip: {\r\n      pointFormatter: Tooltip.exValue,\r\n      headerFormat: ''\r\n    },\r\n    data: data\r\n    //zhSeriaId : zhSeriaId\r\n  };\r\n}\r\n\r\nconst _getSeriaFrom = (config, option, chart) => {\r\n  const y = _calcScatterY(option, chart)\r\n      , seria = config.series[0]\r\n      , _d = seria.data.map(p => {\r\n         p.y = y\r\n         return p;\r\n      });\r\n  seria.data = _d\r\n  return seria;\r\n}\r\n\r\nconst ToScatter = {\r\n\r\n  toConfig: (data, option) => {\r\n    const seria = _crSeria(data, option)\r\n        , config = Builder()\r\n           .areaConfig()\r\n           .add({ zhConfig: _crZhConfig(option) })\r\n           .toConfig();\r\n    config.series[0] = seria\r\n    return config;\r\n  },\r\n\r\n  toSeria: (data, option, chart) => {\r\n    const config = ToScatter.toConfig(data, option)\r\n        , seria = _getSeriaFrom(config, option, chart)\r\n    return seria;\r\n  }\r\n\r\n}\r\n\r\nexport default ToScatter\r\n"],"file":"ToScatter.js"}