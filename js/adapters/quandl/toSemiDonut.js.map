{"version":3,"sources":["../../../src/adapters/quandl/toSemiDonut.js"],"names":["crValueMoving","crZhConfig","fnStacked","_assign","Object","assign","setTitleToConfig","createDatasetInfo","createPercent","QuandlFn","crPieConfig","crInnerPieSeria","crOuterPieSeria","ChartConfig","HEIGHT","LEGEND_ROW_HEIGHT","Chart","_calcLegendHeight","length","Math","ceil","_addPercentToItem","item","bTotal","_bPercent","bValue","y","name","_createTopDonutData","isPercent","data","arr","_bTotal90","times","bArrTotal","i","_max","gte","push","plus","eq","minus","nameFull","color","parseFloat","_crYear","yearStr","split","_sortData","sort","compareByY","reverse","toSemiDonut","json","option","config","sliceItems","items","value","id","CHT_SEMI_DONUT","jsonData","dataset","jsonData1","jsonData2","_year1","_year2","_data1","_data2","_bTotal1","_bTotal2","forEach","caption","y1","y2","substring","_dataTop1","_dataTop2","series","center","year","isShowInLegend","chart","height","valueMoving","zhConfig","info"],"mappings":";;;;;;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,MAAM;AAAEA,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,IAAgCC,kBAAtC;AAEA,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAvB;AAAA,MACE;AACCC,EAAAA,gBADD;AAECC,EAAAA,iBAFD;AAGCC,EAAAA;AAHD,IAIKC,iBALP;AAAA,MAME;AACEC,EAAAA,WADF;AAEEC,EAAAA,eAFF;AAGEC,EAAAA;AAHF,IAIIC,oBAVN;AAAA,MAWE;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAgCC,cAXlC;;AAaA,MAAMC,iBAAiB,GAAIC,MAAD,IAAYA,MAAM,KAAK,CAAX,GAClCJ,MAAM,GAAGC,iBAAiB,IAAEI,IAAI,CAACC,IAAL,CAAUF,MAAM,GAAG,CAAnB,IAAwB,CAA1B,CADQ,GAElCJ,MAFJ;;AAIA,MAAMO,iBAAiB,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC1C,QAAMC,SAAS,GAAGhB,aAAa,CAAC;AAC9BiB,IAAAA,MAAM,EAAE,kBAAIH,IAAI,CAACI,CAAT,CADsB;AAE9BH,IAAAA,MAAM,EAAEA;AAFsB,GAAD,CAA/B;;AAIAD,EAAAA,IAAI,CAACK,IAAL,IAAc,MAAMH,SAApB;AACD,CAND;;AAQA,MAAMI,mBAAmB,GAAG,QAItB;AAAA,MAJuB;AAC3BC,IAAAA,SAAS,GAAC,KADiB;AAE3BC,IAAAA,IAAI,GAAC,EAFsB;AAG3BP,IAAAA,MAAM,GAAC,kBAAI,KAAJ;AAHoB,GAIvB;;AACJ,QAAMQ,GAAG,GAAG,EAAZ;AAAA,QACEC,SAAS,GAAGT,MAAM,CAACU,KAAP,CAAa,GAAb,CADd;;AAEA,MAAIC,SAAS,GAAG,kBAAI,KAAJ,CAAhB;AAAA,MACEC,CAAC,GAAC,CADJ;AAAA,MACOC,IAAI,GAAGN,IAAI,CAACZ,MADnB;;AAEA,SAAOiB,CAAC,GAACC,IAAT,EAAeD,CAAC,EAAhB,EAAoB;AAClB,UAAMb,IAAI,GAAGQ,IAAI,CAACK,CAAD,CAAjB;;AACA,QAAKA,CAAC,KAAK,CAAN,IACA,CAACD,SAAS,CAACG,GAAV,CAAcL,SAAd,CADD,IAEAG,CAAC,KAAKC,IAAI,GAAC,CAFhB,EAGA;AACE,UAAIP,SAAJ,EAAe;AACbR,QAAAA,iBAAiB,CAACC,IAAD,EAAOC,MAAP,CAAjB;AACD;;AACDQ,MAAAA,GAAG,CAACO,IAAJ,CAAShB,IAAT;AACD,KARD,MAQO;AAAE;AAAQ;;AAEjBY,IAAAA,SAAS,GAAGA,SAAS,CAACK,IAAV,CAAejB,IAAI,CAACI,CAApB,CAAZ;AACD;;AACD,MAAI,CAACQ,SAAS,CAACM,EAAV,CAAajB,MAAb,CAAL,EAA2B;AACzBW,IAAAA,SAAS,GAAGX,MAAM,CAACkB,KAAP,CAAaP,SAAb,CAAZ;AACAH,IAAAA,GAAG,CAACO,IAAJ,CAAS;AACPX,MAAAA,IAAI,EAAE,WAAWnB,aAAa,CAAC;AAAEiB,QAAAA,MAAM,EAAES,SAAV;AAAqBX,QAAAA,MAAM,EAAEA;AAA7B,OAAD,CADvB;AAEPmB,MAAAA,QAAQ,EAAE,OAFH;AAGPC,MAAAA,KAAK,EAAE,MAHA;AAIPjB,MAAAA,CAAC,EAAEkB,UAAU,CAACV,SAAD;AAJN,KAAT;AAMD;;AACD,SAAOH,GAAP;AACD,CAjCD;;AAmCA,MAAMc,OAAO,GAAGC,OAAO,IAAKA,OAAO,GAC/BA,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAD+B,GAE/B,EAFJ;;AAGA,MAAMC,SAAS,GAAGlB,IAAI,IAAIA,IAAI,CAC5BmB,IADwB,CACnBC,uBADmB,EACPC,OADO,EAA1B;;AAGA,MAAMC,WAAW,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAsB;AACvC,QAAMC,MAAM,GAAG7C,WAAW,EAA1B;AAAA,QACE;AAAC8C,IAAAA,UAAU,EAACC,KAAK,GAAC,EAAlB;AAAsBC,IAAAA,KAAK,GAAC;AAA5B,MAAkCJ,MADpC;AAAA,QAEEK,EAAE,GAAMD,KAAN,SAAeE,yBAFnB;AAAA,QAGEC,QAAQ,GAAGR,IAAI,CAACS,OAAL,CAAahC,IAH1B;AAAA,QAIEiC,SAAS,GAAGF,QAAQ,CAAC,CAAD,CAJtB;AAAA,QAKEG,SAAS,GAAGH,QAAQ,CAAC,CAAD,CALtB;AAAA,QAMEI,MAAM,GAAGpB,OAAO,CAACkB,SAAS,CAAC,CAAD,CAAV,CANlB;AAAA,QAOEG,MAAM,GAAGrB,OAAO,CAACmB,SAAS,CAAC,CAAD,CAAV,CAPlB;AAAA,QAQEG,MAAM,GAAG,EARX;AAAA,QASEC,MAAM,GAAG,EATX;;AAWA,MAAIC,QAAQ,GAAG,kBAAI,KAAJ,CAAf;;AACA,MAAIC,QAAQ,GAAG,kBAAI,KAAJ,CAAf;;AAEAb,EAAAA,KAAK,CAACc,OAAN,CAAcjD,IAAI,IAAI;AACpB,UAAM;AAAEoC,MAAAA,KAAF;AAASc,MAAAA;AAAT,QAAqBlD,IAA3B;AAAA,UACEmD,EAAE,GAAGV,SAAS,CAACL,KAAD,CADhB;AAAA,UAEEgB,EAAE,GAAGV,SAAS,CAACN,KAAD,CAFhB;;AAGA,QAAIe,EAAJ,EAAO;AACLN,MAAAA,MAAM,CAAC7B,IAAP,CAAY;AACTX,QAAAA,IAAI,EAAE,CAAC6C,OAAO,IAAI,EAAZ,EAAgBzB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B4B,SAA9B,CAAwC,CAAxC,EAA2C,CAA3C,CADG;AAETjC,QAAAA,QAAQ,EAAE8B,OAFD;AAEU9C,QAAAA,CAAC,EAAE+C;AAFb,OAAZ;;AAIAJ,MAAAA,QAAQ,GAAGA,QAAQ,CAAC9B,IAAT,CAAckC,EAAd,CAAX;AACD;;AACD,QAAIC,EAAJ,EAAO;AACLN,MAAAA,MAAM,CAAC9B,IAAP,CAAY;AAAEI,QAAAA,QAAQ,EAAE8B,OAAZ;AAAqB9C,QAAAA,CAAC,EAAEgD;AAAxB,OAAZ;;AACAJ,MAAAA,QAAQ,GAAGA,QAAQ,CAAC/B,IAAT,CAAcmC,EAAd,CAAX;AACD;AACF,GAfD;;AAiBA,QAAME,SAAS,GAAGhD,mBAAmB,CAAC;AACpCC,IAAAA,SAAS,EAAE,IADyB;AAEpCC,IAAAA,IAAI,EAAEkB,SAAS,CAACmB,MAAD,CAFqB;AAGpC5C,IAAAA,MAAM,EAAE8C;AAH4B,GAAD,CAArC;;AAKA,QAAMQ,SAAS,GAAGjD,mBAAmB,CAAC;AACpCE,IAAAA,IAAI,EAAEkB,SAAS,CAACoB,MAAD,CADqB;AAEpC7C,IAAAA,MAAM,EAAE+C;AAF4B,GAAD,CAArC;;AAKAf,EAAAA,MAAM,CAACuB,MAAP,GAAgB,CACdnE,eAAe,CAAC;AACdoE,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CADM;AAEdC,IAAAA,IAAI,EAAEf,MAFQ;AAGd1C,IAAAA,MAAM,EAAE,8BAAgB8C,QAAhB;AAHM,GAAD,CADD,EAMbzD,eAAe,CAAC;AACdmE,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CADM;AAEdjD,IAAAA,IAAI,EAAE8C,SAFQ;AAGdK,IAAAA,cAAc,EAAE;AAHF,GAAD,CANF,EAWbtE,eAAe,CAAC;AACdoE,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CADM;AAEdC,IAAAA,IAAI,EAAEd,MAFQ;AAGd3C,IAAAA,MAAM,EAAE,8BAAgB+C,QAAhB;AAHM,GAAD,CAXF,EAgBb1D,eAAe,CAAC;AACdmE,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CADM;AAEdjD,IAAAA,IAAI,EAAE+C;AAFQ,GAAD,CAhBF,CAAhB;AAsBAvE,EAAAA,gBAAgB,CAACiD,MAAD,EAASD,MAAT,CAAhB;;AAEAnD,EAAAA,OAAO,CAACoD,MAAD,EAAS;AACd2B,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAElE,iBAAiB,CAAC2D,SAAS,CAAC1D,MAAX;AADpB,KADO;AAIdkE,IAAAA,WAAW,EAAEpF,aAAa,CAACqE,QAAD,EAAWJ,MAAX,EAAmBK,QAAnB,EAA6BJ,MAA7B,CAJZ;AAKdmB,IAAAA,QAAQ,EAAEpF,UAAU,CAACqD,MAAD,EAASK,EAAT,CALN;AAMd2B,IAAAA,IAAI,EAAE/E,iBAAiB,CAAC8C,IAAD;AANT,GAAT,CAAP;;AASA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACF,CA5ED;;eA8EeH,W","sourcesContent":["\r\nimport Big from 'big.js';\r\n\r\nimport { compareByY } from '../compareByFn';\r\n\r\nimport { CHT_SEMI_DONUT } from '../../constants/ChartType';\r\nimport formatAllNumber from '../../utils/formatAllNumber';\r\nimport Chart from '../../charts/Chart';\r\nimport ChartConfig from '../../charts/ChartConfig';\r\n\r\nimport QuandlFn from './QuandlFn';\r\nimport fnStacked from './fnStacked';\r\n\r\nconst { crValueMoving, crZhConfig } = fnStacked;\r\n\r\nconst _assign = Object.assign\r\n, {\r\n   setTitleToConfig,\r\n   createDatasetInfo,\r\n   createPercent\r\n  }  = QuandlFn\r\n, {\r\n    crPieConfig,\r\n    crInnerPieSeria,\r\n    crOuterPieSeria\r\n  } = ChartConfig\r\n, { HEIGHT, LEGEND_ROW_HEIGHT } = Chart;\r\n\r\nconst _calcLegendHeight = (length) => length !== 0\r\n  ? HEIGHT + LEGEND_ROW_HEIGHT*(Math.ceil(length / 4) - 1)\r\n  : HEIGHT;\r\n\r\nconst _addPercentToItem = (item, bTotal) => {\r\n  const _bPercent = createPercent({\r\n    bValue: Big(item.y),\r\n    bTotal: bTotal\r\n  });\r\n  item.name += (' ' + _bPercent);\r\n}\r\n\r\nconst _createTopDonutData = ({\r\n  isPercent=false,\r\n  data=[],\r\n  bTotal=Big('0.0')\r\n}) => {\r\n  const arr = []\r\n  , _bTotal90 = bTotal.times(0.9);\r\n  let bArrTotal = Big('0.0')\r\n  , i=0, _max = data.length;\r\n  for (; i<_max; i++ ){\r\n    const item = data[i];\r\n    if ( i === 0 ||\r\n         !bArrTotal.gte(_bTotal90) ||\r\n         i === _max-1 )\r\n    {\r\n      if (isPercent) {\r\n        _addPercentToItem(item, bTotal);\r\n      }\r\n      arr.push(item);\r\n    } else { break; }\r\n\r\n    bArrTotal = bArrTotal.plus(item.y);\r\n  }\r\n  if (!bArrTotal.eq(bTotal)) {\r\n    bArrTotal = bTotal.minus(bArrTotal);\r\n    arr.push({\r\n      name: 'Other ' + createPercent({ bValue: bArrTotal, bTotal: bTotal}),\r\n      nameFull: 'Other',\r\n      color: 'gray',\r\n      y: parseFloat(bArrTotal)\r\n    })\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst _crYear = yearStr =>  yearStr\r\n  ? yearStr.split('-')[0]\r\n  : '';\r\nconst _sortData = data => data\r\n .sort(compareByY).reverse();\r\n\r\nconst toSemiDonut = function(json, option){\r\n   const config = crPieConfig()\r\n   , {sliceItems:items=[], value=''} = option\r\n   , id = `${value}_${CHT_SEMI_DONUT}`\r\n   , jsonData = json.dataset.data\r\n   , jsonData1 = jsonData[0]\r\n   , jsonData2 = jsonData[1]\r\n   , _year1 = _crYear(jsonData1[0])\r\n   , _year2 = _crYear(jsonData2[0])\r\n   , _data1 = []\r\n   , _data2 = [];\r\n\r\n   let _bTotal1 = Big('0.0');\r\n   let _bTotal2 = Big('0.0');\r\n\r\n   items.forEach(item => {\r\n     const { value, caption } = item\r\n     , y1 = jsonData1[value]\r\n     , y2 = jsonData2[value];\r\n     if (y1){\r\n       _data1.push({\r\n          name: (caption || '').split(';')[0].substring(0, 9),\r\n          nameFull: caption, y: y1\r\n        });\r\n       _bTotal1 = _bTotal1.plus(y1);\r\n     }\r\n     if (y2){\r\n       _data2.push({ nameFull: caption, y: y2 });\r\n       _bTotal2 = _bTotal2.plus(y2);\r\n     }\r\n   });\r\n\r\n   const _dataTop1 = _createTopDonutData({\r\n     isPercent: true,\r\n     data: _sortData(_data1),\r\n     bTotal: _bTotal1,\r\n  });\r\n   const _dataTop2 = _createTopDonutData({\r\n     data: _sortData(_data2),\r\n     bTotal: _bTotal2\r\n   });\r\n\r\n   config.series = [\r\n     crInnerPieSeria({\r\n       center: ['20%', '80%'],\r\n       year: _year1,\r\n       bTotal: formatAllNumber(_bTotal1)\r\n      })\r\n    , crOuterPieSeria({\r\n        center: ['20%', '80%'],\r\n        data: _dataTop1,\r\n        isShowInLegend: true\r\n      })\r\n    , crInnerPieSeria({\r\n        center: ['70%', '80%'],\r\n        year: _year2,\r\n        bTotal: formatAllNumber(_bTotal2)\r\n      })\r\n    , crOuterPieSeria({\r\n        center: ['70%', '80%'],\r\n        data: _dataTop2\r\n     })\r\n   ];\r\n\r\n   setTitleToConfig(config, option);\r\n\r\n   _assign(config, {\r\n     chart: {\r\n       height: _calcLegendHeight(_dataTop1.length)\r\n     },\r\n     valueMoving: crValueMoving(_bTotal1, _year1, _bTotal2, _year2),\r\n     zhConfig: crZhConfig(option, id),\r\n     info: createDatasetInfo(json)\r\n   })\r\n\r\n   return { config };\r\n}\r\n\r\nexport default toSemiDonut\r\n"],"file":"toSemiDonut.js"}