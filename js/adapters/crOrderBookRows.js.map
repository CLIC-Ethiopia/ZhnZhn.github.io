{"version":3,"sources":["../../src/adapters/crOrderBookRows.js"],"names":["S","TO_LEFT","to","c","TO_RIGHT","_crItemHeader","name","pn","color","toN","style","fontWeight","_crTableHeaders","isOrderNumber","filter","Boolean","_calcTotal","arr","valueIndex","len","_total","i","add","_crBgStyle","onePerc","strV","isLeft","perc","parseInt","div","toFixed","background","err","_crRowPq","bidItem","askItem","_crQtyStyle","b_p","b_q","a_p","a_q","_crRowPnq","_row","b_n","a_n","crOrderBookRows","json","limit","bids","asks","_isOrderNumber","_len","length","rows","_totalBids","_totalAsks","_onePerc","bind","_crRow","push","_totalRow","toString","_headers"],"mappings":"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","sourcesContent":["import Big from 'big.js';\r\nimport { crTableRows } from './toTableFn';\r\n\r\nconst S = {\r\n  TO_LEFT: {\r\n   to: 'to left',\r\n   c: '#184416'\r\n },\r\n TO_RIGHT: {\r\n  to: 'to right',\r\n  c: '#6c3632'\r\n }\r\n};\r\n\r\nconst _crItemHeader = (name, pn, color) => ({\r\n   name, pn,\r\n   toN: [],\r\n   style: {\r\n     color,\r\n     fontWeight: 'bold'\r\n   }\r\n})\r\n\r\nconst _crTableHeaders = (isOrderNumber) => [\r\n  _crItemHeader('Bid', 'b_p', '#4caf50')\r\n  , isOrderNumber ? _crItemHeader('BN', 'b_n') : void 0\r\n  , _crItemHeader('Bid QTY', 'b_q')\r\n  , _crItemHeader('Ask QTY', 'a_q')\r\n  , isOrderNumber ? _crItemHeader('AN', 'a_n') : void 0\r\n  , _crItemHeader('Ask', 'a_p', '#f44336')\r\n].filter(Boolean);\r\n\r\nconst _calcTotal = (arr, valueIndex, len) => {\r\n  let _total = Big(0), i = 0;\r\n  for(i;i<len;i++){\r\n    _total = _total.add(arr[i][valueIndex])\r\n  }\r\n  return _total;\r\n};\r\n\r\nconst _crBgStyle = (onePerc, strV, isLeft) => {\r\n  try {\r\n    const perc = parseInt(Big(strV).div(onePerc).toFixed(0), 10)\r\n    , { to, c } = isLeft ? S.TO_LEFT : S.TO_RIGHT;\r\n    return {\r\n      background: `linear-gradient(${to}, ${c} ${perc}%, transparent ${perc}% ${100-perc}%)`\r\n    };\r\n  } catch(err) {\r\n    return;\r\n  }\r\n};\r\n\r\nconst _crRowPq = (bidItem, askItem, _crQtyStyle) => ({\r\n    b_p: bidItem[0],\r\n    b_q: bidItem[1],\r\n    a_p: askItem[0],\r\n    a_q: askItem[1],\r\n    style: {\r\n      b_q: _crQtyStyle(bidItem[1], true),\r\n      a_q: _crQtyStyle(askItem[1]),\r\n    }\r\n});\r\n\r\nconst _crRowPnq = (bidItem, askItem, _crQtyStyle) => {\r\n  const _row = _crRowPq(bidItem, askItem, _crQtyStyle);\r\n  _row.b_n = bidItem[2]\r\n  _row.a_n = askItem[2]\r\n  return _row;\r\n};\r\n\r\nconst crOrderBookRows = (json, limit) => {\r\n  const { bids, asks } = json\r\n  , _isOrderNumber = typeof asks[0][2] === 'number'\r\n  , _len = limit || bids.length\r\n  , rows = []\r\n  , _totalBids = _calcTotal(bids, 1, _len)\r\n  , _totalAsks = _calcTotal(asks, 1, _len)\r\n  , _onePerc = _totalBids.add(_totalAsks).div(100)\r\n  , _crQtyStyle = _crBgStyle.bind(null, _onePerc)\r\n  , _crRow = _isOrderNumber ? _crRowPnq : _crRowPq;\r\n\r\n  let i=0, bidItem, askItem;\r\n  for (i; i<_len; i++){\r\n    bidItem = bids[_len-1-i] || []\r\n    askItem = asks[i] || []\r\n    rows.push(_crRow(bidItem, askItem, _crQtyStyle))\r\n  }\r\n\r\n  const _totalRow = {\r\n    b_q: _totalBids.toString(),\r\n    a_q: _totalAsks.toString(),\r\n    style: {\r\n      b_q: _crQtyStyle(_totalBids, true),\r\n      a_q: _crQtyStyle(_totalAsks)\r\n    }\r\n  }\r\n  if (_isOrderNumber) {\r\n    _totalRow.b_n = _calcTotal(bids, 2, _len)\r\n    _totalRow.a_n = _calcTotal(asks, 2, _len)\r\n  }\r\n  rows.push(_totalRow)\r\n\r\n  const _headers = _crTableHeaders(_isOrderNumber);\r\n  return  [_headers, crTableRows(_headers, rows)];\r\n};\r\n\r\nexport default crOrderBookRows\r\n"],"file":"crOrderBookRows.js"}