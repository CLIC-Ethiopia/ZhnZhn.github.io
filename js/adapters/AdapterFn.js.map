{"version":3,"sources":["../../src/adapters/AdapterFn.js"],"names":["BLANK","_compareArrByIndex","arrA","arrB","index","_compareByTwoProp","propName1","propName2","a","b","_getDate","point","Array","isArray","x","_getValue","y","AdapterFn","ymdToUTC","date","_arr","split","_len","length","Date","UTC","parseInt","ymdtToUTC","_d","ymdhmsToUTC","_dtArr","_ymdArr","_hmsArr","volumeColumnPoint","open","close","volume","option","_color","GREEN","RED","GRAY","Object","assign","color","_open","_close","athPoint","prevClose","_bDelta","minus","_bPercent","times","div","abs","toFixed","gt","gte","WHITE","parseFloat","legendItem","name","is","isVisible","stockSeriesLegend","S_STOCK_CLOSE","S_HIGH","S_LOW","S_OPEN","numberFormat","value","fnNumberFormat","compareByDate","compareByY","compareByValue","compareByValueId","crValueMoving","bNowValue","bPrevValue","nowValue","prevValue","Direction","fnFormat","valueMoving","data","direction","len","_pointNow","_nowValue","_pointPrev","_prevValue","_nowDate","formatTo","_prevDate","dateTo","valueTo","crId","now","toString","Math","random","substr","toUpperCase"],"mappings":"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","file":"AdapterFn.js","sourcesContent":["\r\nimport Big from 'big.js'\r\n\r\nimport DateUtils from '../utils/DateUtils';\r\nimport ChartConfig from '../charts/ChartConfig';\r\nimport { Direction } from '../constants/Type';\r\n\r\nimport mathFn from '../math/mathFn';\r\n\r\nimport C from '../constants/Color'\r\n\r\nconst BLANK = '';\r\n\r\nconst _compareArrByIndex = index => (arrA, arrB) => {\r\n  if (arrA[index] < arrB[index]) return -1;\r\n  else if (arrA[index] === arrB[index]) return 0;\r\n  else return 1;\r\n}\r\nconst _compareByTwoProp = (propName1, propName2) => (a, b) => {\r\n  if (a[propName1] < b[propName1]) return -1;\r\n  else if (a[propName1] > b[propName1]) return 1;\r\n  else if (a[propName2] < b[propName2]) return -1;\r\n  else if (a[propName2] > a[propName2]) return 1;\r\n  else return 0;\r\n}\r\n\r\nconst _getDate = (point) => {\r\n  return Array.isArray(point)\r\n    ? point[0]\r\n    : point.x;\r\n}\r\nconst _getValue = (point) => {\r\n  if (Array.isArray(point)){\r\n    return point[1] != null\r\n       ? point[1]\r\n       : '0.0';\r\n  } else {\r\n    return point && point.y != null\r\n       ? point.y\r\n       : '0.0';\r\n  }\r\n}\r\n\r\nconst AdapterFn = {\r\n  ymdToUTC(date) {\r\n    const _arr = date.split('-')\r\n        , _len = _arr.length;\r\n    if (_len === 3) {\r\n      return Date.UTC( _arr[0], (parseInt(_arr[1], 10)-1), _arr[2] );\r\n    } else if ( _len === 2){\r\n      return Date.UTC( _arr[0], (parseInt(_arr[1], 10)-1), 27 );\r\n    } else if ( _len === 1) {\r\n      return Date.UTC( _arr[0], 11, 30 );\r\n    }\r\n  },\r\n  ymdtToUTC(date) {\r\n    const _arr = date.split('-')\r\n        , _d = _arr[2].split(' ')[0];\r\n    return Date.UTC(\r\n      _arr[0], (parseInt(_arr[1], 10)-1), _d\r\n    );\r\n  },\r\n  ymdhmsToUTC(date) {\r\n    const _dtArr = date.split(' ')\r\n    , _ymdArr = _dtArr[0].split('-')\r\n    , _hmsArr = _dtArr[1].split(':');\r\n    return Date.UTC(\r\n      _ymdArr[0], (parseInt(_ymdArr[1], 10)-1), _ymdArr[2],\r\n      _hmsArr[0], _hmsArr[1], _hmsArr[2]\r\n    );\r\n  },\r\n\r\n  volumeColumnPoint({ date, open, close, volume, option }) {\r\n    let _color;\r\n    if (open && close > open) {\r\n      _color = C.GREEN\r\n    } else if (open && close<open) {\r\n      _color = C.RED\r\n    } else {\r\n      _color = C.GRAY\r\n    }\r\n\r\n    return Object.assign({\r\n      x: date, y: volume, color: _color,\r\n      _open: open, _close: close\r\n    }, option);\r\n  },\r\n\r\n  athPoint({ date, prevClose, open }) {\r\n    const _bDelta = (open && prevClose)\r\n             ? Big(prevClose).minus(open)\r\n             : Big('0.0')\r\n        , _bPercent = (prevClose)\r\n             ? _bDelta.times(100).div(prevClose).abs().toFixed(2)\r\n             : Big('0.0');\r\n\r\n    let _color;\r\n    if (_bDelta.gt(0.0)){\r\n      _color = C.RED;\r\n    }\r\n    else if (!_bDelta.gte(0.0)){\r\n      _color = C.GREEN;\r\n    } else {\r\n      _color = (open) ? C.GRAY : C.WHITE;\r\n    }\r\n\r\n    return {\r\n      x : date,\r\n      y : parseFloat(_bPercent),\r\n      close : prevClose,\r\n      open : open ? open : 'Unknown',\r\n      color : _color\r\n    };\r\n  },\r\n\r\n  legendItem(index, color, name, is=false){\r\n    return {\r\n      index, color, name,\r\n      isVisible: is\r\n    };\r\n  },\r\n\r\n  stockSeriesLegend(){\r\n    return [\r\n      this.legendItem(0, C.S_STOCK_CLOSE, 'Close', true),\r\n      this.legendItem(1, C.S_HIGH, 'High'),\r\n      this.legendItem(2, C.S_LOW, 'Low'),\r\n      this.legendItem(3, C.S_OPEN, 'Open')\r\n    ];\r\n  },\r\n\r\n  numberFormat(value){\r\n    return ChartConfig.fnNumberFormat(value);\r\n  },\r\n\r\n  compareByDate: _compareArrByIndex(0),\r\n  compareByY: _compareArrByIndex('y'),\r\n  compareByValue: _compareArrByIndex('value'),\r\n  compareByValueId: _compareByTwoProp('value', 'id'),\r\n\r\n  crValueMoving({ bNowValue=Big('0.0'), bPrevValue=Big('0.0') }){\r\n    return mathFn.crValueMoving({\r\n      nowValue: bNowValue,\r\n      prevValue: bPrevValue,\r\n      Direction: Direction,\r\n      fnFormat: ChartConfig.fnNumberFormat\r\n    })\r\n  },\r\n\r\n  valueMoving(data){\r\n    if (!Array.isArray(data)) {\r\n      return { date: data, direction: 'empty' };\r\n    }\r\n    \r\n    const len = data.length\r\n          , _pointNow = len>0 && data[len-1]\r\n               ? data[len-1]\r\n               : [ BLANK, 0 ]\r\n          , _nowValue = _getValue(_pointNow)\r\n          , bNowValue = Big(_nowValue)\r\n          , _pointPrev = len>1 && data[len-2]\r\n              ? data[len-2]\r\n              : [ BLANK, 0 ]\r\n          , _prevValue = _getValue(_pointPrev)\r\n          , bPrevValue = Big(_prevValue)\r\n          , _nowDate = _getDate(_pointNow)\r\n          , date = len>0\r\n               ? DateUtils.formatTo(_nowDate)\r\n               : BLANK\r\n          , _prevDate = _getDate(_pointPrev)\r\n          , dateTo = len>1 && _prevDate\r\n               ? DateUtils.formatTo(_prevDate)\r\n               : BLANK;\r\n\r\n      return  {\r\n        ...this.crValueMoving({ bNowValue, bPrevValue }),\r\n        valueTo: this.numberFormat(bPrevValue),\r\n        date, dateTo\r\n      };\r\n  },\r\n\r\n  crId: () => {\r\n    return (\r\n        Date.now().toString(36) +\r\n        Math.random().toString(36).substr(2, 9)\r\n      )\r\n      .toUpperCase();\r\n  }\r\n\r\n}\r\n\r\nexport default AdapterFn\r\n"]}