{"version":3,"sources":["../../src/adapters/AdapterFn.js"],"names":["EMPTY","ITEM_CONF_PROP_NAMES","_isNaN","Number","isNaN","_isArr","Array","isArray","_isNumber","n","_fIsNumber","pn","p","isFinite","_getDate","point","x","_getValue","y","_crBigValueFrom","_crDmyFrom","_fToFloatOr","dfValue","str","_v","parseFloat","AdapterFn","crFn","pointFn","legendFn","toTd","mls","ymdToUTC","ymdhmsToUTC","getFromDate","getYmdhmUTC","getYear","getCurrentYear","monthIndex","getCaption","getC","getValue","getV","isInArrStr","roundBy","numberFormat","formatAllNumber","isNumberOrNull","v","isYNumber","toFloatOrEmpty","compareByDate","compareByY","compareByValue","compareByValueId","crValueMoving","bNowValue","bPrevValue","dfR","nowValue","prevValue","fnFormat","valueMoving","data","date","direction","Direction","len","length","_pointNow","_pointPrev","dateTo","valueTo","crItemConf","option","_itemConf","_value","forEach","k","map","obj","crValueConf","_p","joinBy","delimeter","restItems","filter","Boolean","join","toUpperCaseFirst","findMinY","findMaxY","filterTrimZero","mapIf","arr","crItem","is","_items","push","crZhConfig","_itemKey","itemCaption","dataSource","id","key"],"mappings":"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","sourcesContent":["import Big from 'big.js';\r\n\r\nimport { toTd } from '../charts/dateFormat';\r\n\r\nimport { isInArrStr } from '../utils/arrFn';\r\nimport fCompareBy from '../utils/fCompareBy';\r\nimport fCompareByTwoProps from '../utils/fCompareByTwoProps';\r\nimport formatAllNumber from '../utils/formatAllNumber';\r\nimport {\r\n  getC,\r\n  getV\r\n} from '../utils/getPropertyFn';\r\n\r\nimport {\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  mlsToDmy,\r\n  getFromDate,\r\n  getYmdhmUTC,\r\n  getYear,\r\n  getCurrentYear,\r\n  monthIndex\r\n} from '../utils/DateUtils';\r\nimport toUpperCaseFirst from '../utils/toUpperCaseFirst'\r\n\r\nimport {\r\n  roundBy,\r\n  crValueMoving\r\n} from '../math/mathFn'\r\nimport {\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero\r\n} from '../math/seriaFn'\r\n\r\nimport { Direction } from '../constants/Type'\r\n\r\nimport crFn from './crFn'\r\nimport pointFn from './pointFn'\r\nimport legendFn from './legendFn'\r\n\r\nconst EMPTY = '';\r\n\r\nconst ITEM_CONF_PROP_NAMES = [\r\n 'url', 'loadId',\r\n 'title', 'subtitle', 'itemCaption',\r\n 'seriaType',\r\n 'items'\r\n];\r\n\r\nconst _isNaN = Number.isNaN\r\n, _isArr = Array.isArray\r\n, _isNumber = n => typeof n === 'number'\r\n    && (n - n) === 0;\r\nconst _fIsNumber = (pn) => (p) => {\r\n  return typeof p[pn] === 'number'\r\n    && isFinite(p[pn]);\r\n}\r\n\r\nconst _getDate = point =>_isArr(point)\r\n  ? point[0]\r\n  : (point || {}).x;\r\n\r\nconst _getValue = (point) => _isArr(point)\r\n  ? _isNumber(point[1])\r\n       ? point[1]\r\n       : '0.0'\r\n  : point && _isNumber(point.y)\r\n      ? point.y\r\n      : '0.0';\r\n\r\nconst _crBigValueFrom = point => Big(_getValue(point));\r\nconst _crDmyFrom = point => mlsToDmy(_getDate(point));\r\n\r\nconst _fToFloatOr = dfValue => str => {\r\n  const _v = parseFloat(str);\r\n  return _isNaN(_v) ? dfValue : _v;\r\n};\r\n\r\nconst AdapterFn = {\r\n  ...crFn,\r\n  ...pointFn,\r\n  ...legendFn,\r\n\r\n\r\n  toTd: (mls) => _isNumber(mls)\r\n    ? toTd(mls)\r\n    : '',\r\n\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  getFromDate,\r\n  getYmdhmUTC,\r\n  getYear,\r\n  getCurrentYear,\r\n  monthIndex,\r\n\r\n  getCaption: getC,\r\n  getValue: getV,\r\n  isInArrStr,\r\n\r\n  roundBy,\r\n  numberFormat: formatAllNumber,\r\n\r\n  isNumberOrNull: v => _isNumber(v) || v === null,\r\n\r\n  isYNumber: _fIsNumber('y'),\r\n  toFloatOrEmpty: _fToFloatOr(''),\r\n\r\n  compareByDate: fCompareBy(0),\r\n  compareByY: fCompareBy('y'),\r\n  compareByValue: fCompareBy('value'),\r\n  compareByValueId: fCompareByTwoProps('value', 'id'),\r\n\r\n  crValueMoving: ({\r\n    bNowValue=Big('0.0'),\r\n    bPrevValue=Big('0.0'),\r\n    dfR\r\n  }) => crValueMoving({\r\n    nowValue: bNowValue,\r\n    prevValue: bPrevValue,\r\n    fnFormat: formatAllNumber,\r\n    dfR\r\n  }),\r\n\r\n\r\n  valueMoving(data, dfR){\r\n    if (!_isArr(data)) {\r\n      return {\r\n        date: data,\r\n        direction: Direction.EMPTY\r\n      };\r\n    }\r\n\r\n    const len = data.length\r\n    , _pointNow = data[len-1] || [ EMPTY, 0 ]\r\n    , bNowValue = _crBigValueFrom(_pointNow)\r\n    , _pointPrev = data[len-2] || _pointNow\r\n    , bPrevValue = _crBigValueFrom(_pointPrev)\r\n    , date = _crDmyFrom(_pointNow)\r\n    , dateTo = _crDmyFrom(_pointPrev);\r\n\r\n      return  {\r\n        ...AdapterFn.crValueMoving({ bNowValue, bPrevValue, dfR }),\r\n        valueTo: formatAllNumber(bPrevValue),\r\n        date, dateTo\r\n      };\r\n  },\r\n\r\n  crItemConf: (option) => {\r\n    const _itemConf = {};\r\n    let _value;\r\n    ITEM_CONF_PROP_NAMES.forEach(k => {\r\n      _value = option[k]\r\n      if (_value != null) {\r\n        _itemConf[k] = _isArr(_value)\r\n           ? _value.map(obj => ({...obj}))\r\n           : _value\r\n      }\r\n     })\r\n     return _itemConf;\r\n  },\r\n\r\n  crValueConf: data => {\r\n    const _p = data[data.length-1];\r\n    return {\r\n      x: _getDate(_p),\r\n      y: _getValue(_p)\r\n    };\r\n  },\r\n\r\n  joinBy: (delimeter, ...restItems) => restItems\r\n   .filter(Boolean)\r\n   .join(delimeter),\r\n\r\n  toUpperCaseFirst,\r\n\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero,\r\n\r\n  mapIf: (arr, crItem, is) => {\r\n    const _items = [];\r\n    (arr || []).forEach(v => {\r\n      if (is(v)) {\r\n        _items.push(crItem(v))\r\n      }\r\n    })\r\n    return _items;\r\n  },\r\n\r\n  crZhConfig: ({\r\n    _itemKey,\r\n    itemCaption,\r\n    dataSource\r\n  }) => ({\r\n    id: _itemKey, key: _itemKey,\r\n    itemCaption,\r\n    dataSource\r\n  })\r\n};\r\n\r\nexport default AdapterFn\r\n"],"file":"AdapterFn.js"}