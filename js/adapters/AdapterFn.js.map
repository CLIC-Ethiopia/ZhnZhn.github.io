{"version":3,"sources":["../../src/adapters/AdapterFn.js"],"names":["EMPTY","_isNaN","Number","isNaN","_isArr","Array","isArray","_isNumber","n","_fIsNumber","pn","p","isFinite","_getDate","point","x","_getValue","y","_crBigValueFrom","_crDmyFrom","_fToFloatOr","dfValue","str","_v","parseFloat","AdapterFn","toTd","mls","ymdToUTC","ymdhmsToUTC","getFromDate","getYmdhmUTC","getYear","getCurrentYear","monthIndex","getCaption","getC","getValue","getV","isInArrStr","roundBy","numberFormat","formatAllNumber","isNumberOrNull","v","isYNumber","toFloatOrEmpty","crValueMoving","bNowValue","bPrevValue","dfR","nowValue","prevValue","fnFormat","valueMoving","data","date","direction","Direction","len","length","_pointNow","_pointPrev","dateTo","valueTo","crValueConf","_p","joinBy","delimeter","restItems","filter","Boolean","join","toUpperCaseFirst","findMinY","findMaxY","filterTrimZero","mapIf","arr","crItem","is","_items","forEach","push","crZhConfig","_itemKey","itemCaption","dataSource","id","key"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAKA;;AAUA;;AACA;;AAIA;;AAMA;;AAEA,MAAMA,KAAK,GAAG,EAAd;;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAtB;AAAA,MACEC,MAAM,GAAGC,KAAK,CAACC,OADjB;AAAA,MAEEC,SAAS,GAAGC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IACXA,CAAC,GAAGA,CAAL,KAAY,CAHnB;;AAIA,MAAMC,UAAU,GAAIC,EAAD,IAASC,CAAD,IAAO;AAChC,SAAO,OAAOA,CAAC,CAACD,EAAD,CAAR,KAAiB,QAAjB,IACFE,QAAQ,CAACD,CAAC,CAACD,EAAD,CAAF,CADb;AAED,CAHD;;AAKA,MAAMG,QAAQ,GAAGC,KAAK,IAAGV,MAAM,CAACU,KAAD,CAAN,GACrBA,KAAK,CAAC,CAAD,CADgB,GAErB,CAACA,KAAK,IAAI,EAAV,EAAcC,CAFlB;;AAIA,MAAMC,SAAS,GAAIF,KAAD,IAAWV,MAAM,CAACU,KAAD,CAAN,GACzBP,SAAS,CAACO,KAAK,CAAC,CAAD,CAAN,CAAT,GACKA,KAAK,CAAC,CAAD,CADV,GAEK,KAHoB,GAIzBA,KAAK,IAAIP,SAAS,CAACO,KAAK,CAACG,CAAP,CAAlB,GACIH,KAAK,CAACG,CADV,GAEI,KANR;;AAQA,MAAMC,eAAe,GAAGJ,KAAK,IAAI,kBAAIE,SAAS,CAACF,KAAD,CAAb,CAAjC;;AACA,MAAMK,UAAU,GAAGL,KAAK,IAAI,yBAASD,QAAQ,CAACC,KAAD,CAAjB,CAA5B;;AAEA,MAAMM,WAAW,GAAGC,OAAO,IAAIC,GAAG,IAAI;AACpC,QAAMC,EAAE,GAAGC,UAAU,CAACF,GAAD,CAArB;;AACA,SAAOrB,MAAM,CAACsB,EAAD,CAAN,GAAaF,OAAb,GAAuBE,EAA9B;AACD,CAHD;;AAKA,MAAME,SAAS,GAAG;AAEhBC,EAAAA,IAAI,EAAGC,GAAD,IAASpB,SAAS,CAACoB,GAAD,CAAT,GACX,sBAAKA,GAAL,CADW,GAEX,EAJY;AAMhBC,EAAAA,QAAQ,EAARA,mBANgB;AAOhBC,EAAAA,WAAW,EAAXA,sBAPgB;AAQhBC,EAAAA,WAAW,EAAXA,sBARgB;AAShBC,EAAAA,WAAW,EAAXA,sBATgB;AAUhBC,EAAAA,OAAO,EAAPA,kBAVgB;AAWhBC,EAAAA,cAAc,EAAdA,yBAXgB;AAYhBC,EAAAA,UAAU,EAAVA,qBAZgB;AAchBC,EAAAA,UAAU,EAAEC,mBAdI;AAehBC,EAAAA,QAAQ,EAAEC,mBAfM;AAgBhBC,EAAAA,UAAU,EAAVA,iBAhBgB;AAkBhBC,EAAAA,OAAO,EAAPA,eAlBgB;AAmBhBC,EAAAA,YAAY,EAAEC,wBAnBE;AAqBhBC,EAAAA,cAAc,EAAEC,CAAC,IAAIrC,SAAS,CAACqC,CAAD,CAAT,IAAgBA,CAAC,KAAK,IArB3B;AAuBhBC,EAAAA,SAAS,EAAEpC,UAAU,CAAC,GAAD,CAvBL;AAwBhBqC,EAAAA,cAAc,EAAE1B,WAAW,CAAC,EAAD,CAxBX;AA0BhB2B,EAAAA,aAAa,EAAE;AAAA,QAAC;AACdC,MAAAA,SAAS,GAAC,kBAAI,KAAJ,CADI;AAEdC,MAAAA,UAAU,GAAC,kBAAI,KAAJ,CAFG;AAGdC,MAAAA;AAHc,KAAD;AAAA,WAIT,2BAAc;AAClBC,MAAAA,QAAQ,EAAEH,SADQ;AAElBI,MAAAA,SAAS,EAAEH,UAFO;AAGlBI,MAAAA,QAAQ,EAAEX,wBAHQ;AAIlBQ,MAAAA;AAJkB,KAAd,CAJS;AAAA,GA1BC;;AAsChBI,EAAAA,WAAW,CAACC,IAAD,EAAOL,GAAP,EAAW;AACpB,QAAI,CAAC9C,MAAM,CAACmD,IAAD,CAAX,EAAmB;AACjB,aAAO;AACLC,QAAAA,IAAI,EAAED,IADD;AAELE,QAAAA,SAAS,EAAEC,gBAAU1D;AAFhB,OAAP;AAID;;AAED,UAAM2D,GAAG,GAAGJ,IAAI,CAACK,MAAjB;AAAA,UACEC,SAAS,GAAGN,IAAI,CAACI,GAAG,GAAC,CAAL,CAAJ,IAAe,CAAE3D,KAAF,EAAS,CAAT,CAD7B;AAAA,UAEEgD,SAAS,GAAG9B,eAAe,CAAC2C,SAAD,CAF7B;AAAA,UAGEC,UAAU,GAAGP,IAAI,CAACI,GAAG,GAAC,CAAL,CAAJ,IAAeE,SAH9B;AAAA,UAIEZ,UAAU,GAAG/B,eAAe,CAAC4C,UAAD,CAJ9B;AAAA,UAKEN,IAAI,GAAGrC,UAAU,CAAC0C,SAAD,CALnB;AAAA,UAMEE,MAAM,GAAG5C,UAAU,CAAC2C,UAAD,CANrB;;AAQE,WAAQ,EACN,GAAGrC,SAAS,CAACsB,aAAV,CAAwB;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB,OAAxB,CADG;AAENc,MAAAA,OAAO,EAAE,8BAAgBf,UAAhB,CAFH;AAGNO,MAAAA,IAHM;AAGAO,MAAAA;AAHA,KAAR;AAKH,GA3De;;AA6DhBE,EAAAA,WAAW,EAAEV,IAAI,IAAI;AACnB,UAAMW,EAAE,GAAGX,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAf;AACA,WAAO;AACL7C,MAAAA,CAAC,EAAEF,QAAQ,CAACqD,EAAD,CADN;AAELjD,MAAAA,CAAC,EAAED,SAAS,CAACkD,EAAD;AAFP,KAAP;AAID,GAnEe;AAqEhBC,EAAAA,MAAM,EAAE,UAACC,SAAD;AAAA,sCAAeC,SAAf;AAAeA,MAAAA,SAAf;AAAA;;AAAA,WAA6BA,SAAS,CAC5CC,MADmC,CAC5BC,OAD4B,EAEnCC,IAFmC,CAE9BJ,SAF8B,CAA7B;AAAA,GArEQ;AAyEhBK,EAAAA,gBAAgB,EAAhBA,yBAzEgB;AA2EhBC,EAAAA,QAAQ,EAARA,iBA3EgB;AA4EhBC,EAAAA,QAAQ,EAARA,iBA5EgB;AA6EhBC,EAAAA,cAAc,EAAdA,uBA7EgB;AA+EhBC,EAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,EAAd,KAAqB;AAC1B,UAAMC,MAAM,GAAG,EAAf;AACA,KAACH,GAAG,IAAI,EAAR,EAAYI,OAAZ,CAAoBtC,CAAC,IAAI;AACvB,UAAIoC,EAAE,CAACpC,CAAD,CAAN,EAAW;AACTqC,QAAAA,MAAM,CAACE,IAAP,CAAYJ,MAAM,CAACnC,CAAD,CAAlB;AACD;AACF,KAJD;AAKA,WAAOqC,MAAP;AACD,GAvFe;AAyFhBG,EAAAA,UAAU,EAAE;AAAA,QAAC;AACXC,MAAAA,QADW;AAEXC,MAAAA,WAFW;AAGXC,MAAAA;AAHW,KAAD;AAAA,WAIL;AACLC,MAAAA,EAAE,EAAEH,QADC;AACSI,MAAAA,GAAG,EAAEJ,QADd;AAELC,MAAAA,WAFK;AAGLC,MAAAA;AAHK,KAJK;AAAA;AAzFI,CAAlB;eAoGe9D,S","sourcesContent":["import Big from 'big.js';\r\n\r\nimport { toTd } from '../charts/dateFormat';\r\nimport { isInArrStr } from '../utils/arrFn';\r\nimport formatAllNumber from '../utils/formatAllNumber';\r\nimport {\r\n  getC,\r\n  getV\r\n} from '../utils/getPropertyFn';\r\n\r\nimport {\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  mlsToDmy,\r\n  getFromDate,\r\n  getYmdhmUTC,\r\n  getYear,\r\n  getCurrentYear,\r\n  monthIndex\r\n} from '../utils/DateUtils';\r\nimport toUpperCaseFirst from '../utils/toUpperCaseFirst'\r\nimport {\r\n  roundBy,\r\n  crValueMoving\r\n} from '../math/mathFn'\r\nimport {\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero\r\n} from '../math/seriaFn'\r\n\r\nimport { Direction } from '../constants/Type'\r\n\r\nconst EMPTY = '';\r\n\r\nconst _isNaN = Number.isNaN\r\n, _isArr = Array.isArray\r\n, _isNumber = n => typeof n === 'number'\r\n    && (n - n) === 0;\r\nconst _fIsNumber = (pn) => (p) => {\r\n  return typeof p[pn] === 'number'\r\n    && isFinite(p[pn]);\r\n}\r\n\r\nconst _getDate = point =>_isArr(point)\r\n  ? point[0]\r\n  : (point || {}).x;\r\n\r\nconst _getValue = (point) => _isArr(point)\r\n  ? _isNumber(point[1])\r\n       ? point[1]\r\n       : '0.0'\r\n  : point && _isNumber(point.y)\r\n      ? point.y\r\n      : '0.0';\r\n\r\nconst _crBigValueFrom = point => Big(_getValue(point));\r\nconst _crDmyFrom = point => mlsToDmy(_getDate(point));\r\n\r\nconst _fToFloatOr = dfValue => str => {\r\n  const _v = parseFloat(str);\r\n  return _isNaN(_v) ? dfValue : _v;\r\n};\r\n\r\nconst AdapterFn = {\r\n\r\n  toTd: (mls) => _isNumber(mls)\r\n    ? toTd(mls)\r\n    : '',\r\n\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  getFromDate,\r\n  getYmdhmUTC,\r\n  getYear,\r\n  getCurrentYear,\r\n  monthIndex,\r\n\r\n  getCaption: getC,\r\n  getValue: getV,\r\n  isInArrStr,\r\n\r\n  roundBy,\r\n  numberFormat: formatAllNumber,\r\n\r\n  isNumberOrNull: v => _isNumber(v) || v === null,\r\n\r\n  isYNumber: _fIsNumber('y'),\r\n  toFloatOrEmpty: _fToFloatOr(''),\r\n\r\n  crValueMoving: ({\r\n    bNowValue=Big('0.0'),\r\n    bPrevValue=Big('0.0'),\r\n    dfR\r\n  }) => crValueMoving({\r\n    nowValue: bNowValue,\r\n    prevValue: bPrevValue,\r\n    fnFormat: formatAllNumber,\r\n    dfR\r\n  }),\r\n\r\n\r\n  valueMoving(data, dfR){\r\n    if (!_isArr(data)) {\r\n      return {\r\n        date: data,\r\n        direction: Direction.EMPTY\r\n      };\r\n    }\r\n\r\n    const len = data.length\r\n    , _pointNow = data[len-1] || [ EMPTY, 0 ]\r\n    , bNowValue = _crBigValueFrom(_pointNow)\r\n    , _pointPrev = data[len-2] || _pointNow\r\n    , bPrevValue = _crBigValueFrom(_pointPrev)\r\n    , date = _crDmyFrom(_pointNow)\r\n    , dateTo = _crDmyFrom(_pointPrev);\r\n\r\n      return  {\r\n        ...AdapterFn.crValueMoving({ bNowValue, bPrevValue, dfR }),\r\n        valueTo: formatAllNumber(bPrevValue),\r\n        date, dateTo\r\n      };\r\n  },\r\n\r\n  crValueConf: data => {\r\n    const _p = data[data.length-1];\r\n    return {\r\n      x: _getDate(_p),\r\n      y: _getValue(_p)\r\n    };\r\n  },\r\n\r\n  joinBy: (delimeter, ...restItems) => restItems\r\n   .filter(Boolean)\r\n   .join(delimeter),\r\n\r\n  toUpperCaseFirst,\r\n\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero,\r\n\r\n  mapIf: (arr, crItem, is) => {\r\n    const _items = [];\r\n    (arr || []).forEach(v => {\r\n      if (is(v)) {\r\n        _items.push(crItem(v))\r\n      }\r\n    })\r\n    return _items;\r\n  },\r\n\r\n  crZhConfig: ({\r\n    _itemKey,\r\n    itemCaption,\r\n    dataSource\r\n  }) => ({\r\n    id: _itemKey, key: _itemKey,\r\n    itemCaption,\r\n    dataSource\r\n  })\r\n};\r\n\r\nexport default AdapterFn\r\n"],"file":"AdapterFn.js"}