{"version":3,"sources":["../../src/adapters/AdapterFn.js"],"names":["dt","ut","getC","getV","formatAllNumber","findMinY","seriaFn","findMaxY","ymdToUTC","ymdtToUTC","ymdhmsToUTC","mlsToDmy","getFromDate","EMPTY","HP_MONTH","january","february","march","april","may","june","july","august","september","october","november","december","ITEM_CONF_PROP_NAMES","_isNaN","Number","isNaN","_isArr","Array","isArray","_fIsNumber","pn","p","isFinite","_compareArrByIndex","index","arrA","arrB","_compareByTwoProp","propName1","propName2","a","b","_getDate","point","x","_getValue","y","_fToFloatOr","dfValue","str","_v","parseFloat","AdapterFn","getCaption","getValue","volumeColumnPoint","date","open","close","volume","option","_color","C","GREEN","RED","GRAY","Object","assign","color","_open","_close","athPoint","prevClose","_bDelta","minus","_bPercent","times","div","abs","toFixed","gt","gte","WHITE","legendItem","name","is","isVisible","stockSeriesLegend","S_STOCK_CLOSE","S_HIGH","S_LOW","S_OPEN","roundBy","mathFn","numberFormat","isNumberOrNull","v","isYNumber","toFloatOrNull","toFloatOrEmpty","compareByDate","compareByY","compareByValue","compareByValueId","crValueMoving","bNowValue","bPrevValue","dfR","nowValue","prevValue","Direction","fnFormat","valueMoving","data","direction","len","length","_pointNow","_nowValue","_pointPrev","_prevValue","_nowDate","_prevDate","dateTo","valueTo","crId","Date","now","toString","Math","random","substring","toUpperCase","crItemConf","_itemConf","_value","forEach","k","crValueConf","_p","crSeria","adapter","json","type","toConfig","config","_seria","series","minY","joinBy","delimeter","restItems","filter","Boolean","join","toUpperCaseFirst","monthIndex","String","toLowerCase","crError","errCaption","message","crItemLink","caption","itemUrl"],"mappings":"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","sourcesContent":["\r\nimport Big from 'big.js'\r\n\r\nimport ut from '../utils/ut'\r\n\r\nimport mathFn from '../math/mathFn'\r\nimport seriaFn from '../math/seriaFn'\r\n\r\nimport { Direction } from '../constants/Type'\r\nimport C from '../constants/Color'\r\n\r\nconst { dt, getC, getV, formatAllNumber } = ut;\r\nconst { findMinY, findMaxY } = seriaFn;\r\n\r\nconst {\r\n  ymdToUTC,\r\n  ymdtToUTC,\r\n  ymdhmsToUTC,\r\n  mlsToDmy,\r\n  getFromDate\r\n} = dt;\r\n\r\nconst EMPTY = '';\r\nconst HP_MONTH = {\r\n  january: 0, february: 1,\r\n  march: 2, april: 3, may: 4,\r\n  june: 5, july: 6, august: 7,\r\n  september: 8, october: 9, november: 10,\r\n  december: 11\r\n};\r\n\r\nconst ITEM_CONF_PROP_NAMES = [\r\n 'url', 'loadId',\r\n 'title', 'subtitle', 'itemCaption',\r\n 'seriaType'\r\n];\r\n\r\nconst _isNaN = Number && Number.isNaN || isNaN;\r\nconst _isArr = Array.isArray;\r\nconst _fIsNumber = (pn) => (p) => {\r\n  return typeof p[pn] === 'number'\r\n    && isFinite(p[pn]);\r\n}\r\n\r\nconst _compareArrByIndex = index => (arrA, arrB) => {\r\n  if (arrA[index] < arrB[index]) return -1;\r\n  else if (arrA[index] === arrB[index]) return 0;\r\n  else return 1;\r\n}\r\nconst _compareByTwoProp = (propName1, propName2) => (a, b) => {\r\n  if (a[propName1] < b[propName1]) return -1;\r\n  else if (a[propName1] > b[propName1]) return 1;\r\n  else if (a[propName2] < b[propName2]) return -1;\r\n  else if (a[propName2] > a[propName2]) return 1;\r\n  else return 0;\r\n}\r\n\r\nconst _getDate = point =>_isArr(point)\r\n  ? point[0]\r\n  : point.x;\r\n\r\nconst _getValue = (point) => {\r\n  if (_isArr(point)){\r\n    return point[1] != null\r\n       ? point[1]\r\n       : '0.0';\r\n  } else {\r\n    return point\r\n      && point.y != null\r\n      && !_isNaN(point.y)\r\n        ? point.y\r\n        : '0.0';\r\n  }\r\n}\r\n\r\nconst _fToFloatOr = dfValue => str => {\r\n  const _v = parseFloat(str);\r\n  return _isNaN(_v) ? dfValue : _v;\r\n};\r\n\r\nconst AdapterFn = {  \r\n  ymdToUTC,\r\n  ymdtToUTC,\r\n  ymdhmsToUTC,\r\n  getFromDate,\r\n\r\n  getCaption: getC,\r\n  getValue: getV,\r\n\r\n  volumeColumnPoint({ date, open, close, volume, option }) {\r\n    let _color;\r\n    if (open && close > open) {\r\n      _color = C.GREEN\r\n    } else if (open && close<open) {\r\n      _color = C.RED\r\n    } else {\r\n      _color = C.GRAY\r\n    }\r\n\r\n    return Object.assign({\r\n      x: date, y: volume, color: _color,\r\n      _open: open, _close: close\r\n    }, option);\r\n  },\r\n\r\n  athPoint({ date, prevClose, open }) {\r\n    const _bDelta = (open && prevClose)\r\n             ? Big(prevClose).minus(open)\r\n             : Big('0.0')\r\n        , _bPercent = (prevClose)\r\n             ? _bDelta.times(100).div(prevClose).abs().toFixed(2)\r\n             : Big('0.0');\r\n\r\n    let _color;\r\n    if (_bDelta.gt(0.0)){\r\n      _color = C.RED;\r\n    }\r\n    else if (!_bDelta.gte(0.0)){\r\n      _color = C.GREEN;\r\n    } else {\r\n      _color = (open) ? C.GRAY : C.WHITE;\r\n    }\r\n\r\n    return {\r\n      x : date,\r\n      y : parseFloat(_bPercent),\r\n      close : prevClose,\r\n      open : open ? open : 'Unknown',\r\n      color : _color\r\n    };\r\n  },\r\n\r\n  legendItem: (index, color, name, is=false) => ({\r\n    index, color, name,\r\n    isVisible: is\r\n  }),\r\n\r\n  stockSeriesLegend(){\r\n    return [\r\n      AdapterFn.legendItem(0, C.S_STOCK_CLOSE, 'Close', true),\r\n      AdapterFn.legendItem(1, C.S_HIGH, 'High'),\r\n      AdapterFn.legendItem(2, C.S_LOW, 'Low'),\r\n      AdapterFn.legendItem(3, C.S_OPEN, 'Open')\r\n    ];\r\n  },\r\n\r\n  roundBy: mathFn.roundBy,\r\n  numberFormat: formatAllNumber,\r\n\r\n  isNumberOrNull: v => (typeof v === 'number' && !isNaN(v))\r\n     || v === null\r\n  ,\r\n  isYNumber: _fIsNumber('y'),\r\n  toFloatOrNull: _fToFloatOr(null),\r\n  toFloatOrEmpty: _fToFloatOr(''),\r\n\r\n  compareByDate: _compareArrByIndex(0),\r\n  compareByY: _compareArrByIndex('y'),\r\n  compareByValue: _compareArrByIndex('value'),\r\n  compareByValueId: _compareByTwoProp('value', 'id'),\r\n\r\n  crValueMoving: ({\r\n    bNowValue=Big('0.0'),\r\n    bPrevValue=Big('0.0'),\r\n    dfR\r\n  }) => mathFn.crValueMoving({\r\n    nowValue: bNowValue,\r\n    prevValue: bPrevValue,\r\n    Direction: Direction,\r\n    fnFormat: formatAllNumber,\r\n    dfR: dfR\r\n  }),\r\n\r\n\r\n  valueMoving(data, dfR){\r\n    if (!_isArr(data)) {\r\n      return { date: data, direction: 'empty' };\r\n    }\r\n\r\n    const len = data.length\r\n          , _pointNow = len>0 && data[len-1]\r\n               ? data[len-1]\r\n               : [ EMPTY, 0 ]\r\n          , _nowValue = _getValue(_pointNow)\r\n          , bNowValue = Big(_nowValue)\r\n          , _pointPrev = len>1 && data[len-2]\r\n              ? data[len-2]\r\n              : _pointNow\r\n          , _prevValue = _getValue(_pointPrev)\r\n          , bPrevValue = Big(_prevValue)\r\n          , _nowDate = _getDate(_pointNow)\r\n          , date = len>0\r\n               ? mlsToDmy(_nowDate)\r\n               : EMPTY\r\n          , _prevDate = _getDate(_pointPrev)\r\n          , dateTo = len>1 && _prevDate\r\n               ? mlsToDmy(_prevDate)\r\n               : EMPTY;\r\n\r\n      return  {\r\n        ...AdapterFn.crValueMoving({ bNowValue, bPrevValue, dfR }),\r\n        valueTo: AdapterFn.numberFormat(bPrevValue),\r\n        date, dateTo\r\n      };\r\n  },\r\n\r\n  crId: () => {\r\n    return (\r\n        Date.now().toString(36) +\r\n        Math.random().toString(36).substring(2, 9)\r\n      )\r\n      .toUpperCase();\r\n  },\r\n\r\n  crItemConf: (option) => {\r\n    const _itemConf = {};\r\n    let _value;\r\n    ITEM_CONF_PROP_NAMES.forEach(k => {\r\n      _value = option[k]\r\n      if (_value != null) {\r\n        _itemConf[k] = _value\r\n      }\r\n     })\r\n     return _itemConf;\r\n  },\r\n\r\n  crValueConf: data => {\r\n    const _p = data[data.length-1];\r\n    return {\r\n      y: _getValue(_p),\r\n      x: _getDate(_p)\r\n    };\r\n  },\r\n\r\n  crSeria: ({ adapter, json, option, type }) => {\r\n    const { config } = adapter.toConfig(json, option)\r\n    , _seria = config.series[0];\r\n    _seria.minY = findMinY(_seria.data)\r\n    if (type) {\r\n      _seria.type = type\r\n    }\r\n    return _seria;\r\n  },\r\n\r\n  joinBy: (delimeter, ...restItems) => restItems\r\n   .filter(Boolean)\r\n   .join(delimeter),\r\n\r\n  toUpperCaseFirst: (str) => typeof str === 'string'\r\n    && str.length > 0\r\n      ? str[0].toUpperCase() + str.substring(1)\r\n      : EMPTY\r\n  ,\r\n\r\n  monthIndex: str => HP_MONTH[String(str).toLowerCase()]\r\n    || -1,\r\n\r\n  findMinY,\r\n  findMaxY,\r\n\r\n  crError: (errCaption='', message='') => ({\r\n    errCaption,\r\n    message\r\n  }),\r\n  crItemLink: (caption, itemUrl) => `<p>\r\n    <a href=\"${itemUrl}\" style=\"padding-top: 4px;\">${caption}</a>\r\n  </p>`\r\n};\r\n\r\nexport default AdapterFn\r\n"],"file":"AdapterFn.js"}