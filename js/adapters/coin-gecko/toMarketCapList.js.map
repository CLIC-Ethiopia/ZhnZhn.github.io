{"version":3,"sources":["../../../src/adapters/coin-gecko/toMarketCapList.js"],"names":["crPageConfig","fnAdapter","_crPriceChangeItem","name","pnSuffix","options","pn","toN","isR","_crStyleItem","style","fontWeight","_headers","_getTableHeaders","textAlign","isHide","textTransform","isF","_toDate","rowDate","replace","split","_transformDate","json","map","item","last_updated","_crDataSource","rows","toMarketCapList","crKey","option","key","join","toConfig","title","_json","headers","config","id","dataSource"],"mappings":"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","sourcesContent":["import {\r\n  crTableRows,\r\n  crTableConfig\r\n} from '../toTableFn';\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst { crPageConfig } = fnAdapter;\r\n\r\nconst _crPriceChangeItem = (name, pnSuffix, options) => ({\r\n  name,\r\n  pn: `price_change_percentage_${pnSuffix}`,\r\n  toN: [3],\r\n  isR: true,\r\n  ...options\r\n});\r\nconst _crStyleItem = (name, pn, options) => ({\r\n  name, pn,\r\n  toN: [],\r\n  style: {\r\n    fontWeight: 'bold'\r\n  },\r\n  ...options\r\n});\r\n\r\nlet _headers;\r\nconst _getTableHeaders = () => _headers\r\n  || (_headers = [{\r\n    name: 'Rank',\r\n    pn: 'market_cap_rank',\r\n    toN: [],\r\n    style: { textAlign: 'center' }\r\n  },{\r\n    name: 'Name',\r\n    pn: 'name',\r\n  },{\r\n    isHide: true,\r\n    name: 'Coin',\r\n    pn: 'symbol',\r\n    style: {\r\n      textTransform: 'uppercase',\r\n      fontWeight: 'bold'\r\n    }\r\n  },\r\n  _crPriceChangeItem('1h %', '1h_in_currency'),\r\n  _crPriceChangeItem('24h %', '24h'),\r\n  _crPriceChangeItem('7d %', '7d_in_currency'),\r\n  _crPriceChangeItem('30d %', '30d_in_currency', {isHide: true}),\r\n  _crPriceChangeItem('1y %', '1y_in_currency', {isHide: true}),\r\n  _crStyleItem('Price', 'current_price'),\r\n  _crStyleItem('MarketCap', 'market_cap', {isF: true})\r\n  ,{\r\n    isHide: true,\r\n    name: 'Updated UTC',\r\n    pn: 'last_updated'\r\n  }\r\n]);\r\n\r\nconst _toDate = rowDate => (rowDate || '')\r\n  .replace('T', ' ')\r\n  .split('.')[0];\r\n\r\nconst _transformDate = json => json\r\n .map(item => {\r\n   item.last_updated = _toDate(item.last_updated)\r\n   return item;\r\n });\r\n\r\n\r\nconst _crDataSource = (rows) => {\r\n  return `CoinGecko ${rows[0].last_updated} UTC`;\r\n};\r\n\r\nconst toMarketCapList = {\r\n  crKey(option){\r\n    option.key = crPageConfig(option).join('_');\r\n    return option.key;\r\n  },\r\n\r\n  toConfig(json, option){\r\n    const { key, title } = option\r\n    , _json = _transformDate(json)\r\n    , headers = _getTableHeaders()\r\n    , rows = crTableRows(headers, _json)\r\n    , config = crTableConfig({\r\n      id: key, title,\r\n      headers, rows,\r\n      dataSource: _crDataSource(rows)\r\n    });\r\n    return { config };\r\n  }\r\n}\r\n\r\nexport default toMarketCapList\r\n"],"file":"toMarketCapList.js"}