{"version":3,"sources":["../../../src/adapters/coin-gecko/toList.js"],"names":["numberFormat","AdapterFn","crRows","toTableFn","crPageConfig","fnAdapter","HEADERS","name","pn","isToN","style","textAlign","isHide","textTransform","fontWeight","isToFixed","toFixedBy","isR","isF","_toDate","rowDate","_rowDate","replace","split","_transformDate","json","map","item","last_updated","_crDataSource","rows","toList","crKey","option","key","join","toConfig","_id","_json","_rows","_dataSource","config","id","title","headers","tableFn","dataSource","zhCompType","zhConfig"],"mappings":"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","sourcesContent":["import AdapterFn from '../AdapterFn'\r\nimport toTableFn from '../toTableFn'\r\n\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst { numberFormat } = AdapterFn;\r\nconst { crRows } = toTableFn;\r\n\r\nconst { crPageConfig } = fnAdapter;\r\n\r\nconst HEADERS = [{\r\n  name: 'Rank',\r\n  pn: 'market_cap_rank',\r\n  isToN: true,\r\n  style: { textAlign: 'center' }\r\n},{\r\n  name: 'Name',\r\n  pn: 'name',\r\n},{\r\n  isHide: true,\r\n  name: 'Coin',\r\n  pn: 'symbol',\r\n  style: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 'bold'\r\n  }\r\n},{\r\n  name: '1h %',\r\n  pn: 'price_change_percentage_1h_in_currency',\r\n  isToN: true,\r\n  isToFixed: true,\r\n  toFixedBy: 3,\r\n  isR: true\r\n},{\r\n  name: '24h %',\r\n  pn: 'price_change_percentage_24h',\r\n  isToN: true,\r\n  isToFixed: true,\r\n  toFixedBy: 3,\r\n  isR: true\r\n},{\r\n  name: '7d %',\r\n  pn: 'price_change_percentage_7d_in_currency',\r\n  isToN: true,\r\n  isToFixed: true,\r\n  toFixedBy: 3,\r\n  isR: true\r\n},{\r\n  name: 'Price',\r\n  pn: 'current_price',\r\n  isToN: true,\r\n  style: {\r\n    fontWeight: 'bold'\r\n  }\r\n},{\r\n  name: 'MarketCap',\r\n  pn: 'market_cap',\r\n  isToN: true,\r\n  isF: true,\r\n  style: {\r\n    fontWeight: 'bold'\r\n  }\r\n},{\r\n  isHide: true,\r\n  name: 'Updated UTC',\r\n  pn: 'last_updated'\r\n}\r\n];\r\n\r\nconst _toDate = (rowDate) => {\r\n  const _rowDate = rowDate || ''\r\n  return _rowDate.replace('T', ' ').split('.')[0];\r\n}\r\n\r\nconst _transformDate = json => {\r\n  return json.map(item => {\r\n    item.last_updated = _toDate(item.last_updated)\r\n    return item;\r\n  })\r\n};\r\n\r\nconst _crDataSource = (rows) => {\r\n  return `CoinGecko ${rows[0].last_updated} UTC`;\r\n};\r\n\r\nconst toList = {\r\n  crKey(option){\r\n    option.key = crPageConfig(option).join('_');\r\n    return option.key;\r\n  },\r\n\r\n  toConfig(json, option){\r\n    const _id = option.key\r\n    , _json = _transformDate(json)\r\n    , _rows = crRows(HEADERS, _json)\r\n    , _dataSource = _crDataSource(_rows)\r\n    , config = {\r\n      id: _id,\r\n      title: option.title,\r\n      headers: HEADERS,\r\n      tableFn: {\r\n        numberFormat\r\n        //valueToHref\r\n      },\r\n      rows: _rows,\r\n      dataSource: _dataSource,\r\n      zhCompType: 'TABLE',\r\n      zhConfig: {\r\n        id: _id, key: _id\r\n      }\r\n    };\r\n    return { config };\r\n  }  \r\n}\r\n\r\nexport default toList\r\n"],"file":"toList.js"}