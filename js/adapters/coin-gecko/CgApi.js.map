{"version":3,"sources":["../../../src/adapters/coin-gecko/CgApi.js"],"names":["C","API_URL","PAGE_URL","DF_PAGE","DF_PER_PAGE","DF_CURRENCY","_assign","Object","assign","_isArr","Array","isArray","crPageConfig","fnAdapter","_crDays","fromDate","_d","dt","getDaysFromYmd","_assignDf","option","items","it1","it2","c","value","v","s","_currency","_vs","_days","itemCaption","title","subtitle","_nativeUrl","_itemUrl","_assignMcl","page","perPage","currency","_rAssign","DF","MCL","CgApi","getRequestUrl","dfSubId","_assignTo","checkResponse","json","length","prices","errCaption"],"mappings":"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","sourcesContent":["import dt from '../../utils/DateUtils'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst C = {\r\n  API_URL: 'https://api.coingecko.com/api/v3',\r\n  PAGE_URL: 'https://www.coingecko.com/en/coins',\r\n  DF_PAGE: 1,\r\n  DF_PER_PAGE: 10,\r\n  DF_CURRENCY: 'USD'\r\n};\r\n\r\nconst _assign = Object.assign;\r\nconst _isArr = Array.isArray;\r\n\r\nconst { crPageConfig } = fnAdapter\r\n\r\nconst _crDays = ({ fromDate }) => {\r\n  const _d = dt.getDaysFromYmd(fromDate);\r\n  return _d > 90 ? _d : 91;\r\n};\r\n\r\nconst _assignDf = option => {\r\n  const { items } = option\r\n  , [ it1, it2 ] = items\r\n  , { c, v:value, s } = it1\r\n  , { v:_currency } = it2\r\n  , _vs = `${s}/${_currency}`\r\n  , _days = _crDays(option);\r\n\r\n  _assign(option, {\r\n    itemCaption: _vs,\r\n    title: c,\r\n    subtitle: 'Values on 00:00 GMT',\r\n    _currency: _currency,\r\n    _nativeUrl: `${C.PAGE_URL}/${value}`,\r\n    _itemUrl: `${C.API_URL}/coins/${value}/market_chart?vs_currency=${_currency}&days=${_days}`\r\n  })\r\n}\r\n\r\n\r\n\r\nconst _assignMcl = option => {\r\n  const [\r\n    page, perPage, currency\r\n  ] = crPageConfig(option);\r\n\r\n  _assign(option, {\r\n    title: `By Market Cap Page: ${page} (${perPage})`,\r\n    _itemUrl: `${C.API_URL}/coins/markets?order=market_cap_desc&page=${page}&per_page=${perPage}&vs_currency=${currency}&price_change_percentage=1h,7d`\r\n  })\r\n}\r\n\r\nconst _rAssign = {\r\n  DF: _assignDf,\r\n  MCL: _assignMcl\r\n}\r\n\r\nconst CgApi = {\r\n  getRequestUrl(option){\r\n    const { dfSubId } = option\r\n    , _assignTo = _rAssign[dfSubId] || _rAssign.DF;\r\n    _assignTo(option)\r\n    return option._itemUrl;\r\n  },\r\n  checkResponse(json, option){\r\n    if (option.dfSubId === 'MCL'\r\n        && _isArr(json)\r\n        && json.length > 1) {\r\n      return true;\r\n    }\r\n    if (json && _isArr(json.prices)) {\r\n      return true;\r\n    }\r\n    throw {\r\n      errCaption: \"Response Empty\",\r\n    };\r\n  }\r\n}\r\n\r\nexport default CgApi\r\n"],"file":"CgApi.js"}