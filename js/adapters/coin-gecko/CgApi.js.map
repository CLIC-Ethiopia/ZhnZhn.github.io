{"version":3,"sources":["../../../src/adapters/coin-gecko/CgApi.js"],"names":["API_URL","PAGE_URL","_assign","Object","assign","_isArr","Array","isArray","_crDays","fromDate","_d","_assignDf","option","items","it1","it2","c","v","value","s","_currency","_vs","_days","itemCaption","title","subtitle","_nativeUrl","_itemUrl","_assignMcl","page","perPage","currency","_assignEl","_rAssign","DF","MCL","EL","CgApi","getRequestUrl","dfSubId","_assignTo","checkResponse","json","length","prices"],"mappings":"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","sourcesContent":["import { getDaysFromYmd } from '../../utils/DateUtils';\r\nimport { crError, crPageConfig } from './fnAdapter';\r\n\r\nconst API_URL = 'https://api.coingecko.com/api/v3'\r\n, PAGE_URL = 'https://www.coingecko.com/en/coins'\r\n, _assign = Object.assign\r\n, _isArr = Array.isArray;\r\n\r\nconst _crDays = ({ fromDate }) => {\r\n  const _d = getDaysFromYmd(fromDate);\r\n  return _d > 90 ? _d : 91;\r\n};\r\n\r\nconst _assignDf = option => {\r\n  const { items } = option\r\n  , [ it1, it2 ] = items\r\n  , { c, v:value, s } = it1\r\n  , { v:_currency } = it2\r\n  , _vs = `${s}/${_currency}`\r\n  , _days = _crDays(option);\r\n\r\n  _assign(option, {\r\n    itemCaption: _vs,\r\n    title: c,\r\n    subtitle: 'Values on 00:00 GMT',\r\n    _currency: _currency,\r\n    _nativeUrl: `${PAGE_URL}/${value}`,\r\n    _itemUrl: `${API_URL}/coins/${value}/market_chart?vs_currency=${_currency}&days=${_days}`\r\n  })\r\n}\r\n\r\nconst _assignMcl = option => {\r\n  const [\r\n    page,\r\n    perPage,\r\n    currency\r\n  ] = crPageConfig(option);\r\n\r\n  _assign(option, {\r\n    title: `By Market Cap Page: ${page} (${perPage})`,\r\n    _itemUrl: `${API_URL}/coins/markets?order=market_cap_desc&page=${page}&per_page=${perPage}&vs_currency=${currency}&price_change_percentage=1h,7d,30d,1y`\r\n  })\r\n}\r\n\r\nconst _assignEl = option => {\r\n  const [\r\n    page, perPage\r\n  ] = crPageConfig(option);\r\n\r\n  _assign(option, {\r\n    title: `By Exchages Page: ${page} (${perPage})`,\r\n    _itemUrl: `${API_URL}/exchanges?page=${page}&per_page=${perPage}`\r\n  })\r\n}\r\n\r\nconst _rAssign = {\r\n  DF: _assignDf,\r\n  MCL: _assignMcl,\r\n  EL: _assignEl\r\n}\r\n\r\nconst CgApi = {\r\n  getRequestUrl(option){\r\n    const { dfSubId } = option\r\n    , _assignTo = _rAssign[dfSubId] || _rAssign.DF;\r\n    _assignTo(option)\r\n    return option._itemUrl;\r\n  },\r\n  checkResponse(json, option){\r\n    const { dfSubId } = option\r\n    if ( (dfSubId === 'MCL' || dfSubId === 'EL')\r\n        && _isArr(json)\r\n        && json.length > 1) {\r\n      return true;\r\n    }\r\n    if (json && _isArr(json.prices)) {\r\n      return true;\r\n    }\r\n    throw crError();\r\n  }\r\n}\r\n\r\nexport default CgApi\r\n"],"file":"CgApi.js"}