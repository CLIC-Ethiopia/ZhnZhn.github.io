{"version":3,"sources":["../../src/adapters/QuandlToStackedArea.js"],"names":["fCreateStackedAreaConfig","json","option","chartType","seriaType","stacking","STACKED_AREA_PERCENT","PERCENT","config","fBaseStackAreaConfig","sliceItems","items100","value","zhSeriaId","jsonData","dataset","data","bNowTotal","bPrevTotal","series","categories","xAxis","chart","height","STACKED_HEIGHT","title","setTitleToConfig","valueMoving","createValueMoving","bNowValue","bPrevValue","date","length","zhConfig","createZhConfig","id","isWithoutAdd","isWithoutIndicator","info","createDatasetInfo"],"mappings":";;;;;;;AACA;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;;;AAEO,IAAMA,8DAA2B,SAA3BA,wBAA2B,CAASC,IAAT,EAAeC,MAAf,EAAsB;AACtD,MAAYC,SAAZ,GAA0BD,MAA1B,CAAEE,SAAF;AAAA,MACAC,QADA,GACYF,cAAc,gBAAUG,oBAAzB,GAAiD,SAAjD,GAA6D,QADxE;AAAA,MAEAC,OAFA,GAEYF,aAAa,SAAf,GAA6B,UAA7B,GAA0C,EAFpD;AAAA,MAGAG,MAHA,GAGS,sBAAYC,oBAAZ,CAAiC,EAAEJ,kBAAF,EAAjC,CAHT;AAAA,2BAIqCH,MAJrC,CAICQ,UAJD;AAAA,MAIYC,QAJZ,sCAIqB,EAJrB;AAAA,sBAIqCT,MAJrC,CAIyBU,KAJzB;AAAA,MAIyBA,KAJzB,iCAI+B,EAJ/B;AAAA,MAKAC,SALA,GAKeD,KALf,SAKwBT,SALxB;AAAA,MAMAW,QANA,GAMYb,KAAKc,OAAL,IAAgBd,KAAKc,OAAL,CAAaC,IAA9B,GAAsCf,KAAKc,OAAL,CAAaC,IAAnD,GAA0D,EANrE;AAAA,8BAQO,sCAAsB,EAAEF,kBAAF,EAAYH,kBAAZ,EAAsBE,oBAAtB,EAAiCV,oBAAjC,EAA4CE,kBAA5C,EAAtB,CARP;AAAA,MAOEY,SAPF,yBAOEA,SAPF;AAAA,MAOaC,UAPb,yBAOaA,UAPb;AAAA,MAOyBC,MAPzB,yBAOyBA,MAPzB;AAAA,MAOiCC,UAPjC,yBAOiCA,UAPjC;;;AAUNZ,SAAOW,MAAP,GAAgBA,MAAhB;AACAX,SAAOa,KAAP,CAAaD,UAAb,GAA0BA,UAA1B;AACAZ,SAAOc,KAAP,CAAaC,MAAb,GAAsB,gBAAMC,cAA5B;;AAEAtB,SAAOuB,KAAP,QAAkBvB,OAAOuB,KAAzB,GAAiClB,OAAjC;AACA,qBAAUmB,gBAAV,CAA2BlB,MAA3B,EAAmCN,MAAnC;;AAEAM,SAAOmB,WAAP,GAAqB,mBAAUC,iBAAV,CAA4B;AAC/CC,eAAaZ,SADkC;AAE/Ca,gBAAaZ;AAFkC,GAA5B,CAArB;AAIAV,SAAOmB,WAAP,CAAmBI,IAAnB,GAA4BX,cAAcA,WAAWY,MAAX,GAAkB,CAAlC,GACrBZ,WAAWA,WAAWY,MAAX,GAAkB,CAA7B,CADqB,GAErB,EAFL;;AAIAxB,SAAOyB,QAAP,GAAkB,mBAAUC,cAAV,CAAyBhC,MAAzB,CAAlB;AACAM,SAAOyB,QAAP,CAAgBE,EAAhB,GAAqBtB,SAArB;AACAL,SAAOyB,QAAP,CAAgBG,YAAhB,GAA+B,IAA/B;AACA5B,SAAOyB,QAAP,CAAgBI,kBAAhB,GAAqC,IAArC;AACA7B,SAAO8B,IAAP,GAAc,mBAAUC,iBAAV,CAA4BtC,IAA5B,CAAd;;AAEA,SAAO,EAACO,cAAD,EAAP;AACD,CAjCM","file":"QuandlToStackedArea.js","sourcesContent":["\r\nimport {ChartType} from '../constants/Type';\r\nimport Chart from '../charts/Chart';\r\nimport ChartConfig from '../charts/ChartConfig';\r\n\r\nimport { fnCreateStackedConfig  } from './StackedFn';\r\n\r\nimport QuandlFn2 from './QuandlFn2';\r\n\r\nexport const fCreateStackedAreaConfig = function(json, option){\r\n  const { seriaType:chartType } = option\r\n      , stacking = (chartType === ChartType.STACKED_AREA_PERCENT) ? 'percent' : 'normal'\r\n      , PERCENT = ( stacking === 'percent' ) ? ':PERCENT' : ''\r\n      , config = ChartConfig.fBaseStackAreaConfig({ stacking })\r\n      , {sliceItems:items100=[], value=''} = option\r\n      , zhSeriaId = `${value}_${chartType}`\r\n      , jsonData = (json.dataset && json.dataset.data) ? json.dataset.data : []\r\n      , { bNowTotal, bPrevTotal, series, categories }\r\n             = fnCreateStackedConfig({ jsonData, items100, zhSeriaId, chartType, stacking })\r\n\r\n  config.series = series;\r\n  config.xAxis.categories = categories;\r\n  config.chart.height = Chart.STACKED_HEIGHT;\r\n\r\n  option.title = `${option.title}${PERCENT}`\r\n  QuandlFn2.setTitleToConfig(config, option);\r\n\r\n  config.valueMoving = QuandlFn2.createValueMoving({\r\n    bNowValue  : bNowTotal,\r\n    bPrevValue : bPrevTotal\r\n  });\r\n  config.valueMoving.date = ( categories && categories.length>1 )\r\n     ? categories[categories.length-1]\r\n     : '' ;\r\n\r\n  config.zhConfig = QuandlFn2.createZhConfig(option);\r\n  config.zhConfig.id = zhSeriaId;\r\n  config.zhConfig.isWithoutAdd = true;\r\n  config.zhConfig.isWithoutIndicator = true;\r\n  config.info = QuandlFn2.createDatasetInfo(json);\r\n\r\n  return {config}\r\n}\r\n"]}