{"version":3,"sources":["../../../src/adapters/stat-norway/toArea.js"],"names":["_toUTC","toUTC","crDsValuesTimes","crChartOption","_toData","values","times","_values","Array","isArray","data","map","time","i","x","y","value","_crSplineSeria","option","Object","assign","fSeries","type","visible","marker","symbol","zhSeriaId","crId","toArea","crConfig","json","title","subtitle","ds","seria","config","initBaseArea","add","spacingTop","addCaption","clearSeries","addSeries","zhFnAddSeriesSma","zhFnRemoveSeries","toConfig"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,iBAAOC,KAAtB;IAEEC,e,uBAAAA,e;IAAiBC,a,uBAAAA,a;;;AAGnB,IAAMC,UAAU,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAoB;AAClC,MAAMC,UAAUC,MAAMC,OAAN,CAAcJ,MAAd,IACLA,MADK,GAEL,CAAEA,MAAF,CAFX;AAGA,MAAMK,OAAOJ,MAAMK,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WAAc;AACnCC,SAAGd,OAAOY,IAAP,CADgC;AAEnCG,SAAGR,QAAQM,CAAR,EAAWG;AAFqB,KAAd;AAAA,GAAV,CAAb;;AAKA,SAAON,IAAP;AACD,CAVD;;AAYA,IAAMO,iBAAiB,SAAjBA,cAAiB,CAACP,IAAD,EAAqB;AAAA,MAAdQ,MAAc,uEAAP,EAAO;;AAC1C,SAAOC,OAAOC,MAAP,CAAc,sBAAYC,OAAZ,EAAd,EAAqC;AACzCC,UAAM,QADmC;AAEzCC,aAAS,IAFgC;AAGzCb,UAAMA,IAHmC;AAIzCc,YAAQ;AACNC,cAAQ;AADF,KAJiC;AAOzCC,eAAW,oBAAUC,IAAV;AAP8B,GAArC,EAQJT,MARI,CAAP;AASD,CAVD;;AAaA,IAAMU,SAAS;AACbC,YAAU,kBAACC,IAAD,EAAOZ,MAAP,EAAkB;AAAA,wBACKA,MADL,CAClBa,KADkB;AAAA,QAClBA,KADkB,iCACZ,EADY;AAAA,QACRC,QADQ,GACKd,MADL,CACRc,QADQ;AAAA,2BAEE9B,gBAAgB4B,IAAhB,EAAsBZ,MAAtB,CAFF;AAAA,QAEpBe,EAFoB,oBAEpBA,EAFoB;AAAA,QAEhB5B,MAFgB,oBAEhBA,MAFgB;AAAA,QAERC,KAFQ,oBAERA,KAFQ;AAAA,QAGtBI,IAHsB,GAGfN,QAAQC,MAAR,EAAgBC,KAAhB,CAHe;AAAA,QAItB4B,KAJsB,GAIdjB,eAAeP,IAAf,EAAqBQ,MAArB,CAJc;AAAA,QAKtBiB,MALsB,GAKb,+BACPC,YADO,GAEPC,GAFO,CAEH,OAFG,EAEM,EAAEC,YAAY,EAAd,EAFN,EAGPC,UAHO,CAGIR,KAHJ,EAGWC,QAHX,EAIPQ,WAJO,GAKPC,SALO,CAKGP,KALH,EAMPG,GANO,4BAOHlC,cAAc8B,EAAd,EAAkBvB,IAAlB,EAAwBQ,MAAxB,CAPG;AAQNwB,oDARM;AASNC;AATM,QAWPC,QAXO,EALa;;AAkBvB,WAAOT,MAAP;AACH;AApBW,CAAf;;kBAuBeP,M","file":"toArea.js","sourcesContent":["\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\n\r\nimport { fnAddSeriesSma, fnRemoveSeries } from '../IndicatorSma'\r\n\r\nimport fnUtil from './fnUtil'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst _toUTC = fnUtil.toUTC;\r\nconst {\r\n  crDsValuesTimes, crChartOption\r\n} = fnAdapter;\r\n\r\nconst _toData = (values, times ) => {\r\n  const _values = Array.isArray(values)\r\n           ? values\r\n           : [ values ];\r\n  const data = times.map((time, i) => ({\r\n    x: _toUTC(time),\r\n    y: _values[i].value\r\n  }))\r\n\r\n  return data;\r\n}\r\n\r\nconst _crSplineSeria = (data, option={}) => {\r\n  return Object.assign(ChartConfig.fSeries(), {\r\n     type: 'spline',\r\n     visible: true,\r\n     data: data,\r\n     marker: {\r\n       symbol: 'circle'\r\n     },\r\n     zhSeriaId: fnAdapter.crId()\r\n  }, option);\r\n}\r\n\r\n\r\nconst toArea = {\r\n  crConfig: (json, option) => {\r\n    const { title='', subtitle } = option\r\n      , { ds, values, times } = crDsValuesTimes(json, option)\r\n      , data = _toData(values, times)\r\n      , seria = _crSplineSeria(data, option)\r\n      , config = ConfigBuilder()\r\n         .initBaseArea()\r\n         .add('chart', { spacingTop: 25 })\r\n         .addCaption(title, subtitle)\r\n         .clearSeries()\r\n         .addSeries(seria)\r\n         .add({\r\n           ...crChartOption(ds, data, option),\r\n           zhFnAddSeriesSma: fnAddSeriesSma,\r\n           zhFnRemoveSeries: fnRemoveSeries\r\n         })\r\n         .toConfig()\r\n       \r\n       return config;\r\n   }\r\n}\r\n\r\nexport default toArea\r\n"]}