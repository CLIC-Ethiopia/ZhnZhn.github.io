{"version":3,"sources":["../../../src/adapters/stat-norway/fnAdapter.js"],"names":["isYNumber","AdapterFn","numberFormat","crId","valueMoving","TITLE","NST","SWS","SEARCH","url","title","SFL","DF_SOURCE","_crSearchToken","label","_arr","toString","split","_crLink","token","_crToken","dfId","arr","id","pop","prefix","join","_crSearchLink","option","_token","browserType","_crDescr","updated","source","_date","replace","_elSearchLink","_crItemCaption","items","caption","_crAreaMapSlice","dfTSlice","mapSlice","forEach","item","slice","Object","assign","_getDimensionWithouTime","ds","_dim","Dimension","_getTimeDimension","timeId","_dimTimeId","times","fnAdapter","crValueMoving","crTitle","crDsValuesTimes","json","Dataset","values","Data","crTid","time","tidIds","length","crInfo","name","description","crZhConfig","dataSource","_itemKey","key","itemCaption","isWithoutAdd","isWithLegend","crChartOption","data","info","zhConfig"],"mappings":"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","sourcesContent":["import JSONstat from 'jsonstat';\r\n\r\nimport AdapterFn from '../AdapterFn';\r\n\r\nconst {\r\n  isYNumber, numberFormat, crId,\r\n  valueMoving  \r\n} = AdapterFn;\r\n\r\nconst TITLE = {\r\n  NST: 'Statisctics Norway: All Items',\r\n  SWS: 'Statisctics Sweden: All Items'\r\n};\r\n\r\nconst SEARCH = {\r\n  NST: {\r\n    url: 'https://www.ssb.no/en/sok?sok=',\r\n    title: 'Statistics Norway Search'\r\n  },\r\n  SWS: {\r\n    url: 'https://www.scb.se/en/finding-statistics/search/?query=',\r\n    title: 'Statistics Sweden Search'\r\n  },\r\n  SFL: {\r\n    url: 'http://pxnet2.stat.fi/PXWeb/pxweb/en/StatFin/',\r\n    title: \"Statistics Finland's PX-Web\"\r\n  }\r\n};\r\n\r\nconst DF_SOURCE = 'Unknown';\r\n\r\nconst _crSearchToken = (label) => {\r\n  const _arr = (label || '').toString().split(',');\r\n  return _arr[0] || '';\r\n};\r\n\r\nconst _crLink = (token, {url, title}) => `<a class=\"native-link\" href=\"${url}${token}\">${title}</a>`;\r\n\r\nconst _crToken = ({ dfId }) => {\r\n  const arr = (''+dfId).split('/')\r\n  , id = arr.pop()\r\n  , prefix = arr.join('__');\r\n  return prefix && id ? `StatFin__${prefix}/${id}` : '';\r\n}\r\n\r\nconst _crSearchLink = (label, option) => {\r\n  const  _token = _crSearchToken(label);\r\n  switch(option.browserType){\r\n    case 'NST': case 'NST_ALL':\r\n      return _crLink(_token, SEARCH.NST);\r\n    case 'SWS': case 'SWS_ALL':\r\n      return _crLink(_token, SEARCH.SWS);\r\n    case 'SFL':\r\n      return _crLink(_crToken(option), SEARCH.SFL);\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst _crDescr = ({ updated='', source=DF_SOURCE, label }, option) => {\r\n  const _date = updated\r\n    .replace('T', ' ')\r\n    .replace('Z', '')\r\n  , { dfId='' } = option\r\n  , _elSearchLink = _crSearchLink(label, option);\r\n\r\n  return `TableId: ${dfId}<BR/>${source}: ${_date}<BR/>${_elSearchLink}`;\r\n};\r\n\r\nconst _crItemCaption = (option) => {\r\n  const { items, dfId='id'} = option\r\n       , caption =  items[0]\r\n            ? items[0].caption\r\n            : 'All Items';\r\n  return `${dfId}_${caption}`;\r\n}\r\n\r\nconst _crAreaMapSlice = (option) => {\r\n  const { items, dfTSlice } = option\r\n      , mapSlice = {};\r\n  items.forEach(item => {\r\n    if (item.slice) {\r\n      Object.assign(mapSlice, item.slice)\r\n    }\r\n  })\r\n  return Object.assign(mapSlice, dfTSlice)\r\n};\r\n\r\n\r\nconst _getDimensionWithouTime = (ds) => {\r\n  const _dim = ds.Dimension(\"Year\")\r\n   || ds.Dimension(\"Vuosi\")\r\n   || ds.Dimension(\"VuosineljÃ¤nnes\")\r\n   || ds.Dimension(\"Month\");\r\n  return _dim && _dim.id\r\n    ? [_dim.id[0]]\r\n    : [\"2019\"];\r\n};\r\n\r\nconst _getTimeDimension = (ds, timeId) => {\r\n  const _dimTimeId = timeId && ds.Dimension(timeId)\r\n  , _dim = _dimTimeId || ds.Dimension(\"Tid\")\r\n  , times = _dim && _dim.id\r\n     || _getDimensionWithouTime(ds);\r\n\r\n  return times;\r\n}\r\n\r\nconst fnAdapter = {\r\n  isYNumber, numberFormat, crId,\r\n  crValueMoving: valueMoving,\r\n\r\n  crTitle: (option) => {\r\n    switch(option.browserType){\r\n      case 'NST':\r\n      case 'NST_ALL':\r\n        return TITLE.NST;\r\n      case 'SWS':\r\n      case 'SWS_ALL':\r\n        return TITLE.SWS;\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  crDsValuesTimes: (json, option) => {\r\n    const mapSlice = _crAreaMapSlice(option)\r\n        , ds = JSONstat(json).Dataset(0)\r\n        , values = ds.Data(mapSlice)\r\n        , times = _getTimeDimension(ds, option.timeId);\r\n    return { ds, values, times };\r\n  },\r\n\r\n  crTid: (time, ds) => {\r\n    if (time) {\r\n      return time;\r\n    }\r\n    const tidIds = _getTimeDimension(ds);\r\n    return tidIds[tidIds.length-1];\r\n  },\r\n\r\n  crInfo: (ds, option) => ({\r\n    name: ds.label || '',\r\n    description: _crDescr(ds, option)\r\n  }),\r\n\r\n  crZhConfig: (option) => {\r\n    const { dataSource, _itemKey } = option\r\n        , key = _itemKey || crId()\r\n        , itemCaption = _crItemCaption(option);\r\n    return {\r\n      id: key, key,\r\n      itemCaption,\r\n      isWithoutAdd: true,\r\n      isWithLegend: false,\r\n      dataSource\r\n    };\r\n  },\r\n\r\n  crChartOption: (ds, data, option) => ({\r\n    info: fnAdapter.crInfo(ds, option),\r\n    valueMoving: fnAdapter.crValueMoving(data),\r\n    zhConfig: fnAdapter.crZhConfig(option)\r\n  })\r\n}\r\n\r\nexport default fnAdapter\r\n"],"file":"fnAdapter.js"}