{"version":3,"sources":["../../../src/adapters/stat-norway/toYearly.js"],"names":["toYMD","fnUtil","crDsValuesTimes","fnAdapter","crInfo","crZhConfig","_toData","values","times","_values","Array","isArray","data","map","time","i","value","reverse","toYearly","crConfig","json","option","title","subtitle","ds","config","init","Yearly","toConfig","add","spacingTop","addCaption","isWithLegend"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;IAEQA,K,GAAUC,kB,CAAVD,K;IAENE,e,GAEEC,qB,CAFFD,e;IACAE,M,GACED,qB,CADFC,M;IAAQC,U,GACNF,qB,CADME,U;;AAGV,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcJ,MAAd,IACLA,MADK,GAEL,CAAEA,MAAF,CAFX;;AAGA,MAAMK,IAAI,GAAGJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WAAc,CACnCf,KAAK,CAACc,IAAD,CAD8B,EAEnCL,OAAO,CAACM,CAAD,CAAP,CAAWC,KAFwB,CAAd;AAAA,GAAV,CAAb;AAKA,SAAOJ,IAAI,CAACK,OAAL,EAAP;AACD,CAVD;;AAYA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAC,kBAACC,IAAD,EAAOC,MAAP,EAAiB;AAAA,wBACOA,MADP,CAChBC,KADgB;AAAA,QAChBA,KADgB,8BACV,EADU;AAAA,QACNC,QADM,GACOF,MADP,CACNE,QADM;AAAA,2BAEIrB,eAAe,CAACkB,IAAD,EAAOC,MAAP,CAFnB;AAAA,QAElBG,EAFkB,oBAElBA,EAFkB;AAAA,QAEdjB,MAFc,oBAEdA,MAFc;AAAA,QAENC,KAFM,oBAENA,KAFM;AAAA,QAGpBI,IAHoB,GAGbN,OAAO,CAACC,MAAD,EAASC,KAAT,CAHM;AAAA,QAIpBiB,MAJoB,GAIX,iCACPC,IADO,CACFC,qBAAOC,QAAP,CAAgBhB,IAAhB,EAAsBS,MAAtB,CADE,EAEPQ,GAFO,CAEH,OAFG,EAEM;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAFN,EAGPC,UAHO,CAGIT,KAHJ,EAGWC,QAHX,EAIPM,GAJO,CAIH,MAJG,EAIKzB,MAAM,CAACoB,EAAD,EAAKH,MAAL,CAJX,EAKPQ,GALO,CAKH,UALG,EAKSxB,UAAU,CAACgB,MAAD,CALnB,EAMPQ,GANO,CAMH,UANG,EAMS;AAAEG,MAAAA,YAAY,EAAE;AAAhB,KANT,EAOPJ,QAPO,EAJW;;AAarB,WAAOH,MAAP;AACJ;AAfc,CAAjB;eAkBeP,Q","sourcesContent":["\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\nimport Yearly from '../toYearly'\r\nimport fnAdapter from './fnAdapter'\r\nimport fnUtil from './fnUtil'\r\n\r\nconst { toYMD } = fnUtil;\r\nconst {\r\n  crDsValuesTimes,\r\n  crInfo, crZhConfig,\r\n} = fnAdapter\r\n\r\nconst _toData = (values, times) => {\r\n  const _values = Array.isArray(values)\r\n           ? values\r\n           : [ values ];\r\n  const data = times.map((time, i) => ([\r\n    toYMD(time),\r\n    _values[i].value\r\n  ]))\r\n\r\n  return data.reverse();\r\n};\r\n\r\nconst toYearly = {\r\n  crConfig:(json, option) =>{\r\n    const { title='', subtitle } = option\r\n      , { ds, values, times } = crDsValuesTimes(json, option)\r\n      , data = _toData(values, times)\r\n      , config = ConfigBuilder()\r\n         .init(Yearly.toConfig(data, option))\r\n         .add('chart', { spacingTop: 25 })\r\n         .addCaption(title, subtitle)\r\n         .add('info', crInfo(ds, option))\r\n         .add('zhConfig', crZhConfig(option))\r\n         .add('zhConfig', { isWithLegend: true })\r\n         .toConfig()\r\n\r\n       return config;\r\n  }\r\n};\r\n\r\nexport default toYearly\r\n"],"file":"toYearly.js"}