{"version":3,"sources":["../../../src/adapters/stat-norway/toYearly.js"],"names":["toYMD","crDsValuesTimes","crInfo","crZhConfig","_toData","values","times","_values","Array","isArray","data","map","time","i","value","reverse","toYearly","crConfig","json","option","title","subtitle","ds","config","init","toConfig","add","spacingTop","addCaption","isWithLegend"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,K,oBAAAA,K;IAENC,e,uBAAAA,e;IACAC,M,uBAAAA,M;IAAQC,U,uBAAAA,U;;;AAGV,IAAMC,UAAU,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,MAAMC,UAAUC,MAAMC,OAAN,CAAcJ,MAAd,IACLA,MADK,GAEL,CAAEA,MAAF,CAFX;AAGA,MAAMK,OAAOJ,MAAMK,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WAAc,CACnCb,MAAMY,IAAN,CADmC,EAEnCL,QAAQM,CAAR,EAAWC,KAFwB,CAAd;AAAA,GAAV,CAAb;;AAKA,SAAOJ,KAAKK,OAAL,EAAP;AACD,CAVD;;AAYA,IAAMC,WAAW;AACfC,YAAS,kBAACC,IAAD,EAAOC,MAAP,EAAiB;AAAA,wBACOA,MADP,CAChBC,KADgB;AAAA,QAChBA,KADgB,iCACV,EADU;AAAA,QACNC,QADM,GACOF,MADP,CACNE,QADM;AAAA,2BAEIpB,gBAAgBiB,IAAhB,EAAsBC,MAAtB,CAFJ;AAAA,QAElBG,EAFkB,oBAElBA,EAFkB;AAAA,QAEdjB,MAFc,oBAEdA,MAFc;AAAA,QAENC,KAFM,oBAENA,KAFM;AAAA,QAGpBI,IAHoB,GAGbN,QAAQC,MAAR,EAAgBC,KAAhB,CAHa;AAAA,QAIpBiB,MAJoB,GAIX,+BACPC,IADO,CACF,mBAAOC,QAAP,CAAgBf,IAAhB,EAAsBS,MAAtB,CADE,EAEPO,GAFO,CAEH,OAFG,EAEM,EAAEC,YAAY,EAAd,EAFN,EAGPC,UAHO,CAGIR,KAHJ,EAGWC,QAHX,EAIPK,GAJO,CAIH,MAJG,EAIKxB,OAAOoB,EAAP,EAAWH,MAAX,CAJL,EAKPO,GALO,CAKH,UALG,EAKSvB,WAAWgB,MAAX,CALT,EAMPO,GANO,CAMH,UANG,EAMS,EAAEG,cAAc,IAAhB,EANT,EAOPJ,QAPO,EAJW;;AAarB,WAAOF,MAAP;AACJ;AAfc,CAAjB;;kBAkBeP,Q","file":"toYearly.js","sourcesContent":["\r\nimport ConfigBuilder from '../../charts/ConfigBuilder'\r\nimport Yearly from '../toYearly'\r\nimport fnAdapter from './fnAdapter'\r\nimport fnUtil from './fnUtil'\r\n\r\nconst { toYMD } = fnUtil;\r\nconst {\r\n  crDsValuesTimes,\r\n  crInfo, crZhConfig,\r\n} = fnAdapter\r\n\r\nconst _toData = (values, times) => {\r\n  const _values = Array.isArray(values)\r\n           ? values\r\n           : [ values ];\r\n  const data = times.map((time, i) => ([\r\n    toYMD(time),\r\n    _values[i].value\r\n  ]))\r\n\r\n  return data.reverse();\r\n};\r\n\r\nconst toYearly = {\r\n  crConfig:(json, option) =>{\r\n    const { title='', subtitle } = option\r\n      , { ds, values, times } = crDsValuesTimes(json, option)\r\n      , data = _toData(values, times)\r\n      , config = ConfigBuilder()\r\n         .init(Yearly.toConfig(data, option))\r\n         .add('chart', { spacingTop: 25 })\r\n         .addCaption(title, subtitle)\r\n         .add('info', crInfo(ds, option))\r\n         .add('zhConfig', crZhConfig(option))\r\n         .add('zhConfig', { isWithLegend: true })\r\n         .toConfig()\r\n\r\n       return config;\r\n  }\r\n};\r\n\r\nexport default toYearly\r\n"]}