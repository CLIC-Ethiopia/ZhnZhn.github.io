{"version":3,"sources":["../../../src/adapters/stat-norway/fnUtil.js"],"names":["fnUtil","toUTC","str","indexOf","arrDate","split","_month","parseInt","_day","Date","UTC","toYMD","ms","d","getUTCFullYear","getUTCMonth","slice","getUTCDate"],"mappings":";;;;;;AACA,IAAMA,SAAS;AACbC,SAAO,eAACC,GAAD,EAAS;AACZ,QAAIA,IAAIC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAC3B,UAAMC,UAAUF,IAAIG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,SAASC,SAASH,QAAQ,CAAR,CAAT,EAAqB,EAArB,IAAyB,CADxC;AAAA,UAEMI,OAAQF,WAAW,CAAZ,GAAiB,EAAjB,GAAsB,EAFnC;;AAIA,aAAOG,KAAKC,GAAL,CAASN,QAAQ,CAAR,CAAT,EAAqBE,MAArB,EAA6BE,IAA7B,CAAP;AACD,KAND,MAMO,IAAIN,IAAIC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAClC,UAAMC,WAAUF,IAAIG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,UAAUC,SAASH,SAAQ,CAAR,CAAT,EAAqB,EAArB,IAAyB,CAA1B,GAA+B,CAD9C;;AAGA,aAAOK,KAAKC,GAAL,CAASN,SAAQ,CAAR,CAAT,EAAqBE,OAArB,EAA6B,EAA7B,CAAP;AACD,KALM,MAKA,IAAIJ,IAAIC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAClC,UAAMC,YAAUF,IAAIG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,UAAUC,SAASH,UAAQ,CAAR,CAAT,EAAqB,EAArB,IAAyB,CAA1B,GAA+B,CAD9C;;AAGA,aAAOK,KAAKC,GAAL,CAASN,UAAQ,CAAR,CAAT,EAAqBE,OAArB,EAA6B,EAA7B,CAAP;AACD,KALM,MAKA;AACL,aAAOG,KAAKC,GAAL,CAASR,GAAT,EAAc,EAAd,EAAkB,EAAlB,CAAP;AACD;AACJ,GArBY;;AAuBbS,SAAO,eAACT,GAAD,EAAS;AACd,QAAMU,KAAKZ,OAAOC,KAAP,CAAaC,GAAb,CAAX;AAAA,QACMW,IAAI,IAAIJ,IAAJ,CAASG,EAAT,CADV;AAEA,WAAOC,EAAEC,cAAF,KACH,GADG,GACG,CAAC,OAAOD,EAAEE,WAAF,KAAkB,CAAzB,CAAD,EAA+BC,KAA/B,CAAqC,CAAC,CAAtC,CADH,GAEH,GAFG,GAEG,CAAC,MAAMH,EAAEI,UAAF,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CAFV;AAGD;AA7BY,CAAf;;kBAgCehB,M","file":"fnUtil.js","sourcesContent":["\r\nconst fnUtil = {\r\n  toUTC: (str) => {\r\n      if (str.indexOf('M') !== -1) {\r\n        const arrDate = str.split('M')\r\n            , _month = parseInt(arrDate[1], 10)-1\r\n            , _day = (_month === 1) ? 28 : 30\r\n\r\n        return Date.UTC(arrDate[0], _month, _day);\r\n      } else if (str.indexOf('Q') !== -1) {\r\n        const arrDate = str.split('Q')\r\n            , _month = (parseInt(arrDate[1], 10)*3) - 1\r\n\r\n        return Date.UTC(arrDate[0], _month, 30);\r\n      } else if (str.indexOf('K') !== -1) {\r\n        const arrDate = str.split('K')\r\n            , _month = (parseInt(arrDate[1], 10)*3) - 1\r\n\r\n        return Date.UTC(arrDate[0], _month, 30);\r\n      } else {\r\n        return Date.UTC(str, 11, 31);\r\n      }\r\n  },\r\n\r\n  toYMD: (str) => {\r\n    const ms = fnUtil.toUTC(str)\r\n        , d = new Date(ms);\r\n    return d.getUTCFullYear()\r\n      + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n      + \"-\" + (\"0\" + d.getUTCDate()).slice(-2);    \r\n  }\r\n}\r\n\r\nexport default fnUtil\r\n"]}