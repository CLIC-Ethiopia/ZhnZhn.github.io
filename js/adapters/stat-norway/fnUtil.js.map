{"version":3,"sources":["../../../src/adapters/stat-norway/fnUtil.js"],"names":["fnUtil","compose","toUTC","str","indexOf","arrDate","split","_month","parseInt","_day","Date","UTC","toYMD","ms","d","getUTCFullYear","getUTCMonth","slice","getUTCDate"],"mappings":";;;;;;;AACA;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAPA,mBADa;AAEbC,EAAAA,KAAK,EAAE,eAACC,GAAD,EAAS;AACZ,QAAIA,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAC3B,UAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,MAAM,GAAGC,QAAQ,CAACH,OAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CAAR,GAAyB,CADxC;AAAA,UAEMI,IAAI,GAAIF,MAAM,KAAK,CAAZ,GAAiB,EAAjB,GAAsB,EAFnC;;AAIA,aAAOG,IAAI,CAACC,GAAL,CAASN,OAAO,CAAC,CAAD,CAAhB,EAAqBE,MAArB,EAA6BE,IAA7B,CAAP;AACD,KAND,MAMO,IAAIN,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAClC,UAAMC,QAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,OAAM,GAAIC,QAAQ,CAACH,QAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CAAR,GAAyB,CAA1B,GAA+B,CAD9C;;AAGA,aAAOK,IAAI,CAACC,GAAL,CAASN,QAAO,CAAC,CAAD,CAAhB,EAAqBE,OAArB,EAA6B,EAA7B,CAAP;AACD,KALM,MAKA,IAAIJ,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAClC,UAAMC,SAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAhB;AAAA,UACMC,OAAM,GAAIC,QAAQ,CAACH,SAAO,CAAC,CAAD,CAAR,EAAa,EAAb,CAAR,GAAyB,CAA1B,GAA+B,CAD9C;;AAGA,aAAOK,IAAI,CAACC,GAAL,CAASN,SAAO,CAAC,CAAD,CAAhB,EAAqBE,OAArB,EAA6B,EAA7B,CAAP;AACD,KALM,MAKA;AACL,aAAOG,IAAI,CAACC,GAAL,CAASR,GAAT,EAAc,EAAd,EAAkB,EAAlB,CAAP;AACD;AACJ,GAtBY;AAwBbS,EAAAA,KAAK,EAAE,eAACT,GAAD,EAAS;AACd,QAAMU,EAAE,GAAGb,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAX;AAAA,QACMW,CAAC,GAAG,IAAIJ,IAAJ,CAASG,EAAT,CADV;AAEA,WAAOC,CAAC,CAACC,cAAF,KACH,GADG,GACG,CAAC,OAAOD,CAAC,CAACE,WAAF,KAAkB,CAAzB,CAAD,EAA+BC,KAA/B,CAAqC,CAAC,CAAtC,CADH,GAEH,GAFG,GAEG,CAAC,MAAMH,CAAC,CAACI,UAAF,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CAFV;AAGD;AA9BY,CAAf;eAiCejB,M","sourcesContent":["\r\nimport compose from '../../utils/compose'\r\n\r\nconst fnUtil = {\r\n  compose,\r\n  toUTC: (str) => {\r\n      if (str.indexOf('M') !== -1) {\r\n        const arrDate = str.split('M')\r\n            , _month = parseInt(arrDate[1], 10)-1\r\n            , _day = (_month === 1) ? 28 : 30\r\n\r\n        return Date.UTC(arrDate[0], _month, _day);\r\n      } else if (str.indexOf('Q') !== -1) {\r\n        const arrDate = str.split('Q')\r\n            , _month = (parseInt(arrDate[1], 10)*3) - 1\r\n\r\n        return Date.UTC(arrDate[0], _month, 30);\r\n      } else if (str.indexOf('K') !== -1) {\r\n        const arrDate = str.split('K')\r\n            , _month = (parseInt(arrDate[1], 10)*3) - 1\r\n\r\n        return Date.UTC(arrDate[0], _month, 30);\r\n      } else {\r\n        return Date.UTC(str, 11, 31);\r\n      }\r\n  },\r\n\r\n  toYMD: (str) => {\r\n    const ms = fnUtil.toUTC(str)\r\n        , d = new Date(ms);\r\n    return d.getUTCFullYear()\r\n      + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n      + \"-\" + (\"0\" + d.getUTCDate()).slice(-2);\r\n  }\r\n}\r\n\r\nexport default fnUtil\r\n"],"file":"fnUtil.js"}