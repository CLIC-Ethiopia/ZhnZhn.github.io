{"version":3,"sources":["../../../src/adapters/stat-norway/toSpline.js"],"names":["_toUTC","fnUtil","toUTC","crDsValuesTimes","fnAdapter","crChartOption","DF_TYPE","_checkOrder","data","_isReverse","length","x","reverse","_toData","values","times","_values","Array","isArray","map","time","i","y","value","_crSplineSeria","option","seriaType","seriaColor","_type","toLowerCase","Object","assign","ChartConfig","fSeries","type","color","visible","marker","symbol","zhSeriaId","crId","toArea","crConfig","json","title","subtitle","ds","seria","config","areaConfig","spacingTop","addCaption","clearSeries","addSeries","addMinMax","add","toConfig"],"mappings":"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","sourcesContent":["\r\nimport ChartConfig from '../../charts/ChartConfig'\r\nimport Builder from '../../charts/ConfigBuilder'\r\n\r\nimport fnUtil from './fnUtil'\r\nimport fnAdapter from './fnAdapter'\r\n\r\nconst _toUTC = fnUtil.toUTC;\r\nconst {\r\n  crDsValuesTimes, crChartOption\r\n} = fnAdapter;\r\n\r\nconst DF_TYPE = 'spline';\r\n\r\nconst _checkOrder = data => {\r\n  const _isReverse = data.length > 2\r\n    && data[0].x > data[1].x\r\n  return _isReverse ? data.reverse() : data;\r\n};\r\n\r\nconst _toData = (values, times ) => {\r\n  const _values = Array.isArray(values)\r\n           ? values\r\n           : [ values ];\r\n  const data = times.map((time, i) => ({\r\n    x: _toUTC(time),\r\n    y: _values[i] ? _values[i].value : null\r\n  }))\r\n  return _checkOrder(data);\r\n};\r\n\r\nconst _crSplineSeria = (data, option={}) => {\r\n  const { seriaType, seriaColor } = option\r\n      , _type = typeof seriaType === 'string'\r\n          ? seriaType.toLowerCase()\r\n          : DF_TYPE;\r\n  return Object.assign(ChartConfig.fSeries(), {\r\n     type: _type,\r\n     color: seriaColor,\r\n     visible: true,\r\n     data: data,\r\n     marker: {\r\n       symbol: 'circle'\r\n     },\r\n     zhSeriaId: fnAdapter.crId()\r\n  });\r\n}\r\n\r\n\r\nconst toArea = {\r\n  crConfig: (json, option) => {\r\n    const { title='', subtitle } = option\r\n      , { ds, values, times } = crDsValuesTimes(json, option)\r\n      , data = _toData(values, times)\r\n      , seria = _crSplineSeria(data, option)\r\n      , config = Builder()\r\n         .areaConfig({ spacingTop: 25 })\r\n         .addCaption(title, subtitle)\r\n         .clearSeries()\r\n         .addSeries(seria)\r\n         .addMinMax(data, option)\r\n         .add({ ...crChartOption(ds, data, option) })\r\n         .toConfig()\r\n\r\n       return config;\r\n   }\r\n}\r\n\r\nexport default toArea\r\n"],"file":"toSpline.js"}