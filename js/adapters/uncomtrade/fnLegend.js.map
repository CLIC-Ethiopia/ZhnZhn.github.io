{"version":3,"sources":["../../../src/adapters/uncomtrade/fnLegend.js"],"names":["fnLegend","fItemWithRatio","hm","sum","item","name","_points","_p","length","_ratio","y","toFixed","calcRecentSum","key","indexOf","C","WORLD","points","toAllLegend","arr","measure","crItemWithRatio","AVG_PRICE","map","toWorldLegend","world"],"mappings":";;;;;;;;;AACA;;AAEA,IAAMA,QAAQ,GAAG;AAEfC,EAAAA,cAAc,EAAE,wBAACC,EAAD,EAAKC,GAAL;AAAA,WAAa,UAACC,IAAD,EAAU;AAC/B,UAAEC,IAAF,GAAWD,IAAX,CAAEC,IAAF;AAAA,UACAC,OADA,GACUJ,EAAE,CAACG,IAAD,CADZ;AAAA,UAEAE,EAFA,GAEKD,OAAO,CAACA,OAAO,CAACE,MAAR,GAAe,CAAhB,CAFZ;AAAA,UAGAC,MAHA,GAGSF,EAAE,GACL,MAAM,CAAEA,EAAE,CAACG,CAAH,GAAKP,GAAN,GAAW,GAAZ,EAAiBQ,OAAjB,CAAyB,CAAzB,CAAN,GAAkC,GAD7B,GAEL,EALN;;AAMN,2CACMP,IADN;AAEGC,QAAAA,IAAI,EAAEA,IAAI,GAAGI;AAFhB;AAID,KAXe;AAAA,GAFD;AAefG,EAAAA,aAAa,EAAE,uBAACV,EAAD,EAAQ;AACrB,QAAIW,GAAJ;AAAA,QAASV,GAAG,GAAG,CAAf;;AACA,SAAKU,GAAL,IAAYX,EAAZ,EAAgB;AACd,UACKW,GAAG,CAACC,OAAJ,CAAY,OAAZ,MAAyB,CAAC,CAA1B,IACGD,GAAG,CAACC,OAAJ,CAAYC,iBAAEC,KAAd,MAAyB,CAAC,CAFlC,EAGE;AACA,YAAMC,MAAM,GAAGf,EAAE,CAACW,GAAD,CAAjB;AACAV,QAAAA,GAAG,IAAIc,MAAM,CAACA,MAAM,CAACT,MAAP,GAAc,CAAf,CAAN,CAAwBE,CAA/B;AACD;AACF;;AACD,WAAOP,GAAP;AACD,GA3Bc;AA6Bfe,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAMjB,EAAN,EAAUkB,OAAV,EAAsB;AACjC,QAAMjB,GAAG,GAAGH,QAAQ,CAACY,aAAT,CAAuBV,EAAvB,CAAZ;AAAA,QACMmB,eAAe,GAAGrB,QAAQ,CAACC,cAAT,CAAwBC,EAAxB,EAA4BC,GAA5B,CADxB;AAEA,WAAQA,GAAG,KAAK,CAAR,IAAaiB,OAAO,KAAKL,iBAAEO,SAA5B,GACFH,GAAG,CAACI,GAAJ,CAAQF,eAAR,CADE,GAEFF,GAFL;AAGD,GAnCc;AAqCfK,EAAAA,aAAa,EAAE,uBAACL,GAAD,EAAMjB,EAAN,EAAa;AAC1B,QAAMuB,KAAK,GAAGvB,EAAE,CAACa,iBAAEC,KAAH,CAAhB;AAAA,QACMb,GAAG,GAAGsB,KAAK,GACPA,KAAK,CAACA,KAAK,CAACjB,MAAN,GAAa,CAAd,CAAL,CAAsBE,CADf,GAEPV,QAAQ,CAACY,aAAT,CAAuBV,EAAvB,CAHV;AAAA,QAIMmB,eAAe,GAAGrB,QAAQ,CAACC,cAAT,CAAwBC,EAAxB,EAA4BC,GAA5B,CAJxB;AAMA,WAAQA,GAAG,KAAK,CAAR,IAAaA,GAAG,IAAI,IAArB,GACFgB,GAAG,CAACI,GAAJ,CAAQF,eAAR,CADE,GAEFF,GAFL;AAGD;AA/Cc,CAAjB;eAkDenB,Q","sourcesContent":["\r\nimport C from './conf'\r\n\r\nconst fnLegend = {\r\n\r\n  fItemWithRatio: (hm, sum) => (item) => {\r\n    const { name } = item\r\n        , _points = hm[name]\r\n        , _p = _points[_points.length-1]\r\n        , _ratio = _p\r\n              ? ' ' + ((_p.y/sum)*100).toFixed(1)+'%'\r\n              : '';\r\n    return {\r\n       ...item,\r\n       name: name + _ratio\r\n    };\r\n  },\r\n\r\n  calcRecentSum: (hm) => {\r\n    let key, sum = 0;\r\n    for (key in hm) {\r\n      if (\r\n           key.indexOf(', nes') === -1\r\n           && key.indexOf(C.WORLD) === -1\r\n      ) {\r\n        const points = hm[key];\r\n        sum += points[points.length-1].y        \r\n      }\r\n    }\r\n    return sum;\r\n  },\r\n\r\n  toAllLegend: (arr, hm, measure) => {\r\n    const sum = fnLegend.calcRecentSum(hm)\r\n        , crItemWithRatio = fnLegend.fItemWithRatio(hm, sum);\r\n    return (sum !== 0 && measure !== C.AVG_PRICE)\r\n       ? arr.map(crItemWithRatio)\r\n       : arr;\r\n  },\r\n\r\n  toWorldLegend: (arr, hm) => {\r\n    const world = hm[C.WORLD]\r\n        , sum = world\r\n            ? world[world.length-1].y\r\n            : fnLegend.calcRecentSum(hm)\r\n        , crItemWithRatio = fnLegend.fItemWithRatio(hm, sum);\r\n\r\n    return (sum !== 0 && sum != null)\r\n       ? arr.map(crItemWithRatio)\r\n       : arr;\r\n  }\r\n};\r\n\r\nexport default fnLegend\r\n"],"file":"fnLegend.js"}