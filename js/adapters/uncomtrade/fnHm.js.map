{"version":3,"sources":["../../../src/adapters/uncomtrade/fnHm.js"],"names":["_toSortedArr","obj","arr","propName","push","sort","_crPoint","y","forSort","undefined","_fCrValuePoint","pnValue","item","_crNetWeightPoint","_w","NetWeight","TradeQuantity","_y","TradeValue","_crAvgPricePoint","_NetWeight","parseFloat","toFixed","_rFnCrPoint","fDf","C","NET_WEIGHT","AVG_PRICE","_fPoint","_crValue","isCategory","x","period","_getRecentValueForSort","points","len","length","fnHm","toSeriaNames","hm","fnCompareBy","WORLD","value","name","reverse","toHmCategories","dataset","pnCountry","_hm","Object","create","_category","_point","forEach","ptTitle","categories"],"mappings":"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","sourcesContent":["\r\nimport C from './conf'\r\n\r\nconst _toSortedArr = obj => {\r\n  const arr = [];\r\n  for (let propName in obj){\r\n    arr.push(obj[propName])\r\n  }\r\n  return arr.sort();\r\n};\r\n\r\nconst _crPoint = (y, forSort) => ({\r\n  y: y,\r\n  forSort: forSort !== undefined\r\n    ? forSort : y\r\n});\r\n\r\nconst _fCrValuePoint = pnValue =>\r\n   item => _crPoint(item[pnValue]);\r\n\r\nconst _crNetWeightPoint = item => {\r\n  const _w = item.NetWeight || item.TradeQuantity\r\n  , _y = _w !== 0 ? _w\r\n    : item.TradeValue ? undefined : 0 ;\r\n  return _crPoint(_y);\r\n};\r\n\r\nconst _crAvgPricePoint = item => {\r\n  const {\r\n    TradeValue,\r\n    NetWeight, TradeQuantity\r\n  } = item\r\n  , _NetWeight = NetWeight || TradeQuantity\r\n  , _y = (_NetWeight && TradeValue != null)\r\n       ? parseFloat((TradeValue/_NetWeight).toFixed(2))\r\n       : undefined;\r\n  return _crPoint(_y, _NetWeight);\r\n};\r\n\r\nconst _rFnCrPoint = {\r\n  fDf: _fCrValuePoint,\r\n  [C.NET_WEIGHT]: _crNetWeightPoint,\r\n  [C.AVG_PRICE]: _crAvgPricePoint\r\n};\r\n\r\nconst _fPoint = pnValue => {\r\n  const _crValue = _rFnCrPoint[pnValue]\r\n    ? _rFnCrPoint[pnValue]\r\n    : _rFnCrPoint.fDf(pnValue);\r\n  return item => {\r\n    return {\r\n      isCategory: true,\r\n      x: item.period,\r\n      ..._crValue(item)\r\n    };\r\n  };\r\n};\r\n\r\nconst _getRecentValueForSort = points => {\r\n   const len = points && points.length;\r\n   return len && len > 0\r\n     ? points[len-1].forSort\r\n     : undefined;\r\n};\r\n\r\nconst fnHm = {\r\n\r\n  toSeriaNames: (hm, fnCompareBy) => {\r\n    const arr = [];\r\n    for (let propName in hm){\r\n      if (propName !== C.WORLD) {\r\n        const points = hm[propName];\r\n        arr.push({\r\n          value: _getRecentValueForSort(points),\r\n          name: propName\r\n        })\r\n      }\r\n    }\r\n    return arr\r\n      .sort(fnCompareBy)\r\n      .reverse();\r\n  },\r\n\r\n  toHmCategories({\r\n    dataset,\r\n    pnCountry='ptTitle',\r\n    pnValue='TradeValue'\r\n  }) {\r\n    const _hm = Object.create(null)\r\n    , _category = Object.create(null)\r\n    , _crPoint = _fPoint(pnValue);\r\n\r\n    let _point\r\n    dataset.forEach(item => {      \r\n      _point = _crPoint(item)\r\n      if (_point.y != null) {\r\n        const ptTitle = item[pnCountry];\r\n\r\n        if (_hm[ptTitle] === undefined) {\r\n          _hm[ptTitle] = []\r\n        }\r\n        _hm[ptTitle].push(_point)\r\n\r\n        const period = item.period;\r\n        if (_category[period] === undefined) {\r\n          _category[period] = period\r\n        }\r\n      }\r\n    })\r\n    return {\r\n      categories: _toSortedArr(_category),\r\n      hm: _hm\r\n    };\r\n  }\r\n\r\n};\r\n\r\nexport default fnHm\r\n"],"file":"fnHm.js"}