{"version":3,"sources":["../../src/utils/fnFetch.js"],"names":["C","REQ_ERR","RESP_ERR","MSG_URI_EMPTY","MSG_400","MSG_404","MSG_429","MSG_503","_isFn","fn","_isArr","Array","isArray","_assign","Object","assign","_isInArrValue","arr","value","indexOf","_crErr","message","errCaption","_throwIfNotStatus","errStatus","status","msg","_promiseAll","response","propName","getLimitRemaiming","headers","_limitRemaining","get","Promise","all","resolve","_fFetch","type","uri","option","optionFetch","onCheckResponse","onFetch","onCompleted","onFailed","onCatch","setTimeout","alertCaption","alertDescr","_fnFetch","fetch","fetchJsonpImpl","then","statusText","ok","resErrStatus","limitRemaining","json","error","console","log","fetchJson","fetchTxt","fetchJsonp"],"mappings":"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","sourcesContent":["import fetchJsonpImpl from 'fetch-jsonp'\r\n\r\nconst C = {\r\n  //LIMIT_REMAINING: 'X-RateLimit-Remaining',\r\n  REQ_ERR: 'Request Error',\r\n  RESP_ERR: 'Response Error',\r\n\r\n  MSG_URI_EMPTY: \"Item url isn't specified by adapter.\",\r\n  MSG_400: '400: Bad request.',\r\n  MSG_404: '404: Resource is not existed.',\r\n  MSG_429: '429: Too many request in a given amount of time (rate limiting).',\r\n  MSG_503: '503: Back-end server is at capacity.'\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _isArr = Array.isArray\r\nconst _assign = Object.assign\r\n\r\nconst _isInArrValue = (arr, value) => _isArr(arr)\r\n  && arr.indexOf(value) !== -1;\r\n\r\nconst _crErr = (message, errCaption=C.REQ_ERR) => ({\r\n  errCaption,\r\n  message\r\n});\r\n\r\nconst _throwIfNotStatus = (errStatus, status, msg) => {\r\n  if (!_isInArrValue(errStatus, status)) {\r\n    throw _crErr(msg);\r\n  }\r\n};\r\n\r\nconst _promiseAll = ({\r\n  response, propName, status,\r\n  getLimitRemaiming\r\n}) => {\r\n  const headers = response.headers\r\n  , _limitRemaining = headers\r\n       && _isFn(headers.get)\r\n       && _isFn(getLimitRemaiming)\r\n        ? getLimitRemaiming(headers)\r\n        : void 0;\r\n  return Promise.all([\r\n    Promise.resolve(_limitRemaining),\r\n    response[propName](),\r\n    Promise.resolve(status)\r\n  ]);\r\n};\r\n\r\nconst _fFetch = (propName, type) => function({\r\n   uri, option={},\r\n   optionFetch,\r\n   getLimitRemaiming,\r\n   onCheckResponse,\r\n   onFetch, onCompleted,\r\n   onFailed, onCatch\r\n }){\r\n  if (!uri) {\r\n    if (_isFn(onFailed)) {\r\n      setTimeout(()=>onFailed(_assign(option, {\r\n        alertCaption: C.REQ_ERR,\r\n        alertDescr: C.MSG_URI_EMPTY\r\n      })), 0)\r\n    }\r\n    return;\r\n  }\r\n  const _fnFetch = type !== 'jsonp'\r\n    ? fetch\r\n    : fetchJsonpImpl;\r\n  _fnFetch(uri, optionFetch)\r\n    .then(response => {\r\n      const { status, statusText, ok } = response\r\n          , { resErrStatus} = option;\r\n      if ((status>=200 && status<400) || ok) {\r\n         return _promiseAll({\r\n           response, propName,\r\n           getLimitRemaiming\r\n         });\r\n      } else if (status === 400) {\r\n         _throwIfNotStatus(resErrStatus, status, C.MSG_400)\r\n         return _promiseAll({ response, propName, status });\r\n      } else if (status === 404) {\r\n         throw _crErr(C.MSG_404);\r\n      } else if (status === 429) {\r\n         throw _crErr(C.MSG_429);\r\n      } else if (status>400 && status<500){\r\n         _throwIfNotStatus(resErrStatus, status, `${status}: ${statusText}`)\r\n         return _promiseAll({ response, propName, status });\r\n      } else if (status === 503) {\r\n         throw _crErr(C.MSG_503);\r\n      } else if (status>=500 && status<600){\r\n         throw _crErr(`${status}: ${statusText}`, C.RESP_ERR);\r\n      } else {\r\n        return [void 0, {}, status];\r\n      }\r\n    })\r\n    .then(([limitRemaining, json, status]) => {\r\n       if (_isFn(onCheckResponse)){\r\n         if (onCheckResponse(json, option, status)) {\r\n           option.limitRemaining = limitRemaining;\r\n           onFetch({ json, option, onCompleted });\r\n         }\r\n      } else {\r\n        option.limitRemaining = limitRemaining;\r\n        onFetch({ json, option, onCompleted });\r\n      }\r\n    })\r\n    .catch(error => {\r\n       if (_isFn(onCatch)) {\r\n          onCatch({ error, option, onFailed })\r\n       } else {\r\n         console.log(error)\r\n       }\r\n    })\r\n};\r\n\r\nexport const fetchJson = _fFetch('json');\r\nexport const fetchTxt = _fFetch('text');\r\nexport const fetchJsonp = _fFetch('json', 'jsonp');\r\n"],"file":"fnFetch.js"}