{"version":3,"sources":["../../../src/utils/__tests__/formatNumber.test.js"],"names":["describe","test","expect","NaN","toBe"],"mappings":"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","sourcesContent":["\r\nimport fn from '../formatNumber'\r\n\r\ndescribe('formatNumber', ()=>{\r\n  test(\"should return str '0.00' for not number\", () => {\r\n    expect(fn(NaN)).toBe('0.00')\r\n    expect(fn()).toBe('0.00')\r\n    expect(fn(null)).toBe('0.00')\r\n    expect(fn('str')).toBe('0.00')\r\n    expect(fn(true)).toBe('0.00')\r\n    expect(fn({})).toBe('0.00')\r\n  })\r\n  test('should return same as str for -0.01<value<0.01', ()=>{\r\n    expect(fn(0.009)).toBe('0.009')\r\n    expect(fn(0.000009)).toBe('0.000009')\r\n    expect(fn(-0.009)).toBe('-0.009')\r\n    expect(fn(-0.000009)).toBe('-0.000009')\r\n  })\r\n  test('should return str rounded by 2 or 4 for -1<value<1 && not -0.01<value<0.01', () => {\r\n    expect(fn(0.1234)).toBe('0.1234')\r\n    expect(fn(0.123)).toBe('0.123')\r\n    expect(fn(0.12)).toBe('0.12')\r\n    expect(fn(0.1)).toBe('0.1')\r\n    expect(fn(0.12345)).toBe('0.1235')\r\n    expect(fn(0.123456)).toBe('0.1235')\r\n  })\r\n  test('should return str rounded by 2 for -100000<value<100000 && not -1>value<1',()=>{\r\n    expect(fn(2)).toBe('2')\r\n    expect(fn(2.0)).toBe('2')\r\n    expect(fn(2.1)).toBe('2.1')\r\n    expect(fn(2.12)).toBe('2.12')\r\n    expect(fn(2.123)).toBe('2.12')\r\n    expect(fn(2.1234)).toBe('2.12')\r\n    expect(fn(99999.0)).toBe('99 999')\r\n    expect(fn(99999.00)).toBe('99 999')\r\n    expect(fn(99999.01)).toBe('99 999.01')\r\n    expect(fn(-99999.01)).toBe('-99 999.01')\r\n  })\r\n  test('should return str rounded by 0 for value<=-100000 || value>=100000', ()=> {\r\n    expect(fn(100000.01)).toBe('100 000')\r\n    expect(fn(-100000.01)).toBe('-100 000')\r\n    expect(fn(100000)).toBe('100 000')\r\n    expect(fn(-100000)).toBe('-100 000')\r\n  })\r\n})\r\n"],"file":"formatNumber.test.js"}