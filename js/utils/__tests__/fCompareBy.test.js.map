{"version":3,"sources":["../../../src/utils/__tests__/fCompareBy.test.js"],"names":["describe","fn","fCompareBy","it","_compare","arr","expect","toBe","sort","toEqual","y","x"],"mappings":";;;;AAAA;;AAEAA,QAAQ,CAAC,YAAD,EAAe,YAAI;AACzB,MAAMC,EAAE,GAAGC,sBAAX;AACAC,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAI;AACpD,QAAMC,QAAQ,GAAGH,EAAE,CAAC,CAAD,CAAnB;AAAA,QACEI,GAAG,GAAG,CACL,CAAC,CAAD,EAAI,CAAJ,CADK,EACG,CAAC,CAAD,EAAI,CAAJ,CADH,EACW,CAAC,CAAD,EAAI,CAAJ,CADX,EACmB,CAAC,CAAD,EAAI,CAAJ,CADnB,EAC2B,CAAC,CAAD,EAAI,CAAJ,CAD3B,CADR;;AAKAC,IAAAA,MAAM,CAAC,OAAOL,EAAR,CAAN,CAAkBM,IAAlB,CAAuB,UAAvB;AACAD,IAAAA,MAAM,CAACD,GAAG,CAACG,IAAJ,CAASJ,QAAT,CAAD,CAAN,CACGK,OADH,CACW,CACP,CAAC,CAAD,EAAI,CAAJ,CADO,EACC,CAAC,CAAD,EAAI,CAAJ,CADD,EACS,CAAC,CAAD,EAAI,CAAJ,CADT,EACiB,CAAC,CAAD,EAAI,CAAJ,CADjB,EACyB,CAAC,CAAD,EAAI,CAAJ,CADzB,CADX;AAID,GAXC,CAAF;AAYAN,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAI;AACnD,QAAMC,QAAQ,GAAGH,EAAE,CAAC,GAAD,CAAnB;AAAA,QACEI,GAAG,GAAG,CACN;AAACK,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KADM,EAEN;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAFM,EAGN;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAHM,EAIN;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAJM,EAKN;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KALM,CADR;;AASAL,IAAAA,MAAM,CAAC,OAAOL,EAAR,CAAN,CAAkBM,IAAlB,CAAuB,UAAvB;AACAD,IAAAA,MAAM,CAACD,GAAG,CAACG,IAAJ,CAASJ,QAAT,CAAD,CAAN,CACGK,OADH,CACW,CACP;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KADO,EAEP;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAFO,EAGP;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAHO,EAIP;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAJO,EAKP;AAACD,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KALO,CADX;AAQD,GAnBC,CAAF;AAoBD,CAlCO,CAAR","sourcesContent":["import fCompareBy from '../fCompareBy'\r\n\r\ndescribe('fCompareBy', ()=>{\r\n  const fn = fCompareBy\r\n  it('should create fn for comparing arr by index', ()=>{\r\n    const _compare = fn(0)\r\n    , arr = [\r\n       [3, 0], [4, 0], [2, 0], [2, 1], [1, 0]\r\n     ];\r\n\r\n    expect(typeof fn).toBe('function')\r\n    expect(arr.sort(_compare))\r\n      .toEqual([\r\n        [1, 0], [2, 0], [2, 1], [3, 0], [4, 0]\r\n      ])\r\n  })\r\n  it('should create fn for comparing by propName', ()=>{\r\n    const _compare = fn('y')\r\n    , arr = [\r\n      {y: 3, x: 0},\r\n      {y: 4, x: 0},\r\n      {y: 2, x: 0},\r\n      {y: 2, x: 1},\r\n      {y: 1, x: 0}\r\n    ];\r\n\r\n    expect(typeof fn).toBe('function')\r\n    expect(arr.sort(_compare))\r\n      .toEqual([\r\n        {y: 1, x: 0},\r\n        {y: 2, x: 0},\r\n        {y: 2, x: 1},\r\n        {y: 3, x: 0},\r\n        {y: 4, x: 0}\r\n      ])\r\n  })\r\n})\r\n"],"file":"fCompareBy.test.js"}