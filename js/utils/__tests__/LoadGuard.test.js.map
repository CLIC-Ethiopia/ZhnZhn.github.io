{"version":3,"sources":["../../../src/utils/__tests__/LoadGuard.test.js"],"names":["describe","test","guard","LoadGuard","start","expect","isLoading","toBe","stop","setTimeout"],"mappings":";;;;AAAA;;AAEAA,QAAQ,CAAC,WAAD,EAAc,YAAI;AACxBC,EAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAI;AACpC,QAAMC,KAAK,GAAG,IAAIC,qBAAJ,CAAc,IAAd,CAAd;AACAD,IAAAA,KAAK,CAACE,KAAN,CAAY,KAAZ;AACAC,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACAL,IAAAA,KAAK,CAACM,IAAN;AACAH,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,KAA7B;AACD,GANG,CAAJ;AAQAN,EAAAA,IAAI,CAAC,4BAAD,EAA+B,YAAI;AACrC,QAAMC,KAAK,GAAG,IAAIC,qBAAJ,CAAc,IAAd,CAAd;AACAD,IAAAA,KAAK,CAACE,KAAN,CAAY,KAAZ;AACAC,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACAE,IAAAA,UAAU,CAAC,YAAM;AACfP,MAAAA,KAAK,CAACM,IAAN;AACAH,MAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,KAA7B;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GARG,CAAJ;AAUAN,EAAAA,IAAI,CAAC,kCAAD,EAAqC,YAAI;AAC3C,QAAMC,KAAK,GAAG,IAAIC,qBAAJ,CAAc,IAAd,CAAd;AACAE,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,KAA7B;AACAL,IAAAA,KAAK,CAACE,KAAN,CAAY,KAAZ;AACAC,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACAE,IAAAA,UAAU,CAAC,YAAI;AACbJ,MAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACD,KAFS,EAEP,GAFO,CAAV;AAGAE,IAAAA,UAAU,CAAC,YAAI;AACbJ,MAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,KAA7B;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAXG,CAAJ;AAaAN,EAAAA,IAAI,CAAC,4CAAD,EAA+C,YAAI;AACrD,QAAMC,KAAK,GAAG,IAAIC,qBAAJ,CAAc,IAAd,CAAd;AACAE,IAAAA,MAAM,CAACH,KAAK,CAACE,KAAN,CAAY,KAAZ,CAAD,CAAN,CAA2BG,IAA3B,CAAgC,IAAhC;AACAF,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACAF,IAAAA,MAAM,CAACH,KAAK,CAACE,KAAN,CAAY,MAAZ,CAAD,CAAN,CAA4BG,IAA5B,CAAiC,KAAjC;AACAF,IAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,IAA7B;AACAE,IAAAA,UAAU,CAAC,YAAI;AACbJ,MAAAA,MAAM,CAACH,KAAK,CAACI,SAAP,CAAN,CAAwBC,IAAxB,CAA6B,KAA7B;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GATG,CAAJ;AAUD,CA1CO,CAAR","sourcesContent":["import LoadGuard from '../LoadGuard'\r\n\r\ndescribe('LoadGuard', ()=>{\r\n  test('should sync reset by stop', ()=>{\r\n    const guard = new LoadGuard(1000)\r\n    guard.start('url')\r\n    expect(guard.isLoading).toBe(true)\r\n    guard.stop()\r\n    expect(guard.isLoading).toBe(false)\r\n  })\r\n\r\n  test('should async reset by stop', ()=>{\r\n    const guard = new LoadGuard(1000)\r\n    guard.start('url')\r\n    expect(guard.isLoading).toBe(true)\r\n    setTimeout(() => {\r\n      guard.stop()\r\n      expect(guard.isLoading).toBe(false)\r\n    }, 200)\r\n  })\r\n\r\n  test('should reset guard after timeout', ()=>{\r\n    const guard = new LoadGuard(1000)\r\n    expect(guard.isLoading).toBe(false)\r\n    guard.start('url')\r\n    expect(guard.isLoading).toBe(true)\r\n    setTimeout(()=>{\r\n      expect(guard.isLoading).toBe(true)\r\n    }, 500)\r\n    setTimeout(()=>{\r\n      expect(guard.isLoading).toBe(false)\r\n    }, 1500)\r\n  })\r\n\r\n  test('start method should return true if started', ()=>{\r\n    const guard = new LoadGuard(1000)\r\n    expect(guard.start('url')).toBe(true)\r\n    expect(guard.isLoading).toBe(true)\r\n    expect(guard.start('url2')).toBe(false)\r\n    expect(guard.isLoading).toBe(true)\r\n    setTimeout(()=>{\r\n      expect(guard.isLoading).toBe(false)\r\n    }, 1500)\r\n  })\r\n})\r\n"],"file":"LoadGuard.test.js"}