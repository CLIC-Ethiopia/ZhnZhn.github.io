{"version":3,"sources":["../../../src/utils/__tests__/DateUtils.test.js"],"names":["isYmd","DateUtils","isYmdOrEmpty","dmyToUTC","mlsToDmy","isDmy","getUTCTime","addToDmy","_compose","fns","reduce","f","g","describe","fn","test","expect","toBe","undefined","Date","UTC","EMPTY","NaN","_fn","date","getTime","toBeInstanceOf"],"mappings":"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","sourcesContent":["import DateUtils from '../DateUtils'\r\n\r\nconst {\r\n  isYmd,\r\n  isYmdOrEmpty,\r\n  dmyToUTC,\r\n  mlsToDmy,\r\n  isDmy,\r\n  getUTCTime,\r\n  addToDmy\r\n} = DateUtils;\r\n\r\nconst _compose = fns => fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\ndescribe('isYmd YYYY-MM-DD', () => {\r\n  const fn = isYmd;\r\n\r\n  test('should return true for valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-01-10\")).toBe(true)\r\n    expect(fn(\"2010-10-01\")).toBe(true)\r\n  })\r\n  test('should return false for not valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-14-01\")).toBe(false)\r\n    expect(fn(\"2010-02-32\")).toBe(false)\r\n  })\r\n  test('min valid value is 1990-01-01', () => {\r\n    expect(fn('1990-01-01')).toBe(true)\r\n    expect(fn('1989-12-30')).toBe(false)\r\n  })\r\n  test('should year be not future', () => {\r\n    expect(fn('2030-01-01')).toBe(false)\r\n\r\n    expect(fn('2030-01-01', 1)).toBe(false)\r\n    expect(fn('2030-01-01', 2)).toBe(false)\r\n    expect(fn('2030-01-01', 3)).toBe(false)\r\n    expect(fn('2030-01-01', 20)).toBe(true)\r\n  })\r\n  test('should return false in edge case', () => {\r\n     expect(fn('')).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn(undefined)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isYmdOrEmty YYYY-MM-DD', () => {\r\n  const fn = isYmdOrEmpty\r\n   test('should return is valid date or empty', () => {\r\n     expect(fn('')).toBe(true)\r\n     expect(fn(\"2010-01-10\")).toBe(true)\r\n     expect(fn(\"2010-10-01\")).toBe(true)\r\n\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn({})).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(()=>{})).toBe(false)\r\n     expect(fn(\"2010-20-20\")).toBe(false)\r\n     expect(fn(\"2010-40-40\")).toBe(false)\r\n   })\r\n})\r\n\r\ndescribe('dmyToUTC', ()=>{\r\n  const fn = dmyToUTC;\r\n  test('should return UTC from DD-MM-YYYY', () => {\r\n    expect(fn(\"10-10-2010\")).toBe(Date.UTC(2010, 9, 10))\r\n    expect(fn(\"01-01-2010\")).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n  test('should return 0 in edge case', () => {\r\n    expect(fn(\"20-20-2010\")).toBe(0)\r\n    expect(fn(\"\")).toBe(0)\r\n    expect(fn(null)).toBe(0)\r\n    expect(fn(undefined)).toBe(0)\r\n  })\r\n})\r\n\r\ndescribe('formatTo', ()=>{\r\n  const fn = mlsToDmy;\r\n  const EMPTY = '';\r\n  test('should format to DD-MM-YYYY from ms', ()=>{\r\n    expect(fn(1514764800000)).toBe('01-01-2018')\r\n    expect(fn(1515542400000)).toBe('10-01-2018')\r\n    expect(fn(1538352000000)).toBe('01-10-2018')\r\n  })\r\n  test('should format to empty string in edge case', ()=>{\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn(NaN)).toBe(EMPTY)\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn('abc')).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n  })\r\n})\r\n\r\ndescribe('isDmy', () => {\r\n  const fn = isDmy;\r\n  test('should return true for str in format DD-MM-YYY', () => {\r\n     expect(fn('10-10-2000')).toBe(true)\r\n     expect(fn('20-01-2000')).toBe(true)\r\n     expect(fn('01-12-2000')).toBe(true)\r\n  })\r\n  test('should return false for str not in format DD-MM-YYYY', () => {\r\n    expect(fn('10-14-2000')).toBe(false)\r\n    expect(fn('20-1-2000')).toBe(false)\r\n    expect(fn('2000-12-01')).toBe(false)\r\n  })\r\n  test('should return false in edge cases', () => {\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn('')).toBe(false)\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n    expect(fn(fn)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('getUTCTime', ()=>{\r\n  const fn = getUTCTime;\r\n  test('should return correct str from ms', ()=>{\r\n    expect(fn(1547205009808)).toBe('11:10')\r\n    expect(fn(1547204900008)).toBe('11:08')\r\n  })\r\n  test('should return empty string in edge case', ()=>{\r\n    expect(fn(undefined)).toBe('')\r\n    expect(fn(null)).toBe('')\r\n    expect(fn('str')).toBe('')\r\n    expect(fn(NaN)).toBe('')\r\n    expect(fn({})).toBe('')\r\n  })\r\n})\r\n\r\ndescribe('addToDmy', ()=>{\r\n  const fn = addToDmy\r\n  , _fn = _compose([\r\n    mlsToDmy,\r\n    (date) => date.getTime(),\r\n    addToDmy\r\n  ]);\r\n  test('should return Date instance', ()=>{\r\n    expect(fn('01-02-2019', -1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 'str')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', null)).toBeInstanceOf(Date)\r\n    expect(fn('str', null)).toBeInstanceOf(Date)\r\n  })\r\n  test('should return dmy with added month to dmy format', ()=>{\r\n    expect(_fn('01-02-2019', -1)).toBe('01-01-2019')\r\n    expect(_fn('01-02-2019', -2)).toBe('01-12-2018')\r\n    expect(_fn('01-02-2019', -3)).toBe('01-11-2018')\r\n    expect(_fn('01-02-2019', -6)).toBe('01-08-2018')\r\n    expect(_fn('01-02-2019', -12)).toBe('01-02-2018')\r\n  })\r\n})\r\n"],"file":"DateUtils.test.js"}