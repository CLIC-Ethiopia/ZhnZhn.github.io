{"version":3,"sources":["../../../src/utils/__tests__/DateUtils.test.js"],"names":["isYmd","DateUtils","isYmdOrEmpty","isDmyPeriod","dmyToUTC","ymdToUTC","ymdhmsToUTC","mlsToDmy","isDmy","getUTCTime","addToDmy","getYTDfromDmy","monthIndex","getYmdhmUTC","MIN_YEAR","_compose","fns","reduce","f","g","describe","fn","test","expect","toBe","undefined","Date","UTC","NaN","y","EMPTY","Number","MAX_SAFE_INTEGER","_fn","date","getTime","toBeInstanceOf","it"],"mappings":"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","sourcesContent":["import DateUtils from '../DateUtils'\r\n\r\nimport DateUtilsWithMock from './DateUtilsWithMock'\r\n\r\nconst {\r\n  isYmd,\r\n  isYmdOrEmpty,\r\n  isDmyPeriod,\r\n  dmyToUTC,\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  mlsToDmy,\r\n  isDmy,\r\n  getUTCTime,\r\n  addToDmy,\r\n  getYTDfromDmy,\r\n  monthIndex,\r\n  getYmdhmUTC\r\n} = DateUtils;\r\n\r\n// DateUtils configuration consts\r\nconst MIN_YEAR = 1990;\r\n\r\nconst _compose = fns => fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\ndescribe('isYmd YYYY-MM-DD', () => {\r\n  const fn = isYmd;\r\n\r\n  test('should return true for valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-01-10\")).toBe(true)\r\n    expect(fn(\"2010-10-01\")).toBe(true)\r\n  })\r\n  test('should return false for not valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-14-01\")).toBe(false)\r\n    expect(fn(\"2010-02-32\")).toBe(false)\r\n  })\r\n  test(`min default valid value is ${MIN_YEAR}-01-01`, () => {\r\n    expect(fn(`${MIN_YEAR}-01-01`)).toBe(true)\r\n    expect(fn('1989-12-30')).toBe(false)\r\n  })\r\n  test('min default valid can be configured', () => {\r\n    expect(fn('1989-12-30', 0, 1989)).toBe(true)\r\n  })\r\n  test('should year be not future', () => {\r\n    expect(fn('2030-01-01')).toBe(false)\r\n\r\n    expect(fn('2030-01-01', 1)).toBe(false)\r\n    expect(fn('2030-01-01', 2)).toBe(false)\r\n    expect(fn('2030-01-01', 3)).toBe(false)\r\n    expect(fn('2030-01-01', 20)).toBe(true)\r\n  })\r\n  test('should return false in edge case', () => {\r\n     expect(fn('')).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn(undefined)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isYmdOrEmty YYYY-MM-DD', () => {\r\n  const fn = isYmdOrEmpty\r\n   test('should return is valid date or empty', () => {\r\n     expect(fn('')).toBe(true)\r\n     expect(fn(\"2010-01-10\")).toBe(true)\r\n     expect(fn(\"2010-10-01\")).toBe(true)\r\n\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn({})).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(()=>{})).toBe(false)\r\n     expect(fn(\"2010-20-20\")).toBe(false)\r\n     expect(fn(\"2010-40-40\")).toBe(false)\r\n   })\r\n})\r\n\r\ndescribe('isDmyPeriod', ()=>{\r\n  const fn = isDmyPeriod;\r\n  test('should return correct boolean', ()=>{\r\n    expect(fn('01-01-2010', '02-01-2010')).toBe(true)\r\n    expect(fn('01-01-2010', '01-01-2010')).toBe(true)\r\n    expect(fn('02-01-2010', '01-01-2010')).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('dmyToUTC', ()=>{\r\n  const fn = dmyToUTC;\r\n  test('should return UTC from DD-MM-YYYY', () => {\r\n    expect(fn(\"10-10-2010\")).toBe(Date.UTC(2010, 9, 10))\r\n    expect(fn(\"01-01-2010\")).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n  test('should return NaN in edge case', () => {\r\n    expect(fn(\"20-20-2010\")).toBe(NaN)\r\n    expect(fn(\"\")).toBe(NaN)\r\n    expect(fn(null)).toBe(NaN)\r\n    expect(fn(undefined)).toBe(NaN)\r\n  })\r\n})\r\n\r\ndescribe('ymdToUTC', ()=> {\r\n  const fn = ymdToUTC\r\n  test('should return mls UTC-0 for str YYYY-MM-DD', ()=>{\r\n    expect(fn('2010-01-01')).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n  test('should return mls UTC-0 for str YYYY-MM', ()=>{\r\n    expect(fn('2010-01')).toBe(Date.UTC(2010, 0, 31))\r\n  })\r\n  test('should return NaN for YYYY-MM edge case', ()=>{\r\n    expect(fn('2010-MM')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for str YYYY-QN', ()=>{\r\n    expect(fn('2010-Q1')).toBe(Date.UTC(2010, 2, 31))\r\n    expect(fn('2010-Q2')).toBe(Date.UTC(2010, 5, 30))\r\n  })\r\n  test('should return NaN for YYYY-QS edge case', ()=>{\r\n    expect(fn('2010-QS')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for str YYYY', ()=>{\r\n    expect(fn('2010')).toBe(Date.UTC(2010, 11, 31))\r\n  })\r\n  test('should return NaN for YYYY edge case', ()=>{\r\n    expect(fn('YYYY')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for YYYY-MM-DD or NaN for more than 3 tokens', ()=>{\r\n    expect(fn('2010-01-01-12:00')).toBe(Date.UTC(2010, 0, 1))\r\n    expect(fn('2010-01-AA-12:00')).toBe(NaN)\r\n  })\r\n  test('should use option y for YYYY case', () => {\r\n    expect(fn(\"2010\")).toBe(Date.UTC(2010, 11, 31))\r\n    expect(fn(\"2010\", {y: 1})).toBe(Date.UTC(2010-1, 11, 31))\r\n  })\r\n})\r\n\r\ndescribe('ymdhmsToUTC', ()=> {\r\n  const fn = ymdhmsToUTC;\r\n  test('should retun mls UTC-0 for str date', ()=> {\r\n    expect(fn('2010-01-01 12:00:00')).toBe(Date.UTC(2010, 0, 1, 12, 0, 0))\r\n  })\r\n})\r\n\r\ndescribe('formatTo', ()=>{\r\n  const fn = mlsToDmy;\r\n  const EMPTY = '';\r\n  test('should format to DD-MM-YYYY from ms', ()=>{\r\n    expect(fn(1514764800000)).toBe('01-01-2018')\r\n    expect(fn(1515542400000)).toBe('10-01-2018')\r\n    expect(fn(1538352000000)).toBe('01-10-2018')\r\n  })\r\n  test('should format to empty string in edge case', ()=>{\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn(NaN)).toBe(EMPTY)\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn('abc')).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(Number.MAX_SAFE_INTEGER)).toBe(EMPTY)\r\n  })\r\n})\r\n\r\ndescribe('isDmy', () => {\r\n  const fn = isDmy;\r\n  test('should return true for str in format DD-MM-YYY', () => {\r\n     expect(fn('10-10-2000')).toBe(true)\r\n     expect(fn('20-01-2000')).toBe(true)\r\n     expect(fn('01-12-2000')).toBe(true)\r\n  })\r\n  test(`should use defult min year value ${MIN_YEAR}`, ()=>{\r\n    expect(fn('31-12-1989')).toBe(false)\r\n  })\r\n  test('should use minYear param', () => {\r\n    expect(fn('10-10-2000', 2010)).toBe(false)\r\n  })\r\n  test('should return false for str not in format DD-MM-YYYY', () => {\r\n    expect(fn('10-14-2000')).toBe(false)\r\n    expect(fn('20-1-2000')).toBe(false)\r\n    expect(fn('2000-12-01')).toBe(false)\r\n  })\r\n  test('should return false in edge cases', () => {\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn('')).toBe(false)\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n    expect(fn(fn)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('getUTCTime', ()=>{\r\n  const fn = getUTCTime;\r\n  test('should return correct str from ms', ()=>{\r\n    expect(fn(1547205009808)).toBe('11:10')\r\n    expect(fn(1547204900008)).toBe('11:08')\r\n  })\r\n  test('should return empty string in edge case', ()=>{\r\n    expect(fn(undefined)).toBe('')\r\n    expect(fn(null)).toBe('')\r\n    expect(fn('str')).toBe('')\r\n    expect(fn(NaN)).toBe('')\r\n    expect(fn({})).toBe('')\r\n  })\r\n})\r\n\r\ndescribe('addToDmy', ()=>{\r\n  const fn = addToDmy\r\n  , _fn = _compose([\r\n    mlsToDmy,\r\n    (date) => date.getTime(),\r\n    addToDmy\r\n  ]);\r\n  test('should return Date instance', ()=>{\r\n    expect(fn('01-02-2019', -1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 'str')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', null)).toBeInstanceOf(Date)\r\n    expect(fn('str', null)).toBeInstanceOf(Date)\r\n  })\r\n  test('should return dmy with added month to dmy format', ()=>{\r\n    expect(_fn('01-02-2019', -1)).toBe('01-01-2019')\r\n    expect(_fn('01-02-2019', -2)).toBe('01-12-2018')\r\n    expect(_fn('01-02-2019', -3)).toBe('01-11-2018')\r\n    expect(_fn('01-02-2019', -6)).toBe('01-08-2018')\r\n    expect(_fn('01-02-2019', -12)).toBe('01-02-2018')\r\n  })\r\n})\r\n\r\ndescribe('getYTDfromDmy', ()=>{\r\n  const fn = getYTDfromDmy\r\n  test('should return mls to start of year', ()=>{\r\n    expect(fn('01-01-2010')).toBe(Date.UTC(2010, 0, 1))\r\n    expect(fn('02-01-2010')).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n})\r\n\r\ndescribe('monthIndex', ()=>{\r\n  const fn = monthIndex\r\n  it('should return month index from 0 from str', ()=>{\r\n    expect(fn('january')).toBe(0)\r\n    expect(fn('January')).toBe(0)\r\n    expect(fn('december')).toBe(11)\r\n    expect(fn('December')).toBe(11)\r\n  })\r\n  it('should return -1 for edge cases', ()=>{\r\n    expect(fn('str')).toBe(-1)\r\n    expect(fn('Jan')).toBe(-1)\r\n    expect(fn('decembe')).toBe(-1)\r\n    expect(fn('')).toBe(-1)\r\n\r\n    expect(fn()).toBe(-1)\r\n    expect(fn(null)).toBe(-1)\r\n    expect(fn(1)).toBe(-1)\r\n    expect(fn({})).toBe(-1)\r\n  })\r\n})\r\n\r\n\r\ndescribe(\"getYmdhms\", ()=>{\r\n  const fn = getYmdhmUTC\r\n  it(\"should return str in format YYYY-MM-DD HH:MM UTC\", ()=>{\r\n    expect(fn(new Date(Date.UTC(2010, 0, 1)))).toBe('2010-01-01 00:00 UTC')\r\n    expect(fn(new Date(Date.UTC(2010, 0, 1, 1)))).toBe('2010-01-01 01:00 UTC')\r\n  })\r\n})\r\n\r\n\r\nDateUtilsWithMock()\r\n"],"file":"DateUtils.test.js"}