{"version":3,"sources":["../../../src/utils/__tests__/DateUtils.test.js"],"names":["MIN_YEAR","_compose","fns","reduce","f","g","describe","fn","isYmd","test","expect","toBe","undefined","isYmdOrEmpty","isDmyPeriod","dmyToUTC","Date","UTC","NaN","ymdToUTC","y","ymdhmsToUTC","UTC_MLS","toBeNaN","mlsToDmy","EMPTY","Number","MAX_SAFE_INTEGER","isDmy","getUTCTime","addToDmy","_fn","date","getTime","toBeInstanceOf","getYTDfromDmy","getYear","monthIndex","it","getYmdhmUTC"],"mappings":"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","sourcesContent":["import {\r\n  isYmd,\r\n  isYmdOrEmpty,\r\n  isDmyPeriod,\r\n  dmyToUTC,\r\n  ymdToUTC,\r\n  ymdhmsToUTC,\r\n  mlsToDmy,\r\n  isDmy,\r\n  getUTCTime,\r\n  addToDmy,\r\n  getYTDfromDmy,\r\n  getYear,\r\n  monthIndex,\r\n  getYmdhmUTC\r\n} from '../DateUtils';\r\n\r\nimport DateUtilsWithMock from './DateUtilsWithMock'\r\n\r\n// DateUtils configuration consts\r\nconst MIN_YEAR = 1990;\r\n\r\nconst _compose = fns => fns.reduce((f, g) => (...args) => f(g(...args)));\r\n\r\ndescribe('isYmd YYYY-MM-DD', () => {\r\n  const fn = isYmd;\r\n\r\n  test('should return true for valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-01-10\")).toBe(true)\r\n    expect(fn(\"2010-10-01\")).toBe(true)\r\n  })\r\n  test('should return false for not valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-14-01\")).toBe(false)\r\n    expect(fn(\"2010-02-32\")).toBe(false)\r\n  })\r\n  test(`min default valid value is ${MIN_YEAR}-01-01`, () => {\r\n    expect(fn(`${MIN_YEAR}-01-01`)).toBe(true)\r\n    expect(fn('1989-12-30')).toBe(false)\r\n  })\r\n  test('min default valid can be configured', () => {\r\n    expect(fn('1989-12-30', 0, 1989)).toBe(true)\r\n  })\r\n  test('should year be not future', () => {\r\n    expect(fn('2030-01-01')).toBe(false)\r\n\r\n    expect(fn('2030-01-01', 1)).toBe(false)\r\n    expect(fn('2030-01-01', 2)).toBe(false)\r\n    expect(fn('2030-01-01', 3)).toBe(false)\r\n    expect(fn('2030-01-01', 20)).toBe(true)\r\n  })\r\n  test('should return false in edge case', () => {\r\n     expect(fn('')).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn(undefined)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isYmdOrEmty YYYY-MM-DD', () => {\r\n  const fn = isYmdOrEmpty\r\n   test('should return is valid date or empty', () => {\r\n     expect(fn('')).toBe(true)\r\n     expect(fn(\"2010-01-10\")).toBe(true)\r\n     expect(fn(\"2010-10-01\")).toBe(true)\r\n\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn({})).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(()=>{})).toBe(false)\r\n     expect(fn(\"2010-20-20\")).toBe(false)\r\n     expect(fn(\"2010-40-40\")).toBe(false)\r\n   })\r\n})\r\n\r\ndescribe('isDmyPeriod', ()=>{\r\n  const fn = isDmyPeriod;\r\n  test('should return correct boolean', ()=>{\r\n    expect(fn('01-01-2010', '02-01-2010')).toBe(true)\r\n    expect(fn('01-01-2010', '01-01-2010')).toBe(true)\r\n    expect(fn('02-01-2010', '01-01-2010')).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('dmyToUTC', ()=>{\r\n  const fn = dmyToUTC;\r\n  test('should return UTC from DD-MM-YYYY', () => {\r\n    expect(fn(\"10-10-2010\")).toBe(Date.UTC(2010, 9, 10))\r\n    expect(fn(\"01-01-2010\")).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n  test('should return NaN in edge case', () => {\r\n    expect(fn(\"20-20-2010\")).toBe(NaN)\r\n    expect(fn(\"\")).toBe(NaN)\r\n    expect(fn(null)).toBe(NaN)\r\n    expect(fn(undefined)).toBe(NaN)\r\n  })\r\n})\r\n\r\ndescribe('ymdToUTC', ()=> {\r\n  const fn = ymdToUTC\r\n  test('should return mls UTC-0 for str YYYY-MM-DD', ()=>{\r\n    expect(fn('2010-01-01')).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n  test('should return mls UTC-0 for str YYYY-MM', ()=>{\r\n    expect(fn('2010-01')).toBe(Date.UTC(2010, 0, 31))\r\n  })\r\n  test('should return NaN for YYYY-MM edge case', ()=>{\r\n    expect(fn('2010-MM')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for str YYYY-QN', ()=>{\r\n    expect(fn('2010-Q1')).toBe(Date.UTC(2010, 2, 31))\r\n    expect(fn('2010-Q2')).toBe(Date.UTC(2010, 5, 30))\r\n  })\r\n  test('should return NaN for YYYY-QS edge case', ()=>{\r\n    expect(fn('2010-QS')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for str YYYY', ()=>{\r\n    expect(fn('2010')).toBe(Date.UTC(2010, 11, 31))\r\n  })\r\n  test('should return NaN for YYYY edge case', ()=>{\r\n    expect(fn('YYYY')).toBe(NaN)\r\n  })\r\n  test('should return mls UTC-0 for YYYY-MM-DD or NaN for more than 3 tokens', ()=>{\r\n    expect(fn('2010-01-01-12:00')).toBe(Date.UTC(2010, 0, 1))\r\n    expect(fn('2010-01-AA-12:00')).toBe(NaN)\r\n  })\r\n  test('should use option y for YYYY case', () => {\r\n    expect(fn(\"2010\")).toBe(Date.UTC(2010, 11, 31))\r\n    expect(fn(\"2010\", {y: 1})).toBe(Date.UTC(2010-1, 11, 31))\r\n  })\r\n})\r\n\r\ndescribe('ymdhmsToUTC', ()=> {\r\n  const fn = ymdhmsToUTC\r\n  //'2010-01-01 12:00:00'\r\n  , UTC_MLS = 1262347200000;\r\n  test('should retun mls UTC for str date', ()=> {\r\n    expect(fn('2010-01-01 12:00:00')).toBe(UTC_MLS)\r\n  })\r\n  test('should retun mls UTC for str date with dtDelimeter', ()=> {\r\n    expect(fn('2010-01-01T12:00:00', 'T')).toBe(UTC_MLS)\r\n  })\r\n  test('should retun mls UTC for str yyyy-mm-dd', ()=>{\r\n    expect(fn('2010-01-01')).toBe(1262304000000)\r\n  })\r\n  test('should return NaN for edge case', ()=>{\r\n    expect(fn()).toBeNaN()\r\n    expect(fn(null)).toBeNaN()\r\n    expect(fn('abcd')).toBeNaN()\r\n    expect(fn('2010')).toBeNaN()\r\n    expect(fn('2010-ab')).toBeNaN()\r\n    expect(fn('2010-01-01T12:00:00', 'A')).toBeNaN()\r\n  })\r\n})\r\n\r\ndescribe('formatTo', ()=>{\r\n  const fn = mlsToDmy;\r\n  const EMPTY = '';\r\n  test('should format to DD-MM-YYYY from ms', ()=>{\r\n    expect(fn(1514764800000)).toBe('01-01-2018')\r\n    expect(fn(1515542400000)).toBe('10-01-2018')\r\n    expect(fn(1538352000000)).toBe('01-10-2018')\r\n  })\r\n  test('should format to empty string in edge case', ()=>{\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn(NaN)).toBe(EMPTY)\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn('abc')).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(Number.MAX_SAFE_INTEGER)).toBe(EMPTY)\r\n  })\r\n})\r\n\r\ndescribe('isDmy', () => {\r\n  const fn = isDmy;\r\n  test('should return true for str in format DD-MM-YYY', () => {\r\n     expect(fn('10-10-2000')).toBe(true)\r\n     expect(fn('20-01-2000')).toBe(true)\r\n     expect(fn('01-12-2000')).toBe(true)\r\n  })\r\n  test(`should use defult min year value ${MIN_YEAR}`, ()=>{\r\n    expect(fn('31-12-1989')).toBe(false)\r\n  })\r\n  test('should use minYear param', () => {\r\n    expect(fn('10-10-2000', 2010)).toBe(false)\r\n  })\r\n  test('should return false for str not in format DD-MM-YYYY', () => {\r\n    expect(fn('10-14-2000')).toBe(false)\r\n    expect(fn('20-1-2000')).toBe(false)\r\n    expect(fn('2000-12-01')).toBe(false)\r\n  })\r\n  test('should return false in edge cases', () => {\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn('')).toBe(false)\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n    expect(fn(fn)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('getUTCTime', ()=>{\r\n  const fn = getUTCTime;\r\n  test('should return correct str from ms', ()=>{\r\n    expect(fn(1547205009808)).toBe('11:10')\r\n    expect(fn(1547204900008)).toBe('11:08')\r\n  })\r\n  test('should return empty string in edge case', ()=>{\r\n    expect(fn(undefined)).toBe('')\r\n    expect(fn(null)).toBe('')\r\n    expect(fn('str')).toBe('')\r\n    expect(fn(NaN)).toBe('')\r\n    expect(fn({})).toBe('')\r\n  })\r\n})\r\n\r\ndescribe('addToDmy', ()=>{\r\n  const fn = addToDmy\r\n  , _fn = _compose([\r\n    mlsToDmy,\r\n    (date) => date.getTime(),\r\n    addToDmy\r\n  ]);\r\n  test('should return Date instance', ()=>{\r\n    expect(fn('01-02-2019', -1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 1)).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', 'str')).toBeInstanceOf(Date)\r\n    expect(fn('01-02-2019', null)).toBeInstanceOf(Date)\r\n    expect(fn('str', null)).toBeInstanceOf(Date)\r\n  })\r\n  test('should return dmy with added month to dmy format', ()=>{\r\n    expect(_fn('01-02-2019', -1)).toBe('01-01-2019')\r\n    expect(_fn('01-02-2019', -2)).toBe('01-12-2018')\r\n    expect(_fn('01-02-2019', -3)).toBe('01-11-2018')\r\n    expect(_fn('01-02-2019', -6)).toBe('01-08-2018')\r\n    expect(_fn('01-02-2019', -12)).toBe('01-02-2018')\r\n  })\r\n})\r\n\r\ndescribe('getYTDfromDmy', ()=>{\r\n  const fn = getYTDfromDmy\r\n  test('should return mls to start of year', ()=>{\r\n    expect(fn('01-01-2010')).toBe(Date.UTC(2010, 0, 1))\r\n    expect(fn('02-01-2010')).toBe(Date.UTC(2010, 0, 1))\r\n  })\r\n})\r\n\r\ndescribe('getYear', ()=>{\r\n  const fn = getYear;\r\n  test('should return YYYY from YYYY-MM-DD', ()=>{\r\n    expect(fn('2010-01-01')).toBe('2010')\r\n  })\r\n  test('should return empty string for falsy input', ()=>{\r\n    expect(fn()).toBe('')\r\n    expect(fn(null)).toBe('')\r\n    expect(fn('')).toBe('')\r\n  })\r\n})\r\n\r\ndescribe('monthIndex', ()=>{\r\n  const fn = monthIndex\r\n  it('should return month index from 0 from str', ()=>{\r\n    expect(fn('january')).toBe(0)\r\n    expect(fn('January')).toBe(0)\r\n    expect(fn('december')).toBe(11)\r\n    expect(fn('December')).toBe(11)\r\n  })\r\n  it('should return -1 for edge cases', ()=>{\r\n    expect(fn('str')).toBe(-1)\r\n    expect(fn('Jan')).toBe(-1)\r\n    expect(fn('decembe')).toBe(-1)\r\n    expect(fn('')).toBe(-1)\r\n\r\n    expect(fn()).toBe(-1)\r\n    expect(fn(null)).toBe(-1)\r\n    expect(fn(1)).toBe(-1)\r\n    expect(fn({})).toBe(-1)\r\n  })\r\n})\r\n\r\n\r\ndescribe(\"getYmdhms\", ()=>{\r\n  const fn = getYmdhmUTC\r\n  it(\"should return str in format YYYY-MM-DD HH:MM UTC\", ()=>{\r\n    expect(fn(new Date(Date.UTC(2010, 0, 1)))).toBe('2010-01-01 00:00 UTC')\r\n    expect(fn(new Date(Date.UTC(2010, 0, 1, 1)))).toBe('2010-01-01 01:00 UTC')\r\n  })\r\n})\r\n\r\n\r\nDateUtilsWithMock()\r\n"],"file":"DateUtils.test.js"}