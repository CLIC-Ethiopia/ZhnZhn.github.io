{"version":3,"sources":["../../src/utils/ImArrayUtil.js"],"names":["ImArrayUtil","push","arr","obj","Object","assign","filterByPropFn","propName","propValue","filter","index","insertItem","item","slice","editByPropFn"],"mappings":";;;;;;;;;;;;;;;;AACA,IAAMA,cAAc;AAElBC,MAFkB,gBAEbC,GAFa,EAERC,GAFQ,EAEJ;AACX,WAAQD,GAAD,8CACEA,GADF,IACOE,OAAOC,MAAP,CAAc,EAAd,EAAkBF,GAAlB,CADP,KAEF,CAAEC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,GAAlB,CAAF,CAFL;AAGF,GANiB;;;AAQlBG,kBAAiB,wBAACC,QAAD;AAAA,WAAc,UAACL,GAAD,EAAMM,SAAN,EAAoB;AACjD,aAAON,IAAIO,MAAJ,CAAW,UAACN,GAAD,EAAMO,KAAN,EAAe;AAC7B,eAAOP,IAAII,QAAJ,MAAkBC,SAAzB;AACH,OAFM,CAAP;AAGD,KAJgB;AAAA,GARC;;AAclBG,YAdkB,sBAcPC,IAdO,EAcDF,KAdC,EAca;AAAA,QAAPR,GAAO,uEAAH,EAAG;;AAC7B,sDACOA,IAAIW,KAAJ,CAAU,CAAV,EAAaH,KAAb,CADP,IAEIN,OAAOC,MAAP,CAAc,EAAd,EAAkBO,IAAlB,CAFJ,oCAGOV,IAAIW,KAAJ,CAAUH,KAAV,CAHP;AAKA;;;;;;;;;;;;;;AAcD,GAlCiB;;;AAoClBI,gBAAe,sBAACP,QAAD;AAAA,WAAc,UAACL,GAAD,EAAMQ,KAAN,EAAaF,SAAb,EAA2B;AACtD,wDACKN,IAAIW,KAAJ,CAAU,CAAV,EAAaH,KAAb,CADL,IAEEN,OAAOC,MAAP,CAAc,EAAd,EAAkBH,IAAIQ,KAAJ,CAAlB,oCAAiCH,QAAjC,EAA4CC,SAA5C,EAFF,oCAGKN,IAAIW,KAAJ,CAAUH,QAAM,CAAhB,CAHL;AAKD,KANc;AAAA;;AApCG,CAApB;;kBA8CeV,W","file":"ImArrayUtil.js","sourcesContent":["\r\nconst ImArrayUtil = {\r\n\r\n  push(arr, obj){\r\n     return (arr)\r\n        ? [...arr, Object.assign({}, obj)]\r\n        : [ Object.assign({}, obj) ];\r\n  },\r\n\r\n  filterByPropFn : (propName) => (arr, propValue) => {\r\n    return arr.filter((obj, index) =>{\r\n        return obj[propName] !== propValue;\r\n    });\r\n  },\r\n\r\n  insertItem(item, index, arr=[]){\r\n    return [\r\n        ...arr.slice(0, index),\r\n        Object.assign({}, item),\r\n        ...arr.slice(index)\r\n    ]\r\n    /*\r\n    if (index !== 0){\r\n      return [\r\n          ...arr.slice(0, index),\r\n          Object.assign({}, item),\r\n          ...arr.slice(index)\r\n      ]\r\n    } else {\r\n       return [\r\n          Object.assign({}, item),\r\n          ...arr\r\n      ]\r\n    }\r\n    */\r\n  },\r\n\r\n  editByPropFn : (propName) => (arr, index, propValue) => {\r\n    return [\r\n      ...arr.slice(0, index),\r\n      Object.assign({}, arr[index], { [propName]: propValue} ),\r\n      ...arr.slice(index+1)\r\n    ]\r\n  }\r\n\r\n};\r\n\r\nexport default ImArrayUtil\r\n"]}