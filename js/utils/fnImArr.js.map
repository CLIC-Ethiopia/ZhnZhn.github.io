{"version":3,"sources":["../../src/utils/fnImArr.js"],"names":["_assign","Object","assign","_isArr","Array","isArray","fnImArr","push","arr","obj","filterByPropFn","propName","propValue","filter","insertItem","item","index","slice","editByPropFn"],"mappings":";;;;AACA,IAAMA,OAAO,GAAGC,MAAM,CAACC,MAAvB;AAAA,IACEC,MAAM,GAAGC,KAAK,CAACC,OADjB;AAGA,IAAMC,OAAO,GAAG;AAEdC,EAAAA,IAFc,gBAETC,GAFS,EAEJC,GAFI,EAEA;AACX,WAAON,MAAM,CAACK,GAAD,CAAN,aACEA,GADF,GACOR,OAAO,CAAC,EAAD,EAAKS,GAAL,CADd,KAEF,CAAET,OAAO,CAAC,EAAD,EAAKS,GAAL,CAAT,CAFL;AAGF,GANa;AAQdC,EAAAA,cAAc,EAAE,wBAACC,QAAD;AAAA,WAAc,UAACH,GAAD,EAAMI,SAAN,EAAoB;AAChD,aAAOJ,GAAG,CAACK,MAAJ,CACL,UAAAJ,GAAG;AAAA,eAAIA,GAAG,CAACE,QAAD,CAAH,KAAkBC,SAAtB;AAAA,OADE,CAAP;AAGD,KAJe;AAAA,GARF;AAcdE,EAAAA,UAdc,sBAcHC,IAdG,EAcGC,KAdH,EAcUR,GAdV,EAcc;AAC1B,WAAOL,MAAM,CAACK,GAAD,CAAN,aAECA,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAaD,KAAb,CAFD,GAGFhB,OAAO,CAAC,EAAD,EAAKe,IAAL,CAHL,GAICP,GAAG,CAACS,KAAJ,CAAUD,KAAV,CAJD,IAMH,CAAEhB,OAAO,CAAC,EAAD,EAAKe,IAAL,CAAT,CANJ;AAOD,GAtBa;AAwBdG,EAAAA,YAAY,EAAE,sBAACP,QAAD;AAAA,WAAc,UAACH,GAAD,EAAMQ,KAAN,EAAaJ,SAAb,EAA2B;AAAA;;AACrD,uBACKJ,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAaD,KAAb,CADL,GAEEhB,OAAO,CAAC,EAAD,EAAKQ,GAAG,CAACQ,KAAD,CAAR,2BAAoBL,QAApB,IAA+BC,SAA/B,YAFT,GAGKJ,GAAG,CAACS,KAAJ,CAAUD,KAAK,GAAC,CAAhB,CAHL;AAKD,KANa;AAAA;AAxBA,CAAhB;eAkCeV,O","sourcesContent":["\r\nconst _assign = Object.assign\r\n, _isArr = Array.isArray;\r\n\r\nconst fnImArr = {\r\n\r\n  push(arr, obj){\r\n     return _isArr(arr)\r\n        ? [...arr, _assign({}, obj)]\r\n        : [ _assign({}, obj) ];\r\n  },\r\n\r\n  filterByPropFn: (propName) => (arr, propValue) => {\r\n    return arr.filter(\r\n      obj => obj[propName] !== propValue\r\n    );\r\n  },\r\n\r\n  insertItem(item, index, arr){\r\n    return _isArr(arr)\r\n      ? [\r\n         ...arr.slice(0, index),\r\n         _assign({}, item),\r\n         ...arr.slice(index)\r\n        ]\r\n      : [ _assign({}, item) ];\r\n  },\r\n\r\n  editByPropFn: (propName) => (arr, index, propValue) => {\r\n    return [\r\n      ...arr.slice(0, index),\r\n      _assign({}, arr[index], { [propName]: propValue} ),\r\n      ...arr.slice(index+1)\r\n    ]\r\n  }\r\n\r\n};\r\n\r\nexport default fnImArr\r\n"],"file":"fnImArr.js"}