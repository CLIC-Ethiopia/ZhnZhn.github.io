{"version":3,"sources":["../../src/utils/DateUtils.js"],"names":["MIN_YEAR","DAY_IN_MLS","_currentYear","_isNumber","n","_isNaN","Number","isNaN","_isStr","str","_isUndef","v","_pad2","_toIntMonth","parseInt","_splitDateStr","toString","split","_isLikelyQuarter","toUpperCase","_notInIntervalStrict","min","max","_notInLengthMinMax","length","_isYmd","yStr","mStr","dStr","nForecastDate","minYear","_nowYear","Date","getFullYear","_getDaysInYm","y","m","getDate","_getTimeUTC","d","getUTCHours","getUTCMinutes","_getYmdUTC","yearMinus","getUTCFullYear","getUTCMonth","slice","getUTCDate","MONTH_HP","january","february","march","april","may","june","july","august","september","october","november","december","isYmd","_str","trim","isYmdOrEmpty","getFromDate","dNow","getToDate","getYear","getCurrentYear","getYmdhmUTC","date","_d","mlsToDmy","mlsUTC","isFinite","dmyToUTC","UTC","NaN","isDmyPeriod","from","to","isDmy","ymdToUTC","dateStr","option","_arr","_len","yearStr","_m","_q","_y","ymdhmsToUTC","dtDelimeter","ymdStr","hmsStr","monthStr","dayStr","hourStr","minuteStr","secondStr","getUTCTime","ms","isInteger","addToDmy","dmy","month","_to","setUTCMonth","getYTDfromDmy","_year","getDaysFromYmd","ymd","_fromMls","Math","ceil","getTime","monthIndex","_monthIndex","String","toLowerCase"],"mappings":"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","sourcesContent":["\r\nconst MIN_YEAR = 1990;\r\nconst DAY_IN_MLS = 1000*60*60*24;\r\nlet _currentYear;\r\n\r\nconst _isNumber = n => typeof n === 'number';\r\nconst _isNaN = Number.isNaN;\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isUndef = v => typeof v === 'undefined';\r\nconst _pad2 = n => n<10 ? '0'+n : ''+n;\r\n\r\nconst _toIntMonth = str => parseInt(str, 10)-1;\r\nconst _splitDateStr = str => (str || '')\r\n  .toString().split('-');\r\n\r\nconst _isLikelyQuarter = str => _isStr(str)\r\n  && str[0].toUpperCase() === 'Q';\r\n\r\nconst _notInIntervalStrict = (n, min, max) => _isNaN(n) || (n<min || n>max);\r\nconst _notInLengthMinMax = (str, length, min, max) =>\r\n (_isStr(str) && str.length !== length)\r\n || _notInIntervalStrict(parseInt(str, 10), min, max)\r\n   ? true\r\n   : false;\r\n\r\nconst _isYmd = (yStr, mStr, dStr, {nForecastDate=0, minYear=MIN_YEAR} = {}) => {\r\n  const _nowYear = new Date().getFullYear();\r\n\r\n  if( _notInLengthMinMax(yStr, 4, minYear, _nowYear + nForecastDate)\r\n   || _notInLengthMinMax(mStr, 2, 1, 12)\r\n   || _notInLengthMinMax(dStr, 2, 1, 31)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst _getDaysInYm = (y, m) => (new Date(y, m, 0)).getDate();\r\n\r\nconst _getTimeUTC = d => `${_pad2(d.getUTCHours())}:${_pad2(d.getUTCMinutes())}`;\r\nconst _getYmdUTC = (d, yearMinus) => (d.getUTCFullYear()-yearMinus)\r\n   + \"-\" + (\"0\"+(d.getUTCMonth() + 1)).slice(-2)\r\n   + \"-\" + (\"0\"+d.getUTCDate()).slice(-2);\r\n\r\nconst MONTH_HP = {\r\n  january: 0, february: 1,\r\n  march: 2, april: 3, may: 4,\r\n  june: 5, july: 6, august: 7,\r\n  september: 8, october: 9, november: 10,\r\n  december: 11\r\n};\r\n\r\n//YYYY-MM-DD valid format\r\nexport const isYmd = (\r\n  str,\r\n  nForecastDate=0,\r\n  minYear=MIN_YEAR\r\n) => {\r\n  if (!_isStr(str)) {\r\n\t return false;\r\n\t}\r\n\tconst _str = str.trim();\r\n\tif (_str.length !== 10) {\r\n\t return false;\r\n\t}\r\n\r\n  const [y, m, d] = _str.split('-');\r\n  return _isYmd(y, m, d, {nForecastDate, minYear});\r\n}\r\n\r\nexport const isYmdOrEmpty = (\r\n  str\r\n) => str === '' ? true : isYmd(str);\r\n\r\nexport const getFromDate = (\r\n  yearMinus=2\r\n) => {\r\n\tconst dNow = new Date();\r\n\treturn _getYmdUTC(dNow, yearMinus);\r\n}\r\n\r\nexport const getToDate = () => getFromDate(0)\r\n\r\n//YYYY-MM-DD\r\nexport const getYear = str => (str || '').split('-')[0]\r\n\r\nexport const getCurrentYear = () => _currentYear\r\n  ? _currentYear\r\n  : (_currentYear = getYear(getFromDate(0)))\r\n\r\nexport const getYmdhmUTC = (date) => {\r\n  const _d = date || (new Date());\r\n  return `${_getYmdUTC(_d, 0)} ${_getTimeUTC(_d)} UTC`;\r\n}\r\n\r\nexport const mlsToDmy = (mlsUTC) => {\r\n\tif ( !(_isNumber(mlsUTC) && isFinite(mlsUTC)) ) {\r\n\t\treturn '';\r\n\t}\r\n\tconst d = new Date(mlsUTC);\r\n\tif (d.toString() === 'Invalid Date') {\r\n\t\treturn '';\r\n\t}\r\n\t return (\"0\" + d.getUTCDate()).slice(-2)\r\n\t   + \"-\" + (\"0\" + (d.getUTCMonth() + 1)).slice(-2)\r\n\t   + \"-\" + d.getUTCFullYear() ;\r\n}\r\n\r\nexport const dmyToUTC = (str) => {\r\n\tconst [d, m, y] = _splitDateStr(str);\r\n  return _isYmd(y, m, d)\r\n    ? Date.UTC(y, _toIntMonth(m), d)\r\n    : NaN;\r\n}\r\n\r\nexport const isDmyPeriod = (\r\n  from,\r\n  to\r\n) => dmyToUTC(from) <= dmyToUTC(to)\r\n\r\nexport const isDmy = (\r\n  str,\r\n  minYear=MIN_YEAR\r\n) => {\r\n\tconst [ d, m, y ] = _splitDateStr(str);\r\n\treturn _isYmd(y, m, d, { minYear });\r\n}\r\n\r\nexport const ymdToUTC = (\r\n  dateStr,\r\n  option={}\r\n) => {\r\n\tconst _arr = _splitDateStr(dateStr)\r\n\t, _len = _arr.length\r\n  , [yearStr, mStr, dStr] = _arr;\r\n\r\n\tif (_len === 3) {\r\n\t return Date.UTC(yearStr, _toIntMonth(mStr), dStr);\r\n\t}\r\n\r\n  if ( _len === 2 && mStr !== ''){\r\n\t const _m = parseInt(mStr, 10);\r\n\t if (!_isNaN(_m)) {\r\n\t\t\tconst _d = _getDaysInYm(yearStr, _m);\r\n\t    return Date.UTC(yearStr, _m - 1, _d);\r\n\t // YYYY-Q format\r\n\t  } else if (_isLikelyQuarter(_arr[1])) {\r\n\t\t  const _q = parseInt(_arr[1][1], 10);\r\n      if (_isNaN(_q)) { return _q; }\r\n      const _d = _getDaysInYm(_arr[0], _q*3);\r\n\t\t\treturn Date.UTC( _arr[0], _q*3 - 1, _d);\r\n\t } else {\r\n\t\t return _m;\r\n\t }\r\n\t}\r\n\r\n  if ( _len === 1) {\r\n   const { y=0 } = option\r\n   , _y = parseInt(yearStr, 10) - y;\r\n\t return !_isNaN(_y)\r\n     ? Date.UTC(_y, 11, 31)\r\n     : _y;\r\n\t}\r\n\r\n  return Date.UTC(yearStr, _toIntMonth(mStr), dStr);\r\n}\r\n\r\nexport const ymdhmsToUTC = (\r\n  dateStr,\r\n  dtDelimeter=' '\r\n) => {\r\n\tconst [ymdStr, hmsStr=''] = (dateStr || '').split(dtDelimeter)\r\n\t, [yearStr, monthStr, dayStr] = ymdStr.split('-')\r\n\t, [hourStr='', minuteStr='', secondStr=''] = hmsStr.split(':');\r\n\treturn Date.UTC(\r\n\t  yearStr, _toIntMonth(monthStr), dayStr,\r\n\t  hourStr, minuteStr, secondStr\r\n\t);\r\n}\r\n\r\nexport const getUTCTime = (ms) => {\r\n\tif (!Number.isInteger(ms)) {\r\n   return '';\r\n  }\r\n  const _d = new Date(ms);\r\n  return _getTimeUTC(_d);\r\n}\r\n\r\nexport const addToDmy = (dmy, month) => {\r\n\t if (!isDmy(dmy))\t{\r\n\t\t return new Date(0);\r\n\t }\r\n\t if (!Number.isInteger(month))\t{\r\n\t\t return new Date(dmyToUTC(dmy));\r\n\t }\r\n   const _to = new Date(dmyToUTC(dmy));\r\n   return new Date(_to.setUTCMonth(_to.getUTCMonth()+month));\r\n }\r\n\r\nexport const getYTDfromDmy = (dmy) => {\r\n\tconst _year = dmy.split('-')[2];\r\n\treturn dmyToUTC(`01-01-${_year}`)\r\n}\r\n\r\nexport const getDaysFromYmd = ymd => {\r\n  const _fromMls = ymdToUTC(ymd);\r\n  return Math.ceil(((new Date()).getTime() - _fromMls)/DAY_IN_MLS);\r\n}\r\n\r\nexport const monthIndex = str => {\r\n  if (!_isStr(str)) {\r\n   return -1;\r\n  }\r\n  const _monthIndex = MONTH_HP[String(str).toLowerCase()];\r\n  return _isUndef(_monthIndex)\r\n   ? -1\r\n   : _monthIndex;\r\n}\r\n"],"file":"DateUtils.js"}