{"version":3,"sources":["../../src/utils/DateUtils.js"],"names":["_fnForMonthSelect","mapDateDf","options","dNow","Date","now","dateDefault","y","getUTCFullYear","m","getUTCMonth","i","push","caption","value","_fnForQuarterSelect","delimeter","_c","Math","floor","qNow","_fnForYearSelect","DateUtils","isValidDate","str","nForecastDate","Object","prototype","toString","call","trim","length","match","size","thisYear","getFullYear","minYear","isValidDateOrEmpty","getFromDate","yearMinus","dateNow","yearTo","monthTo","dayTo","getUTCDate","getToDate","formatTo","millisUTC","d","slice","createEurostatSelect","frequency","dmyToUTC","_str","split","UTC","parseInt","isFormatDmy"],"mappings":"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","file":"DateUtils.js","sourcesContent":["\r\nconst _fnForMonthSelect = function(mapDateDf=2){\r\n\tconst options = []\r\n\t, dNow = new Date(Date.now())\r\n\r\n\tlet dateDefault\r\n\t, y = dNow.getUTCFullYear()\r\n\t, m = dNow.getUTCMonth()\r\n\t, i;\r\n\r\n\tfor(i=0; i<10; i++){\r\n\t\tm = m - 1;\r\n\t\tif (m > -1){\r\n\t\t\toptions.push({\r\n\t\t\t\tcaption: `${y}M${ (m+1>9) ? m+1 : '0'+(m+1)}`,\r\n\t\t\t\tvalue : `${y}M${ (m+1>9) ? m+1 : '0'+(m+1)}`\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tm = 11;\r\n\t\t\ty = y - 1;\r\n\t\t\toptions.push({\r\n\t\t\t\tcaption: `${y}M12`,\r\n\t\t\t\tvalue : `${y}M12`\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (i === mapDateDf){\r\n\t\t\tdateDefault = `${y}M${ (m+1>9) ? m+1 : '0'+(m+1)}`\r\n\t\t}\r\n\t}\r\n\r\n\treturn { options, dateDefault };\r\n}\r\n\r\nconst _fnForQuarterSelect = function(mapDateDf=1, delimeter='Q'){\r\n\tconst options = []\r\n\t, dNow = new Date(Date.now())\r\n\r\n\tlet dateDefault\r\n\t, y = dNow.getUTCFullYear()\r\n\t, m = dNow.getUTCMonth()\r\n\t, _c = Math.floor( (m + 1) / 3)\r\n\t, qNow = ( _c === 4 )\r\n\t      ? 4\r\n\t\t\t\t: _c + 1;\r\n\r\n\tqNow = qNow - 1;\r\n\tlet i;\r\n\tfor (i=0; i<4; i++){\r\n\t\t if (qNow < 1) { y = y - 1; qNow = 4; }\r\n\r\n\t\t options.push({\r\n\t\t\t caption : `${y}${delimeter}${qNow}`,\r\n\t\t\t value : `${y}${delimeter}${qNow}`\r\n\t\t })\r\n\r\n\t\t if (i === mapDateDf) {\r\n\t\t    dateDefault = `${y}${delimeter}${qNow}`\r\n\t\t }\r\n\r\n\t\t qNow = qNow - 1;\r\n\t}\r\n\r\n\treturn { options, dateDefault };\r\n};\r\n\r\nconst _fnForYearSelect = function(mapDateDf=1){\r\n\tconst options = []\r\n\t, dNow = new Date(Date.now())\r\n\r\n\tlet dateDefault\r\n\t, y = dNow.getUTCFullYear()\r\n  , i;\r\n\tfor (i=0; i<8; i++){\r\n\t\toptions.push({\r\n\t\t\tcaption: ''+y,\r\n\t\t\tvalue: ''+y\r\n\t\t});\r\n\t\tif ( i === mapDateDf) {\r\n\t\t\tdateDefault = ''+y;\r\n\t\t}\r\n\t\ty = y - 1;\r\n\t}\r\n\r\n\treturn { options, dateDefault };\r\n}\r\n\r\nconst DateUtils = {\r\n\r\n\tisValidDate(str, nForecastDate=0){\r\n\t\t // STRING FORMAT yyyy-mm-dd\r\n\r\n\t\t if ( Object.prototype.toString.call(str) !== \"[object String]\" ||\r\n\t        !str || str.trim().length !== 10 ) {\r\n\t\t    return false;\r\n\t\t }\r\n\r\n\t\t // m[1] is year 'YYYY' * m[2] is month 'MM' * m[3] is day 'DD'\r\n\t\t let m = str.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n\t\t // STR IS NOT FIT m IS NOT OBJECT\r\n\t\t if( m === null || typeof m !== 'object') { return false; }\r\n\r\n\t\t // CHECK m TYPE\r\n\t\t if (typeof m !== 'object' && m !== null && m.size!==3) { return false; }\r\n\r\n\t\t let thisYear = new Date().getFullYear();\r\n\t\t let minYear = 1999;\r\n\r\n\t\t// YEAR CHECK\r\n\t\t if( (m[1].length < 4) || m[1] < minYear || m[1] > thisYear + nForecastDate) { return false; }\r\n\t\t// MONTH CHECK\r\n\t\t if( (m[2].length < 2) || m[2] < 1 || m[2] > 12) { return false;}\r\n\t\t// DAY CHECK\r\n\t\t if( (m[3].length < 2) || m[3] < 1 || m[3] > 31) { return false;}\r\n\r\n\t\t return true;\r\n\t},\r\n\r\n\tisValidDateOrEmpty(str){\r\n\t\tif ( str === '') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn DateUtils.isValidDate(str);\r\n\t\t}\r\n\t},\r\n\r\n\tgetFromDate(yearMinus=2){\r\n\t\tconst dateNow = new Date()\r\n\t\t    , yearTo = dateNow.getUTCFullYear();\r\n\r\n\t\tlet monthTo = dateNow.getUTCMonth() + 1;\r\n\t\tif ( monthTo<10 ){\r\n\t\t\tmonthTo = \"0\" + monthTo;\r\n\t\t}\r\n\r\n\t\tlet dayTo = dateNow.getUTCDate();\r\n\t\tif ( dayTo<10 ){\r\n\t\t\tdayTo = \"0\" + dayTo;\r\n\t\t}\r\n\r\n\t\treturn (yearTo-yearMinus) + \"-\" + monthTo + \"-\" + dayTo;\r\n\t},\r\n\r\n\tgetToDate(){\r\n\t\tconst dateNow = new Date()\r\n\t\t    , yearTo = dateNow.getUTCFullYear();\r\n\r\n\t\tlet monthTo = dateNow.getUTCMonth() + 1;\r\n\t\tif ( monthTo<10 ){\r\n\t\t\tmonthTo = \"0\" + monthTo;\r\n\t\t}\r\n\r\n\t\tlet dayTo = dateNow.getUTCDate();\r\n\t\tif ( dayTo<10 ){\r\n\t\t\tdayTo = \"0\" + dayTo;\r\n\t\t}\r\n\r\n\t\treturn yearTo + \"-\" + monthTo + \"-\" + dayTo;\r\n\t},\r\n\r\n\tformatTo(millisUTC){\r\n\t  const d = new Date(millisUTC);\r\n\t  return (\"0\" + d.getUTCDate()).slice(-2)\r\n\t         + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n\t         + \"-\" + d.getUTCFullYear() ;\r\n\t},\r\n\r\n\tcreateEurostatSelect(frequency='M', mapDateDf){\r\n\t\t if (frequency === 'M'){\r\n\t\t\t return _fnForMonthSelect(mapDateDf);\r\n\t\t } else if ( frequency === 'Q'){\r\n\t\t\t return _fnForQuarterSelect(mapDateDf);\r\n\t\t } else if ( frequency === 'K') {\r\n\t\t\t return _fnForQuarterSelect(mapDateDf, 'K');\r\n\t\t } else if ( frequency === 'Y'){\r\n\t\t\t return _fnForYearSelect(mapDateDf);\r\n\t\t }\r\n\t},\r\n\r\n dmyToUTC(str){\r\n\t  const _str = str || ''\r\n\t\t    , [ d=10, m=10, y=1970 ] = _str.toString().split('-');\r\n\t\tif (DateUtils.isValidDate(`${y}-${m}-${d}`)){\r\n\t\t\treturn Date.UTC(y, (parseInt(m, 10)-1), d)\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n },\r\n\r\n isFormatDmy(str){\r\n\t const _str = str || ''\r\n\t\t\t , [ d=10, m=10, y=1000 ] = _str.toString().split('-');\r\n\t\treturn DateUtils.isValidDate(`${y}-${m}-${d}`);\r\n }\r\n\r\n};\r\n\r\nexport default DateUtils;\r\n"]}