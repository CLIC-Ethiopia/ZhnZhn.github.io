{"version":3,"sources":["../../src/utils/DateUtils.js"],"names":["MIN_YEAR","_isNaN","Number","isNaN","_isStr","str","_pad2","n","_isLikelyQuarter","toUpperCase","DateUtils","isYmd","nForecastDate","_str","trim","length","m","match","thisYear","Date","getFullYear","isYmdOrEmpty","getFromDate","yearMinus","dNow","getUTCFullYear","getUTCMonth","slice","getUTCDate","getToDate","mlsToDmy","mlsUTC","isFinite","d","toString","dmyToUTC","split","y","UTC","parseInt","isDmy","ymdToUTC","dateStr","_arr","_len","_m","_d","getDate","_q","ymdtToUTC","ymdhmsToUTC","_dtArr","_ymdArr","_hmsArr","getUTCTime","ms","isInteger","getUTCHours","getUTCMinutes","addToDmy","dmy","month","_to","setUTCMonth","getYTDfromDmy","_year"],"mappings":"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","sourcesContent":["\r\nconst MIN_YEAR = 1990;\r\n\r\nconst _isNaN = Number.isNaN || isNaN;\r\nconst _isStr = str => typeof str === 'string';\r\nconst _pad2 = n => n<10 ? '0'+n : ''+n;\r\n\r\nconst _isLikelyQuarter = (str) => _isStr(str)\r\n  && str[0].toUpperCase() === 'Q';\r\n\r\nconst DateUtils = {\r\n\r\n  //YYYY-MM-DD valid format\r\n\tisYmd(str, nForecastDate=0){\r\n     if (typeof str !== 'string') {\r\n\t\t\t return false;\r\n\t\t }\r\n\t\t const _str = str.trim();\r\n\t\t if (_str.length !== 10) {\r\n\t\t\t return false;\r\n\t\t }\r\n\r\n\t\t // m[1] is year 'YYYY' * m[2] is month 'MM' * m[3] is day 'DD'\r\n\t\t const m = _str.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n\t\t // STR IS NOT FIT m IS NOT OBJECT\r\n\t\t if( m === null || typeof m !== 'object' || m.length!==4) {\r\n\t\t\t return false;\r\n\t\t }\r\n\r\n\t\t const thisYear = new Date().getFullYear();\r\n\r\n\t\t// YEAR CHECK\r\n\t\t if( (m[1].length < 4) || m[1] < MIN_YEAR || m[1] > thisYear + nForecastDate) { return false; }\r\n\t\t// MONTH CHECK\r\n\t\t if( (m[2].length < 2) || m[2] < 1 || m[2] > 12) { return false;}\r\n\t\t// DAY CHECK\r\n\t\t if( (m[3].length < 2) || m[3] < 1 || m[3] > 31) { return false;}\r\n\r\n\t\t return true;\r\n\t},\r\n\r\n\tisYmdOrEmpty(str){\r\n\t\treturn (str === '')\r\n\t\t  ? true\r\n\t\t\t: DateUtils.isYmd(str);\r\n\t},\r\n\r\n\tgetFromDate(yearMinus=2){\r\n\t\tconst dNow = new Date();\r\n\t\treturn (dNow.getUTCFullYear()-yearMinus)\r\n\t\t   + \"-\" + (\"0\"+(dNow.getUTCMonth() + 1)).slice(-2)\r\n\t\t\t + \"-\" + (\"0\"+dNow.getUTCDate()).slice(-2);\r\n\t},\r\n\r\n\tgetToDate(){\r\n\t\treturn DateUtils.getFromDate(0);\r\n\t},\r\n\r\n\tmlsToDmy(mlsUTC){\r\n\t\tif (typeof mlsUTC !== 'number'\r\n\t\t    || !isFinite(mlsUTC)\r\n\t\t) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst d = new Date(mlsUTC);\r\n\t\tif (d.toString() === 'Invalid Date') {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t  return (\"0\" + d.getUTCDate()).slice(-2)\r\n\t         + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n\t         + \"-\" + d.getUTCFullYear() ;\r\n\t},\r\n\r\n dmyToUTC(str){\r\n\t  const _str = str || ''\r\n\t\t    , [ d=10, m=10, y=1970 ] = _str.toString().split('-');\r\n\t\tif (DateUtils.isYmd(`${y}-${m}-${d}`)){\r\n\t\t\treturn Date.UTC(y, (parseInt(m, 10)-1), d)\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n },\r\n\r\n isDmy(str){\r\n\t const _str = str || ''\r\n\t , [ d=10, m=10, y=MIN_YEAR-1 ] = _str.toString().split('-');\r\n\t return DateUtils.isYmd(`${y}-${m}-${d}`);\r\n },\r\n\r\n ymdToUTC: (dateStr) => {\r\n\t const _arr = dateStr.split('-')\r\n\t\t\t , _len = _arr.length;\r\n\t if (_len === 3) {\r\n\t\t return Date.UTC( _arr[0], (parseInt(_arr[1], 10)-1), _arr[2] );\r\n\t } else if ( _len === 2 && _arr[1] !== ''){\r\n\t\t const _m = parseInt(_arr[1], 10);\r\n\t\t if (!_isNaN(_m)) {\r\n\t\t\t\tconst  _d = (new Date(_arr[0], _m, 0)).getDate();\r\n\t\t    return Date.UTC( _arr[0], _m - 1, _d );\r\n\t\t // YYYY-Q format\r\n\t } else if (_isLikelyQuarter(_arr[1])) {\r\n\t\t\t  const _q = parseInt(_arr[1][1], 10);\r\n\t\t\t\treturn !_isNaN(_q)\r\n\t\t\t\t  ? Date.UTC( _arr[0], _q*3 - 1, 30)\r\n\t\t\t\t\t: _q;\r\n\t\t } else {\r\n\t\t\t return _m;\r\n\t\t }\r\n\t } else if ( _len === 1) {\r\n\t\t return Date.UTC( _arr[0], 11, 31 );\r\n\t }\r\n },\r\n ymdtToUTC(dateStr) {\r\n\t const _arr = dateStr.split('-')\r\n\t\t\t , _d = _arr[2].split(' ')[0];\r\n\t return Date.UTC(\r\n\t\t _arr[0], (parseInt(_arr[1], 10)-1), _d\r\n\t );\r\n },\r\n ymdhmsToUTC(dateStr) {\r\n\t const _dtArr = dateStr.split(' ')\r\n\t , _ymdArr = _dtArr[0].split('-')\r\n\t , _hmsArr = _dtArr[1].split(':');\r\n\t return Date.UTC(\r\n\t\t _ymdArr[0], (parseInt(_ymdArr[1], 10)-1), _ymdArr[2],\r\n\t\t _hmsArr[0], _hmsArr[1], _hmsArr[2]\r\n\t );\r\n },\r\n\r\n getUTCTime: (ms) => {\r\n\t if (!Number.isInteger(ms)) {\r\n     return '';\r\n   }\r\n   const _d = new Date(ms);\r\n   return `${_pad2(_d.getUTCHours())}:${_pad2(_d.getUTCMinutes())}`;\r\n },\r\n\r\n  addToDmy: (dmy, month) => {\r\n\t if (!DateUtils.isDmy(dmy))\t{\r\n\t\t return new Date(0);\r\n\t }\r\n\t if (!Number.isInteger(month))\t{\r\n\t\t return new Date(DateUtils.dmyToUTC(dmy));\r\n\t }\r\n   const _to = new Date(DateUtils.dmyToUTC(dmy));\r\n   return new Date(_to.setUTCMonth(_to.getUTCMonth()+month));\r\n },\r\n\r\n getYTDfromDmy: (dmy) => {\r\n\t const _year = dmy.split('-')[2];\r\n\t return DateUtils.dmyToUTC(`01-01-${_year}`)\r\n }\r\n\r\n};\r\n\r\nexport default DateUtils;\r\n"],"file":"DateUtils.js"}