{"version":3,"sources":["../../src/utils/DateUtils.js"],"names":["MIN_YEAR","DAY_IN_MLS","_isNaN","n","_isStr","str","_isUndef","v","_pad2","_toIntMonth","parseInt","_splitDateStr","toString","split","_isLikelyQuarter","toUpperCase","_notInIntervalStrict","min","max","_notInLengthMinMax","length","_isYmd","yStr","mStr","dStr","nForecastDate","minYear","_nowYear","Date","getFullYear","_getDaysInYm","y","m","getDate","_getTimeUTC","d","getUTCHours","getUTCMinutes","_getYmdUTC","yearMinus","getUTCFullYear","getUTCMonth","slice","getUTCDate","MONTH_HP","january","february","march","april","may","june","july","august","september","october","november","december","DateUtils","isYmd","_str","trim","_arr","isYmdOrEmpty","getFromDate","dNow","getToDate","getYmdhmUTC","date","_d","mlsToDmy","mlsUTC","isFinite","dmyToUTC","UTC","NaN","isDmyPeriod","from","to","isDmy","ymdToUTC","dateStr","option","_len","yearStr","_m","_q","_y","ymdhmsToUTC","_dtArr","_ymdArr","_hmsArr","getUTCTime","ms","Number","isInteger","addToDmy","dmy","month","_to","setUTCMonth","getYTDfromDmy","_year","getDaysFromYmd","ymd","_fromMls","Math","ceil","getTime","monthIndex","_monthIndex","String","toLowerCase"],"mappings":"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","sourcesContent":["\r\nconst MIN_YEAR = 1990;\r\nconst DAY_IN_MLS = 1000*60*60*24;\r\n\r\nconst _isNaN = n => typeof n === 'number'\r\n  && (n-n !== 0);\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isUndef = v => typeof v === 'undefined';\r\nconst _pad2 = n => n<10 ? '0'+n : ''+n;\r\n\r\nconst _toIntMonth = str => parseInt(str, 10)-1;\r\nconst _splitDateStr = str => (str || '')\r\n  .toString().split('-');\r\n\r\nconst _isLikelyQuarter = (str) => _isStr(str)\r\n  && str[0].toUpperCase() === 'Q';\r\n\r\n\r\nconst _notInIntervalStrict = (n, min, max) => _isNaN(n) || (n<min || n>max);\r\nconst _notInLengthMinMax = (str, length, min, max) =>\r\n (typeof str === 'string' && str.length !== length)\r\n || _notInIntervalStrict(parseInt(str, 10), min, max)\r\n   ? true\r\n   : false;\r\n\r\nconst _isYmd = (yStr, mStr, dStr, {nForecastDate=0, minYear=MIN_YEAR} = {}) => {\r\n  const _nowYear = new Date().getFullYear();\r\n\r\n  if( _notInLengthMinMax(yStr, 4, minYear, _nowYear + nForecastDate)\r\n   || _notInLengthMinMax(mStr, 2, 1, 12)\r\n   || _notInLengthMinMax(dStr, 2, 1, 31)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst _getDaysInYm = (y, m) => (new Date(y, m, 0)).getDate();\r\n\r\nconst _getTimeUTC = d => `${_pad2(d.getUTCHours())}:${_pad2(d.getUTCMinutes())}`;\r\nconst _getYmdUTC = (d, yearMinus) => (d.getUTCFullYear()-yearMinus)\r\n   + \"-\" + (\"0\"+(d.getUTCMonth() + 1)).slice(-2)\r\n   + \"-\" + (\"0\"+d.getUTCDate()).slice(-2);\r\n\r\nconst MONTH_HP = {\r\n  january: 0, february: 1,\r\n  march: 2, april: 3, may: 4,\r\n  june: 5, july: 6, august: 7,\r\n  september: 8, october: 9, november: 10,\r\n  december: 11\r\n};\r\n\r\nconst DateUtils = {\r\n\r\n  //YYYY-MM-DD valid format\r\n\tisYmd(str, nForecastDate=0, minYear=MIN_YEAR){\r\n     if (typeof str !== 'string') {\r\n\t\t\t return false;\r\n\t\t }\r\n\t\t const _str = str.trim();\r\n\t\t if (_str.length !== 10) {\r\n\t\t\t return false;\r\n\t\t }\r\n\r\n     const _arr = _str.split('-');\r\n     return _isYmd(_arr[0], _arr[1], _arr[2], {nForecastDate, minYear});\r\n\t},\r\n\r\n\tisYmdOrEmpty(str){\r\n\t\treturn (str === '')\r\n\t\t  ? true\r\n\t\t\t: DateUtils.isYmd(str);\r\n\t},\r\n\r\n\tgetFromDate(yearMinus=2){\r\n\t\tconst dNow = new Date();\r\n\t\treturn _getYmdUTC(dNow, yearMinus);\r\n\t},\r\n\r\n\tgetToDate(){\r\n\t\treturn DateUtils.getFromDate(0);\r\n\t},\r\n\r\n\r\n  getYmdhmUTC(date){\r\n    const _d = date || (new Date());\r\n    return `${_getYmdUTC(_d, 0)} ${_getTimeUTC(_d)} UTC`;\r\n  },\r\n\r\n\r\n\tmlsToDmy(mlsUTC){\r\n\t\tif (typeof mlsUTC !== 'number'\r\n\t\t    || !isFinite(mlsUTC)\r\n\t\t) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst d = new Date(mlsUTC);\r\n\t\tif (d.toString() === 'Invalid Date') {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t  return (\"0\" + d.getUTCDate()).slice(-2)\r\n\t         + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n\t         + \"-\" + d.getUTCFullYear() ;\r\n\t},\r\n\r\n dmyToUTC(str){\r\n\t\tconst [d, m, y] = _splitDateStr(str);\r\n    return _isYmd(y, m, d)\r\n      ? Date.UTC(y, _toIntMonth(m), d)\r\n      : NaN;\r\n },\r\n\r\n isDmyPeriod: (from, to) => DateUtils\r\n   .dmyToUTC(from) <= DateUtils.dmyToUTC(to),\r\n\r\n isDmy(str, minYear=MIN_YEAR){\r\n\t const [ d, m, y ] = _splitDateStr(str);\r\n\t return _isYmd(y, m, d, { minYear });\r\n },\r\n\r\n ymdToUTC: (dateStr, option={}) => {\r\n\t const _arr = _splitDateStr(dateStr)\r\n\t , _len = _arr.length\r\n   , [yearStr, mStr, dStr] = _arr;\r\n\r\n\t if (_len === 3) {\r\n\t\t return Date.UTC(yearStr, _toIntMonth(mStr), dStr);\r\n\t }\r\n\r\n   if ( _len === 2 && mStr !== ''){\r\n\t\t const _m = parseInt(mStr, 10);\r\n\t\t if (!_isNaN(_m)) {\r\n\t\t\t\tconst _d = _getDaysInYm(yearStr, _m);\r\n\t\t    return Date.UTC(yearStr, _m - 1, _d);\r\n\t\t // YYYY-Q format\r\n\t   } else if (_isLikelyQuarter(_arr[1])) {\r\n\t\t\t  const _q = parseInt(_arr[1][1], 10);\r\n        if (_isNaN(_q)) { return _q; }\r\n        const _d = _getDaysInYm(_arr[0], _q*3);\r\n\t\t\t\treturn Date.UTC( _arr[0], _q*3 - 1, _d);\r\n\t\t } else {\r\n\t\t\t return _m;\r\n\t\t }\r\n\t }\r\n\r\n   if ( _len === 1) {\r\n     const { y=0 } = option\r\n     , _y = parseInt(yearStr, 10) - y;\r\n\t\t return !_isNaN(_y)\r\n       ? Date.UTC(_y, 11, 31)\r\n       : _y;\r\n\t }\r\n\r\n   return Date.UTC(yearStr, _toIntMonth(mStr), dStr);\r\n },\r\n ymdhmsToUTC(dateStr) {\r\n\t const _dtArr = dateStr.split(' ')\r\n\t , _ymdArr = _dtArr[0].split('-')\r\n\t , _hmsArr = _dtArr[1].split(':');\r\n\t return Date.UTC(\r\n\t\t _ymdArr[0], (parseInt(_ymdArr[1], 10)-1), _ymdArr[2],\r\n\t\t _hmsArr[0], _hmsArr[1], _hmsArr[2]\r\n\t );\r\n },\r\n\r\n getUTCTime: (ms) => {\r\n\t if (!Number.isInteger(ms)) {\r\n     return '';\r\n   }\r\n   const _d = new Date(ms);\r\n   return _getTimeUTC(_d);\r\n },\r\n\r\n  addToDmy: (dmy, month) => {\r\n\t if (!DateUtils.isDmy(dmy))\t{\r\n\t\t return new Date(0);\r\n\t }\r\n\t if (!Number.isInteger(month))\t{\r\n\t\t return new Date(DateUtils.dmyToUTC(dmy));\r\n\t }\r\n   const _to = new Date(DateUtils.dmyToUTC(dmy));\r\n   return new Date(_to.setUTCMonth(_to.getUTCMonth()+month));\r\n },\r\n\r\n getYTDfromDmy: (dmy) => {\r\n\t const _year = dmy.split('-')[2];\r\n\t return DateUtils.dmyToUTC(`01-01-${_year}`)\r\n },\r\n\r\n getDaysFromYmd: ymd => {\r\n   const _fromMls = DateUtils.ymdToUTC(ymd);\r\n   return Math.ceil(((new Date()).getTime() - _fromMls)/DAY_IN_MLS);\r\n },\r\n\r\n monthIndex: str => {\r\n   if (!_isStr(str)) {\r\n     return -1;\r\n   }\r\n   const _monthIndex = MONTH_HP[String(str).toLowerCase()];\r\n   return _isUndef(_monthIndex)\r\n     ? -1\r\n     : _monthIndex;\r\n }\r\n\r\n};\r\n\r\nexport default DateUtils;\r\n"],"file":"DateUtils.js"}