{"version":3,"sources":["../../src/charts/IndicatorBuilder.js"],"names":["sma","tsIndicators","mfi","momAth","crMfiConfig","ChartConfig","crMomAthConfig","_addDataAsSeriaToChart","chart","option","seria","crSeria","addSeries","options","colors","IndicatorBuilder","removeSeriaFrom","zhValueText","series","i","max","length","userOptions","remove","addSmaTo","id","period","data","dataSma","lineWidth","console","log","zhPoints","dataMfi","nNotFullPoint","titleNotFullPoint"],"mappings":";;;;;;;AAAA;;AAEA;;IAEQA,G,GAAqBC,wB,CAArBD,G;IAAKE,G,GAAgBD,wB,CAAhBC,G;IAAKC,M,GAAWF,wB,CAAXE,M;IAEhBC,Y,GAEEC,uB,CAFFD,W;IACAE,e,GACED,uB,CADFC,c;;AAGF,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAChD,MAAMC,KAAK,GAAGL,wBAAYM,OAAZ,CAAoBF,MAApB,CAAd;;AACAD,EAAAA,KAAK,CAACI,SAAN,CAAgBF,KAAhB,EAAuB,IAAvB,EAA6B,IAA7B;AACA,SAAOF,KAAK,CAACK,OAAN,CAAcC,MAAd,CAAqBJ,KAAK,CAAC,aAAD,CAA1B,CAAP;AACD,CAJD;;AAMA,IAAMK,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE,yBAACR,KAAD,EAAQS,WAAR,EAAwB;AACtC,QAAMC,MAAM,GAAGV,KAAK,CAACU,MAArB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAN,EAASC,GAAG,GAACF,MAAM,CAACG,MAAzB,EAAiCF,CAAC,GAACC,GAAnC,EAAwCD,CAAC,EAAzC,EAA4C;AAC1C,UAAID,MAAM,CAACC,CAAD,CAAN,CAAUG,WAAV,CAAsBL,WAAtB,KAAsCA,WAA1C,EAAsD;AACpDC,QAAAA,MAAM,CAACC,CAAD,CAAN,CAAUI,MAAV,CAAiB,IAAjB;AACA,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACF,GAVsB;AAYvBC,EAAAA,QAAQ,EAAE,kBAAChB,KAAD,EAAQC,MAAR,EAAmB;AAAA,QACnBgB,EADmB,GACJhB,MADI,CACnBgB,EADmB;AAAA,QACfC,MADe,GACJjB,MADI,CACfiB,MADe;AAAA,QAEzBC,IAFyB,GAElBnB,KAAK,CAACU,MAAN,CAAa,CAAb,EAAgBS,IAFE;AAAA,QAGzBC,OAHyB,GAGf5B,GAAG,CAAC2B,IAAD,EAAOD,MAAP,CAHY;;AAK3B,QAAIE,OAAO,CAACP,MAAR,GAAe,CAAnB,EAAqB;AACnB,aAAOd,sBAAsB,CAACC,KAAD,EAAQ;AACnCS,QAAAA,WAAW,EAAEQ,EADsB;AAEnCI,QAAAA,SAAS,EAAE,CAFwB;AAGnCF,QAAAA,IAAI,EAAEC;AAH6B,OAAR,CAA7B;AAKD,KAND,MAMO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAiDL,MAAjD,GAA0D,GAAtE;AACA,aAAO,KAAK,CAAZ;AACD;AACF,GA3BsB;AA6BvBtB,EAAAA,WAAW,EAAE,qBAACI,KAAD,EAAQkB,MAAR,EAAgBD,EAAhB,EAAuB;AAC5B,QAAAE,IAAI,GAAGnB,KAAK,CAACK,OAAN,CAAcmB,QAArB;AAAA,eACyB9B,GAAG,CAACyB,IAAD,EAAOD,MAAP,CAD5B;AAAA,QACFO,OADE,QACFA,OADE;AAAA,QACOC,aADP,QACOA,aADP;AAAA,QAEJC,iBAFI,GAEiBD,aAAa,KAAK,CAAnB,GAChB,uBAAuBA,aADP,GAEhB,EAJA;;AAKN,WAAO9B,YAAW,CACbqB,EADa,EACTA,EAAE,GAAGU,iBADI,EACeF,OADf,CAAlB;AAGD,GAtCsB;AAwCvB3B,EAAAA,cAAc,EAAE,wBAACE,KAAD,EAAW;AACzB,QAAMmB,IAAI,GAAGnB,KAAK,CAACK,OAAN,CAAcmB,QAA3B;AACA,WAAO1B,eAAc,CAACH,MAAM,CAACwB,IAAD,CAAP,CAArB;AACD;AA3CsB,CAAzB;eA+CeZ,gB","sourcesContent":["import tsIndicators from '../math/tsIndicators'\r\n\r\nimport ChartConfig from './ChartConfig';\r\n\r\nconst { sma, mfi, momAth } = tsIndicators;\r\nconst {\r\n  crMfiConfig,\r\n  crMomAthConfig\r\n} = ChartConfig;\r\n\r\nconst _addDataAsSeriaToChart = (chart, option) => {\r\n  const seria = ChartConfig.crSeria(option);\r\n  chart.addSeries(seria, true, true)\r\n  return chart.options.colors[seria['_colorIndex']];\r\n};\r\n\r\nconst IndicatorBuilder = {\r\n  removeSeriaFrom: (chart, zhValueText) => {\r\n     const series = chart.series;\r\n     for (let i=0, max=series.length; i<max; i++){\r\n       if (series[i].userOptions.zhValueText === zhValueText){\r\n         series[i].remove(true);\r\n         return true;\r\n       }\r\n     }\r\n     return false;\r\n  },\r\n\r\n  addSmaTo: (chart, option) => {\r\n    const { id, period } = option\r\n    , data = chart.series[0].data\r\n    , dataSma = sma(data, period);\r\n\r\n    if (dataSma.length>0){\r\n      return _addDataAsSeriaToChart(chart, {\r\n        zhValueText: id,\r\n        lineWidth: 2,\r\n        data: dataSma\r\n      });\r\n    } else {\r\n      console.log('It seems, there are not enough data for SMA(' + period + ')')\r\n      return void 0;\r\n    }\r\n  },\r\n\r\n  crMfiConfig: (chart, period, id) => {\r\n    const data = chart.options.zhPoints\r\n    , { dataMfi, nNotFullPoint } = mfi(data, period)\r\n    , titleNotFullPoint = (nNotFullPoint !== 0)\r\n        ? ' Not Full Data HL:' + nNotFullPoint\r\n        : '';\r\n    return crMfiConfig(\r\n         id, id + titleNotFullPoint, dataMfi\r\n     );\r\n  },\r\n\r\n  crMomAthConfig: (chart) => {\r\n    const data = chart.options.zhPoints;\r\n    return crMomAthConfig(momAth(data));\r\n  }\r\n\r\n};\r\n\r\nexport default IndicatorBuilder\r\n"],"file":"IndicatorBuilder.js"}