{"version":3,"sources":["../../src/charts/IndicatorBuilder.js"],"names":["sma","tsIndicators","mfi","momAth","_addDataAsSeriaToChart","chart","option","seria","Object","assign","ChartConfig","fSeries","addSeries","options","colors","IndicatorBuilder","removeSeriaFrom","zhValueText","series","i","max","length","userOptions","remove","addSmaTo","id","period","plus","parentId","zhConfig","data","dataSma","zhSeriaId","lineWidth","console","log","undefined","crMfiConfig","zhPoints","dataMfi","nNotFullPoint","titleNotFullPoint","fIndicatorMfiConfig","crMomAthConfig","dataMom","dataAth","dataSum","fnMomAthConfig"],"mappings":"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","sourcesContent":["import tsIndicators from '../math/tsIndicators'\r\n\r\nimport ChartConfig from './ChartConfig';\r\n\r\nconst { sma, mfi, momAth } = tsIndicators;\r\n\r\nconst _addDataAsSeriaToChart = (chart, option) => {\r\n  const seria = Object.assign(\r\n    ChartConfig.fSeries(), option\r\n  );\r\n  chart.addSeries(seria, true, true)\r\n  return chart.options.colors[seria['_colorIndex']];\r\n};\r\n\r\nconst IndicatorBuilder = {\r\n  removeSeriaFrom: (chart, zhValueText) => {\r\n     const series = chart.series;\r\n     for (let i=0, max=series.length; i<max; i++){\r\n       if (series[i].userOptions.zhValueText === zhValueText){\r\n         series[i].remove(true);\r\n         return true;\r\n       }\r\n     }\r\n     return false;\r\n  },\r\n\r\n  addSmaTo: (chart, option) => {\r\n    const { id, period, plus } = option\r\n        , parentId = chart.options.zhConfig.id\r\n        , data = chart.series[0].data\r\n        , dataSma = sma(data, period, plus);\r\n\r\n    if (dataSma.length>0){\r\n      return _addDataAsSeriaToChart(chart, {\r\n        zhSeriaId: parentId + '_' + id,\r\n        zhValueText: id,\r\n        lineWidth: 2,\r\n        data: dataSma\r\n      });\r\n    } else {\r\n      console.log('It seems, there are not enough data for SMA(' + period + ')')\r\n      return undefined;\r\n    }\r\n  },\r\n\r\n  crMfiConfig: (chart, period, id) => {\r\n    const data = chart.options.zhPoints\r\n         , parentId = chart.options.zhConfig.id\r\n         , { dataMfi, nNotFullPoint } = mfi(data, period)\r\n         , titleNotFullPoint = (nNotFullPoint !== 0)\r\n             ? ' Not Full Data HL:' + nNotFullPoint\r\n             : '';\r\n    return ChartConfig.fIndicatorMfiConfig(\r\n         id, parentId, id + titleNotFullPoint, dataMfi\r\n     );\r\n  },\r\n\r\n  crMomAthConfig: (chart, id) => {\r\n    const data = chart.options.zhPoints\r\n        , { dataMom, dataAth, dataSum } = momAth(data);\r\n    return ChartConfig.fnMomAthConfig(\r\n       dataMom, dataAth, dataSum, id\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default IndicatorBuilder\r\n"],"file":"IndicatorBuilder.js"}