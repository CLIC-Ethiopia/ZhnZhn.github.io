{"version":3,"sources":["../../src/charts/IndicatorBuilder.js"],"names":["crMfiConfig","crMomAthConfig","ChartConfig","_getD12","chart","series","s1","d1","data","d2","sc","color","_updateYAxisMin","_yAxis","yAxis","dataMin","min","getExtremes","setExtremes","_hideFirstSecondSeries","_series","hide","_fCategoryCalc","calc","name","rc","length","addSeries","_addToChartSeria","option","seria","crSeria","_seriaIns","IndicatorBuilder","removeSeriaFrom","zhValueText","i","max","userOptions","remove","addCategoryRateTo","categoryRate","addCategoryDiffTo","categoryDiff","addCategoryRocTo","categoryRoc","powerBy10","power","getName","dataP","by","update","addSmaTo","id","period","dataSma","lineWidth","console","log","options","zhPoints","dataMfi","nNotFullPoint","titleNotFullPoint"],"mappings":"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","sourcesContent":["import {  \r\n  categoryDiff,\r\n  categoryRate,\r\n  categoryRoc,\r\n  sma,\r\n  mfi,\r\n  momAth,\r\n  pby10\r\n} from '../math/tsIndicators';\r\nimport ChartConfig from './ChartConfig';\r\n\r\nconst {\r\n  crMfiConfig,\r\n  crMomAthConfig\r\n} = ChartConfig;\r\n\r\nconst _getD12 = chart => {\r\n  const series = chart.series\r\n  , s1 = series[0]\r\n  , d1 = s1.data\r\n  , d2 = (series[1] || {}).data || [];\r\n  return { d1, d2, sc: s1.color };\r\n}\r\n\r\nconst _updateYAxisMin = chart => {\r\n  const _yAxis = chart.yAxis[0]\r\n  , { dataMin, min } = _yAxis.getExtremes();\r\n  if (dataMin<min) {\r\n    _yAxis.setExtremes(dataMin, null, true)\r\n  }\r\n};\r\n\r\n//df config chart.ignoreHiddenSeries = true\r\nconst _hideFirstSecondSeries = chart => {\r\n  const _series = chart.series;\r\n  _series[0].hide()\r\n  _series[1].hide()\r\n};\r\n\r\nconst _fCategoryCalc = (calc, name) => (chart, rc) => {\r\n  const { d1, d2, sc } = _getD12(chart);\r\n  if (d2.length !== 0) {\r\n    const data = calc(d1, d2, {rc, sc});\r\n    chart.addSeries({\r\n      name, data,\r\n      color: rc,\r\n    }, true, true)\r\n    _updateYAxisMin(chart)\r\n    _hideFirstSecondSeries(chart)\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst _addToChartSeria = (chart, option) => {\r\n  const seria = ChartConfig.crSeria(option)\r\n  , _seriaIns = chart.addSeries(seria, true, true);\r\n  return (_seriaIns || {}).color;\r\n};\r\n\r\nconst IndicatorBuilder = {\r\n  removeSeriaFrom: (chart, zhValueText) => {\r\n     const series = chart.series;\r\n     for (let i=0, max=series.length; i<max; i++){\r\n       if (series[i].userOptions.zhValueText === zhValueText){\r\n         series[i].remove(true);\r\n         return true;\r\n       }\r\n     }\r\n     return false;\r\n  },\r\n\r\n  addCategoryRateTo: _fCategoryCalc(categoryRate, 'Rate S1/S2'),\r\n  addCategoryDiffTo: _fCategoryCalc(categoryDiff, 'Diff S1-S2'),\r\n  addCategoryRocTo: _fCategoryCalc(categoryRoc, 'ROC S1 from S2'),\r\n  powerBy10: (chart, power) => {\r\n    const seria = chart.series[0]\r\n    , name = seria.getName()\r\n    , [dataP, by] = pby10(seria.data, power);\r\n\r\n    seria.update({\r\n      data: dataP,\r\n      name: `${name}*${by}`\r\n    }, true)\r\n  },\r\n\r\n  addSmaTo: (chart, option) => {\r\n    const { id, period } = option\r\n    , data = chart.series[0].data\r\n    , dataSma = sma(data, period);\r\n\r\n    if (dataSma.length>0){\r\n      return _addToChartSeria(chart, {\r\n        zhValueText: id,\r\n        lineWidth: 2,\r\n        data: dataSma,\r\n        name: `SMA(${period})`\r\n      });\r\n    } else {\r\n      console.log('It seems, there are not enough data for SMA(' + period + ')')\r\n      return void 0;\r\n    }\r\n  },\r\n\r\n  crMfiConfig: (chart, period, id) => {\r\n    const data = chart.options.zhPoints\r\n    , [ dataMfi, nNotFullPoint ] = mfi(data, period)\r\n    , titleNotFullPoint = (nNotFullPoint !== 0)\r\n        ? ' Not Full Data HL:' + nNotFullPoint\r\n        : '';\r\n    return crMfiConfig(\r\n       id, id + titleNotFullPoint, dataMfi\r\n    );\r\n  },\r\n\r\n  crMomAthConfig: (chart) => {\r\n    const data = chart.options.zhPoints;\r\n    return crMomAthConfig(momAth(data));\r\n  }\r\n\r\n};\r\n\r\nexport default IndicatorBuilder\r\n"],"file":"IndicatorBuilder.js"}