{"version":3,"sources":["../../src/charts/ChartFn.js"],"names":["crValueMoving","mathFn","toFixedNumber","calcPercent","_fnFindIndex","fnArr","findIndexByProp","C","C1_SECOND_Y_AXIS","C2_SECOND_Y_AXIS","SERIA_LABEL_CHARS","SERIA_LABELS_IN_ROW","SERIA_LABEL_X_DELTA","SERIA_LABEL_Y_DELTA","SERIA_LABEL_WIDTH","SERIA_LABEL_HEIGHT","_fnNoop","_initOptionsZhSeries","chart","options","zhSeries","count","titleEls","_crYAxisColor","yAxis","length","_addSeries","series","label","hasSecondYAxis","_color","addAxis","Chart","fSecondYAxis","color","Array","isArray","_max","forEach","seria","index","addSeries","_calcXyForLabel","seriesCount","row","Math","floor","x","y","_renderSeriesLabel","seriesText","substring","renderer","text","css","colors","_colorIndex","add","_updateYAxisMin","minY","min","_yAxis","update","bind","undefined","startOnTick","_formatNumber","n","_setPlotLine","plotLine","value","delta","ChartFn","WithAreaChartFn","arCalcDeltaYAxis","calcDeltaYAxis","addSeriaWithRenderLabel","props","textEl","push","zoomIndicatorCharts","event","zhDetailCharts","userMin","userMax","max","xAxis","setExtremes","afterSetExtremesYAxis","trigger","prev","dateTo","points","data","millisUTC","DateUtils","dmyToUTC","valueTo","Object","assign","nowValue","prevValue","Direction","fnFormat","formatAllNumber","toNumberFormat","formatNumber","toNumberFormatAll","crTpId","Date","now","toString","random","substr","toUpperCase","toDateFormatDMY","Highcharts","dateFormat","toDateFormatDMYT","setMinMaxPlotLines","plotLines","isDrawDeltaExtrems","setPlotLinesDeltas","setPlotLinesMinMax","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","_bMax","_bMin","_bValue","perToMax","bValue","minus","bTotal","perToMin","_deltaMax","_deltaMin","_maxPoint","parseFloat","round","_minPoint","calcMinY","setYToPoints","i"],"mappings":"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","sourcesContent":["import Highcharts from 'highcharts';\r\n\r\nimport Big from 'big.js';\r\n\r\nimport mathFn from '../math/mathFn'\r\nimport formatNumber from '../utils/formatNumber'\r\nimport formatAllNumber from '../utils/formatAllNumber'\r\n\r\nimport fnArr from '../utils/fnArr';\r\nimport DateUtils from '../utils/DateUtils';\r\nimport safeGet from '../utils/safeGet';\r\n\r\nimport Chart from './Chart';\r\n\r\nimport { Direction } from '../constants/Type';\r\n\r\n\r\nimport WithAreaChartFn from './WithAreaChartFn'\r\nimport calcDeltaYAxis from './calcDeltaYAxis'\r\n\r\nconst {\r\n  crValueMoving,\r\n  toFixedNumber,\r\n  calcPercent\r\n} = mathFn;\r\n\r\nconst _fnFindIndex = fnArr.findIndexByProp('x');\r\n\r\nconst C = {\r\n  C1_SECOND_Y_AXIS: '#f45b5b',\r\n  C2_SECOND_Y_AXIS: '#f7a35c',\r\n  SERIA_LABEL_CHARS : 14,\r\n  SERIA_LABELS_IN_ROW : 3,\r\n  SERIA_LABEL_X_DELTA : 120,\r\n  SERIA_LABEL_Y_DELTA : 95,\r\n  SERIA_LABEL_WIDTH : 125,\r\n  SERIA_LABEL_HEIGHT : 20\r\n};\r\n\r\nconst _fnNoop = () => {};\r\n\r\nconst _initOptionsZhSeries = (chart) => {\r\n  const options = chart.options\r\n      , zhSeries = options.zhSeries;\r\n  if (!zhSeries){\r\n    options.zhSeries = {\r\n      count: 0,\r\n      titleEls: []\r\n    }\r\n  } else if (!zhSeries.titleEls){\r\n    zhSeries.titleEls = []\r\n  }\r\n  return options;\r\n}\r\n\r\nconst _crYAxisColor = (chart) => {\r\n  switch(chart.yAxis.length){\r\n    case 1: return C.C1_SECOND_Y_AXIS;\r\n    case 2: return C.C2_SECOND_Y_AXIS;\r\n    default: return C.C1_SECOND_Y_AXIS;\r\n  }\r\n}\r\n\r\nconst _addSeries = ({ chart, series, label, hasSecondYAxis }) => {\r\n  let _color;\r\n  if (hasSecondYAxis){\r\n    _color = _crYAxisColor(chart)\r\n    chart.addAxis( Chart.fSecondYAxis(label, _color) )\r\n    series.yAxis = label\r\n    series.color = _color\r\n  }\r\n\r\n  if (Array.isArray(series)){\r\n    const _max = series.length - 1;\r\n    series.forEach((seria, index) => {\r\n      if (hasSecondYAxis) {\r\n        seria.yAxis = label\r\n      }\r\n      if (index !== _max ) {\r\n        chart.addSeries(seria, false, false)\r\n      } else {\r\n        chart.addSeries(seria, true, true)\r\n      }\r\n    })\r\n  } else {\r\n    chart.addSeries(series, true, true)\r\n  }\r\n  return _color;\r\n}\r\n\r\nconst _calcXyForLabel = (options) => {\r\n  const seriesCount = options.zhSeries.count\r\n  , row = Math.floor(seriesCount/C.SERIA_LABELS_IN_ROW)\r\n  , x = C.SERIA_LABEL_X_DELTA\r\n        + C.SERIA_LABEL_WIDTH*seriesCount\r\n        - row*(C.SERIA_LABEL_WIDTH*C.SERIA_LABELS_IN_ROW)\r\n  , y = C.SERIA_LABEL_Y_DELTA + C.SERIA_LABEL_HEIGHT*row;\r\n  return { x, y };\r\n}\r\nconst _renderSeriesLabel = ({chart, options, series, label='', color }) => {\r\n  const seriesText = (label.length>C.SERIA_LABEL_CHARS)\r\n            ? label.substring(0, C.SERIA_LABEL_CHARS)\r\n            : label\r\n      , { x, y } = _calcXyForLabel(options);\r\n\r\n  return chart.renderer.text(seriesText, x, y)\r\n    .css({\r\n      color: color || options.colors[series._colorIndex],\r\n      'font-size': '16px',\r\n      'font-weight': 800\r\n    })\r\n    .add();\r\n};\r\n\r\nconst _updateYAxisMin = ({ hasSecondYAxis, series, options={}, chart }) => {\r\n  const minY = series.minY\r\n      , min = safeGet(options, 'yAxis[0].min')\r\n      , _yAxis = safeGet(chart, 'yAxis[0]')\r\n      , update = safeGet(chart, 'yAxis[0].update', _fnNoop).bind(_yAxis);\r\n  if ( !hasSecondYAxis && (minY !== undefined) && min>minY ){\r\n      update({ min: minY, startOnTick: true });\r\n  }\r\n};\r\n\r\n\r\nconst _formatNumber = n => formatAllNumber(toFixedNumber(n));\r\nconst _setPlotLine = (plotLine, value, delta='') => {\r\n  if (plotLine) {\r\n    plotLine.value = value\r\n    plotLine.label.text = `${_formatNumber(value)}${delta}`\r\n  }\r\n};\r\n\r\n\r\nconst ChartFn = {\r\n  ...WithAreaChartFn,\r\n  arCalcDeltaYAxis: calcDeltaYAxis,\r\n\r\n  addSeriaWithRenderLabel(props){\r\n    const {\r\n            chart, series, label, color, hasSecondYAxis\r\n          } = props\r\n        ,  options = _initOptionsZhSeries(chart)\r\n        , _color = _addSeries({\r\n            chart, series, label, hasSecondYAxis\r\n          })\r\n        , textEl = _renderSeriesLabel({\r\n            chart, options, series, label,\r\n            color: color || _color\r\n          });\r\n    options.zhSeries.count +=1\r\n    options.zhSeries.titleEls.push(textEl)\r\n\r\n    _updateYAxisMin({ hasSecondYAxis, series, options, chart })\r\n  },\r\n\r\n  zoomIndicatorCharts(event){\r\n    const zhDetailCharts = this.chart.options.zhDetailCharts\r\n       , { userMin, userMax, min, max } = event;\r\n    if (userMin){\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( userMin, userMax, true, true);\r\n      })\r\n    } else {\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( min, max, true, true);\r\n      })\r\n    }\r\n  },\r\n  afterSetExtremesYAxis(event){\r\n    const { trigger, userMax, userMin } = event;\r\n    if (trigger === 'zoom' && userMax) {\r\n      this.setExtremes(\r\n        userMin, userMax + (userMax-userMin)*0.05,\r\n        true, true\r\n      )\r\n    }\r\n  },\r\n\r\n  crValueMoving(chart, prev, dateTo){\r\n    const points = chart.series[0].data\r\n        , millisUTC = DateUtils.dmyToUTC(dateTo)\r\n        , index = _fnFindIndex(points, millisUTC)\r\n        , valueTo = index !== -1\r\n            ? points[index].y\r\n            : undefined;\r\n\r\n    return valueTo !== undefined\r\n      ? Object.assign({}, prev,\r\n          crValueMoving({\r\n            nowValue: prev.value,\r\n            prevValue: valueTo,\r\n            Direction: Direction,\r\n            fnFormat: formatAllNumber\r\n          }),\r\n          { valueTo, dateTo }\r\n        )\r\n     : undefined;\r\n  },\r\n\r\n  toNumberFormat: formatNumber,\r\n  toNumberFormatAll: formatAllNumber,\r\n\r\n  crTpId: () => {\r\n    return (\r\n       'TP_' +\r\n        Date.now().toString(36) +\r\n        Math.random().toString(36).substr(2, 9)\r\n      )\r\n      .toUpperCase();\r\n  },\r\n\r\n  toDateFormatDMY: Highcharts\r\n     .dateFormat.bind(null, '%A, %b %d, %Y'),\r\n  toDateFormatDMYT: Highcharts\r\n     .dateFormat.bind(null, '%A, %b %d, %Y, %H:%M'),\r\n\r\n  setMinMaxPlotLines({ plotLines, min, max, value, isDrawDeltaExtrems}){\r\n    if (isDrawDeltaExtrems) {\r\n      ChartFn.setPlotLinesDeltas({ plotLines, min, max, value })\r\n    } else {\r\n      ChartFn.setPlotLinesMinMax({ plotLines, min, max})\r\n    }\r\n  },\r\n\r\n  setPlotLinesMinMax: ({ plotLines, min, max }) => {\r\n    if ( max>Number.NEGATIVE_INFINITY ){\r\n      _setPlotLine(plotLines[0], max)\r\n    }\r\n    if ( min<Number.POSITIVE_INFINITY ){\r\n      _setPlotLine(plotLines[1], min)\r\n    }\r\n  },\r\n  setPlotLinesDeltas: ({ plotLines, min, max, value }) => {\r\n    const _bMax = max !== Number.NEGATIVE_INFINITY\r\n        ? Big(max)\r\n        : Big(0)\r\n    , _bMin = min !== Number.POSITIVE_INFINITY\r\n        ? Big(min)\r\n        : Big(0)\r\n    , _bValue = value !== null\r\n        ? Big(value)\r\n        : Big(0)\r\n    , perToMax = calcPercent({\r\n       bValue: _bMax.minus(_bValue),\r\n       bTotal: _bValue\r\n    })\r\n    , perToMin = calcPercent({\r\n      bValue: _bValue.minus(_bMin),\r\n      bTotal: _bValue\r\n    })\r\n    , _deltaMax = `\\u00A0\\u00A0Δ ${perToMax}%`\r\n    , _deltaMin = `\\u00A0\\u00A0Δ ${perToMin}%`\r\n    , _maxPoint = parseFloat(_bMax.round(4).toString(), 10)\r\n    , _minPoint = parseFloat(_bMin.round(4).toString(), 10);\r\n\r\n    _setPlotLine(plotLines[0], _maxPoint, _deltaMax)\r\n    _setPlotLine(plotLines[1], _minPoint, _deltaMin)\r\n  },\r\n\r\n  calcMinY: ({ min, max }) => max>Number.NEGATIVE_INFINITY\r\n   && min<Number.POSITIVE_INFINITY\r\n     ? min - ((max-min)*1/6)\r\n     : void 0,\r\n\r\n  setYToPoints: (data, y) => {\r\n    if (y == null) {\r\n      return;\r\n    }\r\n    const max=data.length;\r\n    for (let i=0; i<max; i++ ){\r\n      data[i].y = y;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ChartFn\r\n"],"file":"ChartFn.js"}