{"version":3,"sources":["../../src/charts/ChartFn.js"],"names":["crValueMoving","mathFn","toFixedNumber","calcPercent","dateFormat","Highcharts","_isFn","fn","_isNaN","Number","isNaN","_isNumber","n","_fnFindIndex","fnArr","findIndexByProp","C","C1_SECOND_Y_AXIS","C2_SECOND_Y_AXIS","SERIA_LABEL_CHARS","SERIA_LABELS_IN_ROW","SERIA_LABEL_X_DELTA","SERIA_LABEL_Y_DELTA","SERIA_LABEL_WIDTH","SERIA_LABEL_HEIGHT","_initOptionsZhSeries","chart","options","zhSeries","count","titleEls","_crYAxisColor","yAxis","length","_addSeries","series","label","hasSecondYAxis","_color","addAxis","Chart","fSecondYAxis","color","Array","isArray","_max","forEach","seria","index","addSeries","_calcXyForLabel","seriesCount","row","Math","floor","x","y","_renderSeriesLabel","seriesText","substring","renderer","text","css","colors","_colorIndex","add","_updateYAxisMinMax","_yAxis","update","minY","maxY","_optionYAxis","min","max","_min","_minE","_maxE","setExtremes","_formatNumber","_setPlotLine","plotLine","value","delta","ChartFn","WithAreaChartFn","arCalcDeltaYAxis","calcDeltaYAxis","addSeriaWithRenderLabel","props","textEl","push","zoomIndicatorCharts","event","zhDetailCharts","userMin","userMax","xAxis","afterSetExtremesYAxis","trigger","prev","dateTo","points","data","mlsUTC","DateUtils","dmyToUTC","valueTo","undefined","Object","assign","nowValue","prevValue","Direction","fnFormat","formatAllNumber","toNumberFormat","formatNumber","toNumberFormatAll","crTpId","Date","now","toString","random","toUpperCase","toDmy","bind","toTdmy","setMinMaxPlotLines","plotLines","isDrawDeltaExtrems","setPlotLinesDeltas","setPlotLinesMinMax","NEGATIVE_INFINITY","POSITIVE_INFINITY","_bMax","_bMin","_bValue","perToMax","bValue","minus","bTotal","perToMin","_deltaMax","_deltaMin","_maxPoint","parseFloat","round","_minPoint","calcMinY","setYToPoints","i"],"mappings":"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","sourcesContent":["import Highcharts from 'highcharts';\r\n\r\nimport Big from 'big.js';\r\n\r\nimport mathFn from '../math/mathFn'\r\nimport formatNumber from '../utils/formatNumber'\r\nimport formatAllNumber from '../utils/formatAllNumber'\r\n\r\nimport fnArr from '../utils/fnArr';\r\nimport DateUtils from '../utils/DateUtils';\r\n\r\nimport Chart from './Chart';\r\n\r\nimport { Direction } from '../constants/Type';\r\n\r\n\r\nimport WithAreaChartFn from './WithAreaChartFn'\r\nimport calcDeltaYAxis from './calcDeltaYAxis'\r\n\r\nconst {\r\n  crValueMoving,\r\n  toFixedNumber,\r\n  calcPercent\r\n} = mathFn;\r\n\r\nconst dateFormat = Highcharts.dateFormat;\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _isNaN = Number.isNaN || isNaN;\r\nconst _isNumber = n => typeof n === 'number'\r\n  && n-n===0;\r\nconst _fnFindIndex = fnArr.findIndexByProp('x');\r\n\r\n\r\nconst C = {\r\n  C1_SECOND_Y_AXIS: '#f45b5b',\r\n  C2_SECOND_Y_AXIS: '#f7a35c',\r\n  SERIA_LABEL_CHARS : 14,\r\n  SERIA_LABELS_IN_ROW : 3,\r\n  SERIA_LABEL_X_DELTA : 120,\r\n  SERIA_LABEL_Y_DELTA : 95,\r\n  SERIA_LABEL_WIDTH : 125,\r\n  SERIA_LABEL_HEIGHT : 20\r\n};\r\n\r\nconst _initOptionsZhSeries = (chart) => {\r\n  const options = chart.options\r\n      , zhSeries = options.zhSeries;\r\n  if (!zhSeries){\r\n    options.zhSeries = {\r\n      count: 0,\r\n      titleEls: []\r\n    }\r\n  } else if (!zhSeries.titleEls){\r\n    zhSeries.titleEls = []\r\n  }\r\n  return options;\r\n}\r\n\r\nconst _crYAxisColor = (chart) => {\r\n  switch(chart.yAxis.length){\r\n    case 1: return C.C1_SECOND_Y_AXIS;\r\n    case 2: return C.C2_SECOND_Y_AXIS;\r\n    default: return C.C1_SECOND_Y_AXIS;\r\n  }\r\n}\r\n\r\nconst _addSeries = ({ chart, series, label, hasSecondYAxis }) => {\r\n  let _color;\r\n  if (hasSecondYAxis){\r\n    _color = _crYAxisColor(chart)\r\n    chart.addAxis( Chart.fSecondYAxis(label, _color) )\r\n    series.yAxis = label\r\n    series.color = _color\r\n  }\r\n\r\n  if (Array.isArray(series)){\r\n    const _max = series.length - 1;\r\n    series.forEach((seria, index) => {\r\n      if (hasSecondYAxis) {\r\n        seria.yAxis = label\r\n      }\r\n      if (index !== _max ) {\r\n        chart.addSeries(seria, false, false)\r\n      } else {\r\n        chart.addSeries(seria, true, true)\r\n      }\r\n    })\r\n  } else {\r\n    chart.addSeries(series, true, true)\r\n  }\r\n  return _color;\r\n}\r\n\r\nconst _calcXyForLabel = (options) => {\r\n  const seriesCount = options.zhSeries.count\r\n  , row = Math.floor(seriesCount/C.SERIA_LABELS_IN_ROW)\r\n  , x = C.SERIA_LABEL_X_DELTA\r\n        + C.SERIA_LABEL_WIDTH*seriesCount\r\n        - row*(C.SERIA_LABEL_WIDTH*C.SERIA_LABELS_IN_ROW)\r\n  , y = C.SERIA_LABEL_Y_DELTA + C.SERIA_LABEL_HEIGHT*row;\r\n  return { x, y };\r\n}\r\nconst _renderSeriesLabel = ({chart, options, series, label='', color }) => {\r\n  const seriesText = (label.length>C.SERIA_LABEL_CHARS)\r\n            ? label.substring(0, C.SERIA_LABEL_CHARS)\r\n            : label\r\n      , { x, y } = _calcXyForLabel(options);\r\n\r\n  return chart.renderer.text(seriesText, x, y)\r\n    .css({\r\n      color: color || options.colors[series._colorIndex],\r\n      'font-size': '16px',\r\n      'font-weight': 800\r\n    })\r\n    .add();\r\n};\r\n\r\n\r\nconst _updateYAxisMinMax = ({ hasSecondYAxis, series, options, chart }) => {\r\n  const _yAxis = chart?.yAxis?.[0];\r\n  if (!hasSecondYAxis && _isFn(_yAxis?.update)) {\r\n    const { minY, maxY } = series || {}\r\n    , _optionYAxis = options?.yAxis?.[0]\r\n    , { min, max } = _optionYAxis || {}\r\n    , _min = min>minY ? minY : min\r\n    , _max = max<maxY ? maxY : max\r\n    , _minE = _isNumber(_min) ? _min : null\r\n    , _maxE = _isNumber(_max) ? _max : null;\r\n    _yAxis.setExtremes(_minE, _maxE, true)\r\n  }\r\n}\r\n\r\nconst _formatNumber = n => formatAllNumber(toFixedNumber(n));\r\nconst _setPlotLine = (plotLine, value, delta='') => {\r\n  if (plotLine) {\r\n    plotLine.value = value\r\n    plotLine.label.text = `${_formatNumber(value)}${delta}`\r\n  }\r\n};\r\n\r\n\r\nconst ChartFn = {\r\n  ...WithAreaChartFn,\r\n  arCalcDeltaYAxis: calcDeltaYAxis,\r\n\r\n  addSeriaWithRenderLabel(props){\r\n    const {\r\n        chart, series, label, color, hasSecondYAxis\r\n      } = props\r\n    ,  options = _initOptionsZhSeries(chart)\r\n    , _color = _addSeries({\r\n        chart, series, label, hasSecondYAxis\r\n      })\r\n    , textEl = _renderSeriesLabel({\r\n        chart, options, series, label,\r\n        color: color || _color\r\n      });\r\n    options.zhSeries.count +=1\r\n    options.zhSeries.titleEls.push(textEl)\r\n\r\n    _updateYAxisMinMax({ hasSecondYAxis, series, options, chart })\r\n  },\r\n\r\n  zoomIndicatorCharts(event){\r\n    const zhDetailCharts = this.chart.options.zhDetailCharts\r\n       , { userMin, userMax, min, max } = event;\r\n    if (userMin){\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( userMin, userMax, true, true);\r\n      })\r\n    } else {\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( min, max, true, true);\r\n      })\r\n    }\r\n  },\r\n  afterSetExtremesYAxis(event){\r\n    const { trigger, userMax, userMin } = event;\r\n    if (trigger === 'zoom' && userMax) {\r\n      this.setExtremes(\r\n        userMin, userMax + (userMax-userMin)*0.05,\r\n        true, true\r\n      )\r\n    }\r\n  },\r\n\r\n  crValueMoving(chart, prev, dateTo){\r\n    const points = chart.series[0].data\r\n        , mlsUTC = DateUtils.dmyToUTC(dateTo)\r\n        , index = _isNaN(mlsUTC)\r\n            ? -1\r\n            : _fnFindIndex(points, mlsUTC)\r\n        , valueTo = index !== -1\r\n            ? points[index].y\r\n            : undefined;\r\n\r\n    return valueTo !== undefined\r\n      ? Object.assign({}, prev,\r\n          crValueMoving({\r\n            nowValue: prev.value,\r\n            prevValue: valueTo,\r\n            Direction: Direction,\r\n            fnFormat: formatAllNumber\r\n          }),\r\n          { valueTo, dateTo }\r\n        )\r\n     : undefined;\r\n  },\r\n\r\n  toNumberFormat: formatNumber,\r\n  toNumberFormatAll: formatAllNumber,\r\n\r\n  crTpId: () => {\r\n    return (\r\n       'TP_' +\r\n        Date.now().toString(36) +\r\n        Math.random().toString(36).substring(2, 9)\r\n      )\r\n      .toUpperCase();\r\n  },\r\n\r\n  toDmy: dateFormat.bind(null, '%A, %b %d, %Y'),\r\n  toTdmy: dateFormat.bind(null, '%H:%M, %A, %b %d, %Y'),\r\n  /*\r\n  toTdmyIf: (mls) => {\r\n    const _t = dateFormat('%H:%M', mls);\r\n    return _t === '00:00'\r\n      ? dateFormat('%A, %b %d, %Y', mls)\r\n      : dateFormat('%H:%M, %A, %b %d, %Y', mls);\r\n  },\r\n  */\r\n\r\n  setMinMaxPlotLines({ plotLines, min, max, value, isDrawDeltaExtrems}){\r\n    if (isDrawDeltaExtrems) {\r\n      ChartFn.setPlotLinesDeltas({ plotLines, min, max, value })\r\n    } else {\r\n      ChartFn.setPlotLinesMinMax({ plotLines, min, max})\r\n    }\r\n  },\r\n\r\n  setPlotLinesMinMax: ({ plotLines, min, max }) => {\r\n    if ( max>Number.NEGATIVE_INFINITY ){\r\n      _setPlotLine(plotLines[0], max)\r\n    }\r\n    if ( min<Number.POSITIVE_INFINITY ){\r\n      _setPlotLine(plotLines[1], min)\r\n    }\r\n  },\r\n  setPlotLinesDeltas: ({ plotLines, min, max, value }) => {\r\n    const _bMax = max !== Number.NEGATIVE_INFINITY\r\n        ? Big(max)\r\n        : Big(0)\r\n    , _bMin = min !== Number.POSITIVE_INFINITY\r\n        ? Big(min)\r\n        : Big(0)\r\n    , _bValue = value !== null\r\n        ? Big(value)\r\n        : Big(0)\r\n    , perToMax = calcPercent({\r\n       bValue: _bMax.minus(_bValue),\r\n       bTotal: _bValue\r\n    })\r\n    , perToMin = calcPercent({\r\n      bValue: _bValue.minus(_bMin),\r\n      bTotal: _bValue\r\n    })\r\n    , _deltaMax = `\\u00A0\\u00A0Δ ${perToMax}%`\r\n    , _deltaMin = `\\u00A0\\u00A0Δ ${perToMin}%`\r\n    , _maxPoint = parseFloat(_bMax.round(4).toString(), 10)\r\n    , _minPoint = parseFloat(_bMin.round(4).toString(), 10);\r\n\r\n    _setPlotLine(plotLines[0], _maxPoint, _deltaMax)\r\n    _setPlotLine(plotLines[1], _minPoint, _deltaMin)\r\n  },\r\n\r\n  calcMinY: ({ min, max }) => max>Number.NEGATIVE_INFINITY\r\n   && min<Number.POSITIVE_INFINITY\r\n     ? min - ((max-min)*1/6)\r\n     : void 0,\r\n\r\n  setYToPoints: (data, y) => {\r\n    if (y == null) {\r\n      return;\r\n    }\r\n    const max=data.length;\r\n    for (let i=0; i<max; i++ ){\r\n      data[i].y = y;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ChartFn\r\n"],"file":"ChartFn.js"}