{"version":3,"sources":["../../src/charts/ChartFn.js"],"names":["toDmy","toTdmy","toTdmyIf","dateFormat","crValueMoving","toFixedNumber","calcPercent","crId","mathFn","_isFn","fn","_isNumber","n","_isArr","Array","isArray","_assign","Object","assign","_findIndexByX","INITIAL_MAX_NUMBER","Number","NEGATIVE_INFINITY","INITIAL_MIN_NUMBER","POSITIVE_INFINITY","C1_SECOND_Y_AXIS","C2_SECOND_Y_AXIS","SERIA_LABEL_CHARS","SERIA_LABELS_IN_ROW","SERIA_LABEL_X_DELTA","SERIA_LABEL_Y_DELTA","SERIA_LABEL_WIDTH","SERIA_LABEL_HEIGHT","_initOptionsZhSeries","chart","options","zhSeries","count","titleEls","_crYAxisColor","yAxis","length","_addSeries","series","label","hasSecondYAxis","_color","addAxis","Chart","fSecondYAxis","color","_max","forEach","seria","index","_option","addSeries","_calcXyForLabel","seriesCount","row","Math","floor","x","y","_getLabelText","substring","_getRecentSeriaColor","_len","_renderSeriesLabel","labelText","renderer","text","css","add","_getMinMaxFromSeries","minY","maxY","_optionYAxis","min","max","_min","_updateYAxisMinMax","_yAxis","update","setExtremes","_formatNumber","_setPlotLine","plotLine","value","delta","_crDelta","perToValue","_crPoint","bValue","parseFloat","round","toString","_calcPerTo","bFrom","bTotal","minus","_crBigValueOrZero","initialValue","_getMinMaxFromEvent","userMin","userMax","ChartFn","addSeriaWithRenderLabel","props","chartOptions","textEl","push","zoomIndicatorCharts","event","zhDetailCharts","xAxis","afterSetExtremesYAxis","trigger","prev","dateTo","points","data","mlsUTC","valueTo","nowValue","prevValue","fnFormat","formatAllNumber","toNumberFormat","formatNumber","toNumberFormatAll","crTpId","setPlotLinesMinMax","plotLines","setPlotLinesDeltas","_bMax","_bMin","_bValue","_perToMax","_perToMin","calcMinY","setYToPoints","point"],"mappings":"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","sourcesContent":["import Big from 'big.js';\r\n\r\nimport mathFn from '../math/mathFn';\r\nimport formatNumber from '../utils/formatNumber';\r\nimport formatAllNumber from '../utils/formatAllNumber';\r\n\r\nimport { arrFactoryFindIndexByProp } from '../utils/arrFn';\r\nimport { dmyToUTC } from '../utils/DateUtils';\r\n\r\nimport Chart from './Chart';\r\nimport dateFormat from './dateFormat';\r\n\r\nconst { toDmy, toTdmy, toTdmyIf } = dateFormat;\r\n\r\nconst {\r\n  crValueMoving,\r\n  toFixedNumber,\r\n  calcPercent,\r\n  crId\r\n} = mathFn;\r\n\r\nconst _isFn = fn => typeof fn === 'function'\r\n, _isNumber = n => typeof n === 'number'\r\n    && n-n===0\r\n, _isArr = Array.isArray\r\n, _assign = Object.assign\r\n, _findIndexByX = arrFactoryFindIndexByProp('x')\r\n\r\n, INITIAL_MAX_NUMBER = Number.NEGATIVE_INFINITY\r\n, INITIAL_MIN_NUMBER = Number.POSITIVE_INFINITY\r\n\r\n, C1_SECOND_Y_AXIS = '#f45b5b'\r\n, C2_SECOND_Y_AXIS = '#f7a35c'\r\n, SERIA_LABEL_CHARS = 14\r\n, SERIA_LABELS_IN_ROW = 3\r\n, SERIA_LABEL_X_DELTA = 120\r\n, SERIA_LABEL_Y_DELTA = 95\r\n, SERIA_LABEL_WIDTH = 125\r\n, SERIA_LABEL_HEIGHT = 20;\r\n\r\nconst _initOptionsZhSeries = chart => {\r\n  const { options } = chart;\r\n  options.zhSeries = _assign({\r\n    count: 0,\r\n    titleEls: []\r\n  }, options.zhSeries)\r\n  return options;\r\n};\r\n\r\nconst _crYAxisColor = chart =>\r\n  chart.yAxis.length === 2\r\n    ? C2_SECOND_Y_AXIS\r\n    : C1_SECOND_Y_AXIS;\r\n\r\nconst _addSeries = ({ chart, series, label, hasSecondYAxis }) => {\r\n  let _color;\r\n  if (hasSecondYAxis){\r\n    _color = _crYAxisColor(chart)\r\n    chart.addAxis( Chart.fSecondYAxis(label, _color) )\r\n    series.yAxis = label\r\n    series.color = _color\r\n  }\r\n\r\n  if (_isArr(series)){\r\n    const _max = series.length - 1;\r\n    series.forEach((seria, index) => {\r\n      if (hasSecondYAxis) {\r\n        seria.yAxis = label\r\n      }\r\n      const _option = index === _max\r\n        ? [true, true]\r\n        : [false, false];\r\n      chart.addSeries(seria, ...[_option])\r\n    })\r\n  } else {\r\n    chart.addSeries(series, true, true)\r\n  }\r\n  return _color;\r\n};\r\n\r\nconst _calcXyForLabel = options => {\r\n  const seriesCount = options.zhSeries.count\r\n  , row = Math.floor(seriesCount/SERIA_LABELS_IN_ROW)\r\n  , x = SERIA_LABEL_X_DELTA\r\n        + SERIA_LABEL_WIDTH*seriesCount\r\n        - row*(SERIA_LABEL_WIDTH*SERIA_LABELS_IN_ROW)\r\n  , y = SERIA_LABEL_Y_DELTA + SERIA_LABEL_HEIGHT*row;\r\n  return { x, y };\r\n};\r\n\r\nconst _getLabelText = label => (label || '').length>SERIA_LABEL_CHARS\r\n  ? label.substring(0, SERIA_LABEL_CHARS)\r\n  : label;\r\n\r\nconst _getRecentSeriaColor = chart => {\r\n  const { series } = chart\r\n  , _len = (series || []).length;\r\n  return _len > 0\r\n    ? series[_len-1].color\r\n    : void 0;\r\n};\r\n\r\nconst _renderSeriesLabel = (\r\n  chart,\r\n  labelText, x, y, color\r\n) => chart.renderer\r\n  .text(labelText, x, y)\r\n  .css({\r\n    color,\r\n    'font-size': '16px',\r\n    'font-weight': 800\r\n  })\r\n  .add();\r\n\r\nconst _getMinMaxFromSeries = (series, options) => {\r\n  const { minY, maxY } = series || {}\r\n  , _optionYAxis = options?.yAxis?.[0]\r\n  , { min, max } = _optionYAxis || {}\r\n  , _min = min>minY ? minY : min\r\n  , _max = max<maxY ? maxY : max;\r\n  return [\r\n    _isNumber(_min) ? _min : null,\r\n    _isNumber(_max) ? _max : null\r\n  ];\r\n}\r\n\r\nconst _updateYAxisMinMax = (\r\n  { hasSecondYAxis, series, chart },\r\n  options\r\n) => {\r\n  const _yAxis = chart?.yAxis?.[0];\r\n  if (!hasSecondYAxis && _isFn(_yAxis?.update)) {\r\n    const [min, max] = _getMinMaxFromSeries(series, options);\r\n    _yAxis.setExtremes(min, max, true)\r\n  }\r\n};\r\n\r\nconst _formatNumber = n => formatAllNumber(toFixedNumber(n));\r\nconst _setPlotLine = (plotLine, value, delta='') => {\r\n  if (plotLine) {\r\n    plotLine.value = value\r\n    plotLine.label.text = `${_formatNumber(value)}${delta}`\r\n  }\r\n};\r\n\r\nconst _crDelta = perToValue => `\\u00A0\\u00A0Δ ${perToValue}%`\r\n, _crPoint = bValue => parseFloat(bValue.round(4).toString(), 10)\r\n, _calcPerTo = (bFrom, bValue, bTotal) => calcPercent({\r\n   bValue: bFrom.minus(bValue),\r\n   bTotal\r\n});\r\n\r\n\r\nconst _crBigValueOrZero = (value, initialValue) =>\r\n  value !== initialValue\r\n    ? Big(value)\r\n    : Big(0);\r\n\r\nconst _getMinMaxFromEvent = ({\r\n  userMin,\r\n  userMax,\r\n  min,\r\n  max\r\n}) => [\r\n  userMin || min,\r\n  userMin ? userMax : max\r\n];\r\n\r\n\r\n\r\nconst ChartFn = {\r\n  toDmy,\r\n  toTdmy,\r\n  toTdmyIf,\r\n\r\n  addSeriaWithRenderLabel(props){\r\n    // { chart, series, label, hasSecondYAxis } = props\r\n    const { chart } = props\r\n    , chartOptions = _initOptionsZhSeries(chart)\r\n    , _color = _addSeries(props)\r\n    , labelText = _getLabelText(props.label)\r\n    , { x, y } = _calcXyForLabel(chartOptions)\r\n    , textEl = _renderSeriesLabel(\r\n        chart,\r\n        labelText, x, y,\r\n        props.color || _color || _getRecentSeriaColor(chart)\r\n      );\r\n\r\n    chartOptions.zhSeries.count +=1\r\n    chartOptions.zhSeries.titleEls.push(textEl)\r\n\r\n    _updateYAxisMinMax(props, chartOptions)\r\n  },\r\n\r\n  zoomIndicatorCharts(event){\r\n    const [min, max] =_getMinMaxFromEvent(event);\r\n    (this.chart.options.zhDetailCharts || []).forEach(chart => {\r\n      chart.xAxis[0].setExtremes(min, max, true, true);\r\n    })\r\n  },\r\n  afterSetExtremesYAxis(event){\r\n    const { trigger, userMax, userMin } = event;\r\n    if (trigger === 'zoom' && userMax) {\r\n      this.setExtremes(\r\n        userMin, userMax + (userMax-userMin)*0.05,\r\n        true, true\r\n      )\r\n    }\r\n  },\r\n\r\n  crValueMoving(chart, prev, dateTo){\r\n    const points = chart.series[0].data\r\n    , mlsUTC = dmyToUTC(dateTo)\r\n    , index = _isNumber(mlsUTC)\r\n        ? _findIndexByX(points, mlsUTC)\r\n        : -1\r\n    , valueTo = index === -1\r\n        ? void 0\r\n        : points[index].y;\r\n\r\n    return _isNumber(valueTo)\r\n      ? _assign({}, prev,\r\n          crValueMoving({\r\n            nowValue: prev.value,\r\n            prevValue: valueTo,\r\n            fnFormat: formatAllNumber\r\n          }),\r\n          { valueTo, dateTo }\r\n        )\r\n     : void 0;\r\n  },\r\n\r\n  toNumberFormat: formatNumber,\r\n  toNumberFormatAll: formatAllNumber,\r\n\r\n  crId,\r\n  crTpId: () => crId('TP_'),\r\n\r\n  setPlotLinesMinMax: ({ plotLines, min, max }) => {\r\n    if ( max>INITIAL_MAX_NUMBER ){\r\n      _setPlotLine(plotLines[0], max)\r\n    }\r\n    if ( min<INITIAL_MIN_NUMBER ){\r\n      _setPlotLine(plotLines[1], min)\r\n    }\r\n  },\r\n  setPlotLinesDeltas: ({ plotLines, min, max, value }) => {\r\n    const _bMax = _crBigValueOrZero(max, INITIAL_MAX_NUMBER)\r\n    , _bMin = _crBigValueOrZero(min, INITIAL_MIN_NUMBER)\r\n    , _bValue = _crBigValueOrZero(value, null)\r\n    , _perToMax = _calcPerTo(_bMax, _bValue, _bValue)\r\n    , _perToMin = _calcPerTo(_bValue, _bMin, _bValue);\r\n\r\n    _setPlotLine(plotLines[0], _crPoint(_bMax), _crDelta(_perToMax))\r\n    _setPlotLine(plotLines[1], _crPoint(_bMin), _crDelta(_perToMin))\r\n  },\r\n\r\n  calcMinY: (min, max) => max>INITIAL_MAX_NUMBER\r\n    && min<INITIAL_MIN_NUMBER\r\n      ? min - ((max-min)*1/6)\r\n      : void 0,\r\n\r\n  setYToPoints: (data, y) => {\r\n    if (y == null) {\r\n      return;\r\n    }\r\n    data.forEach(point => point.y = y)\r\n  }\r\n\r\n};\r\n\r\nexport default ChartFn\r\n"],"file":"ChartFn.js"}