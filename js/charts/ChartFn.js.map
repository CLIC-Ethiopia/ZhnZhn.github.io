{"version":3,"sources":["../../src/charts/ChartFn.js"],"names":["_fnFindIndex","findIndexByProp","C","C1_SECOND_Y_AXIS","C2_SECOND_Y_AXIS","SERIA_LABEL_CHARS","SERIA_LABELS_IN_ROW","SERIA_LABEL_X_DELTA","SERIA_LABEL_Y_DELTA","SERIA_LABEL_WIDTH","SERIA_LABEL_HEIGHT","DATE_PATTERN","ATTR_LABEL","zIndex","CSS_LABEL","color","fontSize","CL_DY","DX_CATEGORY","DY_CATEGORY","DX_DELTA_Y_AXIS","_fnNoop","_initOptionsZhSeries","chart","options","zhSeries","count","titleEls","_crYAxisColor","yAxis","length","_addSeries","series","label","hasSecondYAxis","_color","addAxis","fSecondYAxis","Array","isArray","_max","forEach","seria","index","addSeries","_renderSeriesLabel","seriesText","substring","seriesCount","row","Math","floor","x","y","textEl","renderer","text","css","colors","_colorIndex","add","_updateYAxisMin","minY","min","_yAxis","update","bind","undefined","startOnTick","_crCrossParam","point","date","dateFormat","dX","xDeltaCrossLabel","dY","yDeltaCrossLabel","_crCategoryCrossParam","ChartFn","toNumberFormat","_crYCrossLabelX","width","plotLeft","_crYCrossLabelY","plotY","plotTop","addSeriaWithRenderLabel","props","push","handlerMouserOverPoint","event","isCategory","c","plotX","xCrossLabel","yCrossLabel","deltaYAxis","arCalcDeltaYAxis","xLX","xLY","yLY","attr","toggleSeria","item","name","isSecondAxes","visible","get","remove","hide","show","zoomIndicatorCharts","zhDetailCharts","userMin","userMax","max","xAxis","setExtremes","afterSetExtremesYAxis","trigger","crValueMoving","prev","dateTo","points","data","millisUTC","dmyToUTC","valueTo","valueMoving","Object","assign","nowValue","value","prevValue","Direction","fnFormat","fnNumberFormat","_addAxis","toChart","id","opossite","title","lineColor","tickColor","gridLineWidth","labels","style","type","_addDataToYAxis","isWithYAxis","redraw","addDataTo","withoutYAxis","_id","addDataToYAxis","yAxisIndex","_isWithYAxis","arrSplit","split","decimal","numberFormat","toNumberFormatAll","crTpId","Date","now","toString","random","substr","toUpperCase","toDateFormatDMY","toDateFormatDMYT"],"mappings":"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","file":"ChartFn.js","sourcesContent":["import Highcharts from 'highcharts';\r\n\r\nimport mathFn from '../math/mathFn'\r\n\r\nimport ArrayUtil from '../utils/ArrayUtil';\r\nimport DateUtils from '../utils/DateUtils';\r\nimport safeGet from '../utils/safeGet';\r\n\r\nimport Chart from './Chart';\r\nimport ChartConfig from './ChartConfig';\r\nimport { Direction } from '../constants/Type';\r\n\r\nimport WithAreaChartFn from './WithAreaChartFn'\r\n\r\nconst _fnFindIndex = ArrayUtil.findIndexByProp('x')\r\n\r\nconst C = {\r\n  C1_SECOND_Y_AXIS: '#f45b5b',\r\n  C2_SECOND_Y_AXIS: '#f7a35c',\r\n  SERIA_LABEL_CHARS : 12,\r\n  SERIA_LABELS_IN_ROW : 3,\r\n  SERIA_LABEL_X_DELTA : 145,\r\n  SERIA_LABEL_Y_DELTA : 95,\r\n  SERIA_LABEL_WIDTH : 125,\r\n  SERIA_LABEL_HEIGHT : 20,\r\n  DATE_PATTERN : '%d-%m-%Y',\r\n  ATTR_LABEL : {\r\n    zIndex : 100\r\n  },\r\n  CSS_LABEL : {\r\n    color: 'yellow',\r\n    fontSize: '15px'\r\n  },\r\n\r\n  CL_DY: 4,\r\n\r\n  DX_CATEGORY: 40,\r\n  DY_CATEGORY: 32,\r\n\r\n  DX_DELTA_Y_AXIS: 10\r\n}\r\n\r\nconst _fnNoop = () => {};\r\n\r\nconst _initOptionsZhSeries = (chart) => {\r\n  const options = chart.options\r\n      , zhSeries = options.zhSeries;\r\n  if (!zhSeries){\r\n    options.zhSeries = {\r\n      count: 0,\r\n      titleEls: []\r\n    }\r\n  } else if (!zhSeries.titleEls){\r\n    zhSeries.titleEls = []\r\n  }\r\n  return options;\r\n}\r\n\r\nconst _crYAxisColor = (chart) => {\r\n  switch(chart.yAxis.length){\r\n    case 1: return C.C1_SECOND_Y_AXIS;\r\n    case 2: return C.C2_SECOND_Y_AXIS;\r\n    default: return C.C1_SECOND_Y_AXIS;\r\n  }\r\n}\r\n\r\nconst _addSeries = ({ chart, series, label, hasSecondYAxis }) => {\r\n  let _color;\r\n  if (hasSecondYAxis){\r\n    _color = _crYAxisColor(chart)\r\n    chart.addAxis( Chart.fSecondYAxis(label, _color) )\r\n    series.yAxis = label\r\n    series.color = _color\r\n  }\r\n\r\n  if (Array.isArray(series)){\r\n    const _max = series.length - 1;\r\n    series.forEach((seria, index) => {\r\n      if (hasSecondYAxis) {\r\n        seria.yAxis = label\r\n      }\r\n      if (index !== _max ) {\r\n        chart.addSeries(seria, false, false)\r\n      } else {\r\n        chart.addSeries(seria, true, true)\r\n      }\r\n    })\r\n  } else {\r\n    chart.addSeries(series, true, true)\r\n  }\r\n  return _color;\r\n}\r\n\r\nconst _renderSeriesLabel = ({chart, options, series, label='', color }) => {\r\n  const seriesText = (label.length>C.SERIA_LABEL_CHARS)\r\n            ? label.substring(0, C.SERIA_LABEL_CHARS)\r\n            : label\r\n      , seriesCount = options.zhSeries.count\r\n      , row = Math.floor(seriesCount/C.SERIA_LABELS_IN_ROW)\r\n      , x = C.SERIA_LABEL_X_DELTA\r\n            + C.SERIA_LABEL_WIDTH*seriesCount\r\n            - row*(C.SERIA_LABEL_WIDTH*C.SERIA_LABELS_IN_ROW)\r\n      , y = C.SERIA_LABEL_Y_DELTA + C.SERIA_LABEL_HEIGHT*row;\r\n\r\n  const textEl = chart.renderer.text(seriesText, x, y)\r\n                  .css({\r\n                    color: (color) ? color : options.colors[series._colorIndex],\r\n                    'font-size': '16px'\r\n                  })\r\n                  .add();\r\n  return textEl;\r\n}\r\n\r\nconst _updateYAxisMin = ({ hasSecondYAxis, series, options={}, chart }) => {\r\n  const minY = series.minY\r\n      , min = safeGet(options, 'yAxis[0].min')\r\n      , _yAxis = safeGet(chart, 'yAxis[0]')\r\n      , update = safeGet(chart, 'yAxis[0].update', _fnNoop).bind(_yAxis);\r\n  if ( !hasSecondYAxis && (minY !== undefined) && min>minY ){\r\n      update({ min: minY, startOnTick: true });\r\n  }\r\n};\r\n\r\nconst _crCrossParam = (point, chart) => {\r\n  return {\r\n    y: point.y,\r\n    date: Highcharts.dateFormat(C.DATE_PATTERN, point.x),\r\n    dX: chart.options.chart.xDeltaCrossLabel,\r\n    dY: chart.options.chart.yDeltaCrossLabel\r\n  };\r\n};\r\n\r\nconst _crCategoryCrossParam = (point, chart) => {\r\n  return {\r\n    y: ChartFn.toNumberFormat(point.y),\r\n    date: point.x,\r\n    dX: chart.options.chart.xDeltaCrossLabel - C.DX_CATEGORY,\r\n    dY: chart.options.chart.yDeltaCrossLabel - C.DY_CATEGORY\r\n  };\r\n};\r\n\r\nconst _crYCrossLabelX = (chart, dX) => {\r\n  return chart.yAxis[0].width + chart.plotLeft + dX;\r\n};\r\nconst _crYCrossLabelY = (chart, plotY) => {\r\n  return plotY + chart.plotTop + C.CL_DY;\r\n};\r\n\r\nconst ChartFn = {\r\n  ...WithAreaChartFn,\r\n\r\n  addSeriaWithRenderLabel(props){\r\n    const {\r\n            chart, series, label, color, hasSecondYAxis\r\n          } = props\r\n        ,  options = _initOptionsZhSeries(chart)\r\n        , _color = _addSeries({\r\n            chart, series, label, hasSecondYAxis\r\n          })\r\n        , textEl = _renderSeriesLabel({\r\n            chart, options, series, label,\r\n            color: color || _color\r\n          });\r\n\r\n    options.zhSeries.count +=1\r\n    options.zhSeries.titleEls.push(textEl)\r\n\r\n    _updateYAxisMin({ hasSecondYAxis, series, options, chart })\r\n  },\r\n\r\n  handlerMouserOverPoint(event){\r\n     const { isCategory, c, plotX, plotY, series } = this\r\n         , chart = series.chart\r\n         , { xCrossLabel, yCrossLabel } = chart\r\n         , { y, date, dX, dY } = (!isCategory || c)\r\n                ? _crCrossParam(this, chart)\r\n                : _crCategoryCrossParam(this, chart)\r\n         , deltaYAxis = ChartFn.arCalcDeltaYAxis(chart)\r\n         , xLX = deltaYAxis\r\n             ? plotX + deltaYAxis - C.DX_DELTA_Y_AXIS\r\n             : plotX\r\n         , xLY = _crYCrossLabelX(chart, dX)\r\n         , yLY = _crYCrossLabelY(chart, plotY);\r\n\r\n     if (xCrossLabel) {\r\n       xCrossLabel.attr({ x: xLX, text: date });\r\n       yCrossLabel.attr({ x: xLY, y: yLY, text: y });\r\n     } else {\r\n       chart.xCrossLabel = chart.renderer\r\n         .text(date, xLX, chart.plotTop - dY)\r\n         .attr(C.ATTR_LABEL)\r\n         .css(C.CSS_LABEL)\r\n         .add();\r\n       chart.yCrossLabel = chart.renderer\r\n         .text(y, xLY, yLY)\r\n         .attr(C.ATTR_LABEL)\r\n         .css(C.CSS_LABEL)\r\n         .add();\r\n     }\r\n  },\r\n\r\n  toggleSeria(chart, item){\r\n    const { name, color, index, isSecondAxes, seria } = item;\r\n\r\n    if (isSecondAxes){\r\n      if (!seria.visible){\r\n        chart.addAxis(\r\n          Chart.fSecondYAxis(name, color)\r\n        );\r\n        seria.yAxis = name;\r\n        seria.visible = true;\r\n        chart.addSeries(seria);\r\n      } else {\r\n        seria.visible = false;\r\n        chart.get(name).remove();\r\n      }\r\n    } else {\r\n      const seria = chart.series[index];\r\n      if (seria.visible){\r\n        seria.hide()\r\n      }  else {\r\n        seria.show();\r\n      }\r\n    }\r\n  },\r\n\r\n  zoomIndicatorCharts(event){\r\n    const zhDetailCharts = this.chart.options.zhDetailCharts\r\n       , { userMin, userMax, min, max } = event;\r\n    if (userMin){\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( userMin, userMax, true, true);\r\n      })\r\n    } else {\r\n      zhDetailCharts.forEach( chart => {\r\n        chart.xAxis[0].setExtremes( min, max, true, true);\r\n      })\r\n    }\r\n  },\r\n  afterSetExtremesYAxis(event){\r\n    const { trigger, userMax, userMin } = event;\r\n    if (trigger === 'zoom' && userMax) {\r\n      this.setExtremes(\r\n        userMin, userMax + (userMax-userMin)*0.05,\r\n        true, true\r\n      )\r\n    }\r\n  },\r\n\r\n  crValueMoving(chart, prev, dateTo){\r\n    const points = chart.series[0].data\r\n        , millisUTC = DateUtils.dmyToUTC(dateTo)\r\n        , index = _fnFindIndex(points, millisUTC);\r\n\r\n    let valueTo;\r\n    if (index !== -1) {\r\n      valueTo = points[index].y\r\n      const valueMoving = Object.assign(\r\n        {}, prev,\r\n        mathFn.crValueMoving({\r\n          nowValue: prev.value,\r\n          prevValue: valueTo,\r\n          Direction: Direction,\r\n          fnFormat: ChartConfig.fnNumberFormat\r\n        }),\r\n        { valueTo, dateTo }\r\n      )\r\n      return valueMoving;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  },\r\n\r\n  _addAxis(toChart, id, color){\r\n    toChart.addAxis({\r\n        id: id,\r\n        opossite: true,\r\n        title: {\r\n          text: ''\r\n        },\r\n        lineColor: color,\r\n        tickColor: color,\r\n        gridLineWidth: 0,\r\n        labels: {\r\n          style: {\r\n            color: color\r\n          }\r\n        }\r\n      }, false, true)\r\n  },\r\n  _addSeries(toChart, id, color, data){\r\n    toChart.addSeries({\r\n      type: 'spline',\r\n      yAxis: id,\r\n      color: color,\r\n      data: data\r\n    }, false)\r\n  },\r\n  _addDataToYAxis(toChart, id, color, data, isWithYAxis){\r\n    if (isWithYAxis) {\r\n      this._addAxis(toChart, id, color)\r\n    }\r\n    this._addSeries(toChart, id, color, data)\r\n    toChart.redraw()\r\n  },\r\n\r\n  addDataTo(toChart, color, data, withoutYAxis){\r\n    const _id = withoutYAxis ? undefined: \"pasteId\";\r\n    this._addDataToYAxis(toChart,\r\n        _id, color, data, !withoutYAxis\r\n    )\r\n  },\r\n  addDataToYAxis(toChart, color, data, yAxisIndex=-1){\r\n    const _id = yAxisIndex === -1\r\n              ? 'yAxis' + toChart.yAxis.length\r\n              : yAxisIndex === 0\r\n                   ? undefined\r\n                   : 'yAxis' + yAxisIndex\r\n        , _isWithYAxis = yAxisIndex === -1;\r\n     this._addDataToYAxis(toChart,\r\n         _id, color, data, _isWithYAxis\r\n     )\r\n  },\r\n\r\n  toNumberFormat(value){\r\n    const arrSplit = (value+'').split('.')\r\n        , decimal = (arrSplit[1]) ? 2 : 0;\r\n    return Highcharts\r\n      .numberFormat(value, decimal, '.', ' ');\r\n  },\r\n  toNumberFormatAll(value){\r\n    const arrSplit = (value+'').split('.')\r\n        , decimal = arrSplit[1]\r\n            ? arrSplit[1].length\r\n            : 0;\r\n    return Highcharts\r\n      .numberFormat(value, decimal, '.', ' ');\r\n  },\r\n\r\n  crTpId: () => {\r\n    return (\r\n       'TP_' +\r\n        Date.now().toString(36) +\r\n        Math.random().toString(36).substr(2, 9)\r\n      )\r\n      .toUpperCase();\r\n  },\r\n\r\n  toDateFormatDMY: Highcharts\r\n     .dateFormat.bind(null, '%A, %b %d, %Y'),\r\n  toDateFormatDMYT: Highcharts\r\n     .dateFormat.bind(null, '%A, %b %d, %Y, %H:%M')\r\n\r\n}\r\n\r\nexport default ChartFn\r\n"]}