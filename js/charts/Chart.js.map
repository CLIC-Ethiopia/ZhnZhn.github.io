{"version":3,"sources":["../../src/charts/Chart.js"],"names":["_fMonoColors","base1","MONO_BASE1","base2","MONO_BASE2","colors","i","push","Color","brighten","setOpacity","get","Chart","COLOR_PERIOD","COLOR_LOW_LEVEL","COLOR_OPACITY","COLOR_BASE1","COLOR_BASE2","HEIGHT","STACKED_HEIGHT","LEGEND_ROW_HEIGHT","THEME_SPACING_TOP","SPACING_TOP","STACKED_SPACING_TOP","SPACING_BOTTOM","MARGIN_TOP","TREEMAP_MARGIN_TOP","STACKED_TITLE_Y","STACKED_SUBTITLE_Y","TREEMAP_TITLE_Y","TREEMAP_SUBTITLE_Y","SEMIDONUT_TITLE_Y","SEMIDONUT_SUBTITLE_Y","_monoColors","fMonoPieColors","fCreateMonoColor","base","deltaColor","opacity","fnGetMonoColor","index","colorIndex","fCreditsRightBottom","option","enabled","position","align","x","verticalAlign","y","fResetZoomButton","theme","fill","BG_TITLE","stroke","r","style","color","TITLE_SHOW","states","hover","HOVER","relativeTo","setDefaultTitle","config","title","subtitle","chart","spacingTop","fTitle","text","fSubtitle","floating","CHART_TITLE","fontFamily","fontSize","fontWeight","CHART_SUBTITLE","fTitleIndicator","METRIC_TITLE","fNavigation","buttonOptions","fBaseConfig","zhSeries","count","marginRight","legend","xAxis","type","labels","crosshair","fCrosshair","yAxis","endOnTick","maxPadding","startOnTick","minPadding","opposite","showEmpty","series","zhValueText","turboThreshold","tooltip","fTooltip","fnBasePointFormatter","lineWidth","fEventsMouseOver","fn","events","mouseOver","fnPointFormatter","pointFormatter","headerFormat","CROSSHAIR","width","zIndex","fPlotLine","value","undefined","dashStyle","label","fXAxisOpposite","tickLength","tickPosition","fYAxisOpposite","fSecondYAxis","name","id","gridLineWidth","lineColor","tickColor","calcMinY","minPoint","maxPoint","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","fPlotOptionsArea","AREA_HOVER_LINE","marker","AREA_MARKER_LINE","state","fPlotOptionsColumn","COLUMN_HOVER_LINE","COLUMN_MARKER_LINE","fPlotOptionsSeries","halo","attributes","HALO_BASE","size","fLegend","symbolHeight","symbolWidth","symbolRadius","useHTML","itemStyle","LEGEND_ITEM","cursor","lineHeight","fSeriaMarker","symbol","radius","fillColor","MARKER_HOVER_FILL","MARKER_HOVER_LINE","lineWidthPlus","radiusPlus"],"mappings":";;;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,OAA4D;AAAA,uBAAjDC,KAAiD;AAAA,MAAjDA,KAAiD,6BAA3C,gBAAMC,UAAqC;AAAA,wBAAzBC,KAAyB;AAAA,MAAzBA,KAAyB,8BAAnB,gBAAMC,UAAa;;AAC/E,MAAMC,SAAS,EAAf;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,KAAK,CAA5B,EAA+B;AAC7B;AACA;AACDD,WAAOE,IAAP,CAAY,qBAAWC,KAAX,CAAiBP,KAAjB,EAAwBQ,QAAxB,CAAiC,CAACH,IAAI,CAAL,IAAU,CAA3C,EAA8CI,UAA9C,CAAyD,IAAzD,EAA+DC,GAA/D,EAAZ;AAEA;AACD,OAAK,IAAIL,KAAI,CAAb,EAAgBA,KAAI,CAApB,EAAuBA,MAAK,CAA5B,EAA+B;AAC5BD,WAAOE,IAAP,CAAY,qBAAWC,KAAX,CAAiBL,KAAjB,EAAwBM,QAAxB,CAAiC,CAACH,KAAI,CAAL,IAAU,CAA3C,EAA8CI,UAA9C,CAAyD,IAAzD,EAA+DC,GAA/D,EAAZ;AACF;;AAED,SAAON,MAAP;AACD,CAdD;;AAiBA,IAAMO,QAAQ;AACZC,gBAAe,IAAE,CADL;AAEZC,mBAAkB,CAAC,CAAD,GAAG,CAFT;AAGZC,iBAAgB,IAHJ;AAIZC,eAAc,gBAAMd,UAJR;AAKZe,eAAc,gBAAMb,UALR;;AAOZc,UAAS,GAPG;AAQZC,kBAAiB,GARL;AASZC,qBAAoB,EATR;;AAWZC,qBAAmB,CAXP;AAYZC,eAAc,EAZF;AAaZC,uBAAsB,EAbV;AAcZC,kBAAiB,EAdL;AAeZC,cAAa,EAfD;AAgBZC,sBAAqB,EAhBT;;AAkBZC,mBAAkB,CAAC,EAlBP;AAmBZC,sBAAqB,EAnBT;AAoBZC,mBAAkB,EApBN;AAqBZC,sBAAqB,EArBT;AAsBZC,qBAAoB,EAtBR;AAuBZC,wBAAsB,EAvBV;;AA0BZC,eAAcjC,aAAa,EAAb,CA1BF;;AA4BZkC,gBA5BY,4BA4ByD;AAAA,oFAAH,EAAG;AAAA,2BAApDjC,KAAoD;AAAA,QAApDA,KAAoD,8BAA9C,gBAAMC,UAAwC;AAAA,4BAA5BC,KAA4B;AAAA,QAA5BA,KAA4B,+BAAtB,gBAAMC,UAAgB;;AACnE,QAAMC,SAAS,EAAf;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,KAAK,CAA5B,EAA+B;AAC7BD,aAAOE,IAAP,CAAY,qBAAWC,KAAX,CAAiBP,KAAjB,EAAwBQ,QAAxB,CAAiC,CAACH,IAAI,CAAL,IAAU,CAA3C,EAA8CK,GAA9C,EAAZ;AACD;AACD,SAAK,IAAIL,MAAI,CAAb,EAAgBA,MAAI,CAApB,EAAuBA,OAAK,CAA5B,EAA+B;AAC7BD,aAAOE,IAAP,CAAY,qBAAWC,KAAX,CAAiBL,KAAjB,EAAwBM,QAAxB,CAAiC,CAACH,MAAI,CAAL,IAAU,CAA3C,EAA8CK,GAA9C,EAAZ;AACD;;AAED,WAAON,MAAP;AACD,GAvCW;AAyCZ8B,kBAzCY,8BAyCuD;AAAA,QAAlDC,IAAkD,uEAA7C,gBAAMlC,UAAuC;AAAA,QAA3BmC,UAA2B,uEAAhB,CAAgB;AAAA,QAAbC,OAAa,uEAAL,IAAK;;AACjE,WAAO,qBAAW9B,KAAX,CAAiB4B,IAAjB,EACY3B,QADZ,CACuB,KAAKK,eAAN,GAAyBuB,UAD/C,EAEY3B,UAFZ,CAEuB4B,OAFvB,EAGY3B,GAHZ,EAAP;AAID,GA9CW;AAgDZ4B,gBAhDY,0BAgDGC,KAhDH,EAgDS;AAClB,QAAMC,aAAaD,QAAQ,CAA3B;AACA,WAAQ,KAAKP,WAAL,CAAiBQ,UAAjB,CAAR;AACF,GAnDW;AAqDZC,qBArDY,iCAqDkB;AAAA,QAAVC,MAAU,uEAAH,EAAG;;AAC5B,WAAO,sBAAM;AACVC,eAAU,IADA;AAEVC,gBAAW;AACPC,eAAO,OADA;AAEPC,WAAG,CAAC,EAFG;AAGPC,uBAAe,QAHR;AAIPC,WAAG,CAAC;AAJG;AAFD,KAAN,EAQJN,MARI,CAAP;AASD,GA/DW;AAiEZO,kBAjEY,8BAiEe;AAAA,QAAVP,MAAU,uEAAH,EAAG;;AACzB,WAAO,sBAAM;AACVE,gBAAU;AACPC,eAAO,OADA;AAEPE,uBAAe,KAFR;AAGPD,WAAG,CAHI;AAIPE,WAAG;AAJI,OADA;AAOVE,aAAQ;AACNC,cAAO,gBAAMC,QADP;AAENC,gBAAS,gBAAMD,QAFT;AAGNE,WAAI,CAHE;AAINC,eAAQ;AACNC,iBAAQ,gBAAMC;AADR,SAJF;AAONC,gBAAS;AACPC,iBAAQ;AACNR,kBAAO,gBAAMC,QADP;AAENC,oBAAS,gBAAMO,KAFT;AAGN,4BAAiB,CAHX;AAINL,mBAAQ;AACNC,qBAAQ,gBAAMI;AADR;AAJF;AADD;AAPH,OAPE;AAyBVC,kBAAY;AAzBF,KAAN,EA0BJnB,MA1BI,CAAP;AA2BD,GA7FW;AA+FZoB,iBA/FY,2BA+FIC,MA/FJ,EA+FYC,KA/FZ,EA+FmBC,QA/FnB,EA+F4B;AACtCF,WAAOG,KAAP,CAAaC,UAAb,GAA0B,KAAK7C,mBAA/B;AACAyC,WAAOC,KAAP,GAAe,KAAKI,MAAL,CAAY,EAAEC,MAAOL,KAAT,EAAgBhB,GAAG,KAAKtB,eAAxB,EAAZ,CAAf;AACAqC,WAAOE,QAAP,GAAkB,KAAKK,SAAL,CAAe,EAAED,MAAOJ,QAAT,EAAmBjB,GAAI,KAAKrB,kBAA5B,EAAf,CAAlB;AACD,GAnGW;AAqGZyC,QArGY,oBAqGK;AAAA,QAAV1B,MAAU,uEAAH,EAAG;;AACf,WAAO,sBAAM;AACV2B,YAAM,EADI;AAEVE,gBAAU,IAFA;AAGV1B,aAAO,MAHG;AAIVC,SAAG,EAJO;AAKVE,SAAG,EALO;AAMVO,aAAO;AACLC,eAAO,gBAAMgB,WADR;AAELC,oBAAY,uCAFP;AAGLC,kBAAU,MAHL;AAILC,oBAAY;AAJP;AANG,KAAN,EAYJjC,MAZI,CAAP;AAaD,GAnHW;AAoHZ4B,WApHY,uBAoHQ;AAAA,QAAV5B,MAAU,uEAAH,EAAG;;AAClB,WAAO,sBAAM;AACX2B,YAAM,EADK;AAEXE,gBAAU,IAFC;AAGX1B,aAAO,MAHI;AAIXC,SAAG,EAJQ;AAKXE,SAAG,EALQ;AAMXO,aAAO;AACLC,eAAO,gBAAMoB,cADR;AAELH,oBAAY,uCAFP;AAGLC,kBAAU,MAHL;AAILC,oBAAY;AAJP;AANI,KAAN,EAYJjC,MAZI,CAAP;AAaD,GAlIW;AAoIbmC,iBApIa,2BAoIGR,IApIH,EAoIQ;AACnB,WAAO;AACLA,YAAOA,IADF;AAELd,aAAQ;AACNC,eAAO,gBAAMsB,YADP;AAENJ,kBAAW,MAFL;AAGNC,oBAAa;AAHP,OAFH;AAOLJ,gBAAW,IAPN;AAQL1B,aAAO,MARF;AASLE,qBAAe,KATV;AAULD,SAAG,CAVE;AAWLE,SAAG;AAXE,KAAP;AAaD,GAlJY;AAoJb+B,aApJa,yBAoJA;AACX,WAAO;AACLC,qBAAgB;AACdhC,WAAI;AADU;AADX,KAAP;AAKD,GA1JY;AA4JdiC,aA5Jc,yBA4JD;AACX,WAAO;AACLC,gBAAW;AACTC,eAAQ;AADC,OADN;AAILjB,aAAQ;AACNkB,qBAAc;AADR,OAJH;AAOLpB,aAAO;AACLK,cAAM;AADD,OAPF;AAULgB,cAAQ;AACN1C,iBAAS;AADH,OAVH;AAaL2C,aAAO;AACLC,cAAM,UADD;AAELC,gBAAS,EAFJ;AAGLC,mBAAY9E,MAAM+E,UAAN;AAHP,OAbF;AAkBLC,aAAO;AACLC,mBAAY,KADP;AAELC,oBAAa,IAFR;AAGLC,qBAAc,KAHT;AAILC,oBAAa,IAJR;AAKLC,kBAAW,IALN;AAMLC,mBAAY,IANP;AAOLjC,eAAO;AACLK,gBAAM;AADD;AAPF,OAlBF;AA6BL6B,cAAQ,CAAC;AACPC,qBAAc,OADP;AAEPC,wBAAiB,KAFV;AAGPb,cAAM,MAHC;AAIPc,iBAAU1F,MAAM2F,QAAN,CAAe,kBAAQC,oBAAvB,CAJH;AAKPC,mBAAY,CALL;AAMP9C,gBAAQ;AACNC,iBAAO;AACL6C,uBAAY;AADP;AADD;AAND,OAAD;AA7BH,KAAP;AA0CD,GAvMa;AAyMdC,kBAzMc,4BAyMGC,EAzMH,EAyMM;AAClB,WAAO;AACLC,cAAS;AACPC,mBAAYF;AADL;AADJ,KAAP;AAKD,GA/Ma;AAiNdJ,UAjNc,oBAiNLO,gBAjNK,EAiNY;AACxB,WAAO;AACLC,sBAAiBD,gBADZ;AAELE,oBAAe;AAFV,KAAP;AAID,GAtNa;AAwNdrB,YAxNc,wBAwNF;AACR,WAAO;AACLlC,aAAQ,gBAAMwD,SADT;AAELC,aAAQ,CAFH;AAGLC,cAAS;AAHJ,KAAP;AAKD,GA9NW;AAgOZC,WAhOY,qBAgOF3D,KAhOE,EAgOKa,IAhOL,EAgOU;AACpB,WAAO;AACL+C,aAAOC,SADF;AAEL7D,aAAOA,KAFF;AAGL8D,iBAAW,OAHN;AAILL,aAAO,CAJF;AAKLC,cAAQ,CALH;AAMLK,aAAO;AACLlD,cAAMA,IADD;AAELtB,uBAAe,KAFV;AAGLQ,eAAO;AACLC,iBAAOA,KADF;AAELmB,sBAAY,MAFP;AAGLD,oBAAU;AAHL;AAHF;AANF,KAAP;AAgBF,GAjPY;AAmPb8C,gBAnPa,4BAmPY;AAAA,QAAV9E,MAAU,uEAAH,EAAG;;AACtB,WAAO,sBAAM;AACXsD,gBAAW,IADA;AAEXyB,kBAAa,CAFF;AAGXC,oBAAe,QAHJ;AAIXlC,cAAS;AACPxC,WAAI,CAAC;AADE;AAJE,KAAN,EAOJN,MAPI,CAAP;AAQD,GA5PW;AA8PZiF,gBA9PY,4BA8Pa;AAAA,QAAVjF,MAAU,uEAAH,EAAG;;AACvB,WAAO,sBAAM;AACVsD,gBAAU,IADA;AAEVhC,aAAO;AACJK,cAAM;AADF;AAFG,KAAN,EAKJ3B,MALI,CAAP;AAMD,GArQW;AAuQZkF,cAvQY,wBAuQCC,IAvQD,EAuQOrE,KAvQP,EAuQa;AACvB,WAAO;AACLsE,UAAID,IADC;;AAGLE,qBAAe,CAHV;;AAKLnC,iBAAY,KALP;AAMLC,kBAAa,IANR;AAOLC,mBAAc,KAPT;AAQLC,kBAAa,IARR;;AAUL/B,aAAO;AACHK,cAAM;AADH,OAVF;AAaLmC,iBAAW,CAbN;AAcLwB,iBAAWxE,KAdN;AAeLyE,iBAAWzE,KAfN;AAgBLgC,cAAQ;AACNjC,eAAO;AACLC,iBAAQA,KADH;AAELmB,sBAAY,MAFP;AAGLD,oBAAU;AAHL;AADD;AAhBH,KAAP;AAwBD,GAhSW;AAkSZwD,UAlSY,2BAkSoB;AAAA,QAArBC,QAAqB,SAArBA,QAAqB;AAAA,QAAXC,QAAW,SAAXA,QAAW;;AAC9B,QAAKA,WAASC,OAAOC,iBAAhB,IAAqCH,WAASE,OAAOE,iBAA1D,EAA4E;AACzE,aAAOJ,WAAY,CAACC,WAASD,QAAV,IAAoB,EAApB,GAAuB,GAA1C;AACF,KAFD,MAEO;AACL,aAAOd,SAAP;AACD;AACF,GAxSW;AA0SZmB,kBA1SY,8BA0Se;AAAA,QAAV9F,MAAU,uEAAH,EAAG;;AACzB,WAAO,sBAAM;AACXsF,iBAAW,gBAAMS,eADN;AAEXjC,iBAAW,CAFA;AAGXkC,cAAQ;AACJ/F,iBAAU,KADN;AAEJ6D,mBAAW,CAFP;AAGJwB,mBAAW,gBAAMW;AAHb,OAHG;AAQXC,aAAQ;AACNjF,eAAQ;AACN6C,qBAAY;AADN;AADF;AARG,KAAN,EAaJ9D,MAbI,CAAP;AAcD,GAzTW;AA2TZmG,oBA3TY,gCA2TiB;AAAA,QAAVnG,MAAU,uEAAH,EAAG;;AAC3B,WAAO,sBAAM;AACTsF,iBAAW,gBAAMc,iBADR;AAETtC,iBAAW,CAFF;AAGTkC,cAAQ;AACJ/F,iBAAU,KADN;AAEJ6D,mBAAW,CAFP;AAGJwB,mBAAW,gBAAMe;AAHb,OAHC;AAQTH,aAAQ;AACNjF,eAAQ;AACN6C,qBAAY;AADN;AADF;AARC,KAAN,EAaJ9D,MAbI,CAAP;AAcD,GA1UW;AA4UZsG,oBA5UY,gCA4UiB;AAAA,QAAVtG,MAAU,uEAAH,EAAG;;AAC3B,WAAO,sBAAM;AACXgB,cAAS;AACPC,eAAQ;AACNsF,gBAAO;AACLC,wBAAa;AACX/F,oBAAO,gBAAMgG;AADF,aADR;AAIL9G,qBAAU,IAJL;AAKL+G,kBAAO;AALF;AADD;AADD;AADE,KAAN,EAYJ1G,MAZI,CAAP;AAaD,GA1VW;AA4VZ2G,SA5VY,qBA4VM;AAAA,QAAV3G,MAAU,uEAAH,EAAG;;AAChB,WAAO,sBAAM;AACV4G,oBAAc,EADJ;AAEVC,mBAAa,EAFH;AAGVC,oBAAc,CAHJ;AAIVC,eAAS,IAJC;AAKVC,iBAAY;AACVlG,eAAO,gBAAMmG,WADH;AAEVC,gBAAQ,SAFE;AAGVlF,kBAAU,MAHA;AAIVD,oBAAY,uCAJF;AAKVE,oBAAY,MALF;AAMVkF,oBAAa;AANH;AALF,KAAN,EAaJnH,MAbI,CAAP;AAcD,GA3WW;AA8WboH,cA9Wa,+BA8WkB;AAAA,QAAhBtG,KAAgB,SAAhBA,KAAgB;AAAA,QAATuG,MAAS,SAATA,MAAS;;AAC5B,WAAO;AACLC,cAAS,CADJ;AAELD,cAASA,MAFJ;AAGLrG,cAAS;AACPC,eAAQ;AACNsG,qBAAW,gBAAMC,iBADX;AAENlC,qBAAW,gBAAMmC,iBAFX;AAGN3D,qBAAW,CAHL;AAIN4D,yBAAe,CAJT;AAKNzH,mBAAS,IALH;AAMNqH,kBAAQ,CANF;AAONK,sBAAY;AAPN;AADD;AAHJ,KAAP;AAeD;AA9XW,CAAd;;kBAkYe1J,K","file":"Chart.js","sourcesContent":["\r\nimport merge from 'lodash.merge';\r\nimport Highcharts from 'highcharts';\r\n\r\nimport COLOR from '../constants/Color';\r\nimport Tooltip from './Tooltip';\r\n\r\nconst _fMonoColors = function({ base1=COLOR.MONO_BASE1, base2=COLOR.MONO_BASE2 }){\r\n  const colors = []\r\n\r\n  for (let i = 0; i < 4; i += 1) {\r\n    // Start out with a darkened base color (negative brighten), and end\r\n    // up with a much brighter color\r\n   colors.push(Highcharts.Color(base1).brighten((i - 3) / 7).setOpacity(0.75).get());\r\n\r\n  }\r\n  for (let i = 0; i < 4; i += 1) {\r\n     colors.push(Highcharts.Color(base2).brighten((i - 3) / 7).setOpacity(0.75).get());\r\n  }\r\n\r\n  return colors;\r\n}\r\n\r\n\r\nconst Chart = {\r\n  COLOR_PERIOD : 4/7,\r\n  COLOR_LOW_LEVEL : -3/7,\r\n  COLOR_OPACITY : 0.75,\r\n  COLOR_BASE1 : COLOR.MONO_BASE1,\r\n  COLOR_BASE2 : COLOR.MONO_BASE2,\r\n\r\n  HEIGHT : 300,\r\n  STACKED_HEIGHT : 500,\r\n  LEGEND_ROW_HEIGHT : 32,\r\n\r\n  THEME_SPACING_TOP: 5,\r\n  SPACING_TOP : 20,\r\n  STACKED_SPACING_TOP : 25,\r\n  SPACING_BOTTOM : 24,\r\n  MARGIN_TOP : 60,\r\n  TREEMAP_MARGIN_TOP : 50,\r\n\r\n  STACKED_TITLE_Y : -10,\r\n  STACKED_SUBTITLE_Y : 10,\r\n  TREEMAP_TITLE_Y : 15,\r\n  TREEMAP_SUBTITLE_Y : 35,\r\n  SEMIDONUT_TITLE_Y : 15,\r\n  SEMIDONUT_SUBTITLE_Y: 35,\r\n\r\n\r\n  _monoColors : _fMonoColors({}),\r\n\r\n  fMonoPieColors({ base1=COLOR.MONO_BASE1, base2=COLOR.MONO_BASE2 }={}){\r\n    const colors = [];\r\n\r\n    for (let i = 0; i < 4; i += 1) {\r\n      colors.push(Highcharts.Color(base1).brighten((i - 3) / 7).get());\r\n    }\r\n    for (let i = 0; i < 4; i += 1) {\r\n      colors.push(Highcharts.Color(base2).brighten((i - 3) / 7).get());\r\n    }\r\n\r\n    return colors;\r\n  },\r\n\r\n  fCreateMonoColor(base=COLOR.MONO_BASE1, deltaColor=0, opacity=0.75){\r\n    return Highcharts.Color(base)\r\n                      .brighten( (this.COLOR_LOW_LEVEL) + deltaColor)\r\n                      .setOpacity(opacity)\r\n                      .get()\r\n  },\r\n\r\n  fnGetMonoColor(index){\r\n     const colorIndex = index % 8;\r\n     return  this._monoColors[colorIndex];\r\n  },\r\n\r\n  fCreditsRightBottom(option={}){\r\n    return merge({\r\n       enabled : true,\r\n       position : {\r\n           align: 'right',\r\n           x: -10,\r\n           verticalAlign: 'bottom',\r\n           y: -5\r\n      }\r\n    }, option)\r\n  },\r\n\r\n  fResetZoomButton(option={}){\r\n    return merge({\r\n       position: {\r\n          align: 'right',\r\n          verticalAlign: 'top',\r\n          x: 0,\r\n          y: 0\r\n       },\r\n       theme : {\r\n         fill : COLOR.BG_TITLE,\r\n         stroke : COLOR.BG_TITLE,\r\n         r : 4,\r\n         style : {\r\n           color : COLOR.TITLE_SHOW\r\n         },\r\n         states : {\r\n           hover : {\r\n             fill : COLOR.BG_TITLE,\r\n             stroke : COLOR.HOVER,\r\n             'stroke-width' : 2,\r\n             style : {\r\n               color : COLOR.HOVER\r\n             }\r\n           }\r\n         }\r\n       },\r\n       relativeTo: 'chart'\r\n    }, option)\r\n  },\r\n\r\n  setDefaultTitle(config, title, subtitle){\r\n    config.chart.spacingTop = this.STACKED_SPACING_TOP;\r\n    config.title = this.fTitle({ text : title, y: this.STACKED_TITLE_Y });\r\n    config.subtitle = this.fSubtitle({ text : subtitle, y : this.STACKED_SUBTITLE_Y });\r\n  },\r\n\r\n  fTitle(option={}){\r\n    return merge({\r\n       text: '',\r\n       floating: true,\r\n       align: 'left',\r\n       x: 25,\r\n       y: 25,\r\n       style: {\r\n         color: COLOR.CHART_TITLE,\r\n         fontFamily: '\"Roboto\", \"Arial\", \"Lato\", sans-serif',\r\n         fontSize: '16px',\r\n         fontWeight: 'bold'\r\n       }\r\n    }, option)\r\n  },\r\n  fSubtitle(option={}){\r\n    return merge({\r\n      text: '',\r\n      floating: true,\r\n      align: 'left',\r\n      x: 25,\r\n      y: 45,\r\n      style: {\r\n        color: COLOR.CHART_SUBTITLE,\r\n        fontFamily: '\"Roboto\", \"Arial\", \"Lato\", sans-serif',\r\n        fontSize: '16px',\r\n        fontWeight: 'bold'\r\n      }\r\n    }, option)\r\n  },\r\n\r\n fTitleIndicator(text){\r\n   return {\r\n     text : text,\r\n     style : {\r\n       color: COLOR.METRIC_TITLE,\r\n       fontSize : '16px',\r\n       fontWeight : 'bold'\r\n     },\r\n     floating : true,\r\n     align: 'left',\r\n     verticalAlign: 'top',\r\n     x: 8,\r\n     y: 15\r\n    }\r\n },\r\n\r\n fNavigation(){\r\n   return {\r\n     buttonOptions : {\r\n       y : 5\r\n     }\r\n   }\r\n },\r\n\r\nfBaseConfig(){\r\n  return {\r\n    zhSeries : {\r\n      count : 0\r\n    },\r\n    chart : {\r\n      marginRight : 60\r\n    },\r\n    title: {\r\n      text: ''\r\n    },\r\n    legend: {\r\n      enabled: false\r\n    },\r\n    xAxis: {\r\n      type: 'datetime',\r\n      labels : {},\r\n      crosshair : Chart.fCrosshair()\r\n    },\r\n    yAxis: {\r\n      endOnTick : false,\r\n      maxPadding : 0.15,\r\n      startOnTick : false,\r\n      minPadding : 0.15,\r\n      opposite : true,\r\n      showEmpty : true,\r\n      title: {\r\n        text: ''\r\n      }\r\n    },\r\n    series: [{\r\n      zhValueText : 'Value',\r\n      turboThreshold : 20000,\r\n      type: 'area',\r\n      tooltip : Chart.fTooltip(Tooltip.fnBasePointFormatter),\r\n      lineWidth : 1,\r\n      states: {\r\n        hover: {\r\n          lineWidth : 1\r\n        }\r\n     }\r\n    }]\r\n  }\r\n},\r\n\r\nfEventsMouseOver(fn){\r\n  return {\r\n    events : {\r\n      mouseOver : fn\r\n   }\r\n  }\r\n},\r\n\r\nfTooltip(fnPointFormatter){\r\n  return {\r\n    pointFormatter : fnPointFormatter,\r\n    headerFormat : ''\r\n  }\r\n},\r\n\r\nfCrosshair(){\r\n    return {\r\n      color : COLOR.CROSSHAIR,\r\n      width : 1,\r\n      zIndex : 2\r\n    }\r\n  },\r\n\r\n  fPlotLine(color, text){\r\n    return {\r\n      value: undefined ,\r\n      color: color,\r\n      dashStyle: 'solid',\r\n      width: 1,\r\n      zIndex: 4,\r\n      label: {\r\n        text: text,\r\n        verticalAlign: 'top',\r\n        style: {\r\n          color: color,\r\n          fontWeight: 'bold',\r\n          fontSize: 'medium'\r\n        }\r\n     }\r\n   }\r\n },\r\n\r\n fXAxisOpposite(option={}){\r\n    return merge({\r\n      opposite : true,\r\n      tickLength : 0,\r\n      tickPosition : 'inside',\r\n      labels : {\r\n        y : -5\r\n      }\r\n    }, option)\r\n  },\r\n\r\n  fYAxisOpposite(option={}){\r\n    return merge({\r\n       opposite: true,\r\n       title: {\r\n          text: ''\r\n       }\r\n    }, option)\r\n  },\r\n\r\n  fSecondYAxis(name, color){\r\n    return {\r\n      id: name,\r\n\r\n      gridLineWidth: 0,\r\n\r\n      endOnTick : false,\r\n      maxPadding : 0.15,\r\n      startOnTick : false,\r\n      minPadding : 0.15,\r\n\r\n      title: {\r\n          text: ''\r\n      },\r\n      lineWidth: 2,\r\n      lineColor: color,\r\n      tickColor: color,\r\n      labels: {\r\n        style: {\r\n          color : color,\r\n          fontWeight: \"bold\",\r\n          fontSize: \"14px\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  calcMinY({ minPoint, maxPoint }){\r\n    if ( maxPoint>Number.NEGATIVE_INFINITY && minPoint<Number.POSITIVE_INFINITY){\r\n       return minPoint - ((maxPoint-minPoint)*30/180)\r\n    } else {\r\n      return undefined;\r\n    }\r\n  },\r\n\r\n  fPlotOptionsArea(option={}){\r\n    return merge({\r\n      lineColor: COLOR.AREA_HOVER_LINE,\r\n      lineWidth: 0,\r\n      marker: {\r\n          enabled : false,\r\n          lineWidth: 1,\r\n          lineColor: COLOR.AREA_MARKER_LINE\r\n      },\r\n      state : {\r\n        hover : {\r\n          lineWidth : 2\r\n        }\r\n      }\r\n    }, option);\r\n  },\r\n\r\n  fPlotOptionsColumn(option={}){\r\n    return merge({\r\n        lineColor: COLOR.COLUMN_HOVER_LINE,\r\n        lineWidth: 0,\r\n        marker: {\r\n            enabled : false,\r\n            lineWidth: 1,\r\n            lineColor: COLOR.COLUMN_MARKER_LINE\r\n        },\r\n        state : {\r\n          hover : {\r\n            lineWidth : 2\r\n          }\r\n        }\r\n    }, option)\r\n  },\r\n\r\n  fPlotOptionsSeries(option={}){\r\n    return merge({\r\n      states : {\r\n        hover : {\r\n          halo : {\r\n            attributes : {\r\n              fill : COLOR.HALO_BASE\r\n            },\r\n            opacity : 0.35,\r\n            size : 16\r\n          }\r\n        }\r\n      }\r\n    }, option)\r\n  },\r\n\r\n  fLegend(option={}){\r\n    return merge({\r\n       symbolHeight: 14,\r\n       symbolWidth: 14,\r\n       symbolRadius: 7,\r\n       useHTML: true,\r\n       itemStyle : {\r\n         color: COLOR.LEGEND_ITEM,\r\n         cursor: 'pointer',\r\n         fontSize: '16px',\r\n         fontFamily: '\"Roboto\", \"Arial\", \"Lato\", sans-serif',\r\n         fontWeight: 'bold',\r\n         lineHeight : 1.5\r\n       }\r\n    }, option)\r\n  },\r\n\r\n\r\n fSeriaMarker({ color, symbol }){\r\n    return {\r\n      radius : 4,\r\n      symbol : symbol,\r\n      states : {\r\n        hover : {\r\n          fillColor: COLOR.MARKER_HOVER_FILL,\r\n          lineColor: COLOR.MARKER_HOVER_LINE,\r\n          lineWidth: 1,\r\n          lineWidthPlus: 0,\r\n          enabled: true,\r\n          radius: 2,\r\n          radiusPlus: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default Chart\r\n"]}