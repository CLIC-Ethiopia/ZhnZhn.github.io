{"version":3,"sources":["../../src/charts/ConfigBuilder.js"],"names":["fTitle","fSubtitle","fTooltip","Chart","setPlotLinesMinMax","setPlotLinesDeltas","calcMinY","setYToPoints","ChartFn","crAreaConfig","crTreeMapConfig","ChartConfig","C","CATEGORIES_X_AXIS","type","categories","opposite","labels","y","crosshair","undefined","tickColor","tickWidth","tickLength","tickPosition","gridLineWidth","CATEGORIES_Y_AXIS","lineWidth","startOnTick","endOnTick","minPadding","maxPadding","plotLines","x","_isObj","obj","_isStr","str","_isNumber","n","_isNotEmptyArr","arr","_isArr","length","Array","isArray","_assign","Object","assign","_assignTo","propName","value","_getY","point","_getData","config","series","data","_findMinY","minY","_findMaxY","maxY","_calcYAxisMin","min","max","noZoom","ConfigBuilder","crSeria","adapter","json","option","toConfig","_seria","prototype","SeriaBuilder","ConfigStockSlice","init","areaConfig","area2Config","title","subtitle","spacingTop","addCaption","add","categoryConfig","xAxis","barOrColumnConfig","_crConfig","Factory","crBarConfig","crColumnConfig","treeMapConfig","addTitle","text","addSubtitle","addTooltip","tooltip","_propName","addZhMiniConfig","_configs","zhMiniConfigs","push","_addMini","crConfig","addZhPointsIf","is","zhPoints","addLegend","legend","addMinMax","isNotZoomToMinMax","isDrawDeltaExtrems","isFilterZero","_data","_setMinMax","_setMinMaxDeltas","_recentIndex","yAxis","_addScatterBottom","seria","name","chart","zhConfig","visible","spacingBottom","index","color","_disableAnimation","animation","plotOptions","withoutAnimation","_checkDataLength"],"mappings":"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","sourcesContent":["import {  \r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero\r\n} from '../math/seriaFn';\r\n\r\nimport Chart from './Chart';\r\nimport ChartFn from './ChartFn';\r\nimport ChartConfig from './ChartConfig';\r\nimport Factory from './ChartFactory';\r\n\r\nimport SeriaBuilder from './SeriaBuilder';\r\nimport ConfigStockSlice from './ConfigStockSlice';\r\n\r\nconst {\r\n  fTitle,\r\n  fSubtitle,\r\n  fTooltip\r\n} = Chart;\r\nconst {\r\n  setPlotLinesMinMax,\r\n  setPlotLinesDeltas,\r\n  calcMinY,\r\n  setYToPoints\r\n} = ChartFn;\r\nconst {\r\n  crAreaConfig,\r\n  crTreeMapConfig\r\n} = ChartConfig;\r\n\r\nconst C = {\r\n  CATEGORIES_X_AXIS: {\r\n    type: \"category\",\r\n    categories: [],\r\n    opposite: false,\r\n    labels: {\r\n      y: 18\r\n    },\r\n    crosshair: undefined,\r\n    tickColor: \"gray\",\r\n    tickWidth: 3,\r\n    tickLength: 7,\r\n    tickPosition: \"outside\",\r\n    gridLineWidth: 0\r\n  },\r\n\r\n  CATEGORIES_Y_AXIS: {\r\n    lineWidth: 0,\r\n    tickLength: 0,\r\n    startOnTick: true,\r\n    endOnTick: true,\r\n    minPadding: 0.05,\r\n    maxPadding: 0.05,\r\n    plotLines: null,\r\n    labels: {\r\n      x: 3\r\n    }\r\n  }\r\n};\r\n\r\nconst _isObj = obj => obj && typeof obj === 'object'\r\n, _isStr = str => typeof str === 'string'\r\n, _isNumber = n => typeof n === 'number'\r\n  && n - n === 0\r\n, _isNotEmptyArr = arr => _isArr(arr)\r\n  && arr.length > 0;\r\n\r\nconst _isArr = Array.isArray\r\n, _assign = Object.assign\r\n, _assignTo = (obj, propName, value) => {\r\n    obj[propName] = _isObj(value) && !_isArr(value)\r\n      ? _assign(obj[propName] || {}, value)\r\n      : value\r\n};\r\n\r\nconst _getY = (point) => _isArr(point)\r\n ? point[1]\r\n : point && point.y || 0;\r\n\r\nconst _getData = obj => obj.config?.series?.[0].data\r\n || [];\r\n\r\nconst _findMinY = (minY, data) => _isNumber(minY)\r\n  ? minY\r\n  : findMinY(data);\r\nconst _findMaxY = (maxY, data) => _isNumber(maxY)\r\n  ? maxY\r\n  : findMaxY(data);\r\nconst _calcYAxisMin = (min, max, noZoom) => noZoom\r\n  && min > 0\r\n   ? 0\r\n   : calcMinY(min, max);\r\n\r\n\r\nconst ConfigBuilder = function(config={}) {\r\n  if (!(this instanceof ConfigBuilder)){\r\n    return (new ConfigBuilder(config));\r\n  }\r\n  this.config = config;\r\n};\r\n\r\nConfigBuilder.crSeria = ({ adapter, json, option, type }) => {\r\n  const { config } = adapter.toConfig(json, option)\r\n  , _seria = config.series[0];\r\n  _seria.minY = findMinY(_seria.data)\r\n  if (type) {\r\n    _seria.type = type\r\n  }\r\n  return _seria;\r\n}\r\n\r\nConfigBuilder.prototype = _assign(ConfigBuilder.prototype , {\r\n  ...SeriaBuilder,\r\n  ...ConfigStockSlice,\r\n\r\n  init(config={}) {\r\n    this.config = config\r\n    return this;\r\n  },\r\n  areaConfig(option){\r\n    this.config = crAreaConfig(option);\r\n    return this;\r\n  },\r\n  area2Config(title, subtitle){\r\n    return this.areaConfig({ spacingTop: 25 })\r\n      .addCaption(title, subtitle)\r\n      .add('series', []);\r\n  },\r\n  categoryConfig(categories=[]){\r\n    this.config = crAreaConfig({ spacingTop: 25 })\r\n    const xAxis = {...C.CATEGORIES_X_AXIS, ...{ categories }}\r\n    return this.add('xAxis', xAxis)\r\n      .add('yAxis', C.CATEGORIES_Y_AXIS);\r\n  },\r\n  barOrColumnConfig(type, categories=[], option){\r\n    const _crConfig = type === 'BAR'\r\n      ? Factory.crBarConfig\r\n      : Factory.crColumnConfig;\r\n    this.config = _crConfig(option)\r\n    return this.add('xAxis', { categories });\r\n  },\r\n  treeMapConfig(){\r\n    this.config = crTreeMapConfig()\r\n    return this;\r\n  },\r\n\r\n  addTitle(text) {\r\n    _assignTo(this.config, 'title', fTitle({ text }))\r\n    return this;\r\n  },\r\n  addSubtitle(text) {\r\n    _assignTo(this.config, 'subtitle', fSubtitle({ text }))\r\n    return this;\r\n  },\r\n  addCaption(title, subtitle){\r\n    return this\r\n      .addTitle(title)\r\n      .addSubtitle(subtitle);\r\n  },\r\n\r\n  addTooltip(tooltip) {\r\n    this.config.tooltip = fTooltip(tooltip)\r\n    return this;\r\n  },\r\n\r\n  add(propName, option){\r\n    if (_isStr(propName)){\r\n      _assignTo(this.config, propName, option)\r\n    } else if (_isObj(propName)){\r\n      let _propName;\r\n      for (_propName in propName){\r\n        _assignTo(this.config, _propName, propName[_propName])\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n  addZhMiniConfig(config){\r\n    const _configs = this.config.zhMiniConfigs;\r\n    if (_configs){\r\n      _configs.push(config)\r\n    } else {\r\n      this.config.zhMiniConfigs = [config]\r\n    }\r\n    return this;\r\n  },\r\n  _addMini(data, option, crConfig){\r\n    return data && data.length > 0\r\n      ? this.addZhMiniConfig(crConfig(option))\r\n      : this;\r\n  },\r\n\r\n  addZhPointsIf(data, propName='zhIsMfi', is=true){\r\n    return is\r\n      ? this.add({ zhPoints: data, [propName]: true })\r\n      : this;\r\n  },\r\n\r\n  addLegend(legend){\r\n    return _isNotEmptyArr(legend)\r\n      ? this.add('zhConfig', { legend })\r\n      : this;\r\n  },\r\n\r\n  addMinMax(data, option){\r\n    const {\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      isFilterZero,\r\n      minY, maxY\r\n    } = option\r\n    , _data = isFilterZero ? filterTrimZero(data) : data\r\n    , min = _findMinY(minY, _data)\r\n    , max = _findMaxY(maxY, _data);\r\n    return this._setMinMax(min, max, isNotZoomToMinMax)\r\n      ._setMinMaxDeltas(min, max, _data, isDrawDeltaExtrems);\r\n  },\r\n\r\n\r\n  _setMinMaxDeltas(min, max, data, isDrawDeltaExtrems){\r\n    if (isDrawDeltaExtrems) {\r\n      const _recentIndex = data.length-1;\r\n      if (_recentIndex > 0) {\r\n        setPlotLinesDeltas({\r\n          plotLines: this.config.yAxis.plotLines,\r\n          min, max,\r\n          value: _getY(data[_recentIndex])\r\n        })\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n\r\n  _setMinMax(min, max, noZoom){\r\n    setPlotLinesMinMax({\r\n      plotLines: this.config.yAxis.plotLines,\r\n      min, max\r\n    })\r\n    return this.add('yAxis', {\r\n      min: _calcYAxisMin(min, max, noZoom),\r\n      maxPadding: 0.15,\r\n      minPadding: 0.15,\r\n      endOnTick: false,\r\n      startOnTick: false\r\n    });\r\n  },\r\n\r\n  _addScatterBottom(seria, name, min, max) {\r\n    const { data } = seria;\r\n    if (data.length > 0) {\r\n     const { series, chart, zhConfig } = this.config;\r\n     setYToPoints(data, calcMinY(min, max));\r\n     seria.visible = false\r\n     series.push(seria);\r\n     chart.spacingBottom = 40;\r\n     zhConfig.legend.push({\r\n       index: series.length - 1,\r\n       color: seria.color,\r\n       name: name\r\n     })\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _disableAnimation(){\r\n    this.add({\r\n      chart: { animation: false },\r\n      plotOptions: { series: { animation: false }},\r\n      zhConfig: { withoutAnimation: true }\r\n    });\r\n  },\r\n\r\n  _checkDataLength(){\r\n    const data = _getData(this);\r\n    if (data.length > 3000){\r\n      this._disableAnimation()\r\n    }\r\n  },\r\n\r\n  toConfig(){\r\n    this._checkDataLength()\r\n    return this.config;\r\n  }\r\n})\r\n\r\nexport default ConfigBuilder\r\n"],"file":"ConfigBuilder.js"}