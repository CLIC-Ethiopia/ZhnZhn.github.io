{"version":3,"sources":["../../src/charts/ConfigBuilder.js"],"names":["findMinY","seriaFns","findMaxY","filterTrimZero","setPlotLinesMinMax","ChartFn","setPlotLinesDeltas","calcMinY","setYToPoints","crDividendSeria","ChartConfig","crMiniVolumeConfig","crMiniATHConfig","crMiniHLConfig","C","CATEGORIES_X_AXIS","type","categories","opposite","labels","y","crosshair","undefined","tickColor","tickWidth","tickLength","tickPosition","gridLineWidth","CATEGORIES_Y_AXIS","lineWidth","startOnTick","endOnTick","minPadding","maxPadding","plotLines","x","_assign","Object","assign","_isArr","Array","isArray","_isObj","obj","_isStr","str","_isNumber","n","_getY","point","_getData","config","series","data","ConfigBuilder","crSeria","adapter","json","option","toConfig","_seria","minY","prototype","SeriaBuilder","init","areaConfig","crAreaConfig","area2Config","title","subtitle","spacingTop","addCaption","clearSeries","stockConfig","id","dataOption","dataVolumeColumn","dataVolume","dataATH","minClose","maxClose","isNotZoomToMinMax","isDrawDeltaExtrems","dataHigh","dataLow","dataOpen","seriaType","seriaColor","seriaWidth","addTooltip","Tooltip","vDmy","addMiniVolume","dColumn","dVolume","addMiniATH","setMinMax","setMinMaxDeltas","setStockSerias","intradayConfig","dH","dL","dO","add","marginBottom","vTdmy","tooltipColumn","Chart","fTooltip","volumeTdmy","categoryConfig","xAxis","_columnConfig","Factory","crColumnConfig","_barConfig","crBarConfig","barOrColumnConfig","treeMapConfig","crTreeMapConfig","alignButtonExport","navigation","buttonOptions","addTitle","_to","fTitle","text","STACKED_TITLE_Y","addSubtitle","fSubtitle","STACKED_SUBTITLE_Y","tooltip","addXAxisCrosshair","fCrosshair","propName","_propName","_from","addZhMiniConfig","_configs","zhMiniConfigs","push","length","addMiniHL","addZhPoints","fn","zhPoints","zhIsMfi","addLegend","legend","addMinMax","isFilterZero","maxY","_data","min","max","_recentIndex","yAxis","value","_setYAxisMin","noZoom","_min","minPoint","maxPoint","d","addDividend","dataDividend","chart","spacingBottom","_disableAnimation","animation","plotOptions","zhConfig","withoutAnimation","_checkDataLength"],"mappings":"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","sourcesContent":["import seriaFns from '../math/seriaFn'\r\n\r\nimport Chart from './Chart'\r\nimport ChartFn from './ChartFn'\r\nimport ChartConfig from './ChartConfig'\r\nimport Factory from './ChartFactory'\r\nimport Tooltip from './Tooltip'\r\n\r\nimport SeriaBuilder from './SeriaBuilder'\r\n\r\nconst {\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero\r\n} = seriaFns;\r\nconst {\r\n  setPlotLinesMinMax,\r\n  setPlotLinesDeltas,\r\n  calcMinY,\r\n  setYToPoints,\r\n} = ChartFn;\r\nconst {\r\n  crDividendSeria,\r\n  crMiniVolumeConfig,\r\n  crMiniATHConfig,\r\n  crMiniHLConfig\r\n} = ChartConfig;\r\n\r\nconst C = {\r\n  CATEGORIES_X_AXIS: {\r\n    type: \"category\",\r\n    categories: [],\r\n    opposite: false,\r\n    labels: {\r\n      y: 18\r\n    },\r\n    crosshair: undefined,\r\n    tickColor: \"gray\",\r\n    tickWidth: 3,\r\n    tickLength: 7,\r\n    tickPosition: \"outside\",\r\n    gridLineWidth: 0\r\n  },\r\n\r\n  CATEGORIES_Y_AXIS: {\r\n    lineWidth: 0,\r\n    tickLength: 0,\r\n    startOnTick: true,\r\n    endOnTick: true,\r\n    minPadding: 0.05,\r\n    maxPadding: 0.05,\r\n    plotLines: null,\r\n    labels: {\r\n      x: 3\r\n    }\r\n  }\r\n};\r\n\r\nconst _assign = Object.assign;\r\nconst _isArr = Array.isArray;\r\n\r\nconst _isObj = obj => obj && typeof obj === 'object';\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isNumber = n => typeof n === 'number'\r\n  && n - n === 0;\r\n\r\nconst _getY = (point) => _isArr(point)\r\n ? point[1]\r\n : point && point.y || 0;\r\n\r\nconst _getData = obj => obj.config?.series?.[0].data\r\n || [];\r\n\r\nconst ConfigBuilder = function(config={}) {\r\n  if (!(this instanceof ConfigBuilder)){\r\n    return (new ConfigBuilder(config));\r\n  }\r\n  this.config = config;\r\n};\r\n\r\nConfigBuilder.crSeria = ({ adapter, json, option, type }) => {\r\n  const { config } = adapter.toConfig(json, option)\r\n  , _seria = config.series[0];\r\n  _seria.minY = findMinY(_seria.data)\r\n  if (type) {\r\n    _seria.type = type\r\n  }\r\n  return _seria;\r\n}\r\n\r\nConfigBuilder.prototype = _assign(ConfigBuilder.prototype , {\r\n  ...SeriaBuilder,\r\n\r\n  init(config={}) {\r\n    this.config = config\r\n    return this;\r\n  },\r\n  areaConfig(option){\r\n    this.config = ChartConfig.crAreaConfig(option);\r\n    return this;\r\n  },\r\n  area2Config(title, subtitle){\r\n    return this.areaConfig({ spacingTop: 25 })\r\n      .addCaption(title, subtitle)\r\n      .clearSeries();\r\n  },\r\n  stockConfig(id, dataOption){\r\n    const {\r\n      dataVolumeColumn, dataVolume,\r\n      dataATH,\r\n      minClose, maxClose,\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      data, dataHigh, dataLow, dataOpen,\r\n      seriaType, seriaColor, seriaWidth\r\n    } = dataOption;\r\n    return this.areaConfig({ spacingTop: 25, seriaType, seriaColor, seriaWidth })\r\n      .addTooltip(Tooltip.vDmy)\r\n      .addMiniVolume({\r\n        id,\r\n        dColumn: dataVolumeColumn,\r\n        dVolume: dataVolume\r\n      })\r\n      .addMiniATH({\r\n        id, data: dataATH\r\n      })\r\n      .setMinMax(minClose, maxClose, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(minClose, maxClose, data, isDrawDeltaExtrems)\r\n      .setStockSerias(id, data, dataHigh, dataLow, dataOpen);\r\n  },\r\n  intradayConfig({\r\n    id,\r\n    data, dH, dL, dO,\r\n    minClose, maxClose,\r\n    dVolume, dColumn\r\n  }){\r\n    return this.areaConfig()\r\n      .add('chart', { spacingTop: 25, marginBottom: 20 })\r\n      .addTooltip(Tooltip.vTdmy)\r\n      .setStockSerias(id, data, dH, dL, dO)\r\n      .setMinMax(minClose, maxClose, false)\r\n      .addMiniVolume({\r\n        id, dVolume, dColumn,\r\n        tooltipColumn: Chart.fTooltip(Tooltip.volumeTdmy)\r\n      });\r\n  },\r\n  categoryConfig(categories=[]){\r\n    this.config = ChartConfig.crAreaConfig()\r\n    const xAxis = {...C.CATEGORIES_X_AXIS, ...{ categories }}\r\n    this.add('xAxis', xAxis)\r\n    this.add('yAxis', C.CATEGORIES_Y_AXIS)\r\n    return this;\r\n  },\r\n  _columnConfig(categories=[], option){\r\n    this.config = Factory.crColumnConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  _barConfig(categories=[], option){\r\n    this.config = Factory.crBarConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  barOrColumnConfig(type, categories=[], option){\r\n    if (type === 'BAR') {\r\n      return this._barConfig(categories, option);\r\n    }\r\n    return this._columnConfig(categories, option);\r\n  },\r\n  treeMapConfig(){\r\n    this.config = ChartConfig.crTreeMapConfig()\r\n    return this;\r\n  },\r\n\r\n  alignButtonExport(){\r\n    _assign(\r\n      this.config.navigation.buttonOptions, { x: -10, y: -20 }\r\n    )\r\n    return this;\r\n  },\r\n\r\n\r\n  addTitle(title) {\r\n    const _to = this.config.title || {};\r\n    this.config.title = _assign(_to,\r\n      Chart.fTitle({\r\n        text: title,\r\n        y: Chart.STACKED_TITLE_Y\r\n      })\r\n    )\r\n    return this;\r\n  },\r\n  addSubtitle(subtitle) {\r\n    const _to = this.config.subtitle || {};\r\n    this.config.subtitle = _assign(_to,\r\n       Chart.fSubtitle({\r\n         text: subtitle,\r\n         y: Chart.STACKED_SUBTITLE_Y\r\n       })\r\n    )\r\n    return this;\r\n  },\r\n  addCaption(title='', subtitle=''){\r\n    return this\r\n      .addTitle(title)\r\n      .addSubtitle(subtitle);\r\n  },\r\n\r\n  addTooltip(tooltip) {\r\n    this.config.tooltip = Chart.fTooltip(tooltip)\r\n    return this;\r\n  },\r\n\r\n  addXAxisCrosshair(){\r\n    this.add('xAxis', { crosshair : Chart.fCrosshair() })\r\n    return this;\r\n  },\r\n\r\n  add(propName, option){\r\n    if (_isStr(propName)){\r\n      const _to = this.config[propName];\r\n      if (_isObj(_to)) {\r\n        _assign(_to, option)\r\n      } else {\r\n        this.config[propName] = option\r\n      }\r\n    } else if (_isObj(propName)){\r\n      let _propName;\r\n      for (_propName in propName){\r\n        const _to = this.config[_propName]\r\n            , _from = propName[_propName];\r\n        if (_to) {\r\n          _assign(_to, _from)\r\n        } else {\r\n          this.config[_propName] = _from\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n  addZhMiniConfig(config){\r\n    const _configs = this.config.zhMiniConfigs;\r\n    if (_configs){\r\n      _configs.push(config)\r\n    } else {\r\n      this.config.zhMiniConfigs = [config]\r\n    }\r\n    return this;\r\n  },\r\n  addMiniVolume(option){\r\n    const { dVolume } = option;\r\n    return dVolume && dVolume.length > 0\r\n     ? this.addZhMiniConfig(crMiniVolumeConfig(option))\r\n     : this;\r\n  },\r\n  addMiniATH(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n     ? this.addZhMiniConfig(crMiniATHConfig(option))\r\n     : this;\r\n  },\r\n  addMiniHL(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n     ? this.addZhMiniConfig(crMiniHLConfig(option))\r\n     : this;\r\n  },\r\n\r\n  addZhPoints(data, fn){\r\n    this.add({\r\n      zhPoints: data,\r\n      zhIsMfi: true\r\n      //zhFnGetMfiConfig: fn\r\n    })\r\n    return this;\r\n  },\r\n\r\n  addLegend(legend){\r\n    return this.add('zhConfig', { legend });\r\n  },\r\n\r\n  addMinMax(data, option){\r\n    const {\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      isFilterZero,\r\n      minY, maxY\r\n    } = option\r\n    , _data = isFilterZero\r\n        ? filterTrimZero(data)\r\n        : data\r\n    , min = _isNumber(minY)\r\n       ? minY\r\n       : findMinY(_data)\r\n    , max = _isNumber(maxY)\r\n       ? maxY\r\n       : findMaxY(_data);\r\n    return this.setMinMax(min, max, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(min, max, _data, isDrawDeltaExtrems);\r\n  },\r\n\r\n\r\n  setMinMaxDeltas(min, max, data, isDrawDeltaExtrems){\r\n    if (isDrawDeltaExtrems) {\r\n      const _recentIndex = data.length-1;\r\n      if (_recentIndex > 0) {\r\n        setPlotLinesDeltas({\r\n          plotLines: this.config.yAxis.plotLines,\r\n          min, max,\r\n          value: _getY(data[_recentIndex])\r\n        })\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n\r\n  _setYAxisMin(min, max, noZoom){\r\n    const _min = noZoom && min > 0\r\n      ? 0\r\n      : Chart.calcMinY({\r\n          minPoint: min,\r\n          maxPoint: max\r\n        });\r\n    this.add('yAxis', {\r\n      min: _min,\r\n      maxPadding: 0.15,\r\n      minPadding: 0.15,\r\n      endOnTick: false,\r\n      startOnTick: false\r\n    })\r\n  },\r\n\r\n  setMinMax(min, max, noZoom){\r\n    setPlotLinesMinMax({\r\n      plotLines: this.config.yAxis.plotLines,\r\n      min, max\r\n    })\r\n    this._setYAxisMin(min, max, noZoom)\r\n    return this;\r\n  },\r\n  setStockSerias(id, d, dH, dL, dO){\r\n    ChartConfig.setStockSerias(\r\n      this.config, d, dH, dL, dO, id\r\n    )\r\n    return this;\r\n  },\r\n\r\n  /*\r\n  checkThreshold(seriaIndex=0){\r\n    const config = this.config\r\n    , { series=[] } = config\r\n    , seria = series[seriaIndex] || {}\r\n    , data = seria.data || [];\r\n    /*\r\n    if (_isArr(data) && data.length > 1000) {\r\n      config.plotOptions = _assign(\r\n        config.plotOptions || {}, {\r\n          series: {\r\n            turboThreshold: 0\r\n          }\r\n        }\r\n      )\r\n    }\r\n    return this;\r\n  },\r\n  */\r\n\r\n  addDividend({ dataDividend, minClose, maxClose }) {\r\n    if (dataDividend.length > 0) {\r\n      setYToPoints(\r\n        dataDividend,\r\n        calcMinY({ min: minClose, max: maxClose })\r\n      );\r\n      this.config.series.push(crDividendSeria(dataDividend));\r\n      this.config.chart.spacingBottom = 40;\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _disableAnimation(){\r\n    return this.add({\r\n      chart: { animation: false },\r\n      plotOptions: { series: { animation: false }},\r\n      zhConfig: { withoutAnimation: true }\r\n    });\r\n  },\r\n\r\n  _checkDataLength(){\r\n    const data = _getData(this);\r\n    if (data.length > 3000){\r\n      this._disableAnimation()\r\n    }\r\n    return this;\r\n  },\r\n\r\n  toConfig(){\r\n    this._checkDataLength()\r\n    return this.config;\r\n  }\r\n})\r\n\r\nexport default ConfigBuilder\r\n"],"file":"ConfigBuilder.js"}