{"version":3,"sources":["../../src/charts/ConfigBuilder.js"],"names":["findMinY","seriaFns","findMaxY","filterTrimZero","setPlotLinesMinMax","ChartFn","setPlotLinesDeltas","calcMinY","setYToPoints","crDividendSeria","ChartConfig","crMiniVolumeConfig","crMiniATHConfig","crMiniHLConfig","C","CATEGORIES_X_AXIS","type","categories","opposite","labels","y","crosshair","undefined","tickColor","tickWidth","tickLength","tickPosition","gridLineWidth","CATEGORIES_Y_AXIS","lineWidth","startOnTick","endOnTick","minPadding","maxPadding","plotLines","x","_assign","Object","assign","_isArr","Array","isArray","_isObj","obj","_isStr","str","_isNumber","n","_getY","point","_getData","config","series","data","ConfigBuilder","prototype","SeriaBuilder","init","areaConfig","option","crAreaConfig","area2Config","title","subtitle","spacingTop","addCaption","clearSeries","stockConfig","id","dataOption","dataVolumeColumn","dataVolume","dataATH","minClose","maxClose","isNotZoomToMinMax","isDrawDeltaExtrems","dataHigh","dataLow","dataOpen","addTooltip","Tooltip","fnBasePointFormatter","addMiniVolume","dColumn","dVolume","addMiniATH","setMinMax","setMinMaxDeltas","setStockSerias","intradayConfig","dH","dL","dO","add","marginBottom","fnBasePointFormatterT","tooltipColumn","Chart","fTooltip","volumeDmyt","categoryConfig","xAxis","_columnConfig","Factory","crColumnConfig","_barConfig","crBarConfig","barOrColumnConfig","treeMapConfig","fBaseTreeMapConfig","alignButtonExport","navigation","buttonOptions","addTitle","_to","fTitle","text","STACKED_TITLE_Y","addSubtitle","fSubtitle","STACKED_SUBTITLE_Y","tooltip","addXAxisCrosshair","fCrosshair","propName","_propName","_from","addZhMiniConfig","_configs","zhMiniConfigs","push","length","addMiniHL","addZhPoints","fn","zhPoints","zhIsMfi","addLegend","legend","addMinMax","isFilterZero","minY","maxY","_data","min","max","_recentIndex","yAxis","value","_setYAxisMin","noZoom","_min","minPoint","maxPoint","d","addDividend","dataDividend","chart","spacingBottom","_disableAnimation","animation","plotOptions","zhConfig","withoutAnimation","_checkDataLength","toConfig"],"mappings":"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","sourcesContent":["import seriaFns from '../math/seriaFn'\r\n\r\nimport Chart from './Chart'\r\nimport ChartFn from './ChartFn'\r\nimport ChartConfig from './ChartConfig'\r\nimport Factory from './ChartFactory'\r\nimport Tooltip from './Tooltip'\r\n\r\nimport SeriaBuilder from './SeriaBuilder'\r\n\r\nconst {\r\n  findMinY,\r\n  findMaxY,\r\n  filterTrimZero\r\n} = seriaFns;\r\nconst {\r\n  setPlotLinesMinMax,\r\n  setPlotLinesDeltas,\r\n  calcMinY,\r\n  setYToPoints,\r\n} = ChartFn;\r\nconst {\r\n  crDividendSeria,\r\n  crMiniVolumeConfig,\r\n  crMiniATHConfig,\r\n  crMiniHLConfig\r\n} = ChartConfig;\r\n\r\nconst C = {\r\n  CATEGORIES_X_AXIS: {\r\n    type: \"category\",\r\n    categories: [],\r\n    opposite: false,\r\n    labels: {\r\n      y: 18\r\n    },\r\n    crosshair: undefined,\r\n    tickColor: \"gray\",\r\n    tickWidth: 3,\r\n    tickLength: 7,\r\n    tickPosition: \"outside\",\r\n    gridLineWidth: 0\r\n  },\r\n\r\n  CATEGORIES_Y_AXIS: {\r\n    lineWidth: 0,\r\n    tickLength: 0,\r\n    startOnTick: true,\r\n    endOnTick: true,\r\n    minPadding: 0.05,\r\n    maxPadding: 0.05,\r\n    plotLines: null,\r\n    labels: {\r\n      x: 3\r\n    }\r\n  }\r\n};\r\n\r\nconst _assign = Object.assign;\r\nconst _isArr = Array.isArray;\r\n\r\nconst _isObj = obj => obj && typeof obj === 'object';\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isNumber = n => typeof n === 'number'\r\n  && n - n === 0;\r\n\r\nconst _getY = (point) => _isArr(point)\r\n ? point[1]\r\n : point && point.y || 0;\r\n\r\nconst _getData = obj => obj.config?.series?.[0].data\r\n || [];\r\n\r\nconst ConfigBuilder = function(config={}) {\r\n  if (!(this instanceof ConfigBuilder)){\r\n    return (new ConfigBuilder(config));\r\n  }\r\n  this.config = config;\r\n};\r\n\r\nConfigBuilder.prototype = _assign(ConfigBuilder.prototype , {\r\n  ...SeriaBuilder,\r\n\r\n  init(config={}) {\r\n    this.config = config\r\n    return this;\r\n  },\r\n  areaConfig(option){\r\n    this.config = ChartConfig.crAreaConfig(option);\r\n    return this;\r\n  },\r\n  area2Config(title, subtitle){\r\n    return this.areaConfig({ spacingTop: 25 })\r\n      .addCaption(title, subtitle)\r\n      .clearSeries();\r\n  },\r\n  stockConfig(id, dataOption){\r\n    const {\r\n      dataVolumeColumn, dataVolume,\r\n      dataATH,\r\n      minClose, maxClose,\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      data, dataHigh, dataLow, dataOpen\r\n    } = dataOption;\r\n    return this.areaConfig({ spacingTop: 25 })\r\n      .addTooltip(Tooltip.fnBasePointFormatter)\r\n      .addMiniVolume({\r\n        id,\r\n        dColumn: dataVolumeColumn,\r\n        dVolume: dataVolume\r\n      })\r\n      .addMiniATH({\r\n        id, data: dataATH\r\n      })\r\n      .setMinMax(minClose, maxClose, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(minClose, maxClose, data, isDrawDeltaExtrems)\r\n      .setStockSerias(id, data, dataHigh, dataLow, dataOpen);\r\n  },\r\n  intradayConfig({\r\n    id,\r\n    data, dH, dL, dO,\r\n    minClose, maxClose,\r\n    dVolume, dColumn\r\n  }){\r\n    return this.areaConfig()\r\n      .add('chart', { spacingTop: 25, marginBottom: 20 })\r\n      .addTooltip(Tooltip.fnBasePointFormatterT)\r\n      .setStockSerias(id, data, dH, dL, dO)\r\n      .setMinMax(minClose, maxClose, false)\r\n      .addMiniVolume({\r\n        id, dVolume, dColumn,\r\n        tooltipColumn: Chart.fTooltip(Tooltip.volumeDmyt)\r\n      });\r\n  },\r\n  categoryConfig(categories=[]){\r\n    this.config = ChartConfig.crAreaConfig()\r\n    const xAxis = {...C.CATEGORIES_X_AXIS, ...{ categories }}\r\n    this.add('xAxis', xAxis)\r\n    this.add('yAxis', C.CATEGORIES_Y_AXIS)\r\n    return this;\r\n  },\r\n  _columnConfig(categories=[], option){\r\n    this.config = Factory.crColumnConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  _barConfig(categories=[], option){\r\n    this.config = Factory.crBarConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  barOrColumnConfig(type, categories=[], option){\r\n    if (type === 'BAR') {\r\n      return this._barConfig(categories, option);\r\n    }\r\n    return this._columnConfig(categories, option);\r\n  },\r\n  treeMapConfig(){\r\n    this.config = ChartConfig.fBaseTreeMapConfig()\r\n    return this;\r\n  },\r\n\r\n  alignButtonExport(){\r\n    _assign(\r\n      this.config.navigation.buttonOptions, { x: -10, y: -20 }\r\n    )\r\n    return this;\r\n  },\r\n\r\n\r\n  addTitle(title) {\r\n    const _to = this.config.title || {};\r\n    this.config.title = _assign(_to,\r\n      Chart.fTitle({\r\n        text: title,\r\n        y: Chart.STACKED_TITLE_Y\r\n      })\r\n    )\r\n    return this;\r\n  },\r\n  addSubtitle(subtitle) {\r\n    const _to = this.config.subtitle || {};\r\n    this.config.subtitle = _assign(_to,\r\n       Chart.fSubtitle({\r\n         text: subtitle,\r\n         y: Chart.STACKED_SUBTITLE_Y\r\n       })\r\n    )\r\n    return this;\r\n  },\r\n  addCaption(title='', subtitle=''){\r\n    return this\r\n      .addTitle(title)\r\n      .addSubtitle(subtitle);\r\n  },\r\n\r\n  addTooltip(tooltip) {\r\n    this.config.tooltip = Chart.fTooltip(tooltip)\r\n    return this;\r\n  },\r\n\r\n  addXAxisCrosshair(){\r\n    this.add('xAxis', { crosshair : Chart.fCrosshair() })\r\n    return this;\r\n  },\r\n\r\n  add(propName, option){\r\n    if (_isStr(propName)){\r\n      const _to = this.config[propName];\r\n      if (_isObj(_to)) {\r\n        _assign(_to, option)\r\n      } else {\r\n        this.config[propName] = option\r\n      }\r\n    } else if (_isObj(propName)){\r\n      let _propName;\r\n      for (_propName in propName){\r\n        const _to = this.config[_propName]\r\n            , _from = propName[_propName];\r\n        if (_to) {\r\n          _assign(_to, _from)\r\n        } else {\r\n          this.config[_propName] = _from\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n  addZhMiniConfig(config){\r\n    const _configs = this.config.zhMiniConfigs;\r\n    if (_configs){\r\n      _configs.push(config)\r\n    } else {\r\n      this.config.zhMiniConfigs = [config]\r\n    }\r\n    return this;\r\n  },\r\n  addMiniVolume(option){\r\n    const { dVolume } = option;\r\n    return dVolume && dVolume.length > 0\r\n     ? this.addZhMiniConfig(crMiniVolumeConfig(option))\r\n     : this;\r\n  },\r\n  addMiniATH(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n     ? this.addZhMiniConfig(crMiniATHConfig(option))\r\n     : this;\r\n  },\r\n  addMiniHL(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n     ? this.addZhMiniConfig(crMiniHLConfig(option))\r\n     : this;\r\n  },\r\n\r\n  addZhPoints(data, fn){\r\n    this.add({\r\n      zhPoints: data,\r\n      zhIsMfi: true\r\n      //zhFnGetMfiConfig: fn\r\n    })\r\n    return this;\r\n  },\r\n\r\n  addLegend(legend){\r\n    return this.add('zhConfig', { legend });\r\n  },\r\n\r\n  addMinMax(data, option){\r\n    const {\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      isFilterZero,\r\n      minY, maxY\r\n    } = option\r\n    , _data = isFilterZero\r\n        ? filterTrimZero(data)\r\n        : data\r\n    , min = _isNumber(minY)\r\n       ? minY\r\n       : findMinY(_data)\r\n    , max = _isNumber(maxY)\r\n       ? maxY\r\n       : findMaxY(_data);\r\n    return this.setMinMax(min, max, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(min, max, _data, isDrawDeltaExtrems);\r\n  },\r\n\r\n\r\n  setMinMaxDeltas(min, max, data, isDrawDeltaExtrems){\r\n    if (isDrawDeltaExtrems) {\r\n      const _recentIndex = data.length-1;\r\n      if (_recentIndex > 0) {\r\n        setPlotLinesDeltas({\r\n          plotLines: this.config.yAxis.plotLines,\r\n          min, max,\r\n          value: _getY(data[_recentIndex])\r\n        })\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n\r\n  _setYAxisMin(min, max, noZoom){\r\n    const _min = noZoom && min > 0\r\n      ? 0\r\n      : Chart.calcMinY({\r\n          minPoint: min,\r\n          maxPoint: max\r\n        });\r\n    this.add('yAxis', {\r\n      min: _min,\r\n      maxPadding: 0.15,\r\n      minPadding: 0.15,\r\n      endOnTick: false,\r\n      startOnTick: false\r\n    })\r\n  },\r\n\r\n  setMinMax(min, max, noZoom){\r\n    setPlotLinesMinMax({\r\n      plotLines: this.config.yAxis.plotLines,\r\n      min, max\r\n    })\r\n    this._setYAxisMin(min, max, noZoom)\r\n    return this;\r\n  },\r\n  setStockSerias(id, d, dH, dL, dO){\r\n    ChartConfig.setStockSerias(\r\n      this.config, d, dH, dL, dO, id\r\n    )\r\n    return this;\r\n  },\r\n\r\n  /*\r\n  checkThreshold(seriaIndex=0){\r\n    const config = this.config\r\n    , { series=[] } = config\r\n    , seria = series[seriaIndex] || {}\r\n    , data = seria.data || [];\r\n    /*\r\n    if (_isArr(data) && data.length > 1000) {\r\n      config.plotOptions = _assign(\r\n        config.plotOptions || {}, {\r\n          series: {\r\n            turboThreshold: 0\r\n          }\r\n        }\r\n      )\r\n    }\r\n    return this;\r\n  },\r\n  */\r\n\r\n  addDividend({ dataDividend, minClose, maxClose }) {\r\n    if (dataDividend.length > 0) {\r\n      setYToPoints(\r\n        dataDividend,\r\n        calcMinY({ min: minClose, max: maxClose })\r\n      );\r\n      this.config.series.push(crDividendSeria(dataDividend, 'exDividend'));\r\n      this.config.chart.spacingBottom = 40;\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _disableAnimation(){\r\n    return this.add({\r\n      chart: { animation: false },\r\n      plotOptions: { series: { animation: false }},\r\n      zhConfig: { withoutAnimation: true }\r\n    });\r\n  },\r\n\r\n  _checkDataLength(){\r\n    const data = _getData(this);\r\n    if (data.length > 3000){\r\n      this._disableAnimation()\r\n    }\r\n    return this;\r\n  },\r\n\r\n  toConfig(){\r\n    this._checkDataLength()\r\n    return this.config;\r\n  }\r\n})\r\n\r\nexport default ConfigBuilder\r\n"],"file":"ConfigBuilder.js"}