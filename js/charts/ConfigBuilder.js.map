{"version":3,"sources":["../../src/charts/ConfigBuilder.js"],"names":["findMinY","seriaFns","findMaxY","setPlotLinesMinMax","ChartFn","setPlotLinesDeltas","calcMinY","setYToPoints","crDividendSeria","ChartConfig","C","CATEGORIES_X_AXIS","type","categories","opposite","labels","y","crosshair","undefined","tickColor","tickWidth","tickLength","tickPosition","gridLineWidth","CATEGORIES_Y_AXIS","lineWidth","startOnTick","endOnTick","minPadding","maxPadding","plotLines","x","_assign","Object","assign","_isObj","obj","_isStr","str","_isNumber","n","_getY","point","Array","isArray","ConfigBuilder","config","prototype","SeriaBuilder","init","areaConfig","option","fBaseAreaConfig","area2Config","title","subtitle","spacingTop","addCaption","clearSeries","stockConfig","id","dataOption","dataVolumeColumn","dataVolume","dataATH","minClose","maxClose","isNotZoomToMinMax","isDrawDeltaExtrems","data","dataHigh","dataLow","dataOpen","addTooltip","Tooltip","fnBasePointFormatter","addMiniVolume","dColumn","dVolume","addMiniATH","setMinMax","setMinMaxDeltas","setStockSerias","categoryConfig","xAxis","add","_columnConfig","Factory","crColumnConfig","_barConfig","crBarConfig","barOrColumnConfig","treeMapConfig","fBaseTreeMapConfig","alignButtonExport","navigation","buttonOptions","addTitle","_to","Chart","fTitle","text","STACKED_TITLE_Y","addSubtitle","fSubtitle","STACKED_SUBTITLE_Y","tooltip","fTooltip","addXAxisCrosshair","fCrosshair","propName","_propName","_from","addZhMiniConfig","_configs","zhMiniConfigs","push","length","fMiniVolumeConfig","fMiniATHConfig","addMiniHL","fMiniHLConfig","addZhPoints","fn","zhPoints","zhIsMfi","addLegend","legend","isWithLegend","addMinMax","minY","maxY","min","max","_recentIndex","yAxis","value","_setYAxisMin","noZoom","_min","minPoint","maxPoint","d","dH","dL","dO","addDividend","dataDividend","series","chart","spacingBottom","toConfig"],"mappings":"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","sourcesContent":["import seriaFns from '../math/seriaFn'\r\n\r\nimport Chart from './Chart'\r\nimport ChartFn from './ChartFn'\r\nimport ChartConfig from './ChartConfig'\r\nimport Factory from './ChartFactory'\r\nimport Tooltip from './Tooltip'\r\n\r\nimport SeriaBuilder from './SeriaBuilder'\r\n\r\nconst { findMinY, findMaxY } = seriaFns;\r\nconst {\r\n  setPlotLinesMinMax,\r\n  setPlotLinesDeltas,\r\n  calcMinY,\r\n  setYToPoints,\r\n} = ChartFn;\r\nconst { crDividendSeria } = ChartConfig;\r\n\r\nconst C = {\r\n  CATEGORIES_X_AXIS: {\r\n    type: \"category\",\r\n    categories: [],\r\n    opposite: false,\r\n    labels: {\r\n      y: 18\r\n    },\r\n    crosshair: undefined,\r\n    tickColor: \"gray\",\r\n    tickWidth: 3,\r\n    tickLength: 7,\r\n    tickPosition: \"outside\",\r\n    gridLineWidth: 0\r\n  },\r\n\r\n  CATEGORIES_Y_AXIS: {\r\n    lineWidth: 0,\r\n    tickLength: 0,\r\n    startOnTick: true,\r\n    endOnTick: true,\r\n    minPadding: 0.05,\r\n    maxPadding: 0.05,\r\n    plotLines: null,\r\n    labels: {\r\n      x: 3\r\n    }\r\n  }\r\n};\r\n\r\nconst _assign = Object.assign;\r\n//const _isArr = Array.isArray;\r\n\r\nconst _isObj = obj => obj && typeof obj === 'object';\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isNumber = n => typeof n === 'number'\r\n  && n - n === 0;\r\n\r\nconst _getY = (point) => Array.isArray(point)\r\n ? point[1]\r\n : point && point.y || 0;\r\n\r\nconst ConfigBuilder = function(config={}) {\r\n  if (!(this instanceof ConfigBuilder)){\r\n    return (new ConfigBuilder(config));\r\n  }\r\n  this.config = config;\r\n};\r\n\r\nConfigBuilder.prototype = _assign(ConfigBuilder.prototype , {\r\n  ...SeriaBuilder,\r\n\r\n  init(config={}) {\r\n    this.config = config\r\n    return this;\r\n  },\r\n  areaConfig(option){\r\n    this.config = ChartConfig.fBaseAreaConfig(option);\r\n    return this;\r\n  },\r\n  area2Config(title, subtitle){\r\n    this.areaConfig({ spacingTop: 25 })\r\n      .addCaption(title, subtitle)\r\n      .clearSeries()\r\n    return this;\r\n  },\r\n  stockConfig(id, dataOption){\r\n    const {\r\n      dataVolumeColumn, dataVolume,\r\n      dataATH,\r\n      minClose, maxClose,\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      data, dataHigh, dataLow, dataOpen\r\n    } = dataOption;\r\n    this.areaConfig({ spacingTop: 25 })\r\n      .addTooltip(Tooltip.fnBasePointFormatter)\r\n      .addMiniVolume({\r\n        id,\r\n        dColumn: dataVolumeColumn,\r\n        dVolume: dataVolume\r\n      })\r\n      .addMiniATH({\r\n        id, data: dataATH\r\n      })\r\n      .setMinMax(minClose, maxClose, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(minClose, maxClose, data, isDrawDeltaExtrems)\r\n      .setStockSerias(id, data, dataHigh, dataLow, dataOpen)\r\n    return this;\r\n  },\r\n  categoryConfig(categories=[]){\r\n    this.config = ChartConfig.fBaseAreaConfig()\r\n    const xAxis = {...C.CATEGORIES_X_AXIS, ...{ categories }}\r\n    this.add('xAxis', xAxis)\r\n    this.add('yAxis', C.CATEGORIES_Y_AXIS)\r\n    return this;\r\n  },\r\n  _columnConfig(categories=[], option){\r\n    this.config = Factory.crColumnConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  _barConfig(categories=[], option){\r\n    this.config = Factory.crBarConfig(option)\r\n    this.add('xAxis', { categories })\r\n    return this;\r\n  },\r\n  barOrColumnConfig(type, categories=[], option){\r\n    if (type === 'BAR') {\r\n      return this._barConfig(categories, option);\r\n    }\r\n    return this._columnConfig(categories, option);\r\n  },\r\n  treeMapConfig(){\r\n    this.config = ChartConfig.fBaseTreeMapConfig()\r\n    return this;\r\n  },\r\n\r\n  alignButtonExport(){\r\n    _assign(\r\n      this.config.navigation.buttonOptions, { x: -10, y: -20 }\r\n    )\r\n    return this;\r\n  },\r\n\r\n\r\n  addTitle(title) {\r\n    const _to = this.config.title || {};\r\n    this.config.title = _assign(_to,\r\n      Chart.fTitle({\r\n        text: title,\r\n        y: Chart.STACKED_TITLE_Y\r\n      })\r\n    )\r\n    return this;\r\n  },\r\n  addSubtitle(subtitle) {\r\n    const _to = this.config.subtitle || {};\r\n    this.config.subtitle = _assign(_to,\r\n       Chart.fSubtitle({\r\n         text: subtitle,\r\n         y: Chart.STACKED_SUBTITLE_Y\r\n       })\r\n    )\r\n    return this;\r\n  },\r\n  addCaption(title='', subtitle=''){\r\n    return this\r\n      .addTitle(title)\r\n      .addSubtitle(subtitle);\r\n  },\r\n\r\n  addTooltip(tooltip) {\r\n    this.config.tooltip = Chart.fTooltip(tooltip)\r\n    return this;\r\n  },\r\n\r\n  addXAxisCrosshair(){\r\n    this.add('xAxis', { crosshair : Chart.fCrosshair() })\r\n    return this;\r\n  },\r\n\r\n  add(propName, option){\r\n    if (_isStr(propName)){\r\n      const _to = this.config[propName];\r\n      if (_isObj(_to)) {\r\n        _assign(_to, option)\r\n      } else {\r\n        this.config[propName] = option\r\n      }\r\n    } else if (_isObj(propName)){\r\n      let _propName;\r\n      for (_propName in propName){\r\n        const _to = this.config[_propName]\r\n            , _from = propName[_propName];\r\n        if (_to) {\r\n          _assign(_to, _from)\r\n        } else {\r\n          this.config[_propName] = _from\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n  addZhMiniConfig(config){\r\n    const _configs = this.config.zhMiniConfigs;\r\n    if (_configs){\r\n      _configs.push(config)\r\n    } else {\r\n      this.config.zhMiniConfigs = [config]\r\n    }\r\n    return this;\r\n  },\r\n  addMiniVolume(option){\r\n    const { dVolume } = option;\r\n    return dVolume && dVolume.length > 0\r\n      ? this.addZhMiniConfig(\r\n          ChartConfig.fMiniVolumeConfig(option)\r\n        )\r\n      :this;\r\n  },\r\n  addMiniATH(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n      ? this.addZhMiniConfig(\r\n          ChartConfig.fMiniATHConfig(option)\r\n        )\r\n      : this;\r\n  },\r\n  addMiniHL(option){\r\n    const { data } = option;\r\n    return data && data.length>0\r\n     ? this.addZhMiniConfig(\r\n         ChartConfig.fMiniHLConfig(option)\r\n       )\r\n     : this;\r\n  },\r\n\r\n  addZhPoints(data, fn){\r\n    this.add({\r\n      zhPoints: data,\r\n      zhIsMfi: true\r\n      //zhFnGetMfiConfig: fn\r\n    })\r\n    return this;\r\n  },\r\n\r\n  addLegend(legend){\r\n    return this.add('zhConfig', {\r\n      legend, isWithLegend: true,\r\n    });\r\n  },\r\n\r\n  addMinMax(data, option){\r\n    const {\r\n      isNotZoomToMinMax,\r\n      isDrawDeltaExtrems,\r\n      minY, maxY\r\n    } = option\r\n    , min = _isNumber(minY)\r\n       ? minY\r\n       : findMinY(data)\r\n    , max = _isNumber(maxY)\r\n       ? maxY\r\n       : findMaxY(data);\r\n    return this.setMinMax(min, max, isNotZoomToMinMax)\r\n      .setMinMaxDeltas(min, max, data, isDrawDeltaExtrems);\r\n  },\r\n\r\n\r\n  setMinMaxDeltas(min, max, data, isDrawDeltaExtrems){\r\n    if (isDrawDeltaExtrems) {\r\n      const _recentIndex = data.length-1;\r\n      if (_recentIndex > 0) {\r\n        setPlotLinesDeltas({\r\n          plotLines: this.config.yAxis.plotLines,\r\n          min, max,\r\n          value: _getY(data[_recentIndex])\r\n        })\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n\r\n  _setYAxisMin(min, max, noZoom){\r\n    const _min = noZoom && min > 0\r\n      ? 0\r\n      : Chart.calcMinY({\r\n          minPoint: min,\r\n          maxPoint: max\r\n        });\r\n    this.add('yAxis', {\r\n      min: _min,\r\n      maxPadding: 0.15,\r\n      minPadding: 0.15,\r\n      endOnTick: false,\r\n      startOnTick: false\r\n    })\r\n  },\r\n\r\n  setMinMax(min, max, noZoom){\r\n    setPlotLinesMinMax({\r\n      plotLines: this.config.yAxis.plotLines,\r\n      min, max\r\n    })\r\n    this._setYAxisMin(min, max, noZoom)\r\n    return this;\r\n  },\r\n  setStockSerias(id, d, dH, dL, dO){\r\n    ChartConfig.setStockSerias(\r\n      this.config, d, dH, d, dO, id\r\n    )\r\n    return this;\r\n  },\r\n\r\n  /*\r\n  checkThreshold(seriaIndex=0){\r\n    const config = this.config\r\n    , { series=[] } = config\r\n    , seria = series[seriaIndex] || {}\r\n    , data = seria.data || [];\r\n    /*\r\n    if (_isArr(data) && data.length > 1000) {\r\n      config.plotOptions = _assign(\r\n        config.plotOptions || {}, {\r\n          series: {\r\n            turboThreshold: 0\r\n          }\r\n        }\r\n      )\r\n    }\r\n    return this;\r\n  },\r\n  */\r\n\r\n  addDividend({ dataDividend, minClose, maxClose }) {\r\n    if (dataDividend.length > 0) {\r\n      setYToPoints(\r\n        dataDividend,\r\n        calcMinY({ min: minClose, max: maxClose })\r\n      );\r\n      this.config.series.push(crDividendSeria(dataDividend, 'exDividend'));\r\n      this.config.chart.spacingBottom = 40;\r\n    }\r\n    return this;\r\n  },\r\n\r\n  toConfig(){\r\n    return this.config;\r\n  }\r\n})\r\n\r\nexport default ConfigBuilder\r\n"],"file":"ConfigBuilder.js"}