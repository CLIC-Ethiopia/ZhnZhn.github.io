{"version":3,"sources":["../../../src/charts/tp/tpSpark.js"],"names":["crHeader","fn","crRow","toNumberFormat","addHideHandler","SPARKLINES_SUFFIX_ID","SPARKLINES_BAR_SUFFIX_ID","WIDTH_CHAR","WIDTH_VALUE","WIDTH_TOTAL","WIDTH_SPARK","_fnCalcWidthSparkType4","value","total","_width1","length","_width2","width","fullWidth","_fnTooltipSparkType4","year","percent","id","_style","color","C","YEAR_C","_crSparkData","point","sparkvalues","sparkpercent","sparkLinesData","sparkBarsData","pointIndex","seriesData","series","data","forEach","item","itemIndex","push","y","percentage","index","_onAfterRender","setTimeout","sparklines","SparkFactory","createSparklines","sparkbars","createSparkbars","document","getElementById","_crStackedArea","nameFull","category","_total","_crTreeMap","_value","tpSpark","stackedArea","fnTemplate","onAfterRender","isWithValue","treeMap"],"mappings":"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","sourcesContent":["import { render } from 'react-dom';\r\n\r\nimport SparkFactory from '../../components/factories/SparkFactory';\r\n\r\nimport fn from './tpFn'\r\nimport C from './tpConfig'\r\n\r\nconst {\r\n  crHeader, crRow,\r\n  toNumberFormat,\r\n  addHideHandler\r\n} = fn;\r\n\r\nconst SPARKLINES_SUFFIX_ID = 'sparklines'\r\n    , SPARKLINES_BAR_SUFFIX_ID = 'sparklines_bar'\r\n    , WIDTH_CHAR = 10\r\n    , WIDTH_VALUE = 54\r\n    , WIDTH_TOTAL = 50\r\n    , WIDTH_SPARK = 20 + 80 + 16;\r\n\r\nconst _fnCalcWidthSparkType4 = function(value, total){\r\n  const _width1 = WIDTH_VALUE + value.length*WIDTH_CHAR\r\n      , _width2 = WIDTH_TOTAL + total.length*WIDTH_CHAR\r\n      , width = (_width1>_width2) ? _width1 : _width2\r\n      , fullWidth = width + WIDTH_SPARK;\r\n  return { fullWidth, width };\r\n}\r\n\r\nconst _fnTooltipSparkType4 = function({\r\n  fullWidth, width, year, value, total, percent, id\r\n}){\r\n  const _style = `style=\"float:left;padding-right:10px;width:${width}px;\"`;\r\n  return `<div class=\"tp__body\">\r\n  <div class=\"tp__body__part1\" style=\"width:${fullWidth}px;\" >\r\n    <div ${_style}>\r\n      ${crRow('Year', year, { color: C.YEAR_C })}\r\n      ${crRow('Value', value)}\r\n    </div>\r\n    <div id=\"${id}_${SPARKLINES_SUFFIX_ID}\" class=\"tp__body__sparklines\">\r\n    </div>\r\n  </div>\r\n  <div class=\"tp__body__part1\" style=\"width:${fullWidth}px;\" >\r\n    <div ${_style}>\r\n      ${crRow('Total', total)}\r\n      ${crRow('Percent', percent)}\r\n    </div>\r\n    <div id=\"${id}_${SPARKLINES_BAR_SUFFIX_ID}\" class=\"tp__body__sparklines\">\r\n    </div>\r\n  </div>`;\r\n}\r\n\r\nconst _crSparkData = (point) => {\r\n  const { sparkvalues, sparkpercent } = point;\r\n  let  sparkLinesData = []\r\n     , sparkBarsData = []\r\n     , pointIndex;\r\n\r\n  if (sparkvalues) {\r\n    sparkLinesData = sparkvalues;\r\n    sparkBarsData = sparkpercent;\r\n    pointIndex = (sparkvalues.length !== 0)\r\n           ? sparkvalues.length - 1\r\n           : 0 ;\r\n  } else {\r\n    const seriesData = point.series.data;\r\n    seriesData.forEach((item, itemIndex) => {\r\n       sparkLinesData.push(item.y);\r\n       sparkBarsData.push(item.percentage)\r\n    })\r\n    pointIndex = point.index\r\n  }\r\n  return { sparkLinesData, sparkBarsData, pointIndex };\r\n};\r\n\r\nconst _onAfterRender = function(id, point){\r\n  setTimeout( function(){\r\n          addHideHandler(id, point)\r\n          const {\r\n                  sparkLinesData, sparkBarsData,\r\n                  pointIndex\r\n                } = _crSparkData(point)\r\n             , sparklines = SparkFactory.createSparklines(sparkLinesData, pointIndex)\r\n             , sparkbars = SparkFactory.createSparkbars(sparkBarsData, pointIndex);\r\n         render( sparklines, document.getElementById(`${id}_${SPARKLINES_SUFFIX_ID}`))\r\n         render( sparkbars, document.getElementById(`${id}_${SPARKLINES_BAR_SUFFIX_ID}`))\r\n  }, 1);\r\n}\r\n\r\nconst _crStackedArea = function({id, value, point}){\r\n  const {nameFull, category, percent='0.0', total=0} = point\r\n      , _total = toNumberFormat(total)\r\n      , { fullWidth, width } = _fnCalcWidthSparkType4(value, _total);\r\n\r\n  return crHeader(nameFull, id) + _fnTooltipSparkType4({\r\n    fullWidth, width, year: category, value, total: _total, percent, id\r\n  });\r\n}\r\n\r\nconst _crTreeMap = function({id, point}){\r\n  const {nameFull, year, value='0.0', percent='0.0', total=0} = point\r\n      , _value = toNumberFormat(value)\r\n      , _total = toNumberFormat(total)\r\n      , { fullWidth, width } = _fnCalcWidthSparkType4(_value, _total);\r\n\r\n  return crHeader(nameFull, id) + _fnTooltipSparkType4({\r\n    fullWidth, width, year, value: _value, total: _total, percent, id\r\n  })\r\n}\r\n\r\nconst tpSpark = {\r\n  stackedArea: {\r\n    fnTemplate: _crStackedArea,\r\n    onAfterRender: _onAfterRender,\r\n    isWithValue: true\r\n  },\r\n  treeMap: {\r\n    fnTemplate: _crTreeMap,\r\n    onAfterRender: _onAfterRender,\r\n    isWithValue: true\r\n  }\r\n};\r\n\r\nexport default tpSpark\r\n"],"file":"tpSpark.js"}