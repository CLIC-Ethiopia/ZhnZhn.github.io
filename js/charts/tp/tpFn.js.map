{"version":3,"sources":["../../../src/charts/tp/tpFn.js"],"names":["crTpId","ChartFn","toNumberFormat","toNumberFormatAll","toDmy","toTdmy","C","TITLE_C","YEAR_C","VALUE_C","EX_DIVIDEND_C","TITLE_STYLE","FONT_STYLE","STATUS_STYLE","_isFn","fn","_fHideTooltip","point","series","chart","zhTooltip","hide","_addClickOnceById","id","listener","node","document","getElementById","addEventListener","isSupportOptions","once","_isValueEmpty","v","_crSpanStyle","color","tailStyle","tpFn","crSpan","t","status","_vStyle","_t","_v","_statusSpan","crNotEmptySpan","title","crRow","option","crHeader","date","cssClass","addHideHandler","getStatus","index","userOptions","data","_p","_status"],"mappings":"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","sourcesContent":["\r\nimport isSupportOptions from '../../utils/isSupportOptions'\r\nimport ChartFn from '../ChartFn'\r\n\r\nconst {\r\n  crTpId,\r\n  toNumberFormat,\r\n  toNumberFormatAll,\r\n  toDmy,\r\n  toTdmy\r\n  //toTdmyIf\r\n} = ChartFn;\r\n\r\nconst C = {\r\n  TITLE_C: '#a487d4',\r\n  YEAR_C: '#fdb316',\r\n  VALUE_C: '#2f7ed8',\r\n  EX_DIVIDEND_C: 'green'\r\n}\r\n\r\nconst TITLE_STYLE = `style=\"color:${C.TITLE_C};\"`;\r\nconst FONT_STYLE = 'font-size:16px;font-weight:bold;';\r\nconst STATUS_STYLE = 'padding-left:4px;'\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst _fHideTooltip = (point={}, fn) => () => {\r\n  if (point.series) {\r\n     point.series.chart.zhTooltip.hide();\r\n  }\r\n  if (_isFn(fn)) {\r\n    fn(point)\r\n  }\r\n};\r\nconst _addClickOnceById = (id, listener) => {\r\n  const node = document.getElementById(id);\r\n  if (node) {\r\n    node.addEventListener('click', listener,\r\n      isSupportOptions ? { once: true } : false\r\n    )\r\n  }\r\n};\r\n\r\nconst _isValueEmpty = v => v === 'NoData'\r\n || v === ''\r\n || v == null;\r\n\r\nconst _crSpanStyle = (color, tailStyle='') => `style=\"color:${color};${FONT_STYLE}${tailStyle}\"`;\r\n\r\nconst tpFn = {\r\n  crSpan: (t='', v='', { color=C.VALUE_C, status }={}) => {\r\n    const _vStyle = _crSpanStyle(color)\r\n    , _t = t ? `${t}: `: ''\r\n    , _v = v !== null ? v: ''\r\n    , _statusSpan = status\r\n         ? `<span ${_crSpanStyle(color, STATUS_STYLE)}>(${status})</span>`\r\n         : '';\r\n    return `\r\n    <span ${TITLE_STYLE}>${_t}</span>\r\n    <span ${_vStyle}>${_v}</span>${_statusSpan}`;\r\n  },\r\n  crNotEmptySpan: (title, v) => _isValueEmpty(v)\r\n    ? ''\r\n    : tpFn.crSpan(title, v),\r\n  crRow: (t='', v='', option) => {\r\n    return `<div>${tpFn.crSpan(t, v, option)}</div>`;\r\n  },\r\n\r\n  crHeader: (date='&nbsp;', id, cssClass='') => {\r\n    return `<div id=\"${id}\" class=\"tp__header not-selected ${cssClass}\">\r\n      <span class=\"tp__header__caption\">${date}</span>\r\n      <span class=\"tp__header__close\">X</span>\r\n    </div>`;\r\n  },\r\n\r\n  crTpId,\r\n  toNumberFormat,\r\n  toNumberFormatAll,  \r\n  toDmy,\r\n  toTdmy,\r\n  //toTdmyIf,\r\n\r\n  addHideHandler: (id, point, fn) => {\r\n    _addClickOnceById(id, _fHideTooltip(point, fn))\r\n  },\r\n\r\n  getStatus: point => {\r\n    const { index, series={} } = point\r\n    , { userOptions={} } = series\r\n    , { data=[] } = userOptions\r\n    , _p = data[index] || []\r\n    , _status = _p[2];\r\n    return _status && _status !== ':'\r\n      ? _status\r\n      : void 0;\r\n  }\r\n\r\n};\r\n\r\nexport default tpFn\r\n"],"file":"tpFn.js"}