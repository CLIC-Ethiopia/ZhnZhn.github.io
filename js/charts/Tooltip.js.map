{"version":3,"sources":["../../src/charts/Tooltip.jsx"],"names":["crTpId","ChartFn","toNumberFormat","toDateFormatDMY","addHideHandler","fns","_fnAddHandlerClose","id","point","setTimeout","_fFormatter","option","fnTemplate","onAfterRender","fnDateFormat","isWithColor","isWithValueText","isWithValue","series","date","x","color","undefined","userOptions","zhValueText","name","_id","valueText","value","y","Tooltip","fnBasePointFormatter","tpSpline","fnBasePointFormatterT","valueDmyt","categorySimple","tpCategory","simple","category","remove","categoryRHLY","rhly","exDividend","tpScatter","splitRatio","exValue","eps","volume","tpStock","volumeDmyt","ath","hl","donut","tpDonut","sparkStackedArea","tpSpark","stackedArea","sparkTreeMap","treeMap","tpTreeMap"],"mappings":"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","sourcesContent":["\r\nimport ChartFn from './ChartFn'\r\n\r\nimport tpSpline from './tp/tpSpline'\r\nimport tpCategory from './tp/tpCategory'\r\nimport tpScatter from './tp/tpScatter'\r\nimport tpStock from './tp/tpStock'\r\nimport tpSpark from './tp/tpSpark'\r\nimport tpTreeMap from './tp/tpTreeMap'\r\nimport tpDonut from './tp/tpDonut'\r\nimport fns from './tp/tpFn'\r\n\r\nconst {\r\n  crTpId,\r\n  toNumberFormat,\r\n  toDateFormatDMY\r\n} = ChartFn;\r\nconst { addHideHandler } = fns;\r\n\r\nconst _fnAddHandlerClose = function(id, point){\r\n  setTimeout(() => addHideHandler(id, point), 1);\r\n};\r\n\r\nconst _fFormatter = (option) => function(){\r\n   const {\r\n      fnTemplate, onAfterRender=_fnAddHandlerClose,\r\n      fnDateFormat = toDateFormatDMY,\r\n      isWithColor, isWithValueText, isWithValue\r\n     } = option\r\n   , point = this\r\n   , series = point.series\r\n   , date = fnDateFormat(point.x)\r\n   , color = isWithColor\r\n       ? point.color || series.color\r\n       : undefined\r\n   , { zhValueText, name='Value',\r\n       //id, zhSeriaId\r\n     } = series.userOptions\r\n   //, _id = zhSeriaId || id || 'TP'\r\n   , _id = crTpId()\r\n   , valueText = isWithValueText\r\n        ? zhValueText || name\r\n        : 'Value'\r\n   , value = isWithValue\r\n        ? toNumberFormat(point.y)\r\n        : null;\r\n\r\n   onAfterRender(_id, point)\r\n\r\n   return fnTemplate({\r\n     id: _id,\r\n     date, color,\r\n     valueText, value,\r\n     point\r\n   });\r\n};\r\n\r\n\r\nconst Tooltip = {\r\n  fnBasePointFormatter: _fFormatter({...tpSpline.value}),\r\n  fnBasePointFormatterT: _fFormatter({...tpSpline.valueDmyt}),\r\n\r\n  categorySimple: _fFormatter({...tpCategory.simple}),\r\n  category: _fFormatter({...tpCategory.remove}),\r\n  categoryRHLY: _fFormatter({...tpCategory.rhly}),\r\n\r\n  exDividend: _fFormatter({...tpScatter.exDividend}),\r\n  splitRatio: _fFormatter({...tpScatter.splitRatio}),\r\n  exValue: _fFormatter({...tpScatter.exValue}),\r\n  eps: _fFormatter({...tpScatter.eps}),\r\n\r\n  volume: _fFormatter({...tpStock.volume}),\r\n  volumeDmyt: _fFormatter({...tpStock.volumeDmyt}),\r\n  ath: _fFormatter({...tpStock.ath}),\r\n  hl: _fFormatter({...tpStock.hl}),\r\n\r\n  donut: _fFormatter({...tpDonut.value}),\r\n\r\n  sparkStackedArea: _fFormatter({...tpSpark.stackedArea}),\r\n  sparkTreeMap: _fFormatter({...tpSpark.treeMap}),\r\n\r\n  treeMap: _fFormatter({...tpTreeMap.value})\r\n}\r\n\r\nexport default Tooltip\r\n"],"file":"Tooltip.js"}