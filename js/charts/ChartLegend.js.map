{"version":3,"sources":["../../src/charts/ChartLegend.js"],"names":["C","OPEN","OPEN_INTEREST","OPEN_INTEREST_2","OPEN_INTEREST_3","HIGH","LOW","VOLUME","ADJ_CLOSE","ADJ_CLOSE_2","PRE_SETTLE","CLOSE","LAST","TURNOVER","TRADES","BALANCE","IMPORTS","EXPORTS","ChartLegend","fLegendConfig","columnName","baseConfig","data","name","toLowerCase","Object","assign","color","COLOR","S_OPEN","symbol","S_OPEN_INTEREST","isSecondAxes","S_HIGH","S_LOW","S_VOLUME","S_ADJ_CLOSE","S_CLOSE","S_PRE_SETTLE","S_TURNOVER","S_TRADES","S_BALANCE","S_IMPORTS","S_EXPORTS","undefined"],"mappings":"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","sourcesContent":["import COLOR from '../constants/Color';\r\n\r\nconst C = {\r\n  OPEN : 'open',\r\n  OPEN_INTEREST : 'open interest',\r\n  OPEN_INTEREST_2 : 'o.i.',\r\n  OPEN_INTEREST_3: 'prev. day open interest',\r\n  HIGH : 'high',\r\n  LOW : 'low',\r\n  VOLUME : 'volume',\r\n  ADJ_CLOSE : 'adj. close',\r\n  ADJ_CLOSE_2 : 'adjusted close',\r\n  PRE_SETTLE : 'pre settle',\r\n  CLOSE : 'close',\r\n  LAST : 'last',\r\n  TURNOVER : 'turnover',\r\n  TRADES : 'trades',\r\n  BALANCE: 'balance',\r\n  IMPORTS: 'imports',\r\n  EXPORTS: 'exports'\r\n}\r\n\r\nconst ChartLegend = {\r\n\r\n  fLegendConfig(columnName){\r\n    const baseConfig = {\r\n       data: [], name : columnName\r\n    }\r\n\r\n    switch(columnName.toLowerCase()){\r\n      case C.OPEN:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_OPEN, symbol: 'circle' }\r\n        );\r\n      case C.OPEN_INTEREST: case C.OPEN_INTEREST_2: case C.OPEN_INTEREST_3:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_OPEN_INTEREST, symbol: 'circle', isSecondAxes: true }\r\n        );\r\n      case C.HIGH:\r\n        return Object.assign({}, baseConfig,\r\n          { color: COLOR.S_HIGH, symbol : 'circle' }\r\n        );\r\n      case C.LOW:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_LOW, symbol : 'circle' }\r\n        );\r\n      case C.VOLUME:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_VOLUME, symbol : 'diamond', isSecondAxes: true }\r\n        );\r\n      case C.ADJ_CLOSE: case C.ADJ_CLOSE_2:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_ADJ_CLOSE, symbol: 'diamond' }\r\n        );\r\n      case C.CLOSE: case C.LAST:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_CLOSE, symbol: 'diamond' }\r\n        );\r\n      case C.PRE_SETTLE:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_PRE_SETTLE, symbol: 'diamond' }\r\n        );\r\n      case C.TURNOVER:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_TURNOVER, symbol: 'diamond', isSecondAxes: true }\r\n        );\r\n      case C.TRADES:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_TRADES, symbol: 'diamond', isSecondAxes: true }\r\n        );\r\n      case C.BALANCE:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_BALANCE, symbol: 'circle' }\r\n        );\r\n      case C.IMPORTS:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_IMPORTS, symbol: 'circle' }\r\n        );\r\n      case C.EXPORTS:\r\n        return Object.assign({}, baseConfig,\r\n          { color : COLOR.S_EXPORTS, symbol: 'circle' }\r\n        );\r\n      default:\r\n       return Object.assign({}, baseConfig,\r\n         { color: undefined, symbol: 'circle', isSecondAxes: false }\r\n       );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ChartLegend\r\n"],"file":"ChartLegend.js"}