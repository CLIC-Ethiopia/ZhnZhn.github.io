{"version":3,"sources":["../../../../src/charts/plugin/__tests__/crYAxisId.test.js"],"names":["_testResult","r","expectedArr","expect","toEqual","_testResultId","toBe","length","describe","chart","yAxis","userOptions","id","fn","crYAxisId","test","r1","r2","r3","not"],"mappings":"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","sourcesContent":["import crYAxisId from '../crYAxisId'\r\n\r\nconst _testResult = (r, expectedArr) => {\r\n  expect(r).toEqual(expectedArr)\r\n};\r\n\r\nconst _testResultId = r => {\r\n  expect(r[0]).toBe(true)\r\n  expect(r[1].length).toBe(15)\r\n}\r\n\r\ndescribe('crYAxisId', () => {\r\n  const chart = {\r\n    yAxis: [\r\n      {userOptions: {}},\r\n      {userOptions: { id: 'Y1'}},\r\n      {userOptions: { id: 'Y2'}}\r\n    ]\r\n  }\r\n  , fn = crYAxisId;\r\n\r\n\r\n  test('should return [bool, name] for yIndex=void 0 && not empty name', ()=>{\r\n    const r1 = fn(chart, void 0, 'name1');\r\n    _testResult(r1, [true, 'name1'])\r\n\r\n    const r2 = fn(chart, void 0, 'Y1')\r\n    _testResult(r2, [false, 'Y1'])\r\n\r\n    const r3 = fn(chart, void 0, 'Y3')\r\n    _testResult(r3, [true, 'Y3'])\r\n  })\r\n\r\n  test('should return [true, id] for yIndex=void 0 && empty name', ()=>{\r\n    const r1 = fn(chart, void 0);\r\n    _testResultId(r1)\r\n\r\n    const r2 = fn(chart, void 0, '');\r\n    _testResultId(r2)\r\n\r\n    const r3 = fn(chart, void 0, null);\r\n    _testResultId(r3)\r\n\r\n    expect(r1[1]).not.toBe(r2[1])\r\n    expect(r2[1]).not.toBe(r3[1])\r\n  })\r\n\r\n  test('should return [false, void] 0 for yIndex=0', ()=>{\r\n    const r1 = fn(chart, 0)\r\n    _testResult(r1, [false, void 0])\r\n  })\r\n\r\n  test('should return [false, yAxisId] for yIndex number', ()=>{\r\n    const r1 = fn(chart, 1)\r\n    _testResult(r1, [false, 'Y1'])\r\n\r\n    const r2 = fn(chart, 2)\r\n    _testResult(r2, [false, 'Y2'])\r\n  })\r\n\r\n  test('should return [true, id] for yIndex number without yAxis', ()=>{\r\n    const r1 = fn(chart, 3)\r\n    _testResultId(r1)\r\n\r\n    const r2 = fn(chart, 4)\r\n    _testResultId(r2)\r\n\r\n    expect(r1[1]).not.toBe(r2[1])\r\n  })\r\n\r\n  test('should return [true, id] for yIndex = !number && !void 0', ()=>{\r\n    const r1 = fn(chart, '0');\r\n    _testResultId(r1)\r\n\r\n    const r2 = fn(chart, null);\r\n    _testResultId(r2)\r\n\r\n    const r3 = fn(chart, true);\r\n    _testResultId(r3)\r\n\r\n    expect(r1[1]).not.toBe(r2[1])\r\n    expect(r2[1]).not.toBe(r3[1])\r\n  })\r\n\r\n  test('should return [true, id] for empty chart', ()=>{\r\n    const r1 = fn({}, 1);\r\n    _testResultId(r1)\r\n  })\r\n\r\n})\r\n"],"file":"crYAxisId.test.js"}