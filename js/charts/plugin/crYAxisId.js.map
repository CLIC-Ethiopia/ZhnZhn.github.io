{"version":3,"sources":["../../../src/charts/plugin/crYAxisId.js"],"names":["_isUndef","v","_isStrNotEmpty","str","_isNumber","n","_crId","toUpperCase","_getAxisId","yAxis","userOptions","id","_getYAxis","chart","_isUniqueId","name","i","length","crYAxisId","yIndex","_id","_isNew"],"mappings":";;;;;AAAA;;AAEA,MAAMA,QAAQ,GAAGC,CAAC,IAAI,OAAOA,CAAP,KAAa,WAAnC;;AACA,MAAMC,cAAc,GAAGC,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAf,IACzBA,GADL;;AAEA,MAAMC,SAAS,GAAGC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IACnBA,CAAC,GAACA,CAAF,KAAQ,CADZ;;AAGA,MAAMC,KAAK,GAAG,MAAM,oBAAOC,WAAP,EAApB,C,CACA;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAK,IAAI,EAAjC;AAAA,QACE;AAAEE,IAAAA;AAAF,MAASD,WAAW,IAAI,EAD1B;AAEA,SAAOC,EAAP;AACD,CAJD;;AAKA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEJ,IAAAA;AAAF,MAAYI,KAAlB;AACA,SAAOJ,KAAK,IAAI,EAAhB;AACD,CAHD;;AAKA,MAAMK,WAAW,GAAG,CAACD,KAAD,EAAQE,IAAR,KAAiB;AACnC,QAAMN,KAAK,GAAGG,SAAS,CAACC,KAAD,CAAvB;;AACA,MAAIG,CAAC,GAAG,CAAR;;AACA,OAAKA,CAAL,EAAQA,CAAC,GAACP,KAAK,CAACQ,MAAhB,EAAuBD,CAAC,EAAxB,EAA2B;AACzB,QAAID,IAAI,KAAKP,UAAU,CAACC,KAAK,CAACO,CAAD,CAAN,CAAvB,EAAmC;AACjC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CATD,C,CAYA;AACA;;;AACA,MAAME,SAAS,GAAG,CAACL,KAAD,EAAQM,MAAR,EAAgBJ,IAAhB,KAAyB;AACzC,MAAIf,QAAQ,CAACmB,MAAD,CAAZ,EAAsB;AACpB,UAAMC,GAAG,GAAGlB,cAAc,CAACa,IAAD,CAAd,GACRA,IADQ,GAERT,KAAK,EAFT;;AAGA,WAAO,CAACQ,WAAW,CAACD,KAAD,EAAQO,GAAR,CAAZ,EAA0BA,GAA1B,CAAP;AACD;;AAED,MAAID,MAAM,KAAK,CAAf,EAAiB;AACf,WAAO,CAAC,KAAD,EAAQ,KAAK,CAAb,CAAP;AACD;;AAED,MAAIf,SAAS,CAACe,MAAD,CAAb,EAAsB;AACpB,UAAMV,KAAK,GAAGG,SAAS,CAACC,KAAD,CAAvB;AAAA,UACEF,EAAE,GAAGH,UAAU,CAACC,KAAK,CAACU,MAAD,CAAN,CADjB;AAAA,UAEEE,MAAM,GAAGrB,QAAQ,CAACW,EAAD,CAFnB;AAAA,UAGES,GAAG,GAAGC,MAAM,GAAGf,KAAK,EAAR,GAAaK,EAH3B;;AAIA,WAAO,CAACU,MAAD,EAASD,GAAT,CAAP;AACD;;AAED,SAAO,CAAC,IAAD,EAAOd,KAAK,EAAZ,CAAP;AACD,CArBD;;eAuBeY,S","sourcesContent":["import { crId } from '../../math/mathFn';\r\n\r\nconst _isUndef = v => typeof v === 'undefined';\r\nconst _isStrNotEmpty = str => typeof str === 'string'\r\n  && str;\r\nconst _isNumber = n => typeof n === 'number'\r\n && n-n === 0;\r\n\r\nconst _crId = () => crId().toUpperCase();\r\n//toChart.yAxis[].userOptions.id\r\n\r\nconst _getAxisId = yAxis => {\r\n  const { userOptions } = yAxis || {}\r\n  , { id } = userOptions || {}\r\n  return id;\r\n};\r\nconst _getYAxis = chart => {\r\n  const { yAxis } = chart\r\n  return yAxis || [];\r\n};\r\n\r\nconst _isUniqueId = (chart, name) => {\r\n  const yAxis = _getYAxis(chart);\r\n  let i = 0;\r\n  for (i; i<yAxis.length;i++){\r\n    if (name === _getAxisId(yAxis[i])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n//yIndex = void 0 | 0 | number\r\n//result = [boolean, void 0 | string]\r\nconst crYAxisId = (chart, yIndex, name) => {\r\n  if (_isUndef(yIndex)) {\r\n    const _id = _isStrNotEmpty(name)\r\n      ? name\r\n      : _crId();\r\n    return [_isUniqueId(chart, _id), _id];\r\n  }\r\n\r\n  if (yIndex === 0){\r\n    return [false, void 0];\r\n  }\r\n\r\n  if (_isNumber(yIndex)){\r\n    const yAxis = _getYAxis(chart)\r\n    , id = _getAxisId(yAxis[yIndex])\r\n    , _isNew = _isUndef(id)\r\n    , _id = _isNew ? _crId() : id;\r\n    return [_isNew, _id];\r\n  }\r\n\r\n  return [true, _crId()];\r\n};\r\n\r\nexport default crYAxisId\r\n"],"file":"crYAxisId.js"}