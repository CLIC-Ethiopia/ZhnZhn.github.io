{"version":3,"sources":["../../src/charts/ChartConfig.js"],"names":["_merge","Highcharts","merge","_assign","Object","assign","_isStr","str","_crScatterSeria","color","pointFormatter","data","zhSeriaId","type","tooltip","Chart","fTooltip","ChartConfig","WithIndicator","WithMarkers","WithPie","WithStackedArea","WithStackedColumn","WithTreeMap","init","setOptions","ChartTheme","seriaOption","option","visible","marker","radius","symbol","setSerieData","config","index","name","options","series","lineWidth","point","fEventsMouseOver","handleMouseOver","_zhSeriaId","id","setStockSerias","dClose","dHigh","dLow","dOpen","COLOR","S_HIGH","S_LOW","S_OPEN","getColor","seriaIndex","colors","length","crDividendSeria","chartId","EX_DIVIDEND","Tooltip","exDividend","crSplitRatioSeria","SPLIT_RATIO","splitRatio","crSeria","seriaType","seriaWidth","seriaColor","restOption","toLowerCase","fnBasePointFormatter","crAreaConfig","fBaseConfig","chart","zoomType","resetZoomButton","fResetZoomButton","position","x","xDeltaCrossLabel","yDeltaCrossLabel","zhDetailCharts","xAxis","fXAxisOpposite","events","afterSetExtremes","ChartFn","zoomIndicatorCharts","yAxis","tickLength","offset","labels","y","afterSetExtremesYAxis","plotLines","fPlotLine","HIGH","LOW"],"mappings":"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","sourcesContent":["import Highcharts from 'highcharts';\r\nimport HighchartsMore from 'highcharts/highcharts-more';\r\nimport HighchartsTreemap from 'highcharts/modules/treemap';\r\nimport HighchartsExporting from 'highcharts/modules/exporting';\r\nimport HighchartsOfflineExporting from 'highcharts/modules/offline-exporting';\r\n\r\nimport HighchartsZhn from './plugin/zhn-highcharts'\r\n\r\n//import HighchartsMore from 'highcharts/lib/highcharts-more';\r\n//import HighchartsTreemap from 'highcharts/lib/modules/treemap';\r\n//import HighchartsExporting from 'highcharts/lib/modules/exporting';\r\n//import HighchartsOfflineExporting from 'highcharts/lib/modules/offline-exporting';\r\n\r\nimport COLOR from '../constants/Color';\r\nimport Chart from './Chart';\r\nimport ChartFn from './ChartFn';\r\nimport Tooltip from './Tooltip';\r\n\r\nimport ChartTheme from './ChartTheme'\r\nimport handleMouseOver from './handleMouseOver'\r\n\r\nimport WithIndicator from './WithIndicatorConfig';\r\nimport WithMarkers from './WithMarkers';\r\nimport WithPie from './WithPieConfig';\r\nimport WithStackedArea from './WithStackedAreaConfig';\r\nimport WithStackedColumn from './WithStackedColumnConfig';\r\nimport WithTreeMap from './WithTreeMapConfig';\r\n\r\nconst _merge = Highcharts.merge;\r\nconst _assign = Object.assign;\r\nconst _isStr = str => typeof str === 'string';\r\n\r\nconst _crScatterSeria = (color, pointFormatter, data, zhSeriaId) => ({\r\n  type: 'scatter',\r\n  color: color,\r\n  tooltip: Chart.fTooltip(pointFormatter),\r\n  data: data,\r\n  zhSeriaId: zhSeriaId\r\n});\r\n\r\nconst ChartConfig = {\r\n  ...WithIndicator,\r\n  ...WithMarkers,\r\n  ...WithPie,\r\n  ...WithStackedArea,\r\n  ...WithStackedColumn,\r\n  ...WithTreeMap,\r\n\r\n  init(){\r\n    HighchartsMore(Highcharts);\r\n    HighchartsTreemap(Highcharts);\r\n    HighchartsExporting(Highcharts);\r\n    HighchartsOfflineExporting(Highcharts);\r\n\r\n    HighchartsZhn(Highcharts)\r\n\r\n    Highcharts.setOptions(ChartTheme);\r\n  },\r\n\r\n  seriaOption(color, option) {\r\n    return _assign({\r\n      type: 'line', visible: false, color,\r\n      marker: {\r\n        radius: 3,\r\n        symbol: \"circle\"\r\n      }\r\n    }, option)\r\n  },\r\n\r\n  setSerieData(config, data, index, name, options) {\r\n    config.series[index] = _assign({\r\n      type: 'area',\r\n      name: name,\r\n      data: data,\r\n      lineWidth: 1\r\n    }, options)\r\n\r\n    config.series[index].point = Chart.fEventsMouseOver(\r\n      handleMouseOver\r\n    )\r\n  },\r\n\r\n  _zhSeriaId(id){\r\n    return { zhSeriaId: id };\r\n  },\r\n\r\n  setStockSerias(config, dClose, dHigh, dLow, dOpen, id){\r\n    this.setSerieData(config, dClose, 0, 'Close',\r\n      this._zhSeriaId(id)\r\n    )\r\n    this.setSerieData(config, dHigh, 1, 'High',\r\n      this.seriaOption(COLOR.S_HIGH, this._zhSeriaId(id+'H'))\r\n    )\r\n    this.setSerieData(config, dLow, 2, 'Low',\r\n      this.seriaOption(COLOR.S_LOW, this._zhSeriaId(id+'L'))\r\n    )\r\n    this.setSerieData(config, dOpen, 3, 'Open',\r\n      this.seriaOption(COLOR.S_OPEN, this._zhSeriaId(id+'O'))\r\n    )\r\n  },\r\n\r\n  getColor(seriaIndex) {\r\n    const colors = ChartTheme.colors;\r\n    return colors[seriaIndex % colors.length];\r\n  },\r\n\r\n  crDividendSeria: (data, chartId) => _crScatterSeria(\r\n    COLOR.EX_DIVIDEND,\r\n    Tooltip.exDividend,\r\n    data,\r\n    chartId + '_ExDivident'\r\n  ),\r\n\r\n  crSplitRatioSeria: (data, chartId) => _crScatterSeria(\r\n    COLOR.SPLIT_RATIO,\r\n    Tooltip.splitRatio,\r\n    data,\r\n    chartId + '_SplitRatio'\r\n  ),\r\n\r\n  crSeria: (option={}) => {\r\n    const {\r\n      seriaType, seriaWidth, seriaColor,\r\n      ...restOption\r\n    } = option\r\n    , type = _isStr(seriaType)\r\n        ? seriaType.toLowerCase()\r\n        : 'spline';\r\n    return {\r\n      type,\r\n      lineWidth: seriaWidth ?? 1,\r\n      color: seriaColor,\r\n      tooltip: Chart.fTooltip(Tooltip.fnBasePointFormatter),\r\n      ...restOption\r\n    };\r\n  },\r\n\r\n  crAreaConfig: (options) => {\r\n    const config = _merge(\r\n      Chart.fBaseConfig(options), {\r\n      chart: {\r\n        zoomType: 'xy',\r\n        resetZoomButton: Chart.fResetZoomButton({\r\n          position: {x: -10}\r\n        }),\r\n        xDeltaCrossLabel: 4,\r\n        yDeltaCrossLabel: 20\r\n      },\r\n      zhDetailCharts: []\r\n    });\r\n\r\n    config.xAxis = _assign( Chart.fXAxisOpposite(config.xAxis), {\r\n      events: {\r\n        afterSetExtremes : ChartFn.zoomIndicatorCharts\r\n      }\r\n    })\r\n    config.yAxis = _assign(config.yAxis, {\r\n      lineWidth: 0,\r\n      tickLength: 0,\r\n      offset: 4,\r\n      labels: {\r\n        x: 8,\r\n        y: 5\r\n      },\r\n      events: {\r\n        afterSetExtremes: ChartFn.afterSetExtremesYAxis\r\n      }\r\n    })\r\n\r\n\r\n    config.yAxis.plotLines = [\r\n      Chart.fPlotLine(COLOR.HIGH, 'max'),\r\n      Chart.fPlotLine(COLOR.LOW, 'min')\r\n    ]\r\n\r\n    return config;\r\n  }\r\n};\r\n\r\nexport default ChartConfig\r\n"],"file":"ChartConfig.js"}