{"version":3,"sources":["../../../src/flux/logic/Factory.js"],"names":["getFromDate","DateUtils","getToDate","isYmd","isYmdOrEmpty","initFromDate","initToDate","_crFnValue","valueFn","valueFnPrefix","RouterFnValue","bind","undefined","_crDateProps","isFd","nInitFromDate","_props","errNotYmdOrEmpty","Msg","YMD_DATE_OR_EMPTY","onTestDate","_onError","alertDescr","alertCaption","CA","showAlert","_crClickAbout","rootUri","descr","descrUrl","_descrUrl","showDescription","_crDialogComp","browserType","dialogConf","itemKey","type","dialogProps","dialogType","dialogCaption","menuTitle","optionURI","optionsJsonProp","dataColumn","loadFnType","loadId","isProxy","isGetKey","onClickInfo","loadFn","RouterLoadFn","getFn","proxy","ChartStore","getProxy","getKey","onError","onLoad","CHA","loadStock","chartType","onShow","showChart","LoadType","Q","RouterDialog","getDialog","then","Comp","React","createElement","key","caption","msgOnNotSelected","NOT_SELECTED","msgOnNotValidFormat","NOT_VALID_FORMAT","fnValue","_crOptionDialogComp","option","Factory","fBrowser","createDialog","createOptionDialog"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport RouterDialog from './RouterDialog';\r\nimport RouterLoadFn from './RouterLoadFn';\r\nimport RouterFnValue from './RouterFnValue';\r\n\r\nimport fBrowser from './fBrowser'\r\n\r\nimport Msg from '../../constants/Msg';\r\nimport {  LoadType } from '../../constants/Type';\r\n\r\nimport CA from '../actions/ComponentActions';\r\nimport CHA from '../actions/ChartActions';\r\n\r\nimport DateUtils from '../../utils/DateUtils';\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nconst {\r\n  getFromDate,\r\n  getToDate,\r\n  isYmd,\r\n  isYmdOrEmpty\r\n} = DateUtils;\r\n\r\nconst initFromDate = getFromDate(2)\r\n, initToDate = getToDate();\r\n\r\nconst _crFnValue = (valueFn, valueFnPrefix) => {\r\n  return valueFn\r\n    ? valueFnPrefix\r\n       ? RouterFnValue[valueFn].bind(null, valueFnPrefix)\r\n       : RouterFnValue[valueFn]\r\n    : undefined;\r\n};\r\n\r\nconst _crDateProps = ({ isFd, nInitFromDate }) => {\r\n  const _props = isFd\r\n    ? {\r\n        errNotYmdOrEmpty: Msg.YMD_DATE_OR_EMPTY,\r\n        isYmdOrEmpty\r\n      }\r\n    : void 0;\r\n  return {\r\n    initFromDate: nInitFromDate\r\n      ? getFromDate(nInitFromDate)\r\n      : initFromDate,\r\n    initToDate,\r\n    onTestDate: isYmd,\r\n    ..._props\r\n  }\r\n};\r\n\r\nconst _onError = (alertDescr, alertCaption='Request Error') => {\r\n  CA.showAlert({ alertDescr, alertCaption })\r\n};\r\n\r\nconst _crClickAbout = ({ rootUri, descr, descrUrl }) => {\r\n  const _descrUrl = descr && rootUri\r\n    ? `${rootUri}/${descr}.html`\r\n    : descrUrl;\r\n  return _descrUrl\r\n    ? CA.showDescription.bind(null, { descrUrl: _descrUrl })\r\n    : void 0;\r\n};\r\n\r\nconst _crDialogComp = function (browserType, dialogConf){\r\n   const {\r\n           type:itemKey,\r\n           dialogProps={}, dialogType,\r\n           dialogCaption, menuTitle,\r\n           optionURI, optionsJsonProp,\r\n           dataColumn\r\n         } = dialogConf\r\n       , {\r\n           valueFn, valueFnPrefix,\r\n           loadFnType,\r\n           loadId,\r\n           isProxy,\r\n           isGetKey\r\n         } = dialogProps\r\n       , onClickInfo = _crClickAbout(dialogProps)\r\n       , loadFn = RouterLoadFn.getFn(loadFnType, dialogType)\r\n       , proxy = isProxy\r\n            ? ChartStore.getProxy()\r\n            : void 0\r\n       , getKey = isGetKey && ChartStore.getKey\r\n       , onError = isGetKey && _onError\r\n\r\n       , onLoad = CHA.loadStock\r\n          .bind(null, {\r\n             chartType: itemKey,\r\n             browserType, dialogConf\r\n          })\r\n       , onShow = CHA.showChart\r\n           .bind(null, itemKey, browserType, dialogConf);\r\n\r\n       if (!loadId){\r\n         dialogProps.loadId = LoadType.Q;\r\n       }\r\n\r\n      return RouterDialog.getDialog(dialogType)\r\n         .then(Comp => {\r\n            return React.createElement(Comp, {\r\n              key : itemKey,\r\n              caption : dialogCaption || menuTitle,\r\n              optionURI : optionURI,\r\n              optionsJsonProp : optionsJsonProp,\r\n              dataColumn : dataColumn,\r\n              msgOnNotSelected : Msg.NOT_SELECTED,\r\n              msgOnNotValidFormat : Msg.NOT_VALID_FORMAT,\r\n              fnValue : _crFnValue(valueFn, valueFnPrefix),\r\n              //initFromDate, initToDate, onTestDate,\r\n              //errNotYmdOrEmpty, isYmdOrEmpty\r\n              ..._crDateProps(dialogProps),\r\n              onLoad, onShow,\r\n              onClickInfo,\r\n              loadFn,\r\n              proxy,\r\n              getKey,\r\n              onError,\r\n              ...dialogProps\r\n           });\r\n         })\r\n}\r\n\r\n\r\nconst _crOptionDialogComp = function(option) {\r\n  const { dialogType } = option\r\n  return RouterDialog.getDialog(dialogType)\r\n     .then(Comp => {\r\n        return React.createElement(Comp, {\r\n            key: dialogType\r\n        })\r\n     });\r\n}\r\n\r\nconst Factory = {\r\n  ...fBrowser,\r\n  //dialogType, browserType, conf\r\n  createDialog: _crDialogComp,\r\n  //option\r\n  createOptionDialog: _crOptionDialogComp,\r\n};\r\n\r\nexport default Factory\r\n"],"file":"Factory.js"}