{"version":3,"sources":["../../../src/flux/logic/Factory.js"],"names":["isWideWidth","has","_isArr","Array","isArray","_assign","Object","assign","_initFromDate","initToDate","_crFnValue","valueFn","valueFnPrefix","RouterFnValue","bind","_crInitFromDate","isFdw","nInitFromDate","_crDateProps","dialogProps","_props","isFd","errNotYmdOrEmpty","YMD_DATE_OR_EMPTY","isYmdOrEmpty","initFromDate","onTestDate","isYmd","_onError","alertDescr","alertCaption","CA","showAlert","_crClickAbout","rootUri","descr","descrUrl","_descrUrl","showDescription","D_SELECT_N","D_STAT_N","_getDialogType","dialogType","selectProps","dims","dfProps","dfId","_modifyDialogPropsByLoadId","loadId","LoadType","Q","EU_STAT","mapFrequency","_crDialogComp","browserType","dialogConf","type","itemKey","dialogCaption","menuTitle","loadFnType","isProxy","isGetKey","_dialogType","onClickInfo","loadFn","RouterLoadFn","getFn","proxy","ChartStore","getProxy","getKey","onError","onLoad","ChartActions","CHAT_LOAD","chartType","onShow","CHAT_SHOW","RouterDialog","getDialog","then","Comp","key","caption","msgOnNotSelected","NOT_SELECTED","msgOnNotValidFormat","NOT_VALID_FORMAT","fnValue","_crOptionDialogComp","option","Factory","fBrowser","createDialog","createOptionDialog"],"mappings":"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","sourcesContent":["import { createElement } from 'react';\r\n\r\nimport RouterDialog from './RouterDialog';\r\nimport RouterLoadFn from './RouterLoadFn';\r\nimport RouterFnValue from './RouterFnValue';\r\n\r\nimport fBrowser from './fBrowser'\r\n\r\nimport {\r\n  YMD_DATE_OR_EMPTY,\r\n  NOT_SELECTED,\r\n  NOT_VALID_FORMAT\r\n} from '../../constants/Msg';\r\nimport {  LoadType } from '../../constants/Type';\r\n\r\nimport CA from '../actions/ComponentActions';\r\nimport ChartActions, {\r\n  CHAT_LOAD,\r\n  CHAT_SHOW\r\n} from '../actions/ChartActions';\r\n\r\nimport {\r\n  getFromDate,\r\n  getToDate,\r\n  isYmd,\r\n  isYmdOrEmpty\r\n} from '../../utils/DateUtils';\r\nimport has from '../../components/has';\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nconst { isWideWidth } = has\r\n, _isArr = Array.isArray\r\n, _assign = Object.assign\r\n, _initFromDate = getFromDate(2)\r\n, initToDate = getToDate();\r\n\r\nconst _crFnValue = (valueFn, valueFnPrefix) => {\r\n  return valueFn\r\n    ? valueFnPrefix\r\n       ? RouterFnValue[valueFn].bind(null, valueFnPrefix)\r\n       : RouterFnValue[valueFn]\r\n    : void 0;\r\n};\r\n\r\nconst _crInitFromDate = ({ isFdw, nInitFromDate }) => {\r\n  if (isFdw && !isWideWidth) {\r\n    return _initFromDate;\r\n  }\r\n  return nInitFromDate\r\n    ? getFromDate(nInitFromDate)\r\n    : _initFromDate\r\n}\r\n\r\nconst _crDateProps = (dialogProps) => {\r\n  const _props = dialogProps.isFd\r\n    ? {\r\n        errNotYmdOrEmpty: YMD_DATE_OR_EMPTY,\r\n        isYmdOrEmpty\r\n      }\r\n    : void 0;\r\n  return {\r\n    initFromDate: _crInitFromDate(dialogProps),\r\n    initToDate,\r\n    onTestDate: isYmd,\r\n    ..._props\r\n  }\r\n};\r\n\r\nconst _onError = (alertDescr, alertCaption='Request Error') => {\r\n  CA.showAlert({ alertDescr, alertCaption })\r\n};\r\n\r\nconst _crClickAbout = ({ rootUri, descr, descrUrl }) => {\r\n  const _descrUrl = descr && rootUri\r\n    ? `${rootUri}/${descr}.html`\r\n    : descrUrl;\r\n  return _descrUrl\r\n    ? CA.showDescription.bind(null, { descrUrl: _descrUrl })\r\n    : void 0;\r\n};\r\n\r\nconst D_SELECT_N = 'DialogSelectN'\r\n, D_STAT_N = 'DialogStatN';\r\n\r\nconst _getDialogType = (dialogType, { selectProps, dims, dfProps }) =>\r\n  dialogType\r\n  || (_isArr(selectProps) ? D_SELECT_N : void 0)\r\n  || (_isArr(dims) || (dfProps || {}).dfId ? D_STAT_N : void 0);\r\n\r\nconst _modifyDialogPropsByLoadId = (dialogProps, loadId) => {\r\n  if (!loadId){\r\n    dialogProps.loadId = LoadType.Q;\r\n  }\r\n  if (loadId === LoadType.EU_STAT) {\r\n    const { dfProps } = dialogProps\r\n    , { mapFrequency } = dfProps || {};\r\n    dialogProps.dfProps = _assign({}, dfProps, {\r\n       mapFrequency:  mapFrequency || 'M'\r\n    })\r\n  }\r\n};\r\n\r\nconst _crDialogComp = function (browserType, dialogConf){\r\n   const {\r\n           type:itemKey,\r\n           dialogProps={}, dialogType,\r\n           dialogCaption, menuTitle\r\n         } = dialogConf\r\n       , {\r\n           valueFn, valueFnPrefix,\r\n           loadFnType,\r\n           loadId,\r\n           isProxy,\r\n           isGetKey\r\n         } = dialogProps\r\n       , _dialogType = _getDialogType(dialogType, dialogProps)\r\n       , onClickInfo = _crClickAbout(dialogProps)\r\n       , loadFn = RouterLoadFn.getFn(loadFnType, _dialogType)\r\n       , proxy = isProxy\r\n            ? ChartStore.getProxy()\r\n            : void 0\r\n       , getKey = isGetKey && ChartStore.getKey\r\n       , onError = isGetKey && _onError\r\n\r\n       , onLoad = ChartActions[CHAT_LOAD]\r\n          .bind(null, {\r\n             chartType: itemKey,\r\n             browserType, dialogConf\r\n          })\r\n       , onShow = ChartActions[CHAT_SHOW]\r\n           .bind(null, itemKey, browserType, dialogConf);\r\n\r\n      _modifyDialogPropsByLoadId(dialogProps, loadId)\r\n\r\n      return RouterDialog.getDialog(_dialogType)\r\n         .then(Comp => {\r\n            return createElement(Comp, {\r\n              key : itemKey,\r\n              caption : dialogCaption || menuTitle,\r\n              msgOnNotSelected : NOT_SELECTED,\r\n              msgOnNotValidFormat : NOT_VALID_FORMAT,\r\n              fnValue : _crFnValue(valueFn, valueFnPrefix),\r\n              //initFromDate, initToDate, onTestDate,\r\n              //errNotYmdOrEmpty, isYmdOrEmpty\r\n              ..._crDateProps(dialogProps),\r\n              onLoad, onShow,\r\n              onClickInfo,\r\n              loadFn,\r\n              proxy,\r\n              getKey,\r\n              onError,\r\n              ...dialogProps\r\n           });\r\n         })\r\n}\r\n\r\n\r\nconst _crOptionDialogComp = function(option) {\r\n  const { dialogType } = option\r\n  return RouterDialog.getDialog(dialogType)\r\n     .then(Comp => {\r\n        return createElement(Comp, {\r\n            key: dialogType\r\n        })\r\n     });\r\n}\r\n\r\nconst Factory = {\r\n  ...fBrowser,\r\n  //dialogType, browserType, conf\r\n  createDialog: _crDialogComp,\r\n  //option\r\n  createOptionDialog: _crOptionDialogComp,\r\n};\r\n\r\nexport default Factory\r\n"],"file":"Factory.js"}