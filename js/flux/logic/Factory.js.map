{"version":3,"sources":["../../../src/flux/logic/Factory.js"],"names":["onLoadChart","loadStock","onShowChart","showChart","initFromDate","getFromDate","initToDate","getToDate","onTestDate","isValidDate","onTestDateOrEmpty","isValidDateOrEmpty","_showModalDialogDescription","option","showModalDialog","DESCRIPTION","createDialogComp","conf","browserType","dialogType","type","props","dialogProps","Comp","DEFAULT","_initFromDate","nInitFromDate","_fnValue","valueFn","valueFnPrefix","bind","undefined","onClickInfo","descrUrl","isContinious","msgTestDateOrEmpty","TEST_DATE_OR_EMPTY","loadId","Q","createElement","key","caption","dialogCaption","optionURI","optionsJsonProp","dataColumn","msgOnNotSelected","NOT_SELECTED","msgOnNotValidFormat","NOT_VALID_FORMAT","onLoad","onShow","fnValue","onCloseItem","closeChart","fnCloseChartContainer","chartType","closeChartContainer","createChartContainerComp","chartContainerComp","_type","chartContainerType","_caption","chartContainerCaption","onCloseContainer","_getDialogConf","_browserId","split","getSourceConfig","Factory","createDialog","createChartContainer","createBrowserDynamic","sourceMenuUrl","modalDialogType","itemOptionType","itemType","comp","ItemOptionComp","ItemComp","onShowContainer","store","isInitShow"],"mappings":"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","file":"Factory.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport RouterDialog from './RouterDialog';\r\nimport RouterFnValue from './RouterFnValue';\r\nimport RouterBrowser from './RouterBrowser';\r\n\r\nimport RouterItemOption from '../../components/zhn-select/RouterItemOption';\r\nimport RouterBrowserItem from '../../components/browser-items/RouterBrowserItem';\r\n\r\nimport ChartContainer from '../../components/zhn-containers/ChartContainer';\r\n\r\nimport Msg from '../../constants/Msg';\r\nimport { ModalDialog, LoadType } from '../../constants/Type';\r\n\r\nimport ComponentActions from '../actions/ComponentActions';\r\nimport ChartActions from '../actions/ChartActions';\r\nimport DateUtils from '../../utils/DateUtils';\r\n\r\nimport BrowserConfig from '../../constants/BrowserConfig';\r\n\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nconst onLoadChart = ChartActions.loadStock\r\n    , onShowChart = ChartActions.showChart\r\n    , initFromDate = DateUtils.getFromDate(2)\r\n    , initToDate = DateUtils.getToDate()\r\n    , onTestDate = DateUtils.isValidDate\r\n    , onTestDateOrEmpty = DateUtils.isValidDateOrEmpty;\r\n\r\n\r\n/*\r\nconst noopArr = function(){\r\n  return [];\r\n}\r\n*/\r\n\r\nconst _showModalDialogDescription = function(option){\r\n  ComponentActions.showModalDialog(ModalDialog.DESCRIPTION, option);\r\n}\r\n\r\nconst createDialogComp = function (conf, browserType){\r\n   const dialogType = conf.type\r\n       , props = conf.dialogProps ? conf.dialogProps : {}\r\n       , Comp = (conf.dialogType)\r\n            ? (RouterDialog[conf.dialogType])\r\n                  ? RouterDialog[conf.dialogType]\r\n                  : RouterDialog.DEFAULT\r\n            : RouterDialog.DEFAULT\r\n       , _initFromDate = (props.nInitFromDate)\r\n            ? DateUtils.getFromDate(props.nInitFromDate)\r\n            : initFromDate\r\n       , _fnValue = (props.valueFn)\r\n            ? (props.valueFnPrefix )\r\n                   ? RouterFnValue[props.valueFn].bind(null, props.valueFnPrefix)\r\n                   : RouterFnValue[props.valueFn]\r\n            : undefined\r\n      /*\r\n       , _fnLink = (props.linkFn)\r\n            ? RouterFnLink[props.linkFn]\r\n            : undefined\r\n      */\r\n       , onClickInfo = (props.descrUrl)\r\n            ? _showModalDialogDescription\r\n            : undefined;\r\n\r\n       if (props.isContinious) {\r\n         props.msgTestDateOrEmpty = Msg.TEST_DATE_OR_EMPTY;\r\n         props.onTestDateOrEmpty = onTestDateOrEmpty;\r\n       }\r\n\r\n       if (!props.loadId){\r\n         props.loadId = LoadType.Q;\r\n       }\r\n\r\n   return  React.createElement(Comp, {\r\n               key : dialogType,\r\n               caption : conf.dialogCaption,\r\n               optionURI : conf.optionURI,\r\n               optionsJsonProp : conf.optionsJsonProp,\r\n               dataColumn : conf.dataColumn,\r\n               msgOnNotSelected : Msg.NOT_SELECTED,\r\n               msgOnNotValidFormat : Msg.NOT_VALID_FORMAT,\r\n               onLoad  : onLoadChart.bind(null, dialogType, browserType),\r\n               onShow  : onShowChart.bind(null, dialogType, browserType),\r\n               fnValue : _fnValue,\r\n               //fnLink : _fnLink,\r\n               initFromDate : _initFromDate,\r\n               initToDate, onTestDate,\r\n               onClickInfo,\r\n               ...props\r\n  });\r\n}\r\n\r\nconst onCloseItem = ChartActions.closeChart;\r\nconst fnCloseChartContainer = function(chartType, browserType){\r\n  return ComponentActions.closeChartContainer.bind(null, chartType, browserType);\r\n}\r\nconst createChartContainerComp = function(conf={}, browserType){\r\n  const Comp = (conf.chartContainerComp)\r\n                 ? conf.chartContainerComp\r\n                 : ChartContainer\r\n      , _type = (conf.type)\r\n             ? conf.type\r\n             : BrowserConfig[browserType].chartContainerType\r\n      , _caption = (conf.chartContainerCaption)\r\n             ? conf.chartContainerCaption\r\n             : BrowserConfig[browserType].chartContainerCaption;\r\n\r\n  return React.createElement(Comp, {\r\n            key : _type,\r\n            caption : _caption,\r\n            chartType : _type,\r\n            browserType : browserType,\r\n            onCloseContainer : fnCloseChartContainer(_type, browserType),\r\n            onCloseItem\r\n  });\r\n}\r\n\r\n\r\nconst _getDialogConf = function(dialogType){\r\n  const _browserId = dialogType.split('_')[0];\r\n  return ChartStore.getSourceConfig(_browserId, dialogType);\r\n}\r\n\r\nconst Factory = {\r\n  createDialog(dialogType, browserType){\r\n   return createDialogComp(_getDialogConf(dialogType), browserType);\r\n },\r\n\r\n createChartContainer(dialogType, browserType){\r\n  return createChartContainerComp(_getDialogConf(dialogType), browserType);\r\n },\r\n\r\n createBrowserDynamic(option)\r\n {\r\n    const {\r\n             browserType, caption='' , sourceMenuUrl,\r\n             chartContainerType,\r\n             modalDialogType, itemOptionType, itemType, descrUrl\r\n           } = option\r\n        , comp = RouterBrowser[browserType] || RouterBrowser.DEFAULT\r\n        , ItemOptionComp = (itemOptionType)\r\n              ? ( RouterItemOption[itemOptionType] || RouterBrowserItem.DEFAULT )\r\n              : RouterBrowserItem.DEFAULT\r\n        , ItemComp = (itemType)\r\n              ? ( RouterBrowserItem[itemType] || RouterBrowserItem.DEFAULT )\r\n              : undefined\r\n        , onClickInfo = (typeof ItemComp !== \"undefined\")\r\n             ? _showModalDialogDescription\r\n             : undefined\r\n        , onShowContainer = ChartActions.showChart.bind(null, chartContainerType, browserType)\r\n\r\n    return React.createElement(comp , {\r\n      key : browserType,\r\n      browserType : browserType,\r\n      store : ChartStore,\r\n      isInitShow : true,\r\n      caption : caption,\r\n      sourceMenuUrl : sourceMenuUrl,\r\n      modalDialogType : modalDialogType,\r\n      chartContainerType : chartContainerType,\r\n      ItemOptionComp: ItemOptionComp,\r\n      ItemComp : ItemComp,\r\n      descrUrl : descrUrl,\r\n      onClickInfo : onClickInfo,\r\n      onShowContainer : onShowContainer\r\n    });\r\n  }\r\n}\r\n\r\nexport default Factory\r\n"]}