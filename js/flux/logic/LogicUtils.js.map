{"version":3,"sources":["../../../src/flux/logic/LogicUtils.js"],"names":["_isFn","fn","_crQuandlKey","option","loadId","isLoadMeta","value","dataColumn","seriaType","viewKey","LT_QCT","CHT_AREA","_crKey","_itemKey","loadConfig","LoadConfig","crKey","LogicUtils","createKeyForConfig","LT_Q","LT_EU_STAT","LT_EIA","LT_WL","id"],"mappings":";;;;;;;AAAA;;AAOA;;AAEA;;AAEA,MAAMA,KAAK,GAAGC,EAAE,IAAI,OAAOA,EAAP,KAAc,UAAlC;;AAEA,MAAMC,YAAY,GAAG,UAASC,MAAT,EAAgB;AACnC,QAAM;AACEC,IAAAA,MADF;AACUC,IAAAA,UADV;AAEEC,IAAAA,KAFF;AAESC,IAAAA,UAFT;AAEqBC,IAAAA,SAFrB;AAGEC,IAAAA;AAHF,MAIIN,MAJV;AAKA,SAAQC,MAAM,KAAKM,gBAAX,IAAqB,CAACL,UAAvB,GACHG,SAAS,KAAKG,mBAAd,GACOL,KADP,SACgBK,mBADhB,SAC4BJ,UAD5B,GAEOD,KAFP,SAEgBE,SAHb,GAIHC,OAAO,IAAIH,KAJf;AAKD,CAXD;;AAaA,MAAMM,MAAM,GAAIT,MAAD,IAAY;AACzB,QAAM;AAAEC,IAAAA,MAAF;AAAUE,IAAAA,KAAV;AAAiBO,IAAAA;AAAjB,MAA8BV,MAApC;AAAA,QACMW,UAAU,GAAGC,oBAAWX,MAAX,KAAsB,EADzC;AAAA,QAEM;AAAEY,IAAAA;AAAF,MAAYF,UAFlB;AAGA,SAAOd,KAAK,CAACgB,KAAD,CAAL,GACHA,KAAK,CAACb,MAAD,CADF,GAEHU,QAAQ,IAAIP,KAAZ,IAAqB,KAFzB;AAGD,CAPD;;AASA,MAAMW,UAAU,GAAG;AACjBC,EAAAA,kBAAkB,CAACf,MAAD,EAAQ;AACxB,UAAM;AAAEC,MAAAA,MAAF;AAAUS,MAAAA;AAAV,QAAuBV,MAA7B;;AACA,YAAQC,MAAR;AACE,WAAKe,cAAL;AAAW,WAAKT,gBAAL;AACT,eAAOG,QAAQ,IAAIX,YAAY,CAACC,MAAD,CAA/B;;AACF,WAAKiB,oBAAL;AAAiB,WAAKC,gBAAL;AAAa,WAAKC,eAAL;AAC5B,eAAOT,QAAQ,IAAIV,MAAM,CAACoB,EAA1B;;AACF;AACE,eAAOX,MAAM,CAACT,MAAD,CAAb;AANJ;AAQD;;AAXgB,CAAnB;eAcec,U","sourcesContent":["import {\r\n  LT_Q,\r\n  LT_QCT,\r\n  LT_EU_STAT,\r\n  LT_EIA,\r\n  LT_WL\r\n} from '../../constants/LoadType';\r\nimport { CHT_AREA } from '../../constants/ChartType';\r\n\r\nimport LoadConfig from './LoadConfig'\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst _crQuandlKey = function(option){\r\n  const {\r\n          loadId, isLoadMeta,\r\n          value, dataColumn, seriaType,\r\n          viewKey\r\n        } = option;\r\n  return (loadId === LT_QCT && !isLoadMeta)\r\n    ? seriaType === CHT_AREA\r\n        ? `${value}_${CHT_AREA}_${dataColumn}`\r\n        : `${value}_${seriaType}`\r\n    : viewKey || value;\r\n};\r\n\r\nconst _crKey = (option) => {\r\n  const { loadId, value, _itemKey } = option\r\n      , loadConfig = LoadConfig[loadId] || {}\r\n      , { crKey } = loadConfig;\r\n  return _isFn(crKey)\r\n    ? crKey(option)\r\n    : _itemKey || value || 'key';\r\n};\r\n\r\nconst LogicUtils = {\r\n  createKeyForConfig(option){\r\n    const { loadId, _itemKey } = option;\r\n    switch (loadId) {\r\n      case LT_Q: case LT_QCT:\r\n        return _itemKey || _crQuandlKey(option);\r\n      case LT_EU_STAT: case LT_EIA: case LT_WL:\r\n        return _itemKey || option.id;\r\n      default:\r\n        return _crKey(option);\r\n    }\r\n  }\r\n};\r\n\r\nexport default LogicUtils\r\n"],"file":"LogicUtils.js"}