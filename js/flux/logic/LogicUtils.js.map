{"version":3,"sources":["../../../src/flux/logic/LogicUtils.js"],"names":["_crQuandlKey","option","loadId","isLoadMeta","value","dataColumn","seriaType","viewKey","LT","QCT","CHT","AREA","_crEurostatKey","geo","group","metric","time","_metric","replace","_crKey","loadConfig","LoadConfig","crKey","LogicUtils","createKeyForConfig","Q","EU_STAT","EIA","WL","id"],"mappings":";;;;;;;AACA;;AAEA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAASC,MAAT,EAAgB;AAAA,MAE3BC,MAF2B,GAKzBD,MALyB,CAE3BC,MAF2B;AAAA,MAEnBC,UAFmB,GAKzBF,MALyB,CAEnBE,UAFmB;AAAA,MAG3BC,KAH2B,GAKzBH,MALyB,CAG3BG,KAH2B;AAAA,MAGpBC,UAHoB,GAKzBJ,MALyB,CAGpBI,UAHoB;AAAA,MAGRC,SAHQ,GAKzBL,MALyB,CAGRK,SAHQ;AAAA,MAI3BC,OAJ2B,GAKzBN,MALyB,CAI3BM,OAJ2B;AAMnC,SAAQL,MAAM,KAAKM,eAAGC,GAAd,IAAqB,CAACN,UAAvB,GACIG,SAAS,KAAKI,gBAAIC,IAAnB,GACSP,KADT,SACkBM,gBAAIC,IADtB,SAC8BN,UAD9B,GAESD,KAFT,SAEkBE,SAHrB,GAIIC,OAAD,GACIA,OADJ,GAEIH,KANd;AAOD,CAbD;;AAeA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAASX,MAAT,EAAgB;AAAA,oBAI1BA,MAJ0B,CAE7BY,GAF6B;AAAA,MAE7BA,GAF6B,4BAEzB,EAFyB;AAAA,sBAI1BZ,MAJ0B,CAErBa,KAFqB;AAAA,MAErBA,KAFqB,8BAEf,EAFe;AAAA,uBAI1Bb,MAJ0B,CAEXc,MAFW;AAAA,MAEXA,MAFW,+BAEJ,EAFI;AAAA,0BAI1Bd,MAJ0B,CAG7BK,SAH6B;AAAA,MAG7BA,SAH6B,kCAGnB,MAHmB;AAAA,qBAI1BL,MAJ0B,CAGXe,IAHW;AAAA,MAGXA,IAHW,6BAGN,EAHM;AAAA,MAK/BC,OAL+B,GAKrBF,MAAM,CAACG,OAAP,CAAe,GAAf,EAAoB,GAApB,CALqB;;AAMrC,SAAUL,GAAV,SAAiBC,KAAjB,SAA0BG,OAA1B,SAAqCX,SAArC,SAAkDU,IAAlD;AACD,CAPD;;AASA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAClB,MAAD,EAAY;AAAA,MACjBC,MADiB,GACCD,MADD,CACjBC,MADiB;AAAA,MACTE,KADS,GACCH,MADD,CACTG,KADS;AAAA,MAEnBgB,UAFmB,GAENC,uBAAWnB,MAAX,KAAsB,EAFhB;AAAA,MAGjBoB,KAHiB,GAGPF,UAHO,CAGjBE,KAHiB;AAIzB,SAAO,OAAOA,KAAP,KAAiB,UAAjB,GACHA,KAAK,CAACrB,MAAD,CADF,GAEHG,KAAK,IAAI,KAFb;AAGD,CAPD;;AASA,IAAMmB,UAAU,GAAG;AAEjBC,EAAAA,kBAFiB,8BAEEvB,MAFF,EAES;AAAA,QAChBC,MADgB,GACLD,MADK,CAChBC,MADgB;;AAExB,YAAQA,MAAR;AACE,WAAKM,eAAGiB,CAAR;AAAW,WAAKjB,eAAGC,GAAR;AACT,eAAOT,YAAY,CAACC,MAAD,CAAnB;;AACF,WAAKO,eAAGkB,OAAR;AAAiB,WAAKlB,eAAGmB,GAAR;AACd,eAAOf,cAAc,CAACX,MAAD,CAArB;;AACH,WAAKO,eAAGoB,EAAR;AACG,eAAO3B,MAAM,CAAC4B,EAAd;;AACH;AACE,eAAOV,MAAM,CAAClB,MAAD,CAAb;AARJ;AAUD;AAdgB,CAAnB;eAiBesB,U","sourcesContent":["\r\nimport { ChartType as CHT, LoadType as LT } from '../../constants/Type';\r\n\r\nimport LoadConfig from './LoadConfig'\r\n\r\nconst _crQuandlKey = function(option){\r\n  const {\r\n          loadId, isLoadMeta,\r\n          value, dataColumn, seriaType,\r\n          viewKey\r\n        } = option;\r\n  return (loadId === LT.QCT && !isLoadMeta)\r\n          ? (seriaType === CHT.AREA)\r\n                ? `${value}_${CHT.AREA}_${dataColumn}`\r\n                : `${value}_${seriaType}`\r\n          : (viewKey)\r\n              ? viewKey\r\n              : value;\r\n}\r\n\r\nconst _crEurostatKey = function(option){\r\n  const {\r\n          geo='', group='', metric='',\r\n          seriaType='AREA', time='',\r\n         } = option\r\n      , _metric = metric.replace('?', '_');\r\n  return `${geo}_${group}_${_metric}_${seriaType}_${time}`;\r\n}\r\n\r\nconst _crKey = (option) => {\r\n  const { loadId, value } = option\r\n      , loadConfig = LoadConfig[loadId] || {}\r\n      , { crKey } = loadConfig;  \r\n  return typeof crKey === 'function'\r\n    ? crKey(option)\r\n    : value || 'key';\r\n};\r\n\r\nconst LogicUtils = {\r\n\r\n  createKeyForConfig(option){\r\n    const { loadId } = option;\r\n    switch (loadId) {\r\n      case LT.Q: case LT.QCT:\r\n        return _crQuandlKey(option);\r\n      case LT.EU_STAT: case LT.EIA:\r\n         return _crEurostatKey(option);\r\n      case LT.WL:\r\n         return option.id;\r\n      default:\r\n        return _crKey(option);\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogicUtils\r\n"],"file":"LogicUtils.js"}