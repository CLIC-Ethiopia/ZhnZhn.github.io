{"version":3,"sources":["../../../src/flux/logic/LogicUtils.js"],"names":["_fnCreateQuandlKey","option","loadId","isLoadMeta","value","dataColumn","seriaType","viewKey","QCT","AREA","_fnCreateEuroStatKey","geo","group","metric","time","_metric","replace","LogicUtils","createKeyForConfig","Q","EU_STAT","WL","id"],"mappings":";;;;;;AACA;;AAEA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAASC,MAAT,EAAgB;AAAA,MAEjCC,MAFiC,GAK/BD,MAL+B,CAEjCC,MAFiC;AAAA,MAEzBC,UAFyB,GAK/BF,MAL+B,CAEzBE,UAFyB;AAAA,MAGjCC,KAHiC,GAK/BH,MAL+B,CAGjCG,KAHiC;AAAA,MAG1BC,UAH0B,GAK/BJ,MAL+B,CAG1BI,UAH0B;AAAA,MAGdC,SAHc,GAK/BL,MAL+B,CAGdK,SAHc;AAAA,MAIjCC,OAJiC,GAK/BN,MAL+B,CAIjCM,OAJiC;;AAMzC,SAAQL,WAAW,eAASM,GAApB,IAA2B,CAACL,UAA7B,GACIG,cAAc,gBAAUG,IAAzB,GACSL,KADT,SACkB,gBAAUK,IAD5B,SACoCJ,UADpC,GAESD,KAFT,SAEkBE,SAHrB,GAIIC,OAAD,GACIA,OADJ,GAEIH,KANd;AAOD,CAbD;;AAeA,IAAMM,uBAAuB,SAAvBA,oBAAuB,CAAST,MAAT,EAAgB;AAAA,oBAIhCA,MAJgC,CAEnCU,GAFmC;AAAA,MAEnCA,GAFmC,+BAE/B,EAF+B;AAAA,sBAIhCV,MAJgC,CAE3BW,KAF2B;AAAA,MAE3BA,KAF2B,iCAErB,EAFqB;AAAA,uBAIhCX,MAJgC,CAEjBY,MAFiB;AAAA,MAEjBA,MAFiB,kCAEV,EAFU;AAAA,0BAIhCZ,MAJgC,CAGnCK,SAHmC;AAAA,MAGnCA,SAHmC,qCAGzB,MAHyB;AAAA,qBAIhCL,MAJgC,CAGjBa,IAHiB;AAAA,MAGjBA,IAHiB,gCAGZ,EAHY;AAAA,MAKrCC,OALqC,GAK3BF,OAAOG,OAAP,CAAe,GAAf,EAAoB,GAApB,CAL2B;;AAM3C,SAAUL,GAAV,SAAiBC,KAAjB,SAA0BG,OAA1B,SAAqCT,SAArC,SAAkDQ,IAAlD;AACD,CAPD;;AASA,IAAMG,aAAa;AAEjBC,oBAFiB,8BAEEjB,MAFF,EAES;AAAA,QAChBC,MADgB,GACLD,MADK,CAChBC,MADgB;;AAExB,YAAQA,MAAR;AACE,WAAK,eAASiB,CAAd,CAAiB,KAAK,eAASX,GAAd;AACf,eAAOR,mBAAmBC,MAAnB,CAAP;AACF,WAAK,eAASmB,OAAd;AACG,eAAOV,qBAAqBT,MAArB,CAAP;AACH,WAAK,eAASoB,EAAd;AACG,eAAOpB,OAAOqB,EAAd;AACH;AACE,eAAO,KAAP;AARJ;AAUD;AAdgB,CAAnB;;kBAkBeL,U","file":"LogicUtils.js","sourcesContent":["\r\nimport { ChartType, LoadType } from '../../constants/Type';\r\n\r\nconst _fnCreateQuandlKey = function(option){\r\n  const {\r\n          loadId, isLoadMeta,\r\n          value, dataColumn, seriaType,\r\n          viewKey\r\n        } = option;\r\n  return (loadId === LoadType.QCT && !isLoadMeta)\r\n          ? (seriaType === ChartType.AREA)\r\n                ? `${value}_${ChartType.AREA}_${dataColumn}`\r\n                : `${value}_${seriaType}`\r\n          : (viewKey)\r\n              ? viewKey\r\n              : value;\r\n}\r\n\r\nconst _fnCreateEuroStatKey = function(option){\r\n  const {\r\n          geo='', group='', metric='',\r\n          seriaType='AREA', time=''\r\n         } = option\r\n      , _metric = metric.replace('?', '_');\r\n  return `${geo}_${group}_${_metric}_${seriaType}_${time}`;\r\n}\r\n\r\nconst LogicUtils = {\r\n\r\n  createKeyForConfig(option){\r\n    const { loadId } = option;\r\n    switch (loadId) {\r\n      case LoadType.Q: case LoadType.QCT:\r\n        return _fnCreateQuandlKey(option);\r\n      case LoadType.EU_STAT:\r\n         return _fnCreateEuroStatKey(option);\r\n      case LoadType.WL:\r\n         return option.id;\r\n      default :\r\n        return 'key'\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default LogicUtils\r\n"]}