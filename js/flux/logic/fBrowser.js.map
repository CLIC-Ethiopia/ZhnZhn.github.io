{"version":3,"sources":["../../../src/flux/logic/fBrowser.js"],"names":["_crBrowserWatchList","Comp","React","createElement","key","BT","WATCH_LIST","browserType","caption","isInitShow","store","ChartStore","showAction","BAT","SHOW_BROWSER_DYNAMIC","updateAction","UPDATE_WATCH_BROWSER","_crBrowserDynamic","option","sourceMenuUrl","chartContainerType","modalDialogType","itemOptionType","itemType","descrUrl","dfProps","ItemOptionComp","RouterItemOption","RouterBrowserItem","DEFAULT","ItemComp","undefined","onClickInfo","CA","showDescription","onShowContainer","CHA","showChart","bind","loadCompletedAction","LOAD_BROWSER_DYNAMIC_COMPLETED","UPDATE_BROWSER_MENU","onLoadMenu","BA","loadBrowserDynamic","onShowLoadDialog","showModalDialog","fBrowser","crAsyncBrowser","RouterBrowser","then","SWEDEN_STAT_ALL","NORWAY_STAT_ALL","FINLAND_STAT_ALL","STAT_ALL","Promise","resolve"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nimport CA from '../actions/ComponentActions';\r\nimport CHA from '../actions/ChartActions';\r\nimport BA, { BrowserActionTypes as BAT } from '../actions/BrowserActions';\r\nimport { BrowserType as BT } from '../../constants/Type';\r\n\r\nimport RouterBrowser from './RouterBrowser';\r\n\r\nimport RouterItemOption from '../../components/zhn-select/RouterItemOption';\r\nimport RouterBrowserItem from '../../components/browser-items/RouterBrowserItem';\r\n\r\n\r\nconst _crBrowserWatchList = (Comp) => React.createElement(Comp, {\r\n   key: BT.WATCH_LIST,\r\n   browserType: BT.WATCH_LIST,\r\n   caption: \"Watch List\",\r\n   isInitShow: true,\r\n   store: ChartStore,\r\n   //showAction: BAT.SHOW_BROWSER,\r\n   showAction: BAT.SHOW_BROWSER_DYNAMIC,\r\n   updateAction: BAT.UPDATE_WATCH_BROWSER\r\n})\r\n\r\nconst _crBrowserDynamic = (Comp, option) => {\r\n   const {\r\n            browserType, caption='Source Browser' , sourceMenuUrl,\r\n            chartContainerType,\r\n            modalDialogType, itemOptionType, itemType, descrUrl, dfProps\r\n          } = option\r\n       //, comp = RouterBrowser[browserType] || RouterBrowser.DEFAULT\r\n       , ItemOptionComp = (itemOptionType)\r\n             ? ( RouterItemOption[itemOptionType] || RouterBrowserItem.DEFAULT )\r\n             : RouterBrowserItem.DEFAULT\r\n       , ItemComp = (itemType)\r\n             ? ( RouterBrowserItem[itemType] || RouterBrowserItem.DEFAULT )\r\n             : undefined\r\n       , onClickInfo = (typeof ItemComp !== \"undefined\")\r\n            ? CA.showDescription\r\n            : undefined\r\n       , onShowContainer = CHA.showChart.bind(null, chartContainerType, browserType);\r\n\r\n   return React.createElement(Comp , {\r\n     dfProps,\r\n     key : browserType,\r\n     browserType : browserType,\r\n     store : ChartStore,\r\n     isInitShow : true,\r\n     caption,\r\n     sourceMenuUrl,\r\n     modalDialogType,\r\n     chartContainerType,\r\n     ItemOptionComp,\r\n     ItemComp,\r\n     descrUrl,\r\n     onClickInfo,\r\n     onShowContainer,\r\n\r\n     showAction : BAT.SHOW_BROWSER_DYNAMIC,\r\n     loadCompletedAction : BAT.LOAD_BROWSER_DYNAMIC_COMPLETED,\r\n     updateAction : BAT.UPDATE_BROWSER_MENU,  //for Type\r\n     onLoadMenu : BA.loadBrowserDynamic,\r\n     onShowLoadDialog : CA.showModalDialog  //for Type2\r\n\r\n   });\r\n }\r\n\r\n\r\n\r\nconst fBrowser = {\r\n  crAsyncBrowser(option) {\r\n    const { browserType } = option;\r\n    switch (browserType) {\r\n      case BT.WATCH_LIST:\r\n        return RouterBrowser[BT.WATCH_LIST]\r\n          .then(_crBrowserWatchList);\r\n\r\n      case BT.SWEDEN_STAT_ALL:\r\n      case BT.NORWAY_STAT_ALL:\r\n      case BT.FINLAND_STAT_ALL:      \r\n        return RouterBrowser.STAT_ALL\r\n          .then(Comp => _crBrowserDynamic(Comp, option));\r\n\r\n      default:\r\n        return Promise.resolve(\r\n           _crBrowserDynamic(\r\n             RouterBrowser[browserType] || RouterBrowser.DEFAULT,\r\n             option\r\n           )\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default fBrowser\r\n"],"file":"fBrowser.js"}