{"version":3,"sources":["../../../src/flux/logic/loadQuandlCommodityTrade.js"],"names":["_compareByCaption","a","b","caption","_fnFetchToChartComp","json","option","onCompleted","arr","dataset","column_names","max","length","optionTrades","i","push","value","sort","onLoad","_fnFailedLoadMeta","onFailed","optionFailed","_loadToChartComp","isLoadMeta","_onFetch","Quandl","fnFetchToChartComp","_onFailed","bind","uri","getRequestUrl","onCheckResponse","checkResponse","onFetch","onCatch","_loadToChart","onAdded","fnFetchToChart","loadQuandlCommodityTrade","loadItem","parentId","isLoadToChart","apiKey","getQuandlKey"],"mappings":"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","file":"loadQuandlCommodityTrade.js","sourcesContent":["\r\nimport { fetchJson } from '../../utils/fnFetch'\r\nimport { fnCatch } from './fnCatch';\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nimport QuandlApi from '../../adapters/QuandlApi';\r\n\r\nimport LoadImpl from './LoadImpl'\r\n\r\nconst _compareByCaption = (a, b) => {\r\n  if (a.caption < b.caption ) return -1;\r\n  else if (a.caption > b.caption) return 1;\r\n  else return 0;\r\n}\r\n\r\nconst _fnFetchToChartComp = function({ json, option, onCompleted }){\r\n  const arr = json.dataset.column_names\r\n      , max = arr.length;\r\n  let optionTrades = [], i=1;\r\n  for (; i<max; i++){\r\n    optionTrades.push({ caption: arr[i], value: i });\r\n  }\r\n  optionTrades.sort(_compareByCaption);\r\n  option.onLoad(optionTrades);\r\n}\r\n\r\nconst _fnFailedLoadMeta = function(option, onFailed, optionFailed){\r\n  option.onFailed();\r\n  onFailed(optionFailed);\r\n}\r\n\r\nconst _loadToChartComp = function(option, onCompleted, onFailed){\r\n   const { isLoadMeta } = option\r\n       , _onFetch = (isLoadMeta)\r\n            ? _fnFetchToChartComp\r\n            : LoadImpl.Quandl.fnFetchToChartComp\r\n       , _onFailed = (isLoadMeta)\r\n            ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n            : onFailed;\r\n   fetchJson({\r\n     uri : QuandlApi.getRequestUrl(option),\r\n     option : option,\r\n     onCheckResponse : QuandlApi.checkResponse,\r\n     onFetch : _onFetch,\r\n     onCompleted : onCompleted,\r\n     onCatch : fnCatch,\r\n     onFailed : _onFailed\r\n   })\r\n}\r\n\r\nconst _loadToChart = function(option, onAdded, onFailed){\r\n  const { isLoadMeta } = option\r\n      , _onFetch = (isLoadMeta)\r\n           ? _fnFetchToChartComp\r\n           : LoadImpl.Quandl.fnFetchToChart\r\n      , _onFailed = (isLoadMeta)\r\n           ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n           : onFailed;\r\n  fetchJson({\r\n    uri : QuandlApi.getRequestUrl(option),\r\n    option : option,\r\n    onCheckResponse : QuandlApi.checkResponse,\r\n    onFetch : _onFetch,\r\n    onCompleted : onAdded,\r\n    onCatch : fnCatch,\r\n    onFailed : _onFailed\r\n  })\r\n}\r\n\r\nconst loadQuandlCommodityTrade = {\r\n  loadItem(option, onCompleted, onAdded, onFailed){\r\n    const parentId = ChartStore.isLoadToChart();\r\n    option.apiKey = ChartStore.getQuandlKey()\r\n\r\n    if (!parentId){\r\n      _loadToChartComp(option, onCompleted, onFailed);\r\n    } else {\r\n      option.parentId = parentId;\r\n      _loadToChart(option, onAdded, onFailed);\r\n    }\r\n  }\r\n}\r\n\r\nexport {loadQuandlCommodityTrade}\r\n"]}