{"version":3,"sources":["../../../src/flux/logic/loadQuandlCommodityTrade.js"],"names":["_compareByCaption","a","b","caption","_fnFetchToChartComp","json","option","onCompleted","arr","dataset","column_names","max","length","optionTrades","i","push","value","sort","onLoad","_fnFailedLoadMeta","onFailed","optionFailed","_loadToChartComp","isLoadMeta","_onFetch","LoadImpl","Quandl","fnFetchToChartComp","_onFailed","bind","uri","QuandlApi","getRequestUrl","onCheckResponse","checkResponse","onFetch","onCatch","fnCatch","_loadToChart","onAdded","fnFetchToChart","loadQuandlCommodityTrade","loadItem","parentId","ChartStore","isLoadToChart","apiKey","getKey","LT","Q"],"mappings":"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","sourcesContent":["import { LoadType as LT } from '../../constants/Type'\r\nimport { fetchJson } from '../../utils/fnFetch'\r\nimport { fnCatch } from './fnCatch';\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nimport QuandlApi from '../../adapters/quandl/QuandlApi';\r\n\r\nimport LoadImpl from './LoadImpl'\r\n\r\nconst _compareByCaption = (a, b) => {\r\n  if (a.caption < b.caption ) return -1;\r\n  else if (a.caption > b.caption) return 1;\r\n  else return 0;\r\n}\r\n\r\nconst _fnFetchToChartComp = function({ json, option, onCompleted }){\r\n  const arr = json.dataset.column_names\r\n      , max = arr.length;\r\n  let optionTrades = [], i=1;\r\n  for (; i<max; i++){\r\n    optionTrades.push({ caption: arr[i], value: i });\r\n  }\r\n  optionTrades.sort(_compareByCaption);\r\n  option.onLoad(optionTrades);\r\n}\r\n\r\nconst _fnFailedLoadMeta = function(option, onFailed, optionFailed){\r\n  option.onFailed();\r\n  onFailed(optionFailed);\r\n}\r\n\r\nconst _loadToChartComp = function(option, onCompleted, onFailed){\r\n   const { isLoadMeta } = option\r\n   , _onFetch = (isLoadMeta)\r\n        ? _fnFetchToChartComp\r\n        //: LoadImpl.Quandl.loadItem\r\n        : LoadImpl.Quandl.fnFetchToChartComp\r\n   , _onFailed = (isLoadMeta)\r\n        ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n        : onFailed;\r\n\r\n   fetchJson({\r\n     uri : QuandlApi.getRequestUrl(option),\r\n     option : option,\r\n     onCheckResponse : QuandlApi.checkResponse,\r\n     onFetch : _onFetch,\r\n     onCompleted : onCompleted,\r\n     onCatch : fnCatch,\r\n     onFailed : _onFailed\r\n   })\r\n}\r\n\r\nconst _loadToChart = function(option, onAdded, onFailed){\r\n  const { isLoadMeta } = option\r\n      , _onFetch = (isLoadMeta)\r\n           ? _fnFetchToChartComp\r\n           : LoadImpl.Quandl.fnFetchToChart\r\n      , _onFailed = (isLoadMeta)\r\n           ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n           : onFailed;\r\n  fetchJson({\r\n    uri : QuandlApi.getRequestUrl(option),\r\n    option : option,\r\n    onCheckResponse : QuandlApi.checkResponse,\r\n    onFetch : _onFetch,\r\n    onCompleted : onAdded,\r\n    onCatch : fnCatch,\r\n    onFailed : _onFailed\r\n  })\r\n}\r\n\r\nconst loadQuandlCommodityTrade = {\r\n  loadItem(option, onCompleted, onAdded, onFailed){\r\n    const parentId = ChartStore.isLoadToChart();\r\n    option.apiKey = ChartStore.getKey(LT.Q)\r\n\r\n    if (!parentId){\r\n      _loadToChartComp(option, onCompleted, onFailed);\r\n    } else {\r\n      option.parentId = parentId;\r\n      _loadToChart(option, onAdded, onFailed);\r\n    }\r\n  }\r\n}\r\n\r\nexport {loadQuandlCommodityTrade}\r\n"],"file":"loadQuandlCommodityTrade.js"}