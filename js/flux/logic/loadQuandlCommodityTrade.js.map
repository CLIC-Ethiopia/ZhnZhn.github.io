{"version":3,"sources":["../../../src/flux/logic/loadQuandlCommodityTrade.js"],"names":["_compareByCaption","a","b","caption","_fnFetchToChartComp","json","option","onCompleted","arr","dataset","column_names","max","length","optionTrades","i","push","value","sort","onLoad","_fnFailedLoadMeta","onFailed","optionFailed","_loadToChartComp","isLoadMeta","_onFetch","LoadImpl","Quandl","fnFetchToChartComp","_onFailed","bind","uri","QuandlApi","getRequestUrl","onCheckResponse","checkResponse","onFetch","onCatch","_loadToChart","onAdded","fnFetchToChart","loadQuandlCommodityTrade","loadItem","parentId","ChartStore","isLoadToChart","apiKey","getKey","LT_Q"],"mappings":"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","sourcesContent":["import { LT_Q } from '../../constants/LoadType';\r\nimport { fetchJson } from '../../utils/fnFetch';\r\nimport onCatch from './onCatch';\r\nimport ChartStore from '../stores/ChartStore';\r\n\r\nimport QuandlApi from '../../adapters/quandl/QuandlApi';\r\n\r\nimport LoadImpl from './LoadImpl';\r\n\r\nconst _compareByCaption = (a, b) => {\r\n  if (a.caption < b.caption ) return -1;\r\n  else if (a.caption > b.caption) return 1;\r\n  else return 0;\r\n}\r\n\r\nconst _fnFetchToChartComp = function({ json, option, onCompleted }){\r\n  const arr = json.dataset.column_names\r\n      , max = arr.length;\r\n  let optionTrades = [], i=1;\r\n  for (; i<max; i++){\r\n    optionTrades.push({ caption: arr[i], value: i });\r\n  }\r\n  optionTrades.sort(_compareByCaption);\r\n  option.onLoad(optionTrades);\r\n}\r\n\r\nconst _fnFailedLoadMeta = function(option, onFailed, optionFailed){\r\n  option.onFailed();\r\n  onFailed(optionFailed);\r\n}\r\n\r\nconst _loadToChartComp = function(option, onCompleted, onFailed){\r\n   const { isLoadMeta } = option\r\n   , _onFetch = (isLoadMeta)\r\n        ? _fnFetchToChartComp\r\n        //: LoadImpl.Quandl.loadItem\r\n        : LoadImpl.Quandl.fnFetchToChartComp\r\n   , _onFailed = (isLoadMeta)\r\n        ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n        : onFailed;\r\n\r\n   fetchJson({\r\n     uri : QuandlApi.getRequestUrl(option),\r\n     option : option,\r\n     onCheckResponse : QuandlApi.checkResponse,\r\n     onFetch : _onFetch,\r\n     onCompleted : onCompleted,\r\n     onCatch : onCatch,\r\n     onFailed : _onFailed\r\n   })\r\n}\r\n\r\nconst _loadToChart = function(option, onAdded, onFailed){\r\n  const { isLoadMeta } = option\r\n      , _onFetch = (isLoadMeta)\r\n           ? _fnFetchToChartComp\r\n           : LoadImpl.Quandl.fnFetchToChart\r\n      , _onFailed = (isLoadMeta)\r\n           ? _fnFailedLoadMeta.bind(null, option, onFailed)\r\n           : onFailed;\r\n  fetchJson({\r\n    uri : QuandlApi.getRequestUrl(option),\r\n    option : option,\r\n    onCheckResponse : QuandlApi.checkResponse,\r\n    onFetch : _onFetch,\r\n    onCompleted : onAdded,\r\n    onCatch : onCatch,\r\n    onFailed : _onFailed\r\n  })\r\n}\r\n\r\nconst loadQuandlCommodityTrade = {\r\n  loadItem(option, onCompleted, onAdded, onFailed){\r\n    const parentId = ChartStore.isLoadToChart();\r\n    option.apiKey = ChartStore.getKey(LT_Q)\r\n\r\n    if (!parentId){\r\n      _loadToChartComp(option, onCompleted, onFailed);\r\n    } else {\r\n      option.parentId = parentId;\r\n      _loadToChart(option, onAdded, onFailed);\r\n    }\r\n  }\r\n}\r\n\r\nexport {loadQuandlCommodityTrade}\r\n"],"file":"loadQuandlCommodityTrade.js"}