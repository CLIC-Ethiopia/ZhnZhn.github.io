{"version":3,"sources":["../../../src/flux/watch-list/WithLogicItem.js"],"names":["WithLogicItem","addItem","watchList","item","caption","groupCaption","listCaption","config","zhConfig","title","subtitle","columnName","dataColumn","id","fromDate","seriaColumnNames","toGroup","findGroup","toList","findList","items","checkIsInArraySameCaption","fResultItemExisted","push","isDone","removeItem","groupFrom","listFrom","filter"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,gBAAgB;AAEpBC,SAFoB,mBAEZC,SAFY,EAEDC,IAFC,EAEI;AAAA,QACfC,OADe,GAC+BD,IAD/B,CACfC,OADe;AAAA,QACNC,YADM,GAC+BF,IAD/B,CACNE,YADM;AAAA,QACQC,WADR,GAC+BH,IAD/B,CACQG,WADR;AAAA,QACqBC,MADrB,GAC+BJ,IAD/B,CACqBI,MADrB;AAAA,QAEfC,QAFe,GAEHD,MAFG,CAEfC,QAFe;AAAA,QAGdC,KAHc,GAG8DD,QAH9D,CAGdC,KAHc;AAAA,QAGPC,QAHO,GAG8DF,QAH9D,CAGPE,QAHO;AAAA,QAGGC,UAHH,GAG8DH,QAH9D,CAGGG,UAHH;AAAA,QAGeC,UAHf,GAG8DJ,QAH9D,CAGeI,UAHf;AAAA,QAG2BC,EAH3B,GAG8DL,QAH9D,CAG2BK,EAH3B;AAAA,QAG+BC,QAH/B,GAG8DN,QAH9D,CAG+BM,QAH/B;AAAA,QAGyCC,gBAHzC,GAG8DP,QAH9D,CAGyCO,gBAHzC;AAAA,QAIhBC,OAJgB,GAIN,kBAAQC,SAAR,CAAkBf,SAAlB,EAA6BG,YAA7B,CAJM;AAAA,QAKhBa,MALgB,GAKP,kBAAQC,QAAR,CAAiBH,OAAjB,EAA0BV,WAA1B,CALO;AAAA,QAMhBc,KANgB,GAMRF,OAAOE,KANC;;AAQtB,QAAK,kBAAQC,yBAAR,CAAkCD,KAAlC,EAAyChB,OAAzC,CAAL,EAAwD;AACtD,aAAO,kBAAQkB,kBAAR,CAA2BlB,OAA3B,EAAoCE,WAApC,CAAP;AACD;AACD,QAAIc,KAAJ,EAAU;AACRF,aAAOE,KAAP,CAAaG,IAAb,CAAkB;AACfd,oBADe,EACRC,kBADQ,EACEN,gBADF,EACWO,sBADX,EACuBC,sBADvB,EACmCC,MADnC,EACuCC,kBADvC,EACiDC;AADjD,OAAlB;AAGD,KAJD,MAIO;AACLG,aAAOE,KAAP,GAAe,CAAC;AACdX,oBADc,EACPC,kBADO,EACGN,gBADH,EACYO,sBADZ,EACwBC,sBADxB,EACoCC,MADpC,EACwCC,kBADxC,EACkDC;AADlD,OAAD,CAAf;AAGD;AACD,WAAO,EAACS,QAAS,IAAV,EAAP;AACD,GAvBmB;AAyBpBC,YAzBoB,sBAyBTvB,SAzBS,QAyBuC;AAAA,QAApCG,YAAoC,QAApCA,YAAoC;AAAA,QAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,QAATF,OAAS,QAATA,OAAS;;AACzD,QAAMsB,YAAY,kBAAQT,SAAR,CAAkBf,SAAlB,EAA6BG,YAA7B,CAAlB;AAAA,QACMsB,WAAW,kBAAQR,QAAR,CAAiBO,SAAjB,EAA4BpB,WAA5B,CADjB;;AAGAqB,aAASP,KAAT,GAAiB,kBAAQQ,MAAR,CAAeD,SAASP,KAAxB,EAA+BhB,OAA/B,CAAjB;AACD;AA9BmB,CAAtB;;kBAkCeJ,a","file":"WithLogicItem.js","sourcesContent":["import LogicFn from './LogicFn';\r\n\r\nconst WithLogicItem = {\r\n\r\n  addItem(watchList, item){\r\n    const {caption, groupCaption, listCaption, config} = item\r\n        , {zhConfig} = config\r\n        , { title, subtitle, columnName, dataColumn, id, fromDate, seriaColumnNames } = zhConfig\r\n        , toGroup = LogicFn.findGroup(watchList, groupCaption)\r\n        , toList = LogicFn.findList(toGroup, listCaption)\r\n        , items = toList.items;\r\n\r\n    if ( LogicFn.checkIsInArraySameCaption(items, caption) ){\r\n      return LogicFn.fResultItemExisted(caption, listCaption);\r\n    }\r\n    if (items){\r\n      toList.items.push({\r\n         title, subtitle, caption, columnName, dataColumn, id, fromDate, seriaColumnNames\r\n      });\r\n    } else {\r\n      toList.items = [{\r\n        title, subtitle, caption, columnName, dataColumn, id, fromDate, seriaColumnNames\r\n      }];\r\n    }\r\n    return {isDone : true}\r\n  },\r\n\r\n  removeItem(watchList, {groupCaption, listCaption, caption}){\r\n    const groupFrom = LogicFn.findGroup(watchList, groupCaption)\r\n        , listFrom = LogicFn.findList(groupFrom, listCaption);\r\n\r\n    listFrom.items = LogicFn.filter(listFrom.items, caption);\r\n  }\r\n\r\n};\r\n\r\nexport default WithLogicItem\r\n"]}