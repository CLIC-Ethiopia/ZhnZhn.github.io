{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["CAPTION","GROUPS","LISTS","_crMsgIsNotDone","message","isDone","crMsgNotFound","itemType","name","crMsgGroupExisted","caption","crMsgListExisted","captionList","captionGroup","crMsgItemExisted","_crAlert","alertItemId","alertConfig","crAlertItemExisted","dropId","dragId","ALERT_DND_ITEM","crAlertListExisted","dropGroupCaption","dragListCaption","ALERT_DND_LIST","filter","getArrayWithObj","imArrPush","getArrayWithRename","insertItemInArray","imArrInsertItem","findGroup","findList","findIndex","isInArraySameCaption"],"mappings":";;;;;;;AAAA;;AASA;;AAKA;;AAOA;;AAEA,MAAMA,OAAO,GAAG,SAAhB;AAAA,MACEC,MAAM,GAAG,QADX;AAAA,MAEEC,KAAK,GAAG,OAFV;;AAIA,MAAMC,eAAe,GAAIC,OAAD,KAAc;AACpCC,EAAAA,MAAM,EAAE,KAD4B;AAEpCD,EAAAA;AAFoC,CAAd,CAAxB;;AAKO,MAAME,aAAa,GAAG,CAC3BC,QAD2B,EAE3BC,IAF2B,KAGxBL,eAAe,CAAC,4BAAaI,QAAb,EAAuBC,IAAvB,CAAD,CAHb;;;;AAKA,MAAMC,iBAAiB,GAC5BC,OAD+B,IAE5BP,eAAe,CAAC,4BAAaO,OAAb,CAAD,CAFb;;;;AAIA,MAAMC,gBAAgB,GAAG,CAC9BC,WAD8B,EAE9BC,YAF8B,KAG3BV,eAAe,CAAC,2BAAYS,WAAZ,EAAyBC,YAAzB,CAAD,CAHb;;;;AAKA,MAAMC,gBAAgB,GAAG,CAC9BJ,OAD8B,EAE9BE,WAF8B,KAG3BT,eAAe,CAAC,2BAAYO,OAAZ,EAAqBE,WAArB,CAAD,CAHb;;;;AAMP,MAAMG,QAAQ,GAAG,CAACC,WAAD,EAAcC,WAAd,MAA+B;AAC9CZ,EAAAA,MAAM,EAAE,KADsC;AAE9CW,EAAAA,WAF8C;AAG9C,KAAGC;AAH2C,CAA/B,CAAjB;AAKE;;;AACK,MAAMC,kBAAkB,GAAG,CAChCC,MADgC,EAEhCC,MAFgC,KAG7BL,QAAQ,CAAII,MAAJ,SAAcC,MAAd,EAAwBC,wBAAxB,CAHN;;;;AAKA,MAAMC,kBAAkB,GAAG,CAChCC,gBADgC,EAEhCC,eAFgC,KAG7BT,QAAQ,CAAIQ,gBAAJ,SAAwBC,eAAxB,EAA2CC,wBAA3C,CAHN;AAIP;;;;AACO,MAAMC,MAAM,GAAG,uCAAyB1B,OAAzB,CAAf;;AACA,MAAM2B,eAAe,GAAGC,kBAAxB;;AACA,MAAMC,kBAAkB,GAAG,qCAAuB7B,OAAvB,CAA3B;AAEP;;;AACO,MAAM8B,iBAAiB,GAAGC,wBAA1B;AAEP;;;AACO,MAAMC,SAAS,GAAG,2CAA6B/B,MAA7B,EAAqCD,OAArC,CAAlB;;AACA,MAAMiC,QAAQ,GAAG,2CAA6B/B,KAA7B,EAAoCF,OAApC,CAAjB;;AACA,MAAMkC,SAAS,GAAG,sCAA0B,SAA1B,CAAlB;;AACA,MAAMC,oBAAoB,GAAG,mCAAuBnC,OAAvB,CAA7B","sourcesContent":["import {\r\n  notFoundItem,\r\n  groupExisted,\r\n  listExisted,\r\n  itemExisted,\r\n  ALERT_DND_LIST,\r\n  ALERT_DND_ITEM\r\n} from '../../constants/MsgWatch';\r\n\r\nimport {\r\n  arrFactoryFindIndexByProp,\r\n  arrFactoryIsSameByProp\r\n} from '../../utils/arrFn';\r\n\r\nimport {\r\n  imArrPush,\r\n  imArrFactoryFilterByProp,\r\n  imArrFactoryEditByProp,\r\n  imArrInsertItem\r\n} from '../../utils/imArrFn';\r\n\r\nimport factoryFindInPropArrayByProp from '../../utils/factoryFindInPropArrayByProp';\r\n\r\nconst CAPTION = 'caption'\r\n, GROUPS = 'groups'\r\n, LISTS = 'lists' ;\r\n\r\nconst _crMsgIsNotDone = (message) => ({\r\n  isDone: false,\r\n  message\r\n})\r\n\r\nexport const crMsgNotFound = (\r\n  itemType,\r\n  name\r\n) => _crMsgIsNotDone(notFoundItem(itemType, name))\r\n\r\nexport const crMsgGroupExisted = (\r\n  caption\r\n) => _crMsgIsNotDone(groupExisted(caption))\r\n\r\nexport const crMsgListExisted = (\r\n  captionList,\r\n  captionGroup\r\n) => _crMsgIsNotDone(listExisted(captionList, captionGroup))\r\n\r\nexport const crMsgItemExisted = (\r\n  caption,\r\n  captionList\r\n) => _crMsgIsNotDone(itemExisted(caption, captionList))\r\n\r\n\r\nconst _crAlert = (alertItemId, alertConfig) => ({\r\n  isDone: false,\r\n  alertItemId,\r\n  ...alertConfig\r\n})\r\n  /* for DragDrop */\r\nexport const crAlertItemExisted = (\r\n  dropId,\r\n  dragId\r\n) => _crAlert(`${dropId}:${dragId}`, ALERT_DND_ITEM)\r\n\r\nexport const crAlertListExisted = (\r\n  dropGroupCaption,\r\n  dragListCaption\r\n) => _crAlert(`${dropGroupCaption}:${dragListCaption}`, ALERT_DND_LIST)\r\n/* for DragDrop */\r\nexport const filter = imArrFactoryFilterByProp(CAPTION)\r\nexport const getArrayWithObj = imArrPush\r\nexport const getArrayWithRename = imArrFactoryEditByProp(CAPTION)\r\n\r\n/* for DragDrop */\r\nexport const insertItemInArray = imArrInsertItem\r\n\r\n/* for DragDrop */\r\nexport const findGroup = factoryFindInPropArrayByProp(GROUPS, CAPTION)\r\nexport const findList = factoryFindInPropArrayByProp(LISTS, CAPTION)\r\nexport const findIndex = arrFactoryFindIndexByProp('caption')\r\nexport const isInArraySameCaption = arrFactoryIsSameByProp(CAPTION)\r\n"],"file":"LogicFn.js"}