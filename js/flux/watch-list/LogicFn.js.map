{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["CAPTION","GROUPS","LISTS","LogicFn","fResultNotFound","itemType","name","isDone","message","NOT_FOUND_ITEM","fResultGroupExisted","caption","GROUP_EXISTED","fResultListExisted","captionList","captionGroup","LIST_EXISTED","fResultItemExisted","ITEM_EXISTED","fDragDropItemExisted","dropId","dragId","alertItemId","alertCaption","Alert","DRAG_DROP_ITEM","alertDescr","descr","fDragDropListExisted","dropGroupCaption","dragListCaption","DRAG_DROP_LIST","filter","filterByPropFn","getArrayWithObj","push","getArrayWithRename","editByPropFn","insertItemInArray","insertItem","findGroup","findInPropArrayByProp","findList","findIndex","findIndexByProp","checkIsInArraySameCaption","isSameByProp"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,SAAhB;AAAA,IACMC,SAAS,QADf;AAAA,IAEMC,QAAQ,OAFd;;AAIA,IAAMC,UAAU;AAEdC,iBAFc,2BAEEC,QAFF,EAEYC,IAFZ,EAEiB;AAC7B,WAAO,EAACC,QAAS,KAAV,EAAiBC,SAAU,cAAIC,cAAJ,CAAmBJ,QAAnB,EAA6BC,IAA7B,CAA3B,EAAP;AACD,GAJa;AAKdI,qBALc,+BAKMC,OALN,EAKc;AAC1B,WAAO,EAACJ,QAAS,KAAV,EAAiBC,SAAU,cAAII,aAAJ,CAAkBD,OAAlB,CAA3B,EAAP;AACD,GAPa;AAQdE,oBARc,8BAQKC,WARL,EAQkBC,YARlB,EAQ+B;AAC3C,WAAO,EAACR,QAAS,KAAV,EAAiBC,SAAU,cAAIQ,YAAJ,CAAiBF,WAAjB,EAA8BC,YAA9B,CAA3B,EAAP;AACD,GAVa;AAWdE,oBAXc,8BAWKN,OAXL,EAWcG,WAXd,EAW0B;AACtC,WAAO,EAACP,QAAS,KAAV,EAAiBC,SAAU,cAAIU,YAAJ,CAAiBP,OAAjB,EAA0BG,WAA1B,CAA3B,EAAP;AACD,GAba;;;AAed;AACAK,sBAhBc,gCAgBOC,MAhBP,EAgBeC,MAhBf,EAgBsB;AAClC,WAAO;AACLd,cAAS,KADJ;AAELe,mBAAiBF,MAAjB,SAA2BC,MAFtB;AAGLE,oBAAe,cAAIC,KAAJ,CAAUC,cAAV,CAAyBd,OAHnC;AAILe,kBAAa,cAAIF,KAAJ,CAAUC,cAAV,CAAyBE;AAJjC,KAAP;AAMF,GAvBc;AAwBfC,sBAxBe,gCAwBMC,gBAxBN,EAwBwBC,eAxBxB,EAwBwC;AACrD,WAAO;AACJvB,cAAS,KADL;AAEJe,mBAAiBO,gBAAjB,SAAqCC,eAFjC;AAGJP,oBAAe,cAAIC,KAAJ,CAAUO,cAAV,CAAyBpB,OAHpC;AAIJe,kBAAa,cAAIF,KAAJ,CAAUO,cAAV,CAAyBJ;AAJlC,KAAP;AAMD,GA/Bc;;AAgCf;;AAECK,UAAS,sBAAYC,cAAZ,CAA2BjC,OAA3B,CAlCK;AAmCdkC,mBAAkB,sBAAYC,IAnChB;;AAqCdC,sBAAoB,sBAAYC,YAAZ,CAAyBrC,OAAzB,CArCN;;AAuCd;AACAsC,qBAAoB,sBAAYC,UAxClB;AAyCd;;AAEAC,aAAY,kBAAQC,qBAAR,CAA8BxC,MAA9B,EAAsCD,OAAtC,CA3CE;AA4Cd0C,YAAW,kBAAQD,qBAAR,CAA8BvC,KAA9B,EAAqCF,OAArC,CA5CG;;AA8Cd2C,aAAY,oBAAUC,eAAV,CAA0B,SAA1B,CA9CE;AA+CdC,6BAA4B,oBAAUC,YAAV,CAAuB9C,OAAvB;;AA/Cd,CAAhB;;kBAmDeG,O","file":"LogicFn.js","sourcesContent":["import Msg from '../../constants/Msg';\r\n\r\nimport ImArrayUtil from '../../utils/ImArrayUtil';\r\nimport ObjUtil from '../../utils/ObjUtil';\r\nimport ArrayUtil from '../../utils/ArrayUtil';\r\n\r\nconst CAPTION = 'caption'\r\n    , GROUPS = 'groups'\r\n    , LISTS = 'lists' ;\r\n\r\nconst LogicFn = {\r\n\r\n  fResultNotFound(itemType, name){\r\n    return {isDone : false, message : Msg.NOT_FOUND_ITEM(itemType, name)}\r\n  },\r\n  fResultGroupExisted(caption){\r\n    return {isDone : false, message : Msg.GROUP_EXISTED(caption)}\r\n  },\r\n  fResultListExisted(captionList, captionGroup){\r\n    return {isDone : false, message : Msg.LIST_EXISTED(captionList, captionGroup)}\r\n  },\r\n  fResultItemExisted(caption, captionList){\r\n    return {isDone : false, message : Msg.ITEM_EXISTED(caption, captionList)}\r\n  },\r\n\r\n  /* for DragDrop */\r\n  fDragDropItemExisted(dropId, dragId){\r\n    return {\r\n      isDone : false,\r\n      alertItemId : `${dropId}:${dragId}`,\r\n      alertCaption : Msg.Alert.DRAG_DROP_ITEM.caption,\r\n      alertDescr : Msg.Alert.DRAG_DROP_ITEM.descr\r\n   };\r\n },\r\n fDragDropListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone : false,\r\n      alertItemId : `${dropGroupCaption}:${dragListCaption}`,\r\n      alertCaption : Msg.Alert.DRAG_DROP_LIST.caption,\r\n      alertDescr : Msg.Alert.DRAG_DROP_LIST.descr\r\n   }\r\n },\r\n /* for DragDrop */\r\n\r\n  filter : ImArrayUtil.filterByPropFn(CAPTION),\r\n  getArrayWithObj : ImArrayUtil.push,\r\n\r\n  getArrayWithRename: ImArrayUtil.editByPropFn(CAPTION),\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : ImArrayUtil.insertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : ObjUtil.findInPropArrayByProp(GROUPS, CAPTION),\r\n  findList : ObjUtil.findInPropArrayByProp(LISTS, CAPTION),\r\n\r\n  findIndex : ArrayUtil.findIndexByProp('caption'),\r\n  checkIsInArraySameCaption : ArrayUtil.isSameByProp(CAPTION)\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"]}