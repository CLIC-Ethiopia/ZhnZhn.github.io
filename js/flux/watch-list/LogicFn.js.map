{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["CAPTION","GROUPS","LISTS","LogicFn","crMsgNotFound","itemType","name","isDone","message","crMsgGroupExisted","caption","crMsgListExisted","captionList","captionGroup","crMsgItemExisted","crAlertItemExisted","dropId","dragId","alertItemId","ALERT_DND_ITEM","crAlertListExisted","dropGroupCaption","dragListCaption","ALERT_DND_LIST","filter","getArrayWithObj","imArrPush","getArrayWithRename","insertItemInArray","imArrInsertItem","findGroup","findList","findIndex","isInArraySameCaption"],"mappings":";;;;;;;AAAA;;AASA;;AAKA;;AAOA;;AAEA,MAAMA,OAAO,GAAG,SAAhB;AAAA,MACEC,MAAM,GAAG,QADX;AAAA,MAEEC,KAAK,GAAG,OAFV;AAIA,MAAMC,OAAO,GAAG;AAEdC,EAAAA,aAAa,CAACC,QAAD,EAAWC,IAAX,EAAgB;AAC3B,WAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE,4BAAaH,QAAb,EAAuBC,IAAvB;AAFJ,KAAP;AAID,GAPa;;AAQdG,EAAAA,iBAAiB,CAACC,OAAD,EAAS;AACxB,WAAO;AACLH,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE,4BAAaE,OAAb;AAFJ,KAAP;AAID,GAba;;AAcdC,EAAAA,gBAAgB,CAACC,WAAD,EAAcC,YAAd,EAA2B;AACzC,WAAO;AACLN,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE,2BAAYI,WAAZ,EAAyBC,YAAzB;AAFJ,KAAP;AAID,GAnBa;;AAoBdC,EAAAA,gBAAgB,CAACJ,OAAD,EAAUE,WAAV,EAAsB;AACpC,WAAO;AACLL,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAE,2BAAYE,OAAZ,EAAqBE,WAArB;AAFJ,KAAP;AAID,GAzBa;;AA2Bd;AACAG,EAAAA,kBAAkB,CAACC,MAAD,EAASC,MAAT,EAAgB;AAChC,WAAO;AACLV,MAAAA,MAAM,EAAG,KADJ;AAELW,MAAAA,WAAW,EAAMF,MAAN,SAAgBC,MAFtB;AAGL,SAAGE;AAHE,KAAP;AAKF,GAlCc;;AAmCfC,EAAAA,kBAAkB,CAACC,gBAAD,EAAmBC,eAAnB,EAAmC;AACnD,WAAO;AACJf,MAAAA,MAAM,EAAG,KADL;AAEJW,MAAAA,WAAW,EAAMG,gBAAN,SAA0BC,eAFjC;AAGJ,SAAGC;AAHC,KAAP;AAKD,GAzCc;;AA0Cf;AAECC,EAAAA,MAAM,EAAG,uCAAyBxB,OAAzB,CA5CK;AA6CdyB,EAAAA,eAAe,EAAGC,kBA7CJ;AA+CdC,EAAAA,kBAAkB,EAAE,qCAAuB3B,OAAvB,CA/CN;;AAiDd;AACA4B,EAAAA,iBAAiB,EAAGC,wBAlDN;;AAmDd;AAEAC,EAAAA,SAAS,EAAG,2CAA6B7B,MAA7B,EAAqCD,OAArC,CArDE;AAsDd+B,EAAAA,QAAQ,EAAG,2CAA6B7B,KAA7B,EAAoCF,OAApC,CAtDG;AAwDdgC,EAAAA,SAAS,EAAG,sCAA0B,SAA1B,CAxDE;AAyDdC,EAAAA,oBAAoB,EAAG,mCAAuBjC,OAAvB;AAzDT,CAAhB;eA6DeG,O","sourcesContent":["import {\r\n  notFoundItem,\r\n  groupExisted,\r\n  listExisted,\r\n  itemExisted,\r\n  ALERT_DND_LIST,\r\n  ALERT_DND_ITEM\r\n} from '../../constants/MsgWatch';\r\n\r\nimport {\r\n  arrFactoryFindIndexByProp,\r\n  arrFactoryIsSameByProp\r\n} from '../../utils/arrFn';\r\n\r\nimport {\r\n  imArrPush,\r\n  imArrFactoryFilterByProp,\r\n  imArrFactoryEditByProp,\r\n  imArrInsertItem\r\n} from '../../utils/imArrFn';\r\n\r\nimport factoryFindInPropArrayByProp from '../../utils/factoryFindInPropArrayByProp';\r\n\r\nconst CAPTION = 'caption'\r\n, GROUPS = 'groups'\r\n, LISTS = 'lists' ;\r\n\r\nconst LogicFn = {\r\n\r\n  crMsgNotFound(itemType, name){\r\n    return {\r\n      isDone: false,\r\n      message: notFoundItem(itemType, name)\r\n    };\r\n  },\r\n  crMsgGroupExisted(caption){\r\n    return {\r\n      isDone: false,\r\n      message: groupExisted(caption)\r\n    };\r\n  },\r\n  crMsgListExisted(captionList, captionGroup){\r\n    return {\r\n      isDone: false,\r\n      message: listExisted(captionList, captionGroup)\r\n    };\r\n  },\r\n  crMsgItemExisted(caption, captionList){\r\n    return {\r\n      isDone: false,\r\n      message: itemExisted(caption, captionList)\r\n    };\r\n  },\r\n\r\n  /* for DragDrop */\r\n  crAlertItemExisted(dropId, dragId){\r\n    return {\r\n      isDone : false,\r\n      alertItemId : `${dropId}:${dragId}`,\r\n      ...ALERT_DND_ITEM\r\n   };\r\n },\r\n crAlertListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone : false,\r\n      alertItemId : `${dropGroupCaption}:${dragListCaption}`,\r\n      ...ALERT_DND_LIST\r\n   }\r\n },\r\n /* for DragDrop */\r\n\r\n  filter : imArrFactoryFilterByProp(CAPTION),\r\n  getArrayWithObj : imArrPush,\r\n\r\n  getArrayWithRename: imArrFactoryEditByProp(CAPTION),\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : imArrInsertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : factoryFindInPropArrayByProp(GROUPS, CAPTION),\r\n  findList : factoryFindInPropArrayByProp(LISTS, CAPTION),\r\n\r\n  findIndex : arrFactoryFindIndexByProp('caption'),\r\n  isInArraySameCaption : arrFactoryIsSameByProp(CAPTION)\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"],"file":"LogicFn.js"}