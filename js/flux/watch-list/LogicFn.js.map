{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["LogicFn","fResultNotFound","itemType","name","isDone","message","NOT_FOUND_ITEM","fResultGroupExisted","caption","GROUP_EXISTED","fResultListExisted","captionList","captionGroup","LIST_EXISTED","fResultItemExisted","ITEM_EXISTED","fDragDropItemExisted","dropId","dragId","alertItemId","alertCaption","Alert","DRAG_DROP_ITEM","alertDescr","descr","fDragDropListExisted","dropGroupCaption","dragListCaption","DRAG_DROP_LIST","filter","filterByProp","bind","getArrayWithObj","push","getArrayWithRename","arr","index","slice","Object","assign","insertItemInArray","insertItem","findGroup","findInPropArrayByPropItem","findList","findIndex","findIndexByProp","checkIsInArraySameCaption","checkSameByProp"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAU;AAEdC,iBAFc,2BAEEC,QAFF,EAEYC,IAFZ,EAEiB;AAC7B,WAAO,EAACC,QAAS,KAAV,EAAiBC,SAAU,cAAIC,cAAJ,CAAmBJ,QAAnB,EAA6BC,IAA7B,CAA3B,EAAP;AACD,GAJa;AAKdI,qBALc,+BAKMC,OALN,EAKc;AAC1B,WAAO,EAACJ,QAAS,KAAV,EAAiBC,SAAU,cAAII,aAAJ,CAAkBD,OAAlB,CAA3B,EAAP;AACD,GAPa;AAQdE,oBARc,8BAQKC,WARL,EAQkBC,YARlB,EAQ+B;AAC3C,WAAO,EAACR,QAAS,KAAV,EAAiBC,SAAU,cAAIQ,YAAJ,CAAiBF,WAAjB,EAA8BC,YAA9B,CAA3B,EAAP;AACD,GAVa;AAWdE,oBAXc,8BAWKN,OAXL,EAWcG,WAXd,EAW0B;AACtC,WAAO,EAACP,QAAS,KAAV,EAAiBC,SAAU,cAAIU,YAAJ,CAAiBP,OAAjB,EAA0BG,WAA1B,CAA3B,EAAP;AACD,GAba;;;AAed;AACAK,sBAhBc,gCAgBOC,MAhBP,EAgBeC,MAhBf,EAgBsB;AAClC,WAAO;AACLd,cAAS,KADJ;AAELe,mBAAiBF,MAAjB,SAA2BC,MAFtB;AAGLE,oBAAe,cAAIC,KAAJ,CAAUC,cAAV,CAAyBd,OAHnC;AAILe,kBAAa,cAAIF,KAAJ,CAAUC,cAAV,CAAyBE;AAJjC,KAAP;AAMF,GAvBc;AAwBfC,sBAxBe,gCAwBMC,gBAxBN,EAwBwBC,eAxBxB,EAwBwC;AACrD,WAAO;AACJvB,cAAS,KADL;AAEJe,mBAAiBO,gBAAjB,SAAqCC,eAFjC;AAGJP,oBAAe,cAAIC,KAAJ,CAAUO,cAAV,CAAyBpB,OAHpC;AAIJe,kBAAa,cAAIF,KAAJ,CAAUO,cAAV,CAAyBJ;AAJlC,KAAP;AAMD,GA/Bc;;AAgCf;;AAECK,UAAS,sBAAYC,YAAZ,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoC,SAApC,CAlCK;AAmCdC,mBAAkB,sBAAYC,IAnChB;;AAqCdC,oBArCc,8BAqCKC,GArCL,EAqCUC,KArCV,EAqCiB5B,OArCjB,EAqCyB;AACrC,sDACK2B,IAAIE,KAAJ,CAAU,CAAV,EAAaD,KAAb,CADL,IAEEE,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,IAAIC,KAAJ,CAAlB,EAA8B,EAAC5B,gBAAD,EAA9B,CAFF,oCAGK2B,IAAIE,KAAJ,CAAUD,QAAM,CAAhB,CAHL;AAKD,GA3Ca;;;AA6Cd;AACAI,qBAAoB,sBAAYC,UA9ClB;AA+Cd;;AAEAC,aAAY,kBAAQC,yBAAR,CAAkCZ,IAAlC,CAAuC,IAAvC,EAA6C,QAA7C,EAAuD,SAAvD,CAjDE;AAkDda,YAAW,kBAAQD,yBAAR,CAAkCZ,IAAlC,CAAuC,IAAvC,EAA6C,OAA7C,EAAsD,SAAtD,CAlDG;;AAoDdc,aAAY,oBAAUC,eAAV,CAA0Bf,IAA1B,CAA+B,IAA/B,EAAqC,SAArC,CApDE;AAqDdgB,6BAA4B,oBAAUC,eAAV,CAA0BjB,IAA1B,CAA+B,IAA/B,EAAqC,SAArC;;AArDd,CAAhB;;kBAyDe/B,O","file":"LogicFn.js","sourcesContent":["import Msg from '../../constants/Msg';\r\n\r\nimport ImArrayUtil from '../../utils/ImArrayUtil';\r\nimport ObjUtil from '../../utils/ObjUtil';\r\nimport ArrayUtil from '../../utils/ArrayUtil';\r\n\r\nconst LogicFn = {\r\n\r\n  fResultNotFound(itemType, name){\r\n    return {isDone : false, message : Msg.NOT_FOUND_ITEM(itemType, name)}\r\n  },\r\n  fResultGroupExisted(caption){\r\n    return {isDone : false, message : Msg.GROUP_EXISTED(caption)}\r\n  },\r\n  fResultListExisted(captionList, captionGroup){\r\n    return {isDone : false, message : Msg.LIST_EXISTED(captionList, captionGroup)}\r\n  },\r\n  fResultItemExisted(caption, captionList){\r\n    return {isDone : false, message : Msg.ITEM_EXISTED(caption, captionList)}\r\n  },\r\n\r\n  /* for DragDrop */\r\n  fDragDropItemExisted(dropId, dragId){\r\n    return {\r\n      isDone : false,\r\n      alertItemId : `${dropId}:${dragId}`,\r\n      alertCaption : Msg.Alert.DRAG_DROP_ITEM.caption,\r\n      alertDescr : Msg.Alert.DRAG_DROP_ITEM.descr\r\n   };\r\n },\r\n fDragDropListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone : false,\r\n      alertItemId : `${dropGroupCaption}:${dragListCaption}`,\r\n      alertCaption : Msg.Alert.DRAG_DROP_LIST.caption,\r\n      alertDescr : Msg.Alert.DRAG_DROP_LIST.descr\r\n   }\r\n },\r\n /* for DragDrop */\r\n\r\n  filter : ImArrayUtil.filterByProp.bind(null, 'caption'),\r\n  getArrayWithObj : ImArrayUtil.push,\r\n\r\n  getArrayWithRename(arr, index, caption){\r\n    return [\r\n      ...arr.slice(0, index),\r\n      Object.assign({}, arr[index], {caption}),\r\n      ...arr.slice(index+1)\r\n    ]\r\n  },\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : ImArrayUtil.insertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : ObjUtil.findInPropArrayByPropItem.bind(null, 'groups', 'caption'),\r\n  findList : ObjUtil.findInPropArrayByPropItem.bind(null, 'lists', 'caption'),\r\n\r\n  findIndex : ArrayUtil.findIndexByProp.bind(null, 'caption'),\r\n  checkIsInArraySameCaption : ArrayUtil.checkSameByProp.bind(null, 'caption')\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"]}