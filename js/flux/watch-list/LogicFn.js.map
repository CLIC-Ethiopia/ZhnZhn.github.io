{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["notFoundItem","groupExisted","listExisted","itemExisted","ALERT_DND_LIST","ALERT_DND_ITEM","MsgWatch","CAPTION","GROUPS","LISTS","LogicFn","crMsgNotFound","itemType","name","isDone","message","crMsgGroupExisted","caption","crMsgListExisted","captionList","captionGroup","crMsgItemExisted","crAlertItemExisted","dropId","dragId","alertItemId","crAlertListExisted","dropGroupCaption","dragListCaption","filter","getArrayWithObj","imArrPush","getArrayWithRename","insertItemInArray","imArrInsertItem","findGroup","findList","findIndex","ut","arr","findIndexByProp","isInArraySameCaption","isSameByProp"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAOA;;AAEA,MAAO;AACLA,EAAAA,YADK;AAELC,EAAAA,YAFK;AAGLC,EAAAA,WAHK;AAILC,EAAAA,WAJK;AAKLC,EAAAA,cALK;AAMLC,EAAAA;AANK,IAOHC,iBAPJ;AASA,MAAMC,OAAO,GAAG,SAAhB;AAAA,MACMC,MAAM,GAAG,QADf;AAAA,MAEMC,KAAK,GAAG,OAFd;AAIA,MAAMC,OAAO,GAAG;AAEdC,EAAAA,aAAa,CAACC,QAAD,EAAWC,IAAX,EAAgB;AAC3B,WAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEf,YAAY,CAACY,QAAD,EAAWC,IAAX;AAFhB,KAAP;AAID,GAPa;;AAQdG,EAAAA,iBAAiB,CAACC,OAAD,EAAS;AACxB,WAAO;AACLH,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEd,YAAY,CAACgB,OAAD;AAFhB,KAAP;AAID,GAba;;AAcdC,EAAAA,gBAAgB,CAACC,WAAD,EAAcC,YAAd,EAA2B;AACzC,WAAO;AACLN,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEb,WAAW,CAACiB,WAAD,EAAcC,YAAd;AAFf,KAAP;AAID,GAnBa;;AAoBdC,EAAAA,gBAAgB,CAACJ,OAAD,EAAUE,WAAV,EAAsB;AACpC,WAAO;AACLL,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEZ,WAAW,CAACc,OAAD,EAAUE,WAAV;AAFf,KAAP;AAID,GAzBa;;AA2Bd;AACAG,EAAAA,kBAAkB,CAACC,MAAD,EAASC,MAAT,EAAgB;AAChC,WAAO;AACLV,MAAAA,MAAM,EAAG,KADJ;AAELW,MAAAA,WAAW,EAAMF,MAAN,SAAgBC,MAFtB;AAGL,SAAGnB;AAHE,KAAP;AAKF,GAlCc;;AAmCfqB,EAAAA,kBAAkB,CAACC,gBAAD,EAAmBC,eAAnB,EAAmC;AACnD,WAAO;AACJd,MAAAA,MAAM,EAAG,KADL;AAEJW,MAAAA,WAAW,EAAME,gBAAN,SAA0BC,eAFjC;AAGJ,SAAGxB;AAHC,KAAP;AAKD,GAzCc;;AA0Cf;AAECyB,EAAAA,MAAM,EAAG,uCAAyBtB,OAAzB,CA5CK;AA6CduB,EAAAA,eAAe,EAAGC,kBA7CJ;AA+CdC,EAAAA,kBAAkB,EAAE,qCAAuBzB,OAAvB,CA/CN;;AAiDd;AACA0B,EAAAA,iBAAiB,EAAGC,wBAlDN;;AAmDd;AAEAC,EAAAA,SAAS,EAAG,2CAA6B3B,MAA7B,EAAqCD,OAArC,CArDE;AAsDd6B,EAAAA,QAAQ,EAAG,2CAA6B3B,KAA7B,EAAoCF,OAApC,CAtDG;AAwDd8B,EAAAA,SAAS,EAAGC,gBAAGC,GAAH,CAAOC,eAAP,CAAuB,SAAvB,CAxDE;AAyDdC,EAAAA,oBAAoB,EAAGH,gBAAGC,GAAH,CAAOG,YAAP,CAAoBnC,OAApB;AAzDT,CAAhB;eA6DeG,O","sourcesContent":["import MsgWatch from '../../constants/MsgWatch';\r\n\r\nimport ut from '../../utils/fnUtil';\r\n\r\nimport {\r\n  imArrPush,\r\n  imArrFactoryFilterByProp,\r\n  imArrFactoryEditByProp,\r\n  imArrInsertItem\r\n} from '../../utils/imArrFn';\r\n\r\nimport factoryFindInPropArrayByProp from '../../utils/factoryFindInPropArrayByProp';\r\n\r\nconst  {\r\n  notFoundItem,\r\n  groupExisted,\r\n  listExisted,\r\n  itemExisted,\r\n  ALERT_DND_LIST,\r\n  ALERT_DND_ITEM\r\n} = MsgWatch;\r\n\r\nconst CAPTION = 'caption'\r\n    , GROUPS = 'groups'\r\n    , LISTS = 'lists' ;\r\n\r\nconst LogicFn = {\r\n\r\n  crMsgNotFound(itemType, name){\r\n    return {\r\n      isDone: false,\r\n      message: notFoundItem(itemType, name)\r\n    };\r\n  },\r\n  crMsgGroupExisted(caption){\r\n    return {\r\n      isDone: false,\r\n      message: groupExisted(caption)\r\n    };\r\n  },\r\n  crMsgListExisted(captionList, captionGroup){\r\n    return {\r\n      isDone: false,\r\n      message: listExisted(captionList, captionGroup)\r\n    };\r\n  },\r\n  crMsgItemExisted(caption, captionList){\r\n    return {\r\n      isDone: false,\r\n      message: itemExisted(caption, captionList)\r\n    };\r\n  },\r\n\r\n  /* for DragDrop */\r\n  crAlertItemExisted(dropId, dragId){\r\n    return {\r\n      isDone : false,\r\n      alertItemId : `${dropId}:${dragId}`,\r\n      ...ALERT_DND_ITEM\r\n   };\r\n },\r\n crAlertListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone : false,\r\n      alertItemId : `${dropGroupCaption}:${dragListCaption}`,\r\n      ...ALERT_DND_LIST\r\n   }\r\n },\r\n /* for DragDrop */\r\n\r\n  filter : imArrFactoryFilterByProp(CAPTION),\r\n  getArrayWithObj : imArrPush,\r\n\r\n  getArrayWithRename: imArrFactoryEditByProp(CAPTION),\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : imArrInsertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : factoryFindInPropArrayByProp(GROUPS, CAPTION),\r\n  findList : factoryFindInPropArrayByProp(LISTS, CAPTION),\r\n\r\n  findIndex : ut.arr.findIndexByProp('caption'),\r\n  isInArraySameCaption : ut.arr.isSameByProp(CAPTION)\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"],"file":"LogicFn.js"}