{"version":3,"sources":["../../../src/flux/watch-list/WithLogicList.js"],"names":["createList","watchList","captionGroup","captionList","groupTo","lists","caption","isDone","renameList","captionListFrom","captionListTo","groupIn","listIndex","deleteList","groupFrom"],"mappings":";;;;;AAAA;;AAYO,MAAMA,UAAU,GAAG,CACxBC,SADwB,WAGrB;AAAA,MADH;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GACG;AACH,QAAMC,OAAO,GAAG,wBAAUH,SAAV,EAAqBC,YAArB,CAAhB;;AAEA,MAAI,CAACE,OAAL,EAAa;AACX,WAAO,4BAAc,OAAd,EAAuBF,YAAvB,CAAP;AACD;;AACD,QAAMG,KAAK,GAAGD,OAAO,CAACC,KAAtB;;AACA,MAAI,mCAAqBA,KAArB,EAA4BF,WAA5B,CAAJ,EAA6C;AAC3C,WAAO,+BAAiBA,WAAjB,EAA8BD,YAA9B,CAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,KAAR,GAAgB,8BAAgBA,KAAhB,EAAuB;AAACC,IAAAA,OAAO,EAAEH;AAAV,GAAvB,CAAhB;AACA,SAAO;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAP;AACD,CAhBM;;;;AAkBA,MAAMC,UAAU,GAAG,CACxBP,SADwB,YAGrB;AAAA,MADH;AAACC,IAAAA,YAAD;AAAeO,IAAAA,eAAf;AAAgCC,IAAAA;AAAhC,GACG;AACH,QAAMC,OAAO,GAAG,wBAAUV,SAAV,EAAqBC,YAArB,CAAhB;;AAEA,MAAI,CAACS,OAAL,EAAa;AACX,WAAO,4BAAc,OAAd,EAAuBT,YAAvB,CAAP;AACD;;AACD,QAAMG,KAAK,GAAGM,OAAO,CAACN,KAAtB;AACA,QAAMO,SAAS,GAAG,wBAAUP,KAAV,EAAiBI,eAAjB,CAAlB;;AACA,MAAIG,SAAS,KAAK,CAAC,CAAnB,EAAqB;AACnB,WAAO,4BAAc,MAAd,EAAsBH,eAAtB,CAAP;AACD;;AACD,MAAK,mCAAqBJ,KAArB,EAA4BK,aAA5B,CAAL,EAAiD;AAC/C,WAAO,+BAAiBA,aAAjB,EAAgCR,YAAhC,CAAP;AACD;;AAEDS,EAAAA,OAAO,CAACN,KAAR,GAAgB,iCAAmBA,KAAnB,EAA0BO,SAA1B,EAAqCF,aAArC,CAAhB;AACA,SAAO;AAAEH,IAAAA,MAAM,EAAE;AAAV,GAAP;AACD,CApBM;;;;AAsBA,MAAMM,UAAU,GAAG,CACxBZ,SADwB,YAGrB;AAAA,MADH;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GACG;AACH,QAAMW,SAAS,GAAG,wBAAUb,SAAV,EAAqBC,YAArB,CAAlB;;AAEA,MAAI,CAACY,SAAL,EAAe;AACb,WAAO,4BAAc,OAAd,EAAuBZ,YAAvB,CAAP;AACD;;AAEDY,EAAAA,SAAS,CAACT,KAAV,GAAkB,qBAAOS,SAAS,CAACT,KAAjB,EAAwBF,WAAxB,CAAlB;AACA,SAAO;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAP;AACD,CAZM","sourcesContent":["import {\r\n  crMsgNotFound,\r\n  crMsgListExisted,\r\n\r\n  findGroup,\r\n  isInArraySameCaption,\r\n  getArrayWithObj,\r\n  findIndex,\r\n  getArrayWithRename,\r\n  filter\r\n} from './LogicFn';\r\n\r\nexport const createList = (\r\n  watchList,\r\n  {captionGroup, captionList}\r\n) => {\r\n  const groupTo = findGroup(watchList, captionGroup)\r\n\r\n  if (!groupTo){\r\n    return crMsgNotFound('group', captionGroup);\r\n  }\r\n  const lists = groupTo.lists;\r\n  if (isInArraySameCaption(lists, captionList)){\r\n    return crMsgListExisted(captionList, captionGroup);\r\n  }\r\n\r\n  groupTo.lists = getArrayWithObj(lists, {caption: captionList});\r\n  return { isDone: true };\r\n}\r\n\r\nexport const renameList = (\r\n  watchList,\r\n  {captionGroup, captionListFrom, captionListTo}\r\n) => {\r\n  const groupIn = findGroup(watchList, captionGroup);\r\n\r\n  if (!groupIn){\r\n    return crMsgNotFound('group', captionGroup);\r\n  }\r\n  const lists = groupIn.lists;\r\n  const listIndex = findIndex(lists, captionListFrom);\r\n  if (listIndex === -1){\r\n    return crMsgNotFound('list', captionListFrom);\r\n  }\r\n  if ( isInArraySameCaption(lists, captionListTo) ){\r\n    return crMsgListExisted(captionListTo, captionGroup);\r\n  }\r\n\r\n  groupIn.lists = getArrayWithRename(lists, listIndex, captionListTo);\r\n  return { isDone: true };\r\n}\r\n\r\nexport const deleteList = (\r\n  watchList,\r\n  {captionGroup, captionList}\r\n) => {\r\n  const groupFrom = findGroup(watchList, captionGroup);\r\n\r\n  if (!groupFrom){\r\n    return crMsgNotFound('group', captionGroup);\r\n  }\r\n\r\n  groupFrom.lists = filter(groupFrom.lists, captionList);\r\n  return { isDone: true };\r\n}\r\n"],"file":"WithLogicList.js"}