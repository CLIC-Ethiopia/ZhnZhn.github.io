{"version":3,"sources":["../../../src/flux/watch-list/WithLogicList.js"],"names":["WithLogicList","createList","watchList","captionGroup","captionList","groupTo","findGroup","fResultNotFound","lists","checkIsInArraySameCaption","fResultListExisted","getArrayWithObj","caption","isDone","renameList","captionListFrom","captionListTo","groupIn","listIndex","findIndex","getArrayWithRename","deleteList","groupFrom","filter"],"mappings":";;;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB;AAEpBC,YAFoB,sBAETC,SAFS,QAE8B;AAAA,QAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,QAAbC,WAAa,QAAbA,WAAa;;AAChD,QAAMC,UAAU,kBAAQC,SAAR,CAAkBJ,SAAlB,EAA6BC,YAA7B,CAAhB;;AAEA,QAAI,CAACE,OAAL,EAAa;AACX,aAAO,kBAAQE,eAAR,CAAwB,OAAxB,EAAiCJ,YAAjC,CAAP;AACD;AACD,QAAMK,QAAQH,QAAQG,KAAtB;AACA,QAAI,kBAAQC,yBAAR,CAAkCD,KAAlC,EAAyCJ,WAAzC,CAAJ,EAA0D;AACxD,aAAO,kBAAQM,kBAAR,CAA2BN,WAA3B,EAAwCD,YAAxC,CAAP;AACD;;AAEDE,YAAQG,KAAR,GAAgB,kBAAQG,eAAR,CAAwBH,KAAxB,EAA+B,EAACI,SAASR,WAAV,EAA/B,CAAhB;AACA,WAAO,EAACS,QAAS,IAAV,EAAP;AACD,GAfmB;AAiBpBC,YAjBoB,sBAiBTZ,SAjBS,SAiBiD;AAAA,QAA9CC,YAA8C,SAA9CA,YAA8C;AAAA,QAAhCY,eAAgC,SAAhCA,eAAgC;AAAA,QAAfC,aAAe,SAAfA,aAAe;;AACnE,QAAMC,UAAU,kBAAQX,SAAR,CAAkBJ,SAAlB,EAA6BC,YAA7B,CAAhB;;AAEA,QAAI,CAACc,OAAL,EAAa;AACX,aAAO,kBAAQV,eAAR,CAAwB,OAAxB,EAAiCJ,YAAjC,CAAP;AACD;AACD,QAAMK,QAAQS,QAAQT,KAAtB;AACA,QAAMU,YAAY,kBAAQC,SAAR,CAAkBX,KAAlB,EAAyBO,eAAzB,CAAlB;AACA,QAAIG,cAAc,CAAC,CAAnB,EAAqB;AACnB,aAAO,kBAAQX,eAAR,CAAwB,MAAxB,EAAgCQ,eAAhC,CAAP;AACD;AACD,QAAK,kBAAQN,yBAAR,CAAkCD,KAAlC,EAAyCQ,aAAzC,CAAL,EAA8D;AAC5D,aAAO,kBAAQN,kBAAR,CAA2BM,aAA3B,EAA0Cb,YAA1C,CAAP;AACD;;AAEDc,YAAQT,KAAR,GAAgB,kBAAQY,kBAAR,CAA2BZ,KAA3B,EAAkCU,SAAlC,EAA6CF,aAA7C,CAAhB;AACA,WAAO,EAACH,QAAS,IAAV,EAAP;AACD,GAlCmB;AAoCpBQ,YApCoB,sBAoCTnB,SApCS,SAoC8B;AAAA,QAA3BC,YAA2B,SAA3BA,YAA2B;AAAA,QAAbC,WAAa,SAAbA,WAAa;;AAChD,QAAMkB,YAAY,kBAAQhB,SAAR,CAAkBJ,SAAlB,EAA6BC,YAA7B,CAAlB;;AAEA,QAAI,CAACmB,SAAL,EAAe;AACb,aAAO,kBAAQf,eAAR,CAAwB,OAAxB,EAAiCJ,YAAjC,CAAP;AACD;;AAEDmB,cAAUd,KAAV,GAAkB,kBAAQe,MAAR,CAAeD,UAAUd,KAAzB,EAAgCJ,WAAhC,CAAlB;AACA,WAAO,EAACS,QAAS,IAAV,EAAP;AACD;AA7CmB,CAAtB;;kBAiDeb,a","file":"WithLogicList.js","sourcesContent":["\r\nimport LogicFn from './LogicFn';\r\n\r\nconst WithLogicList = {\r\n\r\n  createList(watchList, {captionGroup, captionList}){\r\n    const groupTo = LogicFn.findGroup(watchList, captionGroup)\r\n\r\n    if (!groupTo){\r\n      return LogicFn.fResultNotFound('group', captionGroup);\r\n    }\r\n    const lists = groupTo.lists;\r\n    if (LogicFn.checkIsInArraySameCaption(lists, captionList)){\r\n      return LogicFn.fResultListExisted(captionList, captionGroup);\r\n    }\r\n\r\n    groupTo.lists = LogicFn.getArrayWithObj(lists, {caption: captionList});\r\n    return {isDone : true};\r\n  },\r\n\r\n  renameList(watchList, {captionGroup, captionListFrom, captionListTo}){\r\n    const groupIn = LogicFn.findGroup(watchList, captionGroup);\r\n\r\n    if (!groupIn){\r\n      return LogicFn.fResultNotFound('group', captionGroup);\r\n    }\r\n    const lists = groupIn.lists;\r\n    const listIndex = LogicFn.findIndex(lists, captionListFrom);\r\n    if (listIndex === -1){\r\n      return LogicFn.fResultNotFound('list', captionListFrom);\r\n    }\r\n    if ( LogicFn.checkIsInArraySameCaption(lists, captionListTo) ){\r\n      return LogicFn.fResultListExisted(captionListTo, captionGroup);\r\n    }\r\n\r\n    groupIn.lists = LogicFn.getArrayWithRename(lists, listIndex, captionListTo);\r\n    return {isDone : true}\r\n  },\r\n\r\n  deleteList(watchList, {captionGroup, captionList}){\r\n    const groupFrom = LogicFn.findGroup(watchList, captionGroup);\r\n\r\n    if (!groupFrom){\r\n      return LogicFn.fResultNotFound('group', captionGroup);\r\n    }\r\n\r\n    groupFrom.lists = LogicFn.filter(groupFrom.lists, captionList);\r\n    return {isDone : true}\r\n  }\r\n\r\n};\r\n\r\nexport default WithLogicList\r\n"]}