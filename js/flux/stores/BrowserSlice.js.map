{"version":3,"sources":["../../../src/flux/stores/BrowserSlice.js"],"names":["fnFindObj","menu","chartType","i","maxPart","length","j","maxItem","items","id","fnSetIsOpen","browserMenu","browserType","value","obj","isOpen","fnAddCounter","counter","BrowserSlice","routeDialog","QE","WL","getBrowserMenu","isWithItemCounter","_config","withoutItemCounter","setMenuItemOpen","setMenuItemClose","addMenuItemCounter","minusMenuItemCounter","getSourceConfig","browserId","sourceId","indexOf","STOCKS_BY_SECTORS","onShowBrowser","trigger","SHOW_BROWSER","onShowBrowserDynamic","option","elBrowser","createBrowserDynamic","INIT_BROWSER_DYNAMIC","SHOW_BROWSER_DYNAMIC","onLoadBrowserDynamicCompleted","json","elMenu","createMenu","LOAD_BROWSER_DYNAMIC_COMPLETED","menuItems","onLoadBrowserDynamicFailed","alertItemId","caption","showAlertDialog"],"mappings":"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","file":"BrowserSlice.js","sourcesContent":["\r\nimport BrowserMenu from '../../constants/BrowserMenu';\r\nimport BrowserConfig from '../../constants/BrowserConfig';\r\nimport { BrowserType } from '../../constants/Type';\r\n\r\nimport Factory from '../logic/Factory';\r\nimport { BrowserActionTypes } from '../actions/BrowserActions';\r\n\r\nimport DataQE from '../../constants/DataQE';\r\nimport DataWL from '../../constants/DataWL';\r\n\r\nconst fnFindObj = function(menu, chartType){\r\n  for (var i=0, maxPart=menu.length; i<maxPart; i++){\r\n    for(var j=0, maxItem=menu[i].items.length; j<maxItem; j++){\r\n      if (menu[i].items[j].id === chartType){\r\n        return menu[i].items[j];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst fnSetIsOpen = function(chartType, browserMenu, browserType, value){\r\n  const obj = fnFindObj(browserMenu[browserType], chartType);\r\n  obj.isOpen = value;\r\n};\r\n\r\nconst fnAddCounter = function(chartType, browserType, browserMenu, value){\r\n  const obj = fnFindObj(browserMenu[browserType], chartType);\r\n  if (obj){\r\n    obj.counter += value;\r\n    obj.isOpen = true;\r\n  }\r\n};\r\n\r\nconst BrowserSlice = {\r\n  browserMenu : BrowserMenu,\r\n  routeDialog : {\r\n    QE : DataQE,\r\n    WL : DataWL\r\n  },\r\n\r\n  getBrowserMenu(browserType){\r\n     return this.browserMenu[browserType];\r\n  },\r\n  isWithItemCounter(browserType){\r\n    const _config = BrowserConfig[browserType]\r\n    if (typeof _config === 'undefined'){\r\n      return false;\r\n    } else {\r\n      return !_config.withoutItemCounter;\r\n    }\r\n    //return !BrowserConfig[browserType].withoutItemCounter;\r\n  },\r\n  setMenuItemOpen(chartType, browserType){\r\n    if (this.isWithItemCounter(browserType)){\r\n       fnSetIsOpen(chartType, this.browserMenu, browserType, true);\r\n    }\r\n  },\r\n  setMenuItemClose(chartType, browserType){\r\n    if (this.isWithItemCounter(browserType)){\r\n      fnSetIsOpen(chartType, this.browserMenu, browserType, false);\r\n    }\r\n  },\r\n  addMenuItemCounter(chartType, browserType){\r\n    if (this.isWithItemCounter(browserType)){\r\n      fnAddCounter(chartType, browserType, this.browserMenu, 1);\r\n    }\r\n  },\r\n  minusMenuItemCounter(chartType, browserType){\r\n    if (this.isWithItemCounter(browserType)){\r\n      fnAddCounter(chartType, browserType, this.browserMenu, -1);\r\n    }\r\n  },\r\n\r\n  getSourceConfig(browserId, sourceId){\r\n    if (sourceId.indexOf(BrowserType.STOCKS_BY_SECTORS) > 0){\r\n      return BrowserConfig[browserId];\r\n    }\r\n\r\n    return this.routeDialog[browserId][sourceId];\r\n  },\r\n\r\n  onShowBrowser(browserType){\r\n    this.trigger(BrowserActionTypes.SHOW_BROWSER, browserType);\r\n  },\r\n\r\n  onShowBrowserDynamic(option){\r\n    const { browserType } = option;\r\n    if (!this.browserMenu[browserType]) {\r\n       const elBrowser = Factory.createBrowserDynamic(option);\r\n       this.browserMenu[browserType] = [];\r\n       this.trigger(BrowserActionTypes.INIT_BROWSER_DYNAMIC, elBrowser);\r\n    } else {\r\n       this.trigger(BrowserActionTypes.SHOW_BROWSER_DYNAMIC, browserType);\r\n    }\r\n  },\r\n  onLoadBrowserDynamicCompleted(option){\r\n    const { json, browserType } = option;\r\n    if (this.isWithItemCounter(browserType)){\r\n      const { menu, items } = json\r\n          , elMenu = BrowserMenu.createMenu(menu, items, browserType);\r\n\r\n      this.routeDialog[browserType] = items;\r\n      this.browserMenu[browserType] = elMenu;\r\n      this.trigger(BrowserActionTypes.LOAD_BROWSER_DYNAMIC_COMPLETED, {\r\n         menuItems : elMenu, browserType: browserType\r\n      })\r\n    } else {\r\n      this.trigger(BrowserActionTypes.LOAD_BROWSER_DYNAMIC_COMPLETED, {\r\n               json, browserType\r\n      })\r\n    }\r\n  },\r\n  onLoadBrowserDynamicFailed(option){\r\n    option.alertItemId = (option.alertItemId)\r\n              ? option.alertItemId\r\n              : option.caption;\r\n    this.showAlertDialog(option);\r\n  }\r\n\r\n}\r\n\r\nexport default BrowserSlice\r\n"]}