{"version":3,"sources":["../../../src/flux/stores/ChartStore.js"],"names":["EVENT_ACTION","LOAD","ADD","CONSOLE_LOG_STYLE","_fnLogLoadError","alertCaption","alertDescr","alertItemId","console","log","ChartStore","createStore","listenables","charts","init","initWatchList","listen","fnOnChangeStore","createInitConfig","chartType","configs","isShow","getConfigs","isChartExist","key","i","max","length","zhConfig","showAlertDialog","option","modalDialogType","ALERT","trigger","SHOW_MODAL_DIALOG","onLoadStock","LOAD_STOCK","onLoadStockCompleted","config","browserType","conf","zhCompType","limitRemaining","addMenuItemCounter","chartCont","unshift","LOAD_STOCK_COMPLETED","triggerWithLimitRemaining","INIT_AND_SHOW_CHART","createChartContainer","UPDATE_BROWSER_MENU","analyticSendEvent","eventAction","eventLabel","onLoadStockAdded","LOAD_STOCK_ADDED","onLoadStockFailed","LOAD_STOCK_FAILED","value","onLoadStockByQuery","onLoadStockByQueryCompleted","onLoadStockByQueryFailed","onShowChart","setMenuItemOpen","SHOW_CHART","onCloseChart","chartId","minusMenuItemCounter","filter","id","activeChart","options","CLOSE_CHART","onCloseChartContainer","uncheckActiveCheckbox","isWithItemCounter","setMenuItemClose","onCloseChartContainer2","CLOSE_CHART_CONTAINER_2","onCopy","chart","fromChart","getCopyFromChart"],"mappings":"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","file":"ChartStore.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport ChartActions, {ChartActionTypes} from '../actions/ChartActions';\r\nimport ComponentActions, {ComponentActionTypes} from '../actions/ComponentActions';\r\nimport BrowserActions, {BrowserActionTypes} from '../actions/BrowserActions';\r\nimport AnalyticActions from '../actions/AnalyticActions';\r\nimport WatchActions from '../actions/WatchActions';\r\n\r\nimport { ModalDialog } from '../../constants/Type';\r\n\r\nimport Factory from '../logic/Factory';\r\n\r\nimport BrowserSlice from './BrowserSlice';\r\nimport ComponentSlice from './ComponentSlice';\r\nimport SettingSlice from './SettingSlice';\r\nimport AnalyticSlice from './AnalyticSlice';\r\nimport WatchListSlice from '../watch-list/WatchListSlice';\r\nimport WithLimitRemaining from './WithLimitRemaining';\r\n\r\nconst EVENT_ACTION = {\r\n  LOAD : 'Load',\r\n  ADD  : 'Add'\r\n}\r\n\r\nconst CONSOLE_LOG_STYLE = 'color:rgb(237, 88, 19);';\r\nconst _fnLogLoadError = function({\r\n  alertCaption, alertDescr, alertItemId\r\n}){\r\n  console.log('%c'+ alertCaption + ':' + alertItemId, CONSOLE_LOG_STYLE);\r\n  console.log('%c' + alertDescr, CONSOLE_LOG_STYLE);\r\n}\r\n\r\nconst ChartStore = Reflux.createStore({\r\n  listenables : [\r\n     ChartActions, ComponentActions, BrowserActions, AnalyticActions, WatchActions\r\n  ],\r\n  charts : {},\r\n  init(){\r\n    this.initWatchList();\r\n    this.listen(ChartActions.fnOnChangeStore);\r\n  },\r\n\r\n createInitConfig(chartType){\r\n   return {chartType: chartType, configs: [], isShow: true};\r\n },\r\n getConfigs(chartType){\r\n   return this.charts[chartType];\r\n },\r\n isChartExist(chartType, key){\r\n   if (!this.charts[chartType]){\r\n     return false;\r\n   }\r\n   const configs = this.charts[chartType].configs;\r\n   for (var i=0, max=configs.length; i<max; i++){\r\n     if (configs[i].zhConfig.key === key){\r\n       return true;\r\n     }\r\n   }\r\n   return false;\r\n },\r\n showAlertDialog(option={}){\r\n   option.modalDialogType = ModalDialog.ALERT;\r\n   this.trigger(ComponentActionTypes.SHOW_MODAL_DIALOG, option);\r\n },\r\n\r\n onLoadStock(){\r\n   this.trigger(ChartActionTypes.LOAD_STOCK);\r\n },\r\n onLoadStockCompleted(option, config){\r\n     const {\r\n             chartType, browserType, conf,\r\n             zhCompType\r\n           } = option\r\n         , { zhConfig={} } = config\r\n         , { limitRemaining } = zhConfig;\r\n     if (zhCompType){\r\n       config.zhCompType = zhCompType;\r\n     }\r\n\r\n     this.addMenuItemCounter(chartType, browserType);\r\n\r\n     const chartCont = this.charts[chartType];\r\n     if (chartCont){\r\n       chartCont.configs.unshift(config);\r\n       chartCont.isShow = true;\r\n\r\n       this.trigger(ChartActionTypes.LOAD_STOCK_COMPLETED, chartCont);\r\n       this.triggerWithLimitRemaining(limitRemaining);\r\n     } else {\r\n      this.charts[chartType] = this.createInitConfig(chartType);\r\n      this.charts[chartType].configs.unshift(config);\r\n\r\n      this.trigger(ChartActionTypes.LOAD_STOCK_COMPLETED);\r\n      this.trigger(ChartActionTypes.INIT_AND_SHOW_CHART,\r\n                  Factory.createChartContainer(chartType, browserType, conf));\r\n      this.triggerWithLimitRemaining(limitRemaining);\r\n    }\r\n\r\n    this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n    this.analyticSendEvent({\r\n       eventAction : EVENT_ACTION.LOAD,\r\n       eventLabel : chartType\r\n     });\r\n },\r\n onLoadStockAdded(option={}){\r\n    const { chartType } = option;\r\n    this.trigger(ChartActionTypes.LOAD_STOCK_ADDED);\r\n    this.analyticSendEvent({\r\n       eventAction : EVENT_ACTION.ADD,\r\n       eventLabel : chartType\r\n     });\r\n },\r\n onLoadStockFailed(option){\r\n   this.trigger(ChartActionTypes.LOAD_STOCK_FAILED, option);\r\n   option.alertItemId = (option.alertItemId)\r\n             ? option.alertItemId\r\n             : option.value;\r\n   this.showAlertDialog(option);\r\n   _fnLogLoadError(option);\r\n },\r\n\r\n onLoadStockByQuery(){\r\n   this.onLoadStock()\r\n },\r\n onLoadStockByQueryCompleted(option, config){\r\n   this.onLoadStockCompleted(option, config)\r\n },\r\n onLoadStockByQueryFailed(option){\r\n   this.onLoadStockFailed(option)\r\n },\r\n\r\n\r\n onShowChart(chartType, browserType, conf){\r\n   this.setMenuItemOpen(chartType, browserType);\r\n\r\n   const chartCont = this.charts[chartType];\r\n   if (chartCont){\r\n     chartCont.isShow = true;\r\n     this.trigger(ChartActionTypes.SHOW_CHART, chartCont);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   } else {\r\n     this.charts[chartType] = this.createInitConfig(chartType);\r\n     this.trigger(\r\n       ChartActionTypes.INIT_AND_SHOW_CHART,\r\n       Factory.createChartContainer(\r\n          chartType, browserType, conf\r\n        )\r\n      );\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n\r\n },\r\n\r\n onCloseChart(chartType, browserType, chartId){\r\n\r\n   this.minusMenuItemCounter(chartType, browserType);\r\n\r\n   const chartCont = this.charts[chartType];\r\n   chartCont.configs = chartCont.configs.filter(function(config){\r\n     return config.zhConfig.id !== chartId;\r\n   });\r\n\r\n   if (this.activeChart && this.activeChart.options.zhConfig.id === chartId){\r\n     this.activeChart = null;\r\n     this.activeChart = null;\r\n   }\r\n   this.trigger(ChartActionTypes.CLOSE_CHART, chartCont);\r\n   this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n },\r\n\r\n onCloseChartContainer(chartType, browserType){\r\n   this.uncheckActiveCheckbox(chartType);\r\n   if(this.isWithItemCounter(browserType)){\r\n     this.setMenuItemClose(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n },\r\n onCloseChartContainer2(chartType, browserType){\r\n   this.trigger(ComponentActionTypes.CLOSE_CHART_CONTAINER_2, chartType);\r\n },\r\n\r\n onCopy(chart){\r\n   this.fromChart = chart\r\n },\r\n getCopyFromChart(){\r\n   return this.fromChart;\r\n },\r\n\r\n ...BrowserSlice,\r\n ...ComponentSlice,\r\n ...SettingSlice,\r\n ...AnalyticSlice,\r\n ...WatchListSlice,\r\n ...WithLimitRemaining\r\n\r\n})\r\n\r\nexport default ChartStore\r\n"]}