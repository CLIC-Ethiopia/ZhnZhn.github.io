{"version":3,"sources":["../../../src/flux/stores/SettingSlice.js"],"names":["_settings","_withApiKey","LT","B","AL","AL_S","AL_I","WTD","BEA","EIA","INTR","IEX","_withProxy","FS","FAO","BLS","CRC","Q_T","_apiTitle","DF","_isUndef","value","SettingSlice","setting","proxy","isAdminMode","isDrawDeltaExtrems","isNotZoomToMinMax","exportSettingFn","key1","fSetKey","key2","key3","key4","key5","key6","key7","Q","key8","setProxy","setSetting","bind","getProxy","isSetting","propName","getKey","id","WL","loadId","indexOf","isApiKeyRequired","getApiTitle"],"mappings":";;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;AACA,IAAMC,WAAW,GAAG,CAClBC,eAAGC,CADe,EACZD,eAAGE,EADS,EACLF,eAAGG,IADE,EACIH,eAAGI,IADP,EACaJ,eAAGK,GADhB,EAElBL,eAAGM,GAFe,EAEVN,eAAGO,GAFO,EAEFP,eAAGQ,IAFD,EAEOR,eAAGS,GAFV,CAApB;AAIA,IAAMC,UAAU,GAAG,CACjBV,eAAGW,EADc,EAEjBX,eAAGY,GAFc,EAGjBZ,eAAGa,GAHc,EAIjBb,eAAGc,GAJc,EAKjBd,eAAGe,GALc,CAAnB;;AAOA,IAAMC,SAAS;AACbC,EAAAA,EAAE,EAAE;AADS,cAEZjB,eAAGC,CAFS,IAEL,sBAFK,aAGZD,eAAGE,EAHS,IAGJ,eAHI,aAIZF,eAAGG,IAJS,IAIF,eAJE,aAKZH,eAAGI,IALS,IAKF,eALE,aAMZJ,eAAGK,GANS,IAMH,oBANG,aAOZL,eAAGM,GAPS,IAOH,KAPG,aAQZN,eAAGO,GARS,IAQH,KARG,aASZP,eAAGQ,IATS,IASF,UATE,aAAf;;AAYA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAI,OAAOA,KAAP,KAAiB,WAArB;AAAA,CAAtB;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,sCADA;AAEPC,IAAAA,WAAW,EAAE,KAFN;AAGPC,IAAAA,kBAAkB,EAAE,KAHb;AAIPC,IAAAA,iBAAiB,EAAE;AAJZ,GADU;AAQnBC,EAAAA,eARmB,6BAQF;AACf,WAAO;AACLC,MAAAA,IAAI,EAAE,KAAKC,OAAL,CAAa,CAAC5B,eAAGE,EAAJ,CAAb,CADD;AAEL2B,MAAAA,IAAI,EAAE,KAAKD,OAAL,CAAa,CAAC5B,eAAGC,CAAJ,CAAb,CAFD;AAGL6B,MAAAA,IAAI,EAAE,KAAKF,OAAL,CAAa,CAAC5B,eAAGM,GAAJ,CAAb,CAHD;AAILyB,MAAAA,IAAI,EAAE,KAAKH,OAAL,CAAa,CAAC5B,eAAGO,GAAJ,CAAb,CAJD;AAKLyB,MAAAA,IAAI,EAAE,KAAKJ,OAAL,CAAa,CAAC5B,eAAGQ,IAAJ,CAAb,CALD;AAMLyB,MAAAA,IAAI,EAAE,KAAKL,OAAL,CAAa,CAAC5B,eAAGS,GAAJ,CAAb,CAND;AAOLyB,MAAAA,IAAI,EAAE,KAAKN,OAAL,CAAa,CAAC5B,eAAGmC,CAAJ,CAAb,CAPD;AAQLC,MAAAA,IAAI,EAAE,KAAKR,OAAL,CAAa,CAAC5B,eAAGK,GAAJ,CAAb,CARD;AASLgC,MAAAA,QAAQ,EAAE,KAAKC,UAAL,CAAgB,OAAhB,EAAyBC,IAAzB,CAA8B,IAA9B,CATL;AAULC,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,EAAyBvC,eAAGY,GAA5B,CAVL;AAWLW,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBgB,IAAjB,CAAsB,IAAtB,CAXR;AAYLf,MAAAA,kBAAkB,EAAE,KAAKiB,SAAL,CAAeF,IAAf,CAAoB,IAApB,EAA0B,oBAA1B,CAZf;AAaLd,MAAAA,iBAAiB,EAAE,KAAKgB,SAAL,CAAeF,IAAf,CAAoB,IAApB,EAA0B,mBAA1B;AAbd,KAAP;AAeD,GAxBkB;AA0BnBX,EAAAA,OAAO,EAAE,iBAACc,QAAD;AAAA,WAAc,UAACvB,KAAD,EAAW;AAChCrB,MAAAA,SAAS,CAAC4C,QAAD,CAAT,GAAsBvB,KAAtB;AACD,KAFQ;AAAA,GA1BU;AA8BnBwB,EAAAA,MA9BmB,kBA8BZC,EA9BY,EA8BT;AACR,YAAOA,EAAP;AACE,WAAK5C,eAAGI,IAAR;AAAc,WAAKJ,eAAGG,IAAR;AACX,eAAOL,SAAS,CAACE,eAAGE,EAAJ,CAAhB;;AACH,WAAKF,eAAG6C,EAAR;AAAY,WAAK7C,eAAGe,GAAR;AACT,eAAOjB,SAAS,CAACE,eAAGmC,CAAJ,CAAhB;;AACH;AACG,eAAOrC,SAAS,CAAC8C,EAAD,CAAhB;AANL;AAQD,GAvCkB;AAyCnBN,EAAAA,UAAU,EAAE,oBAACI,QAAD;AAAA,WAAc,UAAUvB,KAAV,EAAiB;AACzC,WAAKE,OAAL,CAAaqB,QAAb,IAAyBvB,KAAzB;AACD,KAFW;AAAA,GAzCO;AA6CnBqB,EAAAA,QA7CmB,oBA6CVM,MA7CU,EA6CH;AACd,QAAIpC,UAAU,CAACqC,OAAX,CAAmBD,MAAnB,MAA+B,CAAC,CAApC,EAAuC;AACrC,aAAO,EAAP;AACD;;AACD,WAAO,KAAKzB,OAAL,CAAaC,KAApB;AACD,GAlDkB;AAmDnBmB,EAAAA,SAnDmB,qBAmDTC,QAnDS,EAmDCvB,KAnDD,EAmDO;AACxB,QAAID,QAAQ,CAACC,KAAD,CAAZ,EAAoB;AAClB,aAAO,KAAKE,OAAL,CAAaqB,QAAb,CAAP;AACD;;AACD,SAAKrB,OAAL,CAAaqB,QAAb,IAAyB,CAAC,CAACvB,KAA3B;AACD,GAxDkB;AA0DnBI,EAAAA,WA1DmB,uBA0DPJ,KA1DO,EA0DD;AAChB,QAAID,QAAQ,CAACC,KAAD,CAAZ,EAAoB;AAClB,aAAO,KAAKE,OAAL,CAAaE,WAApB;AACD;;AACD,SAAKF,OAAL,CAAaE,WAAb,GAA2B,CAAC,CAACJ,KAA7B;AACD,GA/DkB;AAiEnB6B,EAAAA,gBAjEmB,4BAiEFF,MAjEE,EAiEK;AACtB,WAAO/C,WAAW,CAACgD,OAAZ,CAAoBD,MAApB,MAAgC,CAAC,CAAjC,GACH,IADG,GAEH,KAFJ;AAGD,GArEkB;AAsEnBG,EAAAA,WAtEmB,uBAsEPH,MAtEO,EAsEA;AACjB,WAAO9B,SAAS,CAAC8B,MAAD,CAAT,IAAqB9B,SAAS,CAACC,EAAtC;AACD;AAxEkB,CAArB;eA2EeG,Y","sourcesContent":["import { LoadType as LT } from '../../constants/Type'\r\n\r\nconst _settings = {};\r\nconst _withApiKey = [\r\n  LT.B, LT.AL, LT.AL_S, LT.AL_I, LT.WTD,\r\n  LT.BEA, LT.EIA, LT.INTR, LT.IEX\r\n];\r\nconst _withProxy = [\r\n  LT.FS,\r\n  LT.FAO,\r\n  LT.BLS,\r\n  LT.CRC,\r\n  LT.Q_T\r\n];\r\nconst _apiTitle = {\r\n  DF: 'API',\r\n  [LT.B]: 'Barchart Market Data',\r\n  [LT.AL]: 'Alpha Vantage',\r\n  [LT.AL_S]: 'Alpha Vantage',\r\n  [LT.AL_I]: 'Alpha Vantage',\r\n  [LT.WTD]: 'World Trading Data',\r\n  [LT.BEA]: 'BEA',\r\n  [LT.EIA]: 'EIA',\r\n  [LT.INTR]: 'Intrinio'\r\n};\r\n\r\nconst _isUndef = value => typeof value === 'undefined';\r\n\r\nconst SettingSlice = {\r\n  setting: {\r\n    proxy: 'https://cors-anywhere.herokuapp.com/',\r\n    isAdminMode: false,\r\n    isDrawDeltaExtrems: false,\r\n    isNotZoomToMinMax: false\r\n  },\r\n\r\n  exportSettingFn(){\r\n    return {\r\n      key1: this.fSetKey([LT.AL]),\r\n      key2: this.fSetKey([LT.B]),\r\n      key3: this.fSetKey([LT.BEA]),\r\n      key4: this.fSetKey([LT.EIA]),\r\n      key5: this.fSetKey([LT.INTR]),\r\n      key6: this.fSetKey([LT.IEX]),\r\n      key7: this.fSetKey([LT.Q]),\r\n      key8: this.fSetKey([LT.WTD]),\r\n      setProxy: this.setSetting('proxy').bind(this),\r\n      getProxy: this.getProxy.bind(this, LT.FAO),\r\n      isAdminMode: this.isAdminMode.bind(this),\r\n      isDrawDeltaExtrems: this.isSetting.bind(this, 'isDrawDeltaExtrems'),\r\n      isNotZoomToMinMax: this.isSetting.bind(this, 'isNotZoomToMinMax')\r\n    };\r\n  },\r\n\r\n  fSetKey: (propName) => (value) => {    \r\n    _settings[propName] = value\r\n  },\r\n\r\n  getKey(id){\r\n    switch(id){\r\n      case LT.AL_I: case LT.AL_S:\r\n         return _settings[LT.AL];\r\n      case LT.WL: case LT.Q_T:\r\n         return _settings[LT.Q];\r\n      default:\r\n         return _settings[id];\r\n    }\r\n  },\r\n\r\n  setSetting: (propName) => function (value) {\r\n    this.setting[propName] = value\r\n  },\r\n\r\n  getProxy(loadId){\r\n    if (_withProxy.indexOf(loadId) === -1) {\r\n      return '';\r\n    }\r\n    return this.setting.proxy;\r\n  },\r\n  isSetting(propName, value){\r\n    if (_isUndef(value)){\r\n      return this.setting[propName];\r\n    }\r\n    this.setting[propName] = !!value\r\n  },\r\n\r\n  isAdminMode(value){\r\n    if (_isUndef(value)){\r\n      return this.setting.isAdminMode;\r\n    }\r\n    this.setting.isAdminMode = !!value\r\n  },\r\n\r\n  isApiKeyRequired(loadId){\r\n    return _withApiKey.indexOf(loadId) !== -1\r\n      ? true\r\n      : false;\r\n  },\r\n  getApiTitle(loadId){\r\n    return _apiTitle[loadId] || _apiTitle.DF;\r\n  }\r\n}\r\n\r\nexport default SettingSlice\r\n"],"file":"SettingSlice.js"}