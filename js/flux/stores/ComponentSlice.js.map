{"version":3,"sources":["../../../src/flux/stores/ComponentSlice.js"],"names":["ComponentSlice","dialogInit","onShowAbout","trigger","SHOW_ABOUT","onShowDialog","dialogType","browserType","SHOW_DIALOG","dialogComp","createDialog","INIT_AND_SHOW_DIALOG","isLoadToChart","activeChart","options","zhConfig","id","getActiveChart","onSetActiveCheckbox","isCheck","checkBox","chart","activeCheckbox","setUnchecked","uncheckActiveCheckbox","chartType","onShowModalDialog","modalDialogType","option","SHOW_MODAL_DIALOG"],"mappings":";;;;;;AACA;;AACA;;;;;;AAEA,IAAMA,iBAAiB;AACrBC,cAAa,EADQ;AAErBC,aAFqB,yBAER;AACX,SAAKC,OAAL,CAAa,uCAAqBC,UAAlC;AACD,GAJoB;AAKrBC,cALqB,wBAKRC,UALQ,EAKIC,WALJ,EAKgB;AACnC,QAAI,KAAKN,UAAL,CAAgBK,UAAhB,CAAJ,EAAiC;AAC/B,WAAKH,OAAL,CAAa,uCAAqBK,WAAlC,EAA+CF,UAA/C;AACD,KAFD,MAEO;AACL,WAAKL,UAAL,CAAgBK,UAAhB,IAA8B,IAA9B;AACA,UAAMG,aAAa,kBAAQC,YAAR,CAAqBJ,UAArB,EAAiCC,WAAjC,CAAnB;AACA,WAAKJ,OAAL,CACE,uCAAqBQ,oBADvB,EAEE,EAACL,sBAAD,EAAaG,sBAAb,EAFF;AAID;AACF,GAhBoB;AAmBrBG,eAnBqB,2BAmBN;AACb,QAAI,KAAKC,WAAT,EAAqB;AACnB,aAAO,KAAKA,WAAL,CAAiBC,OAAjB,CAAyBC,QAAzB,CAAkCC,EAAzC;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAzBoB;AA0BrBC,gBA1BqB,4BA0BL;AACd,WAAO,KAAKJ,WAAZ;AACD,GA5BoB;AA6BrBK,qBA7BqB,+BA6BDC,OA7BC,EA6BQC,QA7BR,EA6BkBC,KA7BlB,EA6BwB;AAC1C,QAAIF,OAAJ,EAAY;AACT,UAAI,KAAKG,cAAL,IAAuB,KAAKA,cAAL,KAAwBF,QAAnD,EAA4D;AACzD,aAAKE,cAAL,CAAoBC,YAApB;AACF;AACD,WAAKD,cAAL,GAAsBF,QAAtB;AACA,WAAKP,WAAL,GAAmBQ,KAAnB;AACF,KAND,MAMO;AACL,WAAKC,cAAL,GAAsB,IAAtB;AACA,WAAKT,WAAL,GAAmB,IAAnB;AACD;AACH,GAxCoB;AAyCrBW,uBAzCqB,iCAyCCC,SAzCD,EAyCW;AAC9B,QAAK,KAAKH,cAAL,IACG,KAAKA,cAAL,CAAoBG,SAApB,KAAkCA,SAD1C,EAEC;AACE,WAAKH,cAAL,CAAoBC,YAApB;AACA,WAAKD,cAAL,GAAsB,IAAtB;AACA,WAAKT,WAAL,GAAmB,IAAnB;AACF;AACF,GAjDoB;AAmDrBa,mBAnDqB,6BAmDHC,eAnDG,EAmDwB;AAAA,QAAVC,MAAU,uEAAH,EAAG;;AAC3CA,WAAOD,eAAP,GAAyBA,eAAzB;AACA,SAAKxB,OAAL,CAAa,uCAAqB0B,iBAAlC,EAAqDD,MAArD;AACD;AAtDoB,CAAvB;;kBAyDe5B,c","file":"ComponentSlice.js","sourcesContent":["\r\nimport {ComponentActionTypes} from '../actions/ComponentActions';\r\nimport Factory from '../logic/Factory';\r\n\r\nconst ComponentSlice = {\r\n  dialogInit : {},\r\n  onShowAbout(){\r\n    this.trigger(ComponentActionTypes.SHOW_ABOUT);\r\n  },\r\n  onShowDialog(dialogType, browserType){\r\n    if (this.dialogInit[dialogType]) {\r\n      this.trigger(ComponentActionTypes.SHOW_DIALOG, dialogType);\r\n    } else {\r\n      this.dialogInit[dialogType] = true;\r\n      const dialogComp = Factory.createDialog(dialogType, browserType);\r\n      this.trigger(\r\n        ComponentActionTypes.INIT_AND_SHOW_DIALOG,\r\n        {dialogType, dialogComp}\r\n      );\r\n    }\r\n  },\r\n\r\n\r\n  isLoadToChart(){\r\n    if (this.activeChart){\r\n      return this.activeChart.options.zhConfig.id;\r\n    } else {\r\n      return false;\r\n    }\r\n  },\r\n  getActiveChart(){\r\n    return this.activeChart;\r\n  },\r\n  onSetActiveCheckbox(isCheck, checkBox, chart){\r\n     if (isCheck){\r\n        if (this.activeCheckbox && this.activeCheckbox !== checkBox){\r\n           this.activeCheckbox.setUnchecked();\r\n        }\r\n        this.activeCheckbox = checkBox;\r\n        this.activeChart = chart;\r\n     } else {\r\n       this.activeCheckbox = null;\r\n       this.activeChart = null;\r\n     }\r\n  },\r\n  uncheckActiveCheckbox(chartType){\r\n    if ( this.activeCheckbox\r\n         && this.activeCheckbox.chartType === chartType\r\n    ){\r\n       this.activeCheckbox.setUnchecked();\r\n       this.activeCheckbox = null;\r\n       this.activeChart = null;\r\n    }\r\n  },\r\n\r\n  onShowModalDialog(modalDialogType, option={}){\r\n    option.modalDialogType = modalDialogType;    \r\n    this.trigger(ComponentActionTypes.SHOW_MODAL_DIALOG, option);\r\n  }\r\n}\r\n\r\nexport default ComponentSlice\r\n"]}