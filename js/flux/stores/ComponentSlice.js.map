{"version":3,"sources":["../../../src/flux/stores/ComponentSlice.js"],"names":["ItemDialogLogic","showItemDialog","slice","menuItemConf","store","type","browserType","dialogConfOr","Promise","resolve","key","_dialogConf","getDialogConf","Factory","createDialog","then","Comp","showOptionDialog","options","data","dialogType","createOptionDialog","CheckBoxChartLogic","toggle","isCheck","checkBox","chart","activeCheckbox","setUnchecked","activeChart","uncheckActive","chartType","ChbContLogic","_check","activeContChb","_uncheck","ComponentSlice","dialogInit","showAlertDialog","option","modalDialogType","ModalDialog","ALERT","trigger","CAT","SHOW_MODAL_DIALOG","onShowAbout","SHOW_ABOUT","onShowDialog","r","SHOW_DIALOG","onCloseDialog","CLOSE_DIALOG","caption","props","onShowOptionDialog","err","alertCaption","alertDescr","message","onCloseChartContainer","uncheckActiveContChb","uncheckActiveCheckbox","isWithItemCounter","setMenuItemClose","BAT","UPDATE_BROWSER_MENU","onCloseChartContainer2","CLOSE_CHART_CONTAINER_2","onSetActiveContainer","isLoadToChart","zhConfig","id","getActiveChart","onSetActiveCheckbox","onShowModalDialog","onChangeTheme","themeName","CHANGE_THEME"],"mappings":"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","sourcesContent":["\r\nimport { ComponentActionTypes as CAT } from '../actions/ComponentActions';\r\nimport { BrowserActionTypes as BAT } from '../actions/BrowserActions';\r\nimport Factory from '../logic/Factory';\r\n\r\nimport { ModalDialog } from '../../constants/Type';\r\n\r\nconst ItemDialogLogic = {\r\n\r\n  showItemDialog(slice, menuItemConf, store){\r\n    const { type, browserType, dialogConfOr } = menuItemConf;\r\n    if (slice[type]){\r\n      return Promise.resolve({ key: type });\r\n    } else {\r\n      const _dialogConf = store.getDialogConf(dialogConfOr, type);\r\n      return Factory.createDialog(browserType, _dialogConf)\r\n        .then(Comp => {\r\n             slice[type] = true\r\n             return { key:type, Comp };\r\n         });\r\n    }\r\n  },\r\n\r\n  showOptionDialog(slice, options){\r\n    const { type, data } = options;\r\n    if (slice[type]) {\r\n      return Promise.resolve({ key: type, data });\r\n    } else {\r\n      options.dialogType = type\r\n      return Factory.createOptionDialog(options)\r\n         .then(Comp => {\r\n             slice[type] = true\r\n             return { key: type, Comp, data };\r\n         })\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst CheckBoxChartLogic = {\r\n  toggle(slice, options){\r\n    const { isCheck, checkBox, chart } = options;\r\n    if (isCheck){\r\n       const activeCheckbox = slice.activeCheckbox;\r\n       if (activeCheckbox && activeCheckbox !== checkBox){\r\n          activeCheckbox.setUnchecked()\r\n       }\r\n       slice.activeCheckbox = checkBox\r\n       slice.activeChart = chart\r\n    } else {\r\n      slice.activeCheckbox = null\r\n      slice.activeChart = null\r\n    }\r\n  },\r\n\r\n  uncheckActive(slice, chartType){\r\n    const activeCheckbox = slice.activeCheckbox;\r\n    if ( activeCheckbox &&\r\n     (!chartType || activeCheckbox.chartType === chartType) ){\r\n       activeCheckbox.setUnchecked()\r\n       slice.activeCheckbox = null\r\n       slice.activeChart = null\r\n    }\r\n  }\r\n};\r\n\r\nconst ChbContLogic = {\r\n  _check(slice, checkBox) {\r\n    if (slice.activeContChb) {\r\n      slice.activeContChb.setUnchecked()\r\n    }\r\n    slice.activeContChb = checkBox\r\n  },\r\n  _uncheck(slice) {\r\n    slice.activeContChb.setUnchecked()\r\n    slice.activeContChb = null\r\n  },\r\n\r\n  toggle(slice, { isCheck, checkBox }){\r\n    if (isCheck) {\r\n      this._check(slice, checkBox)\r\n    } else {\r\n      this._uncheck(slice)\r\n    }\r\n  },\r\n\r\n  uncheckActive(slice, chartType) {\r\n    if (slice.activeContChb) {\r\n      this._uncheck(slice)\r\n    }\r\n  }\r\n};\r\n\r\nconst ComponentSlice = {\r\n  dialogInit : {},\r\n\r\n  showAlertDialog(option={}){\r\n    option.modalDialogType = ModalDialog.ALERT;\r\n    this.trigger(CAT.SHOW_MODAL_DIALOG, option);\r\n  },\r\n\r\n  onShowAbout(){\r\n    this.trigger(CAT.SHOW_ABOUT);\r\n  },\r\n\r\n  onShowDialog(type, browserType, dialogConfOr){\r\n    ItemDialogLogic.showItemDialog(\r\n      this.dialogInit, { type, browserType, dialogConfOr }, this\r\n    ).then(r => {\r\n       this.trigger(CAT.SHOW_DIALOG, r)\r\n    });\r\n  },\r\n\r\n  onCloseDialog(Comp) {\r\n    this.trigger(CAT.CLOSE_DIALOG, {\r\n      type: Comp.key,\r\n      caption: Comp.props.caption\r\n    })\r\n  },\r\n\r\n  onShowOptionDialog(type, option){\r\n    ItemDialogLogic.showOptionDialog(\r\n      this.dialogInit, { type, data: option }\r\n    ).then(r => {\r\n      this.trigger(CAT.SHOW_DIALOG, r)\r\n    })\r\n    .catch(err => {\r\n      this.trigger(CAT.SHOW_MODAL_DIALOG, {\r\n        modalDialogType: 'alert',\r\n        alertCaption: 'Failed Load',\r\n        alertDescr: err.message\r\n      })\r\n    });\r\n  },\r\n\r\n  onCloseChartContainer(chartType, browserType){\r\n    this.uncheckActiveContChb(chartType);\r\n    this.uncheckActiveCheckbox(chartType);\r\n    if(this.isWithItemCounter(browserType)){\r\n      this.setMenuItemClose(chartType, browserType);\r\n      this.trigger(BAT.UPDATE_BROWSER_MENU, browserType);\r\n    }\r\n  },\r\n  onCloseChartContainer2(chartType, browserType){\r\n    this.trigger(CAT.CLOSE_CHART_CONTAINER_2, chartType);\r\n  },\r\n  onSetActiveContainer(isCheck, checkBox){\r\n    ChbContLogic.toggle(this, { isCheck, checkBox })\r\n  },\r\n  uncheckActiveContChb(chartType){\r\n    ChbContLogic.uncheckActive(this, chartType)\r\n  },\r\n\r\n  isLoadToChart(){\r\n    if (this.activeChart){\r\n      return this.activeChart.options.zhConfig.id;\r\n    } else {\r\n      return false;\r\n    }\r\n  },\r\n  getActiveChart(){\r\n    return this.activeChart;\r\n  },\r\n  onSetActiveCheckbox(isCheck, checkBox, chart){\r\n    CheckBoxChartLogic.toggle(this, {isCheck, checkBox, chart})\r\n  },\r\n  uncheckActiveCheckbox(chartType){\r\n    CheckBoxChartLogic.uncheckActive(this, chartType)\r\n  },\r\n\r\n  onShowModalDialog(modalDialogType, option={}){\r\n    option.modalDialogType = modalDialogType;\r\n    this.trigger(CAT.SHOW_MODAL_DIALOG, option);\r\n  },\r\n\r\n  onChangeTheme(themeName){\r\n    this.trigger(CAT.CHANGE_THEME, themeName)\r\n  }\r\n}\r\n\r\nexport default ComponentSlice\r\n"],"file":"ComponentSlice.js"}