{"version":3,"sources":["../../../src/flux/actions/BrowserActions.js"],"names":["BrowserActionTypes","SHOW_BROWSER_DYNAMIC","INIT_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC_COMPLETED","UPDATE_WATCH_BROWSER","A","BA","Reflux","createActions","children","_fnFetchSourceMenu","json","option","onCompleted","browserType","ERR","LOAD","FOUND","ITEM","_crErr","alertDescr","alertItemId","listen","_option","bT","config","BrowserConfig","Store","getBrowserMenu","done","Promise","all","RouterModalDialog","loadDialogs","RouterDialog","then","Factory","crAsyncBrowser","elBrowser","init","failed","caption","uri","sourceMenuUrl","onFetch","completed","onCatch","fnCatch","onFailed","_show","showBrowserDynamic","showQuandl","bind","BT","QUANDL","showEurostat","EUROSTAT","showWatch","WATCH_LIST"],"mappings":"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","sourcesContent":["import Reflux from 'reflux-core';\r\n\r\nimport Store from '../stores/ChartStore'\r\nimport Factory from '../logic/Factory'\r\nimport BrowserConfig from '../../constants/BrowserConfig'\r\nimport { BrowserType as BT } from '../../constants/Type'\r\nimport RouterModalDialog from '../../components/dialogs/RouterModalDialog'\r\nimport RouterDialog from '../logic/RouterDialog'\r\n\r\nimport { fetchJson } from '../../utils/fnFetch'\r\nimport { fnCatch } from '../logic/fnCatch';\r\n\r\nexport const BrowserActionTypes = {\r\n  SHOW_BROWSER_DYNAMIC: 'showBrowserDynamic',\r\n\r\n  INIT_BROWSER_DYNAMIC: 'initBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC: 'loadBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC_COMPLETED: 'loadBrowserDynamicCompleted',\r\n\r\n  UPDATE_WATCH_BROWSER: 'updateWatchBrowser'\r\n};\r\nconst A = BrowserActionTypes;\r\n\r\nconst BA = Reflux.createActions({\r\n  [A.SHOW_BROWSER_DYNAMIC]: {\r\n    children: ['done', 'init', 'failed']\r\n  },\r\n  [A.INIT_BROWSER_DYNAMIC] : {},\r\n  [A.LOAD_BROWSER_DYNAMIC] : {\r\n    children : ['completed', 'failed']\r\n  },\r\n\r\n  [A.UPDATE_WATCH_BROWSER] : {}\r\n});\r\n\r\nconst _fnFetchSourceMenu = function({ json, option, onCompleted }){\r\n  const { browserType } = option;\r\n  onCompleted({ json, browserType });\r\n}\r\nconst ERR = {\r\n  LOAD: \"Failed to load browser.\",\r\n  FOUND: \"Browser hasn't found.\",\r\n  ITEM: \"Browser\"\r\n};\r\nconst _crErr = (alertDescr, alertItemId) => ({\r\n  alertDescr, alertItemId\r\n});\r\n\r\nBA[A.SHOW_BROWSER_DYNAMIC].listen(function(option={}){\r\n  const _option = typeof option === 'string'\r\n           ? { browserType: option }\r\n           : option\r\n      , { browserType:bT } = _option\r\n      , config = BrowserConfig[bT];\r\n  if (bT && config) {\r\n    if (Store.getBrowserMenu(bT)) {\r\n      this.done(_option)\r\n    } else {\r\n      Promise.all([\r\n        RouterModalDialog.loadDialogs(bT),\r\n        RouterDialog.loadDialogs(bT)\r\n      ])\r\n      .then(() => Factory.crAsyncBrowser(config))\r\n      .then(elBrowser => {\r\n        this.init(elBrowser, config)\r\n      })\r\n      .catch(() => {\r\n        this.failed({..._option, ..._crErr(ERR.LOAD, config.caption)})\r\n      })\r\n    }\r\n  } else {\r\n    this.failed({..._option, ..._crErr(ERR.FOUND, ERR.ITEM)})\r\n  }\r\n})\r\n\r\nBA[A.LOAD_BROWSER_DYNAMIC].listen(function(option){\r\n  fetchJson({\r\n    uri: option.sourceMenuUrl,\r\n    option: option,\r\n    onFetch: _fnFetchSourceMenu,\r\n    onCompleted: this.completed,\r\n    onCatch: fnCatch,\r\n    onFailed: this.failed\r\n  })\r\n})\r\n\r\nconst _show = BA.showBrowserDynamic;\r\nBA.showQuandl = _show.bind(null, BT.QUANDL)\r\nBA.showEurostat = _show.bind(null, BT.EUROSTAT)\r\nBA.showWatch = _show.bind(null, BT.WATCH_LIST)\r\n\r\n\r\nexport default BA\r\n"],"file":"BrowserActions.js"}