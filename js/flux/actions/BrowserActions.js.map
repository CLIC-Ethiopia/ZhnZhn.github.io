{"version":3,"sources":["../../../src/flux/actions/BrowserActions.js"],"names":["BAT_SHOW_BROWSER_DYNAMIC","BAT_INIT_BROWSER_DYNAMIC","BAT_LOAD_BROWSER_DYNAMIC","BAT_LOAD_BROWSER_DYNAMIC_COMPLETED","BAT_LOAD_BROWSER_FAILED","BAT_UPDATE_WATCH_BROWSER","BAT_UPDATE_BROWSER_MENU","BA","Reflux","createActions","children","_fnFetchSourceMenu","json","option","onCompleted","browserType","ERR_LOAD","ERR_FOUND","ERR_ITEM","_crErr","alertDescr","alertItemId","listen","_option","bT","config","BrowserConfig","Store","getBrowserMenu","done","Promise","all","RouterModalDialog","loadDialogs","RouterDialog","then","Factory","crAsyncBrowser","elBrowser","init","catch","failed","caption","uri","sourceMenuUrl","onFetch","completed","onCatch","onFailed","_show","showBrowserDynamic","showQuandl","bind","BT_QUANDL","showEurostat","BT_EUROSTAT","showWatch","BT_WATCH_LIST"],"mappings":"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","sourcesContent":["import Reflux from 'reflux-core';\r\n\r\nimport Store from '../stores/ChartStore'\r\nimport Factory from '../logic/Factory'\r\nimport BrowserConfig from '../../constants/BrowserConfig'\r\nimport {\r\n  BT_QUANDL,\r\n  BT_EUROSTAT,\r\n  BT_WATCH_LIST\r\n} from '../../constants/BrowserType';\r\nimport RouterModalDialog from '../../components/dialogs/RouterModalDialog'\r\nimport RouterDialog from '../logic/RouterDialog'\r\n\r\nimport { fetchJson } from '../../utils/fnFetch'\r\nimport onCatch from '../logic/onCatch'\r\n\r\nexport const BAT_SHOW_BROWSER_DYNAMIC = 'showBrowserDynamic'\r\nexport const BAT_INIT_BROWSER_DYNAMIC = 'initBrowserDynamic'\r\nexport const BAT_LOAD_BROWSER_DYNAMIC = 'loadBrowserDynamic'\r\nexport const BAT_LOAD_BROWSER_DYNAMIC_COMPLETED = 'loadBrowserDynamicCompleted'\r\nexport const BAT_LOAD_BROWSER_FAILED = 'loadBrowserFailed'\r\nexport const BAT_UPDATE_WATCH_BROWSER = 'updateWatchBrowser'\r\nexport const BAT_UPDATE_BROWSER_MENU = 'updateBrowserMenu'\r\n\r\nconst BA = Reflux.createActions({\r\n  [BAT_SHOW_BROWSER_DYNAMIC]: {\r\n    children: ['done', 'init', 'failed']\r\n  },\r\n  [BAT_INIT_BROWSER_DYNAMIC] : {},\r\n  [BAT_LOAD_BROWSER_DYNAMIC] : {\r\n    children : ['completed', 'failed']\r\n  },\r\n\r\n  [BAT_UPDATE_WATCH_BROWSER] : {}\r\n});\r\n\r\nconst _fnFetchSourceMenu = function({ json, option, onCompleted }){\r\n  const { browserType } = option;\r\n  onCompleted({ json, browserType });\r\n}\r\nconst ERR_LOAD = \"Failed to load browser.\"\r\n, ERR_FOUND = \"Browser hasn't found.\"\r\n, ERR_ITEM = \"Browser\";\r\n\r\nconst _crErr = (alertDescr, alertItemId) => ({\r\n  alertDescr, alertItemId\r\n});\r\n\r\nBA[BAT_SHOW_BROWSER_DYNAMIC].listen(function(option={}){\r\n  const _option = typeof option === 'string'\r\n           ? { browserType: option }\r\n           : option\r\n      , { browserType:bT } = _option\r\n      , config = BrowserConfig[bT];\r\n  if (bT && config) {\r\n    if (Store.getBrowserMenu(bT)) {\r\n      this.done(_option)\r\n    } else {\r\n      Promise.all([\r\n        RouterModalDialog.loadDialogs(bT),\r\n        RouterDialog.loadDialogs(bT)\r\n      ])\r\n      .then(() => Factory.crAsyncBrowser(config))\r\n      .then(elBrowser => {\r\n        this.init(elBrowser, config)\r\n      })\r\n      .catch(() => {\r\n        this.failed({..._option, ..._crErr(ERR_LOAD, config.caption)})\r\n      })\r\n    }\r\n  } else {\r\n    this.failed({..._option, ..._crErr(ERR_FOUND, ERR_ITEM)})\r\n  }\r\n})\r\n\r\nBA[BAT_LOAD_BROWSER_DYNAMIC].listen(function(option){\r\n  fetchJson({\r\n    uri: option.sourceMenuUrl,\r\n    option: option,\r\n    onFetch: _fnFetchSourceMenu,\r\n    onCompleted: this.completed,\r\n    onCatch: onCatch,\r\n    onFailed: this.failed\r\n  })\r\n})\r\n\r\nconst _show = BA.showBrowserDynamic;\r\nBA.showQuandl = _show.bind(null, BT_QUANDL)\r\nBA.showEurostat = _show.bind(null, BT_EUROSTAT)\r\nBA.showWatch = _show.bind(null, BT_WATCH_LIST)\r\n\r\n\r\nexport default BA\r\n"],"file":"BrowserActions.js"}