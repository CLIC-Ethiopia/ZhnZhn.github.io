{"version":3,"sources":["../../../src/flux/actions/ChartActions.js"],"names":["C","DESR_LOADER","META","_fnNoop","_isFn","fn","ChartActionTypes","INIT_AND_SHOW_CHART","SHOW_CHART","CLOSE_CHART","LOAD_STOCK","LOAD_STOCK_COMPLETED","LOAD_STOCK_ADDED","LOAD_STOCK_FAILED","LOAD_STOCK_BY_QUERY","LOAD_STOCK_BY_QUERY_C","LOAD_STOCK_BY_QUERY_F","TO_TOP","COPY","SORT_BY","REMOVE_ALL","A","M","Msg","Alert","_fnOnChangeStore","actionType","data","LPA","LOADING_COMPLETE","LOADING_FAILED","ChartActions","isLoading","_fnCancelLoad","option","alertMsg","isWithFailed","setAlertMsg","failed","isShouldEmit","onCancel","onFailed","_addBoolOptionTo","options","propName","ChartStore","isSetting","_addSettingsTo","loadId","args","Object","assign","apiKey","getKey","proxy","getProxy","Reflux","createActions","children","idLoading","undefined","cancelLoad","fnOnChangeStore","isApiKeyRequired","SettingSlice","getApiTitle","_checkMsgApiKey","isKeyFeature","isPremium","withoutApiKey","FEATURE_WITHOUT_KEY","PREMIUM_WITHOUT_KEY","preEmit","confItem","key","_itemKey","LogicUtils","createKeyForConfig","isDoublingLoad","isDoublLoadMeta","isLoadMeta","_msgApiKey","LOADING_IN_PROGRESS","DOUBLE_LOAD_META","isLoadToChart","isChartExist","ALREADY_EXIST","shouldEmit","listen","LoadConfig","loadItem","completed","added","SUBTITLE","_addDialogPropsTo","chartType","browserType","getSourceConfig","dialogProps","dfProps","subtitle","fromDate","nInitFromDate","DU","getFromDate","impl","addPropsTo","alertDescr","DESCR_LOADER"],"mappings":"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","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport DU from '../../utils/DateUtils';\r\nimport Msg from '../../constants/Msg';\r\nimport ChartStore from '../stores/ChartStore';\r\nimport SettingSlice from '../stores/SettingSlice';\r\nimport LoadConfig from '../logic/LoadConfig';\r\nimport LogicUtils from '../logic/LogicUtils';\r\nimport { T as LPA } from './LoadingProgressActions'\r\n\r\nconst C = {\r\n  DESR_LOADER: \"Loader for this item hasn't found.\"\r\n};\r\n\r\nconst META = '_Meta';\r\nconst _fnNoop = () => {};\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\n\r\nexport const ChartActionTypes = {\r\n  INIT_AND_SHOW_CHART: 'initAndShowChart',\r\n  SHOW_CHART: 'showChart',\r\n  CLOSE_CHART: 'closeChart',\r\n\r\n  LOAD_STOCK: 'loadStock',\r\n  LOAD_STOCK_COMPLETED: 'loadStockCompleted',\r\n  LOAD_STOCK_ADDED: 'loadStockAdded',\r\n  LOAD_STOCK_FAILED: 'loadStockFailed',\r\n\r\n  LOAD_STOCK_BY_QUERY: 'loadStockByQuery',\r\n  LOAD_STOCK_BY_QUERY_C: 'loadStockByQueryC',\r\n  LOAD_STOCK_BY_QUERY_F: 'loadStockByQueryF',\r\n\r\n  TO_TOP: 'toTop',\r\n\r\n  COPY: 'copy',\r\n\r\n  SORT_BY: 'sortBy',\r\n  REMOVE_ALL:'removeAll'\r\n};\r\nconst A = ChartActionTypes;\r\nconst M = Msg.Alert;\r\n\r\nconst _fnOnChangeStore = function(actionType, data){\r\n  if (actionType === LPA.LOADING_COMPLETE ||\r\n      actionType === LPA.LOADING_FAILED\r\n  ){\r\n    ChartActions[A.LOAD_STOCK].isLoading = false;\r\n  }\r\n}\r\n\r\nconst _fnCancelLoad = function(option, alertMsg, isWithFailed){\r\n  Msg.setAlertMsg(option, alertMsg);\r\n  this.failed(option);\r\n  this.isShouldEmit = false;\r\n\r\n  if ( _isFn(option.onCancel) ){\r\n    option.onCancel();\r\n  } else if (isWithFailed && _isFn(option.onFailed)){\r\n    option.onFailed();\r\n  }\r\n}\r\n\r\nconst _addBoolOptionTo = (options, propName) => {\r\n  if (typeof options[propName] === 'undefined') {\r\n    options[propName] = ChartStore.isSetting(propName)\r\n  }\r\n}\r\n\r\nconst _addSettingsTo = (options, ...args) => {\r\n  const { loadId } = options;\r\n  Object.assign(options, ...args, {\r\n    apiKey: ChartStore.getKey(loadId),\r\n    proxy: ChartStore.getProxy(loadId)\r\n  })\r\n  _addBoolOptionTo(options, 'isDrawDeltaExtrems')\r\n  _addBoolOptionTo(options, 'isNotZoomToMinMax')\r\n}\r\n\r\n\r\nconst ChartActions =  Reflux.createActions({\r\n      [A.LOAD_STOCK] : {\r\n         children : ['completed', 'added', 'failed'],\r\n         isLoading : false,\r\n         idLoading : undefined,\r\n         isShouldEmit : true,\r\n         cancelLoad : _fnCancelLoad\r\n       },\r\n      [A.LOAD_STOCK_BY_QUERY]: {\r\n        children: [ 'completed', 'failed']\r\n      },\r\n      [A.SHOW_CHART] : {},\r\n      [A.CLOSE_CHART] : {},\r\n\r\n      [A.TO_TOP]: {},\r\n      [A.COPY]: {},\r\n      [A.SORT_BY]: {},\r\n      [A.REMOVE_ALL]: {}\r\n});\r\n\r\nChartActions.fnOnChangeStore = _fnOnChangeStore\r\n\r\nconst {\r\n  isApiKeyRequired,\r\n  getApiTitle\r\n} = SettingSlice;\r\n\r\nconst _checkMsgApiKey = (option) => {\r\n  const {\r\n    apiKey, loadId,\r\n    isKeyFeature, isPremium\r\n  } = option;\r\n  if (!apiKey){\r\n    if ( isApiKeyRequired(loadId) ) {\r\n      return M.withoutApiKey(\r\n        getApiTitle(loadId)\r\n      );\r\n    }\r\n    if (isKeyFeature) {\r\n      return M.FEATURE_WITHOUT_KEY;\r\n    }\r\n    if (isPremium) {\r\n      return M.PREMIUM_WITHOUT_KEY;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nChartActions[A.LOAD_STOCK].preEmit = function(confItem={}, option={}) {\r\n  const key = option._itemKey || LogicUtils.createKeyForConfig(option)\r\n  , isDoublingLoad = this.isLoading && key === this.idLoading\r\n  , isDoublLoadMeta = (option.isLoadMeta)\r\n      ? (key + META === this.idLoading)\r\n      : false;\r\n\r\n  this.isShouldEmit = true;\r\n  //{ chartType, browserType, conf } = confItem\r\n  _addSettingsTo(option, confItem, { key })\r\n\r\n  const _msgApiKey = _checkMsgApiKey(option);\r\n  if (_msgApiKey) {\r\n    this.cancelLoad(option, _msgApiKey, false);\r\n  } else if (isDoublingLoad){\r\n    this.cancelLoad(option, M.LOADING_IN_PROGRESS, false);\r\n  } else if (isDoublLoadMeta){\r\n    this.cancelLoad(option, M.DOUBLE_LOAD_META, false);\r\n  } else if (!ChartStore.isLoadToChart()){\r\n    if (ChartStore.isChartExist(option)){\r\n      this.cancelLoad(option, M.ALREADY_EXIST, true);\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nChartActions[A.LOAD_STOCK].shouldEmit = function(){\r\n  return this.isShouldEmit;\r\n}\r\nChartActions[A.LOAD_STOCK].listen(function(confItem, option){\r\n  const { key, isLoadMeta, loadId='Q' } = option;\r\n  this.isLoading = true;\r\n  this.idLoading = isLoadMeta ? key + META : key;\r\n  LoadConfig[loadId].loadItem(\r\n    option, this.completed, this.added, this.failed\r\n  );\r\n})\r\n\r\nconst SUBTITLE = 'Loaded from URL Query';\r\nconst _addDialogPropsTo = option => {\r\n  const { chartType, browserType } = option\r\n      , { dialogProps } = ChartStore\r\n            .getSourceConfig(browserType, chartType) || {};\r\n\r\n  Object.assign(option,\r\n    dialogProps,\r\n    dialogProps.dfProps, {\r\n      subtitle: SUBTITLE\r\n    }\r\n  )\r\n\r\n  const { fromDate, nInitFromDate } = option;\r\n  if (!fromDate) {\r\n    option.fromDate = nInitFromDate\r\n       ? DU.getFromDate(nInitFromDate)\r\n       : DU.getFromDate(2)\r\n  }\r\n};\r\n\r\nChartActions[A.LOAD_STOCK_BY_QUERY].listen(function(option){\r\n  _addDialogPropsTo(option)\r\n  const { loadId } = option;\r\n  option.proxy = ChartStore.getProxy(loadId)\r\n\r\n  const impl = LoadConfig[loadId];\r\n  if (impl) {\r\n    const { addPropsTo } = impl;\r\n    if (_isFn(addPropsTo)){\r\n      addPropsTo(option)\r\n    }\r\n    impl.loadItem(option, this.completed, _fnNoop, this.failed)\r\n  } else {\r\n    option.alertDescr = C.DESCR_LOADER\r\n    this.failed(option)\r\n  }\r\n})\r\n\r\nexport default ChartActions\r\n"],"file":"ChartActions.js"}