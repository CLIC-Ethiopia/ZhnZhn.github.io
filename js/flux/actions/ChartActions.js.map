{"version":3,"sources":["../../../src/flux/actions/ChartActions.js"],"names":["ALERT_DESCR_BY_QUERY","META_SUFFIX","_fnNoop","_isFn","fn","_isUndef","v","CHAT_INIT_AND_SHOW","CHAT_SHOW","CHAT_CLOSE","CHAT_LOAD","CHAT_LOAD_ADDED","CHAT_LOAD_COMPLETED","CHAT_LOAD_FAILED","CHAT_LOAD_BY_QUERY","CHAT_TO_TOP","CHAT_COPY","CHAT_UPDATE_MOVING_VALUES","CHAT_SORT_BY","CHAT_REMOVE_ALL","_assign","Object","assign","_cancelLoad","option","alertMsg","failed","onCancel","ERR_ALREADY_EXIST","onFailed","_addBoolOptionTo","options","propName","ChartStore","isSetting","_addSettingsTo","confItem","itemProps","loadId","apiKey","getKey","proxy","getProxy","ChartActions","Reflux","createActions","children","isLoading","idLoading","cancelLoad","_isItemLoaded","actionType","LPAT_LOADING_COMPLETE","LPAT_LOADING_FAILED","_onChangeStore","onChangeStore","isApiKeyRequired","isProxyRequired","getApiTitle","SettingSlice","_checkMsgApiKey","isKeyFeature","isPremium","ERR_FEATURE_WITHOUT_KEY","ERR_PREMIUM_WITHOUT_KEY","_checkProxy","_crMsgSetting","_crMetaDataKey","key","shouldEmit","_key","LogicUtils","createKeyForConfig","isLoadMeta","_isDoublingLoad","_isTs","isLoadToChart","_alertMsg","ERR_DOUBLE_LOAD_META","ERR_LOADING_IN_PROGRESS","isChartExist","listen","LoadConfig","loadItem","completed","added","SUBTITLE","_addDialogPropsTo","chartType","browserType","dialogProps","getSourceConfig","dfProps","subtitle","fromDate","nInitFromDate","impl","addPropsTo","alertDescr"],"mappings":"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","sourcesContent":["import Reflux from 'reflux-core';\r\n\r\nimport { getFromDate } from '../../utils/DateUtils';\r\nimport {\r\n  setAlertMsg,\r\n  ERR_ALREADY_EXIST,\r\n  ERR_FEATURE_WITHOUT_KEY,\r\n  ERR_PREMIUM_WITHOUT_KEY,\r\n  ERR_DOUBLE_LOAD_META,\r\n  ERR_LOADING_IN_PROGRESS,\r\n  withoutApiKey,\r\n  withoutProxy\r\n} from '../../constants/Msg';\r\nimport ChartStore from '../stores/ChartStore';\r\nimport SettingSlice from '../stores/SettingSlice';\r\nimport LoadConfig from '../logic/LoadConfig';\r\nimport LogicUtils from '../logic/LogicUtils';\r\n\r\nimport {\r\n  LPAT_LOADING_COMPLETE,\r\n  LPAT_LOADING_FAILED\r\n} from './LoadingProgressActions'\r\n\r\nconst ALERT_DESCR_BY_QUERY = \"Loader for this item hasn't found.\"\r\n, META_SUFFIX = '_Meta'\r\n, _fnNoop = () => {}\r\n, _isFn = fn => typeof fn === 'function'\r\n, _isUndef = v => typeof v === 'undefined';\r\n\r\nexport const CHAT_INIT_AND_SHOW = 'initAndShowChart'\r\nexport const CHAT_SHOW = 'showChart'\r\nexport const CHAT_CLOSE = 'closeChart'\r\n\r\nexport const CHAT_LOAD = 'loadItem'\r\nexport const CHAT_LOAD_ADDED = 'loadItemAdded'\r\nexport const CHAT_LOAD_COMPLETED = 'loadItemCompleted'\r\nexport const CHAT_LOAD_FAILED = 'loadItemFailed'\r\n\r\nexport const CHAT_LOAD_BY_QUERY = 'loadItemByQuery'\r\n\r\nexport const CHAT_TO_TOP = 'toTop'\r\n\r\nexport const CHAT_COPY = 'copy'\r\n\r\nexport const CHAT_UPDATE_MOVING_VALUES = 'updateMovingValues'\r\nexport const CHAT_SORT_BY = 'sortBy'\r\nexport const CHAT_REMOVE_ALL = 'removeAll'\r\n\r\n\r\nconst _assign = Object.assign;\r\n\r\nconst _cancelLoad = function(option, alertMsg){\r\n  setAlertMsg(option, alertMsg);\r\n  this.failed(option);\r\n\r\n  if (_isFn(option.onCancel)) {\r\n    option.onCancel();\r\n  } else if (alertMsg === ERR_ALREADY_EXIST && _isFn(option.onFailed)) {\r\n    option.onFailed();\r\n  }\r\n};\r\n\r\nconst _addBoolOptionTo = (options, propName) => {\r\n  if (_isUndef(options[propName])) {\r\n    options[propName] = ChartStore.isSetting(propName)\r\n  }\r\n};\r\n\r\nconst _addSettingsTo = (options, confItem, itemProps) => {\r\n  const { loadId } = options;\r\n  _assign(options, confItem, itemProps, {\r\n    apiKey: ChartStore.getKey(loadId),\r\n    proxy: ChartStore.getProxy(loadId)\r\n  })\r\n  _addBoolOptionTo(options, 'isDrawDeltaExtrems')\r\n  _addBoolOptionTo(options, 'isNotZoomToMinMax')\r\n};\r\n\r\nconst ChartActions =  Reflux.createActions({\r\n  [CHAT_LOAD]: {\r\n     children: ['completed', 'added', 'failed'],\r\n     isLoading: false,\r\n     idLoading: void 0,\r\n     cancelLoad: _cancelLoad\r\n   },\r\n  [CHAT_LOAD_BY_QUERY]: {\r\n    children: ['completed', 'failed']\r\n  },\r\n  [CHAT_SHOW]: {},\r\n  [CHAT_CLOSE]: {},\r\n\r\n  [CHAT_TO_TOP]: {},\r\n  [CHAT_COPY]: {},\r\n  [CHAT_UPDATE_MOVING_VALUES]: {},\r\n  [CHAT_SORT_BY]: {},\r\n  [CHAT_REMOVE_ALL]: {}\r\n});\r\n\r\nconst _isItemLoaded = actionType =>\r\n  actionType === LPAT_LOADING_COMPLETE\r\n  || actionType === LPAT_LOADING_FAILED;\r\n\r\nconst _onChangeStore = actionType => {\r\n  if (_isItemLoaded(actionType)) {\r\n    ChartActions[CHAT_LOAD].isLoading = false;\r\n  }\r\n};\r\n\r\nChartActions.onChangeStore = _onChangeStore\r\n\r\nconst {\r\n  isApiKeyRequired,\r\n  isProxyRequired,\r\n  getApiTitle\r\n} = SettingSlice;\r\n\r\nconst _checkMsgApiKey = ({\r\n  apiKey,\r\n  loadId,\r\n  isKeyFeature,\r\n  isPremium\r\n}) => apiKey\r\n  ? ''\r\n  : isApiKeyRequired(loadId)\r\n    ? withoutApiKey(getApiTitle(loadId))\r\n    : isKeyFeature\r\n       ? ERR_FEATURE_WITHOUT_KEY\r\n       : isPremium\r\n          ? ERR_PREMIUM_WITHOUT_KEY\r\n          : '';\r\n\r\n\r\nconst _checkProxy = ({ proxy, loadId }) => {\r\n  if (isProxyRequired(loadId) && !proxy) {\r\n    return withoutProxy(getApiTitle(loadId));\r\n  }\r\n  return '';\r\n};\r\n\r\nconst _crMsgSetting = option =>\r\n  _checkMsgApiKey(option) || _checkProxy(option);\r\n\r\nconst _crMetaDataKey = key => key + META_SUFFIX;\r\n\r\nChartActions[CHAT_LOAD].shouldEmit = function(confItem={}, option={}){\r\n  const _key = LogicUtils.createKeyForConfig(option)\r\n  , { isLoadMeta } = option\r\n  , key = isLoadMeta ? _crMetaDataKey(_key) : _key\r\n  , _isDoublingLoad = this.isLoading && key === this.idLoading\r\n  , _isTs = ChartStore.isLoadToChart();\r\n\r\n  //{ chartType, browserType, dialogConf } = confItem\r\n  _addSettingsTo(option, confItem, { key, _isTs })\r\n\r\n  const _alertMsg = _crMsgSetting(option)\r\n   || (isLoadMeta && _isDoublingLoad\r\n        ? ERR_DOUBLE_LOAD_META\r\n        : _isDoublingLoad\r\n           ? ERR_LOADING_IN_PROGRESS\r\n           : !_isTs && ChartStore.isChartExist(option)\r\n               ? ERR_ALREADY_EXIST\r\n               : '');\r\n\r\n  return _alertMsg\r\n    ? (this.cancelLoad(option, _alertMsg), false)\r\n    : true;\r\n}\r\n\r\nChartActions[CHAT_LOAD].listen(function(confItem, option){\r\n  const { key, loadId='Q' } = option;\r\n  this.isLoading = true;\r\n  this.idLoading = key\r\n  LoadConfig[loadId].loadItem(\r\n    option, this.completed, this.added, this.failed\r\n  );\r\n})\r\n\r\nconst SUBTITLE = 'Loaded from URL Query';\r\nconst _addDialogPropsTo = option => {\r\n  const { chartType, browserType } = option\r\n  , { dialogProps } = ChartStore\r\n        .getSourceConfig(browserType, chartType) || {}\r\n  , { dfProps } = dialogProps || {};\r\n\r\n  _assign(option, dialogProps, dfProps, {\r\n      subtitle: SUBTITLE\r\n    }\r\n  )\r\n\r\n  const { fromDate, nInitFromDate } = option;\r\n  if (!fromDate) {\r\n    option.fromDate = nInitFromDate\r\n       ? getFromDate(nInitFromDate)\r\n       : getFromDate(2)\r\n  }\r\n};\r\n\r\nChartActions[CHAT_LOAD_BY_QUERY].listen(function(option){\r\n  _addDialogPropsTo(option)\r\n  const { loadId } = option;\r\n  option.proxy = ChartStore.getProxy(loadId)\r\n\r\n  const impl = LoadConfig[loadId];\r\n  if (impl) {\r\n    const { addPropsTo } = impl;\r\n    if (_isFn(addPropsTo)){\r\n      addPropsTo(option)\r\n    }\r\n    impl.loadItem(option, this.completed, _fnNoop, this.failed)\r\n  } else {\r\n    option.alertDescr = ALERT_DESCR_BY_QUERY\r\n    this.failed(option)\r\n  }\r\n})\r\n\r\nexport default ChartActions\r\n"],"file":"ChartActions.js"}