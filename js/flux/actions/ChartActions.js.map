{"version":3,"sources":["../../../src/flux/actions/ChartActions.js"],"names":["C","DESR_LOADER","META","_fnNoop","ChartActionTypes","INIT_AND_SHOW_CHART","LOAD_STOCK","LOAD_STOCK_COMPLETED","LOAD_STOCK_ADDED","LOAD_STOCK_FAILED","LOAD_STOCK_BY_QUERY","LOAD_STOCK_BY_QUERY_C","LOAD_STOCK_BY_QUERY_F","SHOW_CHART","CLOSE_CHART","COPY","A","M","Alert","_fnOnChangeStore","actionType","data","ChartActions","isLoading","_fnCancelLoad","option","alertMsg","isWithFailed","setAlertMsg","failed","isShouldEmit","onCancel","onFailed","_addSettings","loadId","apiKey","proxy","getBarchartKey","getAlphaKey","getBeaKey","getProxy","getQuandlKey","Object","assign","isDrawDeltaExtrems","isSetting","isNotZoomToMinMax","createActions","children","idLoading","undefined","cancelLoad","PASTE_TO","fnOnChangeStore","preEmit","slice","call","arguments","confItem","arg","chartType","key","createKeyForConfig","isDoublingLoad","isDoublLoadMeta","isLoadMeta","isKeyFeature","isPremium","withoutApiKey","FEATURE_WITHOUT_KEY","PREMIUM_WITHOUT_KEY","LOADING_IN_PROGRESS","DOUBLE_LOAD_META","isLoadToChart","isChartExist","ALREADY_EXIST","shouldEmit","listen","browserType","conf","loadItem","completed","added","SUBTITLE","_addDialogPropsTo","getSourceConfig","dialogProps","subtitle","fromDate","nInitFromDate","getFromDate","impl","addPropsTo","alertDescr","DESCR_LOADER"],"mappings":"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","file":"ChartActions.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport DU from '../../utils/DateUtils';\r\nimport Msg from '../../constants/Msg';\r\nimport ChartStore from '../stores/ChartStore';\r\nimport LoadConfig from '../logic/LoadConfig';\r\nimport LogicUtils from '../logic/LogicUtils';\r\n\r\nconst C = {\r\n  DESR_LOADER: \"Loader for this item hasn't found.\"\r\n};\r\n\r\nconst META = '_Meta';\r\nconst _fnNoop = () => {};\r\n\r\nexport const ChartActionTypes = {\r\n  INIT_AND_SHOW_CHART : 'initAndShowChart',\r\n  LOAD_STOCK : 'loadStock',\r\n  LOAD_STOCK_COMPLETED : 'loadStockCompleted',\r\n  LOAD_STOCK_ADDED : 'loadStockAdded',\r\n  LOAD_STOCK_FAILED : 'loadStockFailed',\r\n\r\n  LOAD_STOCK_BY_QUERY: 'loadStockByQuery',\r\n  LOAD_STOCK_BY_QUERY_C: 'loadStockByQueryC',\r\n  LOAD_STOCK_BY_QUERY_F: 'loadStockByQueryF',\r\n\r\n  SHOW_CHART : 'showChart',\r\n  CLOSE_CHART : 'closeChart',\r\n\r\n  COPY: 'copy'\r\n};\r\nconst A = ChartActionTypes;\r\nconst M = Msg.Alert;\r\n\r\nconst _fnOnChangeStore = function(actionType, data){\r\n   if (actionType === A.LOAD_STOCK_COMPLETED ||\r\n       actionType === A.LOAD_STOCK_ADDED ||\r\n       actionType === A.LOAD_STOCK_FAILED )\r\n   {\r\n     ChartActions[A.LOAD_STOCK].isLoading = false;\r\n   }\r\n}\r\n\r\nconst _fnCancelLoad = function(option, alertMsg, isWithFailed){\r\n  Msg.setAlertMsg(option, alertMsg);\r\n  this.failed(option);\r\n  this.isShouldEmit = false;\r\n\r\n  if (typeof option.onCancel === 'function'){\r\n    option.onCancel();\r\n  } else if (isWithFailed && typeof option.onFailed === 'function'){\r\n    option.onFailed();\r\n  }\r\n}\r\n\r\nconst _addSettings = (option) => {\r\n  const { loadId } = option;\r\n  let apiKey, proxy;\r\n  switch(loadId){\r\n    case 'B':\r\n      apiKey = ChartStore.getBarchartKey()\r\n      break;\r\n    case 'AL': case 'AL_S': case 'AL_I':\r\n      apiKey = ChartStore.getAlphaKey()\r\n      break;\r\n    case 'BEA':\r\n      apiKey = ChartStore.getBeaKey()\r\n      break;\r\n    case 'FS': case 'FAO':\r\n    case 'NST': case 'NST_2':\r\n    case 'SWS':\r\n      proxy = ChartStore.getProxy()\r\n      break;\r\n    default:\r\n      apiKey = ChartStore.getQuandlKey()\r\n  }\r\n\r\n  Object.assign(option, {\r\n    apiKey, proxy,\r\n    isDrawDeltaExtrems: ChartStore.isSetting('isDrawDeltaExtrems'),\r\n    isNotZoomToMinMax: ChartStore.isSetting('isNotZoomToMinMax')\r\n  })\r\n}\r\n\r\nconst ChartActions =  Reflux.createActions({\r\n      [A.LOAD_STOCK] : {\r\n         children : ['completed', 'added', 'failed'],\r\n         isLoading : false,\r\n         idLoading : undefined,\r\n         isShouldEmit : true,\r\n         cancelLoad : _fnCancelLoad\r\n       },\r\n      [A.LOAD_STOCK_BY_QUERY]: {\r\n        children: [ 'completed', 'failed']\r\n      },\r\n      [A.SHOW_CHART] : {},\r\n      [A.CLOSE_CHART] : {},\r\n      [A.COPY]: {},\r\n      [A.PASTE_TO]: {}\r\n});\r\n\r\nChartActions.fnOnChangeStore = _fnOnChangeStore\r\n\r\nChartActions[A.LOAD_STOCK].preEmit = function() {\r\n  const arg = [].slice.call(arguments)\r\n      , confItem = arg[0]\r\n      , { chartType } = confItem\r\n      , option = arg[1]\r\n      , key = LogicUtils.createKeyForConfig(option)\r\n      , isDoublingLoad = this.isLoading && key === this.idLoading\r\n      , isDoublLoadMeta = (option.isLoadMeta)\r\n          ? (key + META === this.idLoading)\r\n          : false;\r\n\r\n  option.key = key;\r\n  this.isShouldEmit = true;\r\n  _addSettings(option)\r\n\r\n  const {\r\n          loadId, apiKey,\r\n          isKeyFeature, isPremium\r\n        } = option;\r\n\r\n  if (loadId === 'B' && !apiKey){\r\n    this.cancelLoad(option, M.withoutApiKey('Barchart Market Data'), false);\r\n  } else if ( (loadId === 'AL' || loadId === 'AL_S' || loadId === 'AL_I' ) && !apiKey) {\r\n    this.cancelLoad(option, M.withoutApiKey('Alpha Vantage'), false);\r\n  } else if ( loadId === 'BEA' && !apiKey) {\r\n    this.cancelLoad(option, M.withoutApiKey('BEA'), false);\r\n  } else if (isKeyFeature && !apiKey){\r\n    this.cancelLoad(option, M.FEATURE_WITHOUT_KEY, false);\r\n  } else if (isPremium && !apiKey){\r\n    this.cancelLoad(option, M.PREMIUM_WITHOUT_KEY, false);\r\n  } else if (isDoublingLoad){\r\n    this.cancelLoad(option, M.LOADING_IN_PROGRESS, false);\r\n  } else if (isDoublLoadMeta){\r\n    this.cancelLoad(option, M.DOUBLE_LOAD_META, false);\r\n  }  else if (!ChartStore.isLoadToChart()){\r\n     if (ChartStore.isChartExist(chartType, key)){\r\n       this.cancelLoad(option, M.ALREADY_EXIST, true);\r\n     }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nChartActions[A.LOAD_STOCK].shouldEmit = function(){\r\n  return this.isShouldEmit;\r\n}\r\nChartActions[A.LOAD_STOCK].listen(function(confItem, option){\r\n  const { chartType, browserType, conf } = confItem;\r\n  option.conf = conf\r\n\r\n  this.isLoading = true;\r\n  this.idLoading = option.key;\r\n  if (option.isLoadMeta){\r\n    this.idLoading = this.idLoading + META;\r\n  }\r\n\r\n  const { loadId='Q' } = option;\r\n  option.chartType = chartType;\r\n  option.browserType = browserType;\r\n  LoadConfig[loadId].loadItem(option, this.completed, this.added, this.failed);\r\n})\r\n\r\nconst SUBTITLE = 'Loaded from URL Query';\r\nconst _addDialogPropsTo = option => {\r\n  const { chartType, browserType } = option\r\n      , { dialogProps } = ChartStore\r\n            .getSourceConfig(browserType, chartType) || {};\r\n\r\n  Object.assign(option,\r\n    dialogProps, { subtitle: SUBTITLE }\r\n  )\r\n\r\n  const { fromDate, nInitFromDate } = option;\r\n  if (!fromDate) {\r\n    option.fromDate = nInitFromDate\r\n       ? DU.getFromDate(nInitFromDate)\r\n       : DU.getFromDate(2)\r\n  }\r\n};\r\n\r\nChartActions[A.LOAD_STOCK_BY_QUERY].listen(function(option){\r\n  _addDialogPropsTo(option)\r\n\r\n  const impl = LoadConfig[option.loadId];\r\n  if (impl) {\r\n    const { addPropsTo } = impl;\r\n    if (typeof addPropsTo === 'function'){\r\n      addPropsTo(option)\r\n    }\r\n    impl.loadItem(option, this.completed, _fnNoop, this.failed)\r\n  } else {\r\n    option.alertDescr = C.DESCR_LOADER\r\n    this.failed(option)\r\n  }\r\n})\r\n\r\nexport default ChartActions\r\n"]}