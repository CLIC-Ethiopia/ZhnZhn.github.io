{"version":3,"sources":["../../../src/flux/creaters/eurostat3.js"],"names":["_isThreeTable","dfProps","_items","metric","dfT","push","Object","assign","dfTable","value","dfTail","_isDfParams","groupV","metricV","dfParams","createLoadOptions","props","options","loadId","dataSource","one","group","chartType","seriaColor","date","dialogOptions","caption","oneC","oneV","groupC","metricC","seriaType","compType","geo","zhCompType","items","time","itemCaption","title","subtitle","alertItemId","alertGeo","alertMetric"],"mappings":"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","sourcesContent":["\r\nconst _isThreeTable = (dfProps, _items, metric) => {\r\n  if (dfProps.dfT !== 'three') {\r\n    _items.push(metric)\r\n  } else {\r\n    Object.assign(dfProps, {\r\n      dfTable: metric.value,\r\n      dfTail: metric.dfTail\r\n    })\r\n  }\r\n};\r\n\r\nconst _isDfParams = (dfProps, groupV, metricV) => {\r\n  if (!dfProps.dfParams) {\r\n    Object.assign(dfProps, {\r\n      dfParams: [ \"geo\" ],\r\n      dfTable: groupV,\r\n      dfTail: metricV\r\n    })\r\n  }\r\n};\r\n\r\nconst createLoadOptions = (props={}, options={}) => {\r\n  const { loadId, dataSource, dfProps={} } = props\r\n      , {\r\n          one={}, group={}, metric={},\r\n          chartType={}, seriaColor,\r\n          date, dialogOptions\r\n        } = options\r\n      , { caption:oneC='', value:oneV } = one\r\n      , { caption:groupC='', value:groupV } = group\r\n      , { caption:metricC='', value:metricV } = metric\r\n      , { value:seriaType, compType } = chartType\r\n      , _items = [ one, group ];\r\n\r\n  _isThreeTable(dfProps, _items, metric)\r\n  _isDfParams(dfProps, groupV, metricV)\r\n\r\n\r\n  return {\r\n    ...dfProps,\r\n    ...dialogOptions,\r\n    geo: oneV,\r\n    group: groupV,\r\n    metric: metricV,\r\n    seriaType: seriaType,\r\n    seriaColor: seriaColor,\r\n    zhCompType: compType,\r\n    //items: [ one, group, metric ],\r\n    items: _items,\r\n    time: date,\r\n    loadId: loadId,\r\n    itemCaption: oneC,\r\n    title: oneC,\r\n    subtitle: `${groupC}: ${metricC}`,\r\n    alertItemId: `${oneC}: ${metricC}`,\r\n    alertGeo: oneC,\r\n    alertMetric: metricC,\r\n    dataSource    \r\n  }\r\n};\r\n\r\nexport default createLoadOptions\r\n"],"file":"eurostat3.js"}