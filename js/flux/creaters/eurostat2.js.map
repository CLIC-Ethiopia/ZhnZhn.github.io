{"version":3,"sources":["../../../src/flux/creaters/eurostat2.js"],"names":["COUNTRY_CAPTION_DF","AREA","createLoadOptions","props","options","loadId","group","dataSource","dfProps","one","two","chartType","date","dateDefault","selectOptions","value","chartTypeValue","_countryValue","_countryCaption","caption","_zhCompType","undefined","_time","_mapValue","mapValue","_mapSlice","mapSlice","compType","createMapValue","createMapSlice","geo","metric","itemCaption","title","subtitle","alertItemId","alertGeo","alertMetric","seriaType","zhCompType","zhMapSlice","time","items"],"mappings":";;;;;;;;;;AACA;;;;;;AAEA,IAAMA,qBAAqB,IAA3B;AAAA,IACMC,OAAO,MADb;;AAGA,IAAMC,oBAAoB,SAApBA,iBAAoB,GAA0B;AAAA,MAAzBC,KAAyB,uEAAnB,EAAmB;AAAA,MAAfC,OAAe,uEAAP,EAAO;;AAAA,MAC1CC,MAD0C,GACHF,KADG,CAC1CE,MAD0C;AAAA,MAClCC,KADkC,GACHH,KADG,CAClCG,KADkC;AAAA,MAC3BC,UAD2B,GACHJ,KADG,CAC3BI,UAD2B;AAAA,MACfC,OADe,GACHL,KADG,CACfK,OADe;AAAA,MAG1CC,GAH0C,GAMxCL,OANwC,CAG1CK,GAH0C;AAAA,qBAMxCL,OANwC,CAGrCM,GAHqC;AAAA,MAGrCA,GAHqC,gCAGjC,EAHiC;AAAA,2BAMxCN,OANwC,CAG7BO,SAH6B;AAAA,MAG7BA,SAH6B,sCAGnB,EAHmB;AAAA,MAI1CC,IAJ0C,GAMxCR,OANwC,CAI1CQ,IAJ0C;AAAA,MAIpCC,WAJoC,GAMxCT,OANwC,CAIpCS,WAJoC;AAAA,MAK1CC,aAL0C,GAMxCV,OANwC,CAK1CU,aAL0C;AAAA,yBAOVH,SAPU,CAO1CI,KAP0C;AAAA,MAOpCC,cAPoC,oCAOrB,MAPqB;AAAA,MAQ5CC,aAR4C,GAQ3BR,GAAD,GACZA,IAAIM,KADQ,GAEZf,kBAVwC;AAAA,MAW5CkB,eAX4C,GAWzBT,GAAD,GACdA,IAAIU,OADU,GAEdnB,kBAbwC;;AAelD,MAAIoB,cAAcC,SAAlB;AAAA,MACKC,QAAQD,SADb;AAAA,MAEKE,YAAYb,IAAIc,QAFrB;AAAA,MAGKC,YAAYf,IAAIgB,QAHrB;;AAKA,MAAIf,aAAaA,UAAUI,KAAV,KAAoBd,IAArC,EAA0C;AACxCmB,kBAAcT,UAAUgB,QAAxB;AACAL,YAASV,IAAD,GAASA,KAAKG,KAAd,GAAsBF,WAA9B;;AAEA,QAAI,CAACU,SAAL,EAAgB;AAAEA,kBAAY,qBAAWK,cAAX,CAA0BzB,KAA1B,EAAiCO,GAAjC,CAAZ;AAAoD;AACtE,QAAI,CAACe,SAAL,EAAgB;AAAEA,kBAAY,qBAAWI,cAAX,CAA0B1B,KAA1B,EAAiCO,GAAjC,CAAZ;AAAoD;AACvE;;AAED,oCACKF,OADL;AAEEsB,SAAMb,aAFR;AAGEX,WAAQA,KAHV;AAIEyB,YAASrB,IAAIK,KAJf;AAKEV,YAASA,MALX;AAME2B,iBAAad,eANf;AAOEe,WAAQf,eAPV;AAQEgB,cAAWxB,IAAIS,OARjB;AASEgB,iBAAiBjB,eAAjB,SAAoCR,IAAIS,OAT1C;AAUEiB,cAAWlB,eAVb;AAWEmB,iBAAc3B,IAAIS,OAXpB;AAYEmB,eAAYtB,cAZd;AAaEuB,gBAAanB,WAbf;AAcEI,cAAWD,SAdb;AAeEiB,2CAAkBf,SAAlB,IAA6BgB,MAAOnB,KAApC,GAfF;AAgBEmB,UAAOnB,KAhBT;AAiBEf,0BAjBF;AAkBEmC,WAAO,CAAEjC,GAAF,EAAOC,GAAP,CAlBT;AAmBEI;AAnBF;AAqBD,CAjDD;;kBAmDeZ,iB","file":"eurostat2.js","sourcesContent":["\r\nimport EuroStatFn from '../../adapters/eurostat/EuroStatFn';\r\n\r\nconst COUNTRY_CAPTION_DF = 'EU'\r\n    , AREA = 'AREA'\r\n\r\nconst createLoadOptions = (props={}, options={}) => {\r\n  const { loadId, group, dataSource, dfProps } = props\r\n      , {\r\n          one, two={}, chartType={},\r\n          date, dateDefault,\r\n          selectOptions\r\n        } = options\r\n      , { value:chartTypeValue='AREA' } = chartType\r\n      , _countryValue = (one)\r\n          ? one.value\r\n          : COUNTRY_CAPTION_DF\r\n      , _countryCaption = (one)\r\n          ? one.caption\r\n          : COUNTRY_CAPTION_DF;\r\n\r\n  let _zhCompType = undefined\r\n     , _time = undefined\r\n     , _mapValue = two.mapValue\r\n     , _mapSlice = two.mapSlice;\r\n\r\n  if (chartType && chartType.value !== AREA){\r\n    _zhCompType = chartType.compType;\r\n    _time = (date) ? date.value : dateDefault;\r\n\r\n    if (!_mapValue) { _mapValue = EuroStatFn.createMapValue(props, two); }\r\n    if (!_mapSlice) { _mapSlice = EuroStatFn.createMapSlice(props, two); }\r\n  }\r\n\r\n  return {\r\n    ...dfProps,\r\n    geo : _countryValue,\r\n    group : group,\r\n    metric : two.value,\r\n    loadId : loadId,\r\n    itemCaption: _countryCaption,\r\n    title : _countryCaption,\r\n    subtitle : two.caption,\r\n    alertItemId : `${_countryCaption}:${two.caption}`,\r\n    alertGeo : _countryCaption,\r\n    alertMetric : two.caption,\r\n    seriaType : chartTypeValue,\r\n    zhCompType : _zhCompType,\r\n    mapValue : _mapValue,\r\n    zhMapSlice : { ..._mapSlice, time : _time },\r\n    time : _time,\r\n    dataSource,\r\n    items: [ one, two ],\r\n    selectOptions\r\n  }\r\n};\r\n\r\nexport default createLoadOptions\r\n"]}