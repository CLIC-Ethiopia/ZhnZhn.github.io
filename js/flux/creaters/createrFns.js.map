{"version":3,"sources":["../../../src/flux/creaters/createrFns.js"],"names":["_getCaption","item","caption","_crC","title","subtitle","createrFns","crItemKey","items","seriaType","date","_prefix","filter","Boolean","map","value","join","crCaption","oneC","twoC","threeC","fourC","_caption","crAlertConf","alertItemId","alertGeo","alertMetric"],"mappings":";;;;;;;;;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAIA,IAAI,IAAIA,IAAI,CAACC,OAAb,IAAwB,EAA5B;AAAA,CAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AACjCD,IAAAA,KAAK,EAALA,KADiC;AAC1BC,IAAAA,QAAQ,EAARA;AAD0B,GAAtB;AAAA,CAAb;;AAIA,IAAMC,UAAU,GAAG;AAEjBC,EAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,SAAR,EAAmBC,IAAnB,EAA4B;AACrC,QAAMC,OAAO,GAAGH,KAAK,CAClBI,MADa,CACNC,OADM,EAEbC,GAFa,CAET,UAAAb,IAAI;AAAA,aAAIA,IAAI,CAACc,KAAL,IAAcd,IAAI,CAACC,OAAnB,IAA8BD,IAAlC;AAAA,KAFK,EAGbe,IAHa,CAGR,GAHQ,CAAhB;;AAIA,WAAO,CACLL,OADK,EAELF,SAAS,IAAI,EAFR,EAGLC,IAAI,IAAI,EAHH,EAILM,IAJK,CAIA,GAJA,CAAP;AAKD,GAZgB;AAcjBC,EAAAA,SAAS,EAAE,mBAAAT,KAAK,EAAI;AAClB,QAAMU,IAAI,GAAGlB,WAAW,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAxB;AAAA,QACEW,IAAI,GAAGnB,WAAW,CAACQ,KAAK,CAAC,CAAD,CAAN,CADpB;AAAA,QAEEY,MAAM,GAAGpB,WAAW,CAACQ,KAAK,CAAC,CAAD,CAAN,CAFtB;AAAA,QAGEa,KAAK,GAAGrB,WAAW,CAACQ,KAAK,CAAC,CAAD,CAAN,CAHrB;;AAKA,QAAIc,QAAQ,GAAGnB,IAAI,CAACe,IAAD,CAAnB;;AACA,QAAIG,KAAJ,EAAW;AACTC,MAAAA,QAAQ,GAAGnB,IAAI,CAAIe,IAAJ,UAAaC,IAAb,EAAwBC,MAAxB,UAAmCC,KAAnC,CAAf;AACD,KAFD,MAEO,IAAID,MAAJ,EAAY;AACjBE,MAAAA,QAAQ,GAAGnB,IAAI,CAACe,IAAD,EAAUC,IAAV,UAAmBC,MAAnB,CAAf;AACD,KAFM,MAEA,IAAID,IAAJ,EAAU;AACfG,MAAAA,QAAQ,GAAGnB,IAAI,CAACe,IAAD,EAAOC,IAAP,CAAf;AACD;;AACD;AACED,MAAAA,IAAI,EAAJA,IADF;AACQC,MAAAA,IAAI,EAAJA,IADR;AACcC,MAAAA,MAAM,EAANA,MADd;AACsBC,MAAAA,KAAK,EAALA;AADtB,OAEKC,QAFL;AAID,GAhCgB;AAkCjBC,EAAAA,WAAW,EAAE,qBAACC,WAAD,EAAcC,QAAd,EAAwBC,WAAxB;AAAA,WAAyC;AACpDF,MAAAA,WAAW,EAAXA,WADoD;AACvCC,MAAAA,QAAQ,EAARA,QADuC;AAC7BC,MAAAA,WAAW,EAAXA;AAD6B,KAAzC;AAAA;AAlCI,CAAnB;eAuCepB,U","sourcesContent":["\r\nconst _getCaption = item => item && item.caption || '';\r\n\r\nconst _crC = (title, subtitle) => ({\r\n  title, subtitle\r\n});\r\n\r\nconst createrFns = {\r\n\r\n  crItemKey: (items, seriaType, date) => {\r\n    const _prefix = items\r\n      .filter(Boolean)\r\n      .map(item => item.value || item.caption || item)\r\n      .join('_');\r\n    return [\r\n      _prefix,\r\n      seriaType || '',\r\n      date || ''\r\n    ].join('_');    \r\n  },\r\n\r\n  crCaption: items => {\r\n    const oneC = _getCaption(items[0])\r\n    , twoC = _getCaption(items[1])\r\n    , threeC = _getCaption(items[2])\r\n    , fourC = _getCaption(items[3]);\r\n\r\n    let _caption = _crC(oneC);\r\n    if (fourC) {\r\n      _caption = _crC(`${oneC}: ${twoC}`, `${threeC}: ${fourC}`)\r\n    } else if (threeC) {\r\n      _caption = _crC(oneC, `${twoC}: ${threeC}`)\r\n    } else if (twoC) {\r\n      _caption = _crC(oneC, twoC )\r\n    }\r\n    return {\r\n      oneC, twoC, threeC, fourC,\r\n      ..._caption\r\n    };\r\n  },\r\n\r\n  crAlertConf: (alertItemId, alertGeo, alertMetric) => ({\r\n    alertItemId, alertGeo, alertMetric\r\n  })\r\n};\r\n\r\nexport default createrFns\r\n"],"file":"createrFns.js"}