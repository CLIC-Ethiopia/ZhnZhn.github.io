{"version":3,"sources":["../../../src/flux/creaters/selectN.js"],"names":["TYPE","TABLE_ID","_assign","Object","assign","_findItemTable","items","tableItem","tableIndex","_item","i","length","id","_modifyIfItemTable","_dfProps","v","dfTable","dfTail","mapFrequency","splice","createLoadOptions","props","options","loadId","linkFn","dataSource","dfProps","titles","dialogOptions","chartType","seriaColor","seriaWidth","fromDate","date","itemCaption","threeC","title","subtitle","value","seriaType","compType","_itemKey","_type","zhCompType","time"],"mappings":"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","sourcesContent":["import {\r\n  crCaption,\r\n  crItemKey,\r\n  crAlertConf\r\n} from './createrFns';\r\n\r\nconst TYPE = 'selectN';\r\nconst TABLE_ID = 'table';\r\n\r\nconst _assign = Object.assign;\r\n\r\nconst _findItemTable = (items) => {\r\n  let tableItem, tableIndex, _item;\r\n  for (let i=0; i<items.length;i++){\r\n    _item = items[i]\r\n    if (_item && _item.id === TABLE_ID) {\r\n      tableItem = items[i];\r\n      tableIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return { tableItem, tableIndex };\r\n};\r\n\r\nconst _modifyIfItemTable = (_dfProps, items) => {\r\n  const { tableItem, tableIndex } = _findItemTable(items);\r\n  if (tableItem) {\r\n    const { v:dfTable, dfTail, mapFrequency } = tableItem\r\n    if (dfTable) {\r\n      _assign(_dfProps, { dfTable, dfTail })\r\n      if (mapFrequency) {\r\n        _dfProps.mapFrequency = mapFrequency\r\n      }\r\n      items.splice(tableIndex, 1);\r\n    }\r\n  }\r\n};\r\n\r\nconst createLoadOptions = (\r\n  props,\r\n  options\r\n) => {\r\n  const {\r\n    loadId,\r\n    linkFn,\r\n    dataSource,\r\n    dfProps\r\n  } = props || {}\r\n  , {\r\n      items=[],\r\n      titles,\r\n      dialogOptions,\r\n      chartType,\r\n      seriaColor,\r\n      seriaWidth,\r\n      fromDate,\r\n      date\r\n    } = options || {}\r\n  , {\r\n      itemCaption,\r\n      threeC,\r\n      title,\r\n      subtitle\r\n    } = crCaption(items, titles)\r\n  , { value:seriaType, compType } = chartType || {}\r\n  , _itemKey = crItemKey(items, seriaType, date, fromDate)\r\n  , _dfProps = {...dfProps};\r\n\r\n  _modifyIfItemTable(_dfProps, items)\r\n\r\n  return {\r\n    ..._dfProps,\r\n    ...dialogOptions,\r\n    _type: TYPE,\r\n    _itemKey: _itemKey,\r\n    itemCaption,\r\n    zhCompType: compType,\r\n    fromDate,\r\n    time: date,\r\n    seriaType,\r\n    seriaColor,\r\n    seriaWidth,\r\n    items,\r\n    loadId,\r\n    linkFn,\r\n    title,\r\n    subtitle,\r\n    ...crAlertConf(`${itemCaption}: ${threeC}`, itemCaption, threeC),\r\n    dataSource\r\n  }\r\n};\r\n\r\nexport default createLoadOptions\r\n"],"file":"selectN.js"}