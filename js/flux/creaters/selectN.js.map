{"version":3,"sources":["../../../src/flux/creaters/selectN.js"],"names":["crCaption","fns","crItemKey","crAlertConf","TYPE","TABLE_ID","_findItemTable","items","tableItem","tableIndex","i","length","id","_modifyIfItemTable","dfProps","value","dfTail","mapFrequency","Object","assign","dfTable","splice","createLoadOptions","props","options","loadId","linkFn","dataSource","titles","dialogOptions","chartType","seriaColor","seriaWidth","fromDate","date","itemCaption","threeC","title","subtitle","seriaType","compType","_itemKey","_type","zhCompType","time"],"mappings":"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","sourcesContent":["import fns from './createrFns'\r\n\r\nconst { crCaption, crItemKey, crAlertConf } = fns;\r\n\r\nconst TYPE = 'selectN';\r\nconst TABLE_ID = 'table';\r\n\r\nconst _findItemTable = (items) => {\r\n  let tableItem, tableIndex;\r\n  for (let i=0; i<items.length;i++){\r\n    if (items?.[i].id === TABLE_ID) {\r\n      tableItem = items[i];\r\n      tableIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return { tableItem, tableIndex };\r\n};\r\n\r\nconst _modifyIfItemTable = (dfProps, items) => {\r\n  const { tableItem, tableIndex } = _findItemTable(items);\r\n  if (tableItem) {\r\n    const { value, dfTail, mapFrequency } = tableItem;\r\n    if (value) {\r\n      Object.assign(dfProps, {\r\n        dfTable: value, dfTail\r\n      })\r\n      if (mapFrequency) {\r\n        dfProps.mapFrequency = mapFrequency\r\n      }\r\n      items.splice(tableIndex, 1);\r\n    }\r\n  }\r\n};\r\n\r\nconst createLoadOptions = (props={}, options={}) => {\r\n  const { loadId, linkFn, dataSource, dfProps={} } = props\r\n  , {\r\n      items=[], titles,\r\n      dialogOptions,\r\n      chartType={},\r\n      seriaColor,\r\n      seriaWidth,\r\n      fromDate,\r\n      date\r\n    } = options\r\n  , {\r\n      itemCaption, threeC,\r\n      title, subtitle\r\n    } = crCaption(items, titles)\r\n  , { value:seriaType, compType } = chartType\r\n  , _itemKey = crItemKey(items, seriaType, date);\r\n\r\n  _modifyIfItemTable(dfProps, items)\r\n\r\n  return {\r\n    ...dfProps,\r\n    ...dialogOptions,\r\n    _type: TYPE,\r\n    _itemKey: _itemKey,\r\n    itemCaption,\r\n    zhCompType: compType,\r\n    fromDate,\r\n    time: date,\r\n    seriaType, seriaColor, seriaWidth,\r\n    items, loadId, linkFn,\r\n    title, subtitle,\r\n    ...crAlertConf(`${itemCaption}: ${threeC}`, itemCaption, threeC),\r\n    dataSource\r\n  }\r\n};\r\n\r\nexport default createLoadOptions\r\n"],"file":"selectN.js"}