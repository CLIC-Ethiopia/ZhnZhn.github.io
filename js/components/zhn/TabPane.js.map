{"version":3,"sources":["../../../src/components/zhn/TabPane.jsx"],"names":["styles","ulStyle","listStyle","marginTop","marginLeft","marginRight","borderBottom","TabPane","props","_handleClickTab","index","setState","selectedTabIndex","_renderTabs","children","state","map","tab","isSelected","React","cloneElement","key","onClick","bind","_renderComponents","components","comp","divStyle","display","width","height","getSelectedTabIndex","isUpdateInit","UNSAFE_componentWillReceiveProps","nextProps","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  ulStyle : {\r\n    listStyle : 'outside none none',\r\n    marginTop: '10px',\r\n    marginLeft: '10px',\r\n    marginRight: '5px',\r\n    borderBottom : '2px solid rgba(164, 135, 212, 1)'\r\n  }\r\n};\r\n\r\nclass TabPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isUpdateInit: PropTypes.bool,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    children: PropTypes.arrayOf(PropTypes.node)\r\n  }\r\n  */\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.isUpdateInit = props.isUpdateInit\r\n\r\n    const components = props.children.map((tab, index) => {\r\n       return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n    })\r\n    this.state = {\r\n      selectedTabIndex : 0,\r\n      components\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (this.isUpdateInit && this.props !== nextProps){\r\n      const components = nextProps.children.map((tab, index) => {\r\n         return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n      })\r\n      this.setState({ components })\r\n    }\r\n  }\r\n\r\n  _handleClickTab = (index) => {\r\n    this.setState({selectedTabIndex : index});\r\n  }\r\n\r\n  _renderTabs = (children) => {\r\n       const {selectedTabIndex} = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex) ? true : false;\r\n          return React.cloneElement(tab, { key : index, onClick : this._handleClickTab.bind(null, index), isSelected })\r\n       })\r\n  }\r\n\r\n  _renderComponents = () => {\r\n      const {selectedTabIndex, components} = this.state;\r\n      return components.map((comp, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? {display: 'block', width: \"100%\", height : \"100%\"}\r\n                    : {display : 'none'};\r\n          return (\r\n             <div style={divStyle} key={'a'+index}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const { children, width, height } = this.props;\r\n\r\n    return (\r\n      <div style={{ width, height }}>\r\n        <ul className=\"tabpane__tabs\" style={styles.ulStyle}>\r\n           {this._renderTabs(children)}\r\n        </ul>\r\n        <div style={ {width: \"100%\", height : \"100%\"}}>\r\n           {this._renderComponents()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex = () => {\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"],"file":"TabPane.js"}