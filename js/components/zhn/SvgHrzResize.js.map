{"version":3,"sources":["../../../src/components/zhn/SvgHrzResize.jsx"],"names":["S","ROOT_DIV","display","LEFT_DIV","marginLeft","SvgHrzResize","props","_increaseStepValue","countStep","step","maxDelta","delta","minDelta","_resizeLeft","currentWidth","initWidth","domNode","style","width","_resizeRight","_handlerStartResize","fnResize","id","_handlerStopResize","setInterval","isOnResizeAfter","clearInterval","isResizeAfter","onResizeAfter","state","comp","minWidth","maxWidth","findDOMNode","bind"],"mappings":"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","file":"SvgHrzResize.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst S = {\r\n  ROOT_DIV : {\r\n    display : 'inline-block'\r\n  },\r\n  LEFT_DIV : {\r\n    marginLeft : '10px'\r\n  }\r\n};\r\n\r\nclass SvgHrzResize extends Component {\r\n  constructor(props){\r\n    super();\r\n    this.id = null;\r\n    this.domNode = null;\r\n    this.delta = 0;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n    this.isResizeAfter = (typeof props.onResizeAfter === 'function')\r\n           ? true\r\n           : false;\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount(){\r\n     const { comp, initWidth, minWidth, maxWidth } = this.props;\r\n     this.domNode = ReactDOM.findDOMNode(comp);\r\n     //this.initWidth = this.domNode.getBoundingClientRect().width;\r\n     this.initWidth = initWidth;\r\n     this.currentWidth = this.initWidth;\r\n     this.minDelta = minWidth - this.initWidth;\r\n     this.maxDelta = maxWidth - this.initWidth;\r\n  }\r\n\r\n  _increaseStepValue = () => {\r\n    this.countStep +=1;\r\n    if ( this.countStep > 30){\r\n      this.step = 3;\r\n    } else if ( this.countStep > 15){\r\n      this.step = 2;\r\n    }\r\n    if ( (this.maxDelta - this.delta) < 20 ||\r\n         (this.delta - this.minDelta) < 20    ){\r\n      this.step = 1;\r\n    }\r\n  }\r\n\r\n  _resizeLeft = () => {\r\n    if (this.delta > this.minDelta){\r\n      this.delta -= this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n  _resizeRight = () => {\r\n    if (this.delta < this.maxDelta){\r\n      this.delta += this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n  _handlerStartResize = (fnResize) => {    \r\n    if (this.id !== null){\r\n      this._handlerStopResize(false);\r\n    }\r\n    this.id = setInterval(fnResize, 5);\r\n  }\r\n  _handlerStopResize = (isOnResizeAfter) => {\r\n    clearInterval(this.id);\r\n    this.id = null;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n\r\n    if (isOnResizeAfter && this.isResizeAfter){\r\n      this.props.onResizeAfter(this.currentWidth);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT_DIV}>\r\n        <div\r\n           className=\"svg-resize\"\r\n           style={S.LEFT_DIV}\r\n           title=\"Resize container horizontal left\"\r\n           onMouseDown={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onMouseUp={this._handlerStopResize.bind(null, true)}\r\n           onTouchStart={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n        >\r\n           <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n               preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                />\r\n               <path\r\n                   d=\"M 6,2 L 1,6 6,10\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                   fill=\"none\"\r\n               />\r\n          </svg>\r\n      </div>\r\n      <div\r\n         className=\"svg-resize\"\r\n         style={S.LEFT_DIV}\r\n         title=\"Resize container horizontal right\"\r\n         onMouseDown={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onMouseUp={this._handlerStopResize.bind(null, true)}\r\n         onTouchStart={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n      >\r\n        <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n             preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n            />\r\n            <path\r\n                  d=\"M 6,2 L 11,6 6,10\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  fill=\"none\"\r\n           />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SvgHrzResize\r\n"]}