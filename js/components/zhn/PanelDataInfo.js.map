{"version":3,"sources":["../../../src/components/zhn/PanelDataInfo.jsx"],"names":["DESCR_CSS_CLASS","styles","rootShow","position","display","paddingTop","paddingRight","paddingLeft","rootHide","rootStyle","marginTop","rootStyleDescription","label","color","width","textAlign","fontWeight","text","textTransform","description","textDescr","PanelDataInfo","_renderQuandlLink","dbCode","dsCode","Comp","_renderNativeLink","linkFn","item","props","isShow","info","zhInfo","onClickChart","name","newest_available_date","oldest_available_date","frequency","database_code","dataset_code","styleShow","_isDescriptionClose","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,aAAxB;;AAEA,IAAMC,SAAS;AACbC,YAAW;AACTC,cAAU,UADD;AAETC,aAAS,OAFA;AAGTC,gBAAa,MAHJ;AAITC,kBAAe,MAJN;AAKTC,iBAAc;AALL,GADE;AAQbC,YAAW;AACTL,cAAU,UADD;AAETC,aAAS;AAFA,GARE;AAYbK,aAAY;AACVC,eAAW;AADD,GAZC;AAebC,wBAAuB;AACrBD,eAAW;AADU,GAfV;AAkBbE,SAAQ;AACNR,aAAU,cADJ;AAENS,WAAQ,SAFF;AAGNC,WAAQ,OAHF;AAINC,eAAY,OAJN;AAKNT,kBAAe,KALT;AAMNU,gBAAa;AANP,GAlBK;AA0BbC,QAAO;AACLD,gBAAa,MADR;AAELH,WAAQ,OAFH;AAGLK,mBAAe;AAHV,GA1BM;AA+BbC,eAAc;AACZd,gBAAa;AADD,GA/BD;AAkCbe,aAAY;AACVP,WAAQ,MADE;AAEVG,gBAAa;AAFH;AAlCC,CAAf;;IAwCMK,a;;;;;;;;;;;;;;kNAEJC,iB,GAAoB,UAACC,MAAD,EAASC,MAAT,EAAoB;AACtC,UAAI,CAACD,MAAD,IAAW,CAACC,MAAhB,EAAuB;AACrB,eAAO,IAAP;AACD,OAFD,MAEO;AACL,YAAMC,OAAO,2BAAiB,QAAjB,CAAb;AACA,eAAQ,8BAAC,IAAD,IAAM,QAAQF,MAAd,EAAsB,QAAQC,MAA9B,GAAR;AACD;AACF,K,QAEDE,iB,GAAoB,UAACC,MAAD,EAASC,IAAT,EAAkB;AACpC,UAAMH,OAAO,2BAAiBE,MAAjB,CAAb;AACA,UAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC/B,eAAQ,8BAAC,IAAD,IAAM,MAAMG,IAAZ,GAAR;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,K;;;;;6BAEO;AAAA,mBAC2C,KAAKC,KADhD;AAAA,UACCC,MADD,UACCA,MADD;AAAA,UACSC,IADT,UACSA,IADT;AAAA,iCACeC,MADf;AAAA,UACeA,MADf,iCACsB,EADtB;AAAA,UAC0BC,YAD1B,UAC0BA,YAD1B;AAAA,UAGGC,IAHH,GASKH,IATL,CAGGG,IAHH;AAAA,UAIGC,qBAJH,GASKJ,IATL,CAIGI,qBAJH;AAAA,UAKGC,qBALH,GASKL,IATL,CAKGK,qBALH;AAAA,UAMGC,SANH,GASKN,IATL,CAMGM,SANH;AAAA,UAOGC,aAPH,GASKP,IATL,CAOGO,aAPH;AAAA,UAOkBC,YAPlB,GASKR,IATL,CAOkBQ,YAPlB;AAAA,8BASKR,IATL,CAQGZ,WARH;AAAA,UAQGA,WARH,qCAQe,EARf;AAAA,UAUGS,IAVH,GAUoBI,MAVpB,CAUGJ,IAVH;AAAA,UAUSD,MAVT,GAUoBK,MAVpB,CAUSL,MAVT;AAAA,UAWCa,SAXD,GAWaV,SACR7B,OAAOC,QADC,GAERD,OAAOO,QAbZ;AAAA,UAcAiC,mBAdA,GAcuBtB,YAAYuB,MAAZ,GAAmB,GAApB,GACd,IADc,GAEd,KAhBR;;AAkBN,aACG;AAAA;AAAA,UAAK,OAAOF,SAAZ;AACE;AACE,mBAAQ,OADV;AAEE,kBAAQ,KAFV;AAGE,mBAASP;AAHX,UADF;AAME;AACG,mBAAQ,EADX;AAEG,gBAAMC,IAFT;AAGG,wBAAc,EAAE9B,SAAS,MAAX,EAHjB;AAIG,qBAAWH,OAAOgB;AAJrB,UANF;AAYE;AACG,mBAAQ,eADX;AAEG,gBAAMkB,qBAFT;AAGG,qBAAWlC,OAAOQ,SAHrB;AAIG,wBAAcR,OAAOW,KAJxB;AAKG,qBAAWX,OAAOgB;AALrB,UAZF;AAmBE;AACG,mBAAQ,eADX;AAEG,gBAAMmB,qBAFT;AAGG,wBAAcnC,OAAOW,KAHxB;AAIG,qBAAWX,OAAOgB;AAJrB,UAnBF;AAyBE;AACG,mBAAQ,aADX;AAEG,gBAAMoB,SAFT;AAGG,wBAAcpC,OAAOW,KAHxB;AAIG,qBAAWX,OAAOgB;AAJrB,UAzBF;AA+BG,aAAKK,iBAAL,CAAuBgB,aAAvB,EAAsCC,YAAtC,CA/BH;AAgCE;AAAA;AAAA;AACI,qBAAQ,aADZ;AAEI,qBAASE,mBAFb;AAGI,mBAAOxC,OAAOkB;AAHlB;AAKE;AACG,qBAAQ,EADX;AAEG,kBAAMA,WAFT;AAGG,oBAAQ,IAHX;AAIG,uBAAWnB,eAJd;AAKG,uBAAWC,OAAOU,oBALrB;AAMG,uBAAWV,OAAOmB;AANrB;AALF,SAhCF;AA8CG,aAAKM,iBAAL,CAAuBC,MAAvB,EAA+BC,IAA/B;AA9CH,OADH;AAkDD;;;;;kBAGYP,a","file":"PanelDataInfo.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nimport RouterNativeLink from '../native-links/RouterNativeLink';\r\n\r\nimport ButtonTab from './ButtonTab';\r\nimport InfoPart from './InfoPart';\r\nimport OpenClose2 from './OpenClose2';\r\n\r\nconst DESCR_CSS_CLASS = 'info__descr'\r\n\r\nconst styles = {\r\n  rootShow : {\r\n    position: 'relative',\r\n    display: 'block',\r\n    paddingTop : '34px',\r\n    paddingRight : '20px',\r\n    paddingLeft : '8px'\r\n  },\r\n  rootHide : {\r\n    position: 'relative',\r\n    display: 'none'\r\n  },\r\n  rootStyle : {\r\n    marginTop: '4px'\r\n  },\r\n  rootStyleDescription : {\r\n    marginTop: '10px'\r\n  },\r\n  label : {\r\n    display : 'inline-block',\r\n    color : '#1B75BB',\r\n    width : '110px',\r\n    textAlign : 'right',\r\n    paddingRight : '5px',\r\n    fontWeight : 'bold'\r\n  },\r\n  text : {\r\n    fontWeight : 'bold',\r\n    color : 'black',\r\n    textTransform: 'capitalize'\r\n  },\r\n  description : {\r\n    paddingTop : '12px'\r\n  },\r\n  textDescr : {\r\n    color : 'gray',\r\n    fontWeight : 'bold'\r\n  }\r\n}\r\n\r\nclass PanelDataInfo extends Component {\r\n\r\n  _renderQuandlLink = (dbCode, dsCode) => {\r\n    if (!dbCode || !dsCode){\r\n      return null;\r\n    } else {\r\n      const Comp = RouterNativeLink['QUANDL'];\r\n      return (<Comp dbCode={dbCode} dsCode={dsCode} />);\r\n    }\r\n  }\r\n\r\n  _renderNativeLink = (linkFn, item) => {\r\n    const Comp = RouterNativeLink[linkFn]\r\n    if (typeof Comp !== 'undefined') {\r\n      return (<Comp item={item} />);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {isShow, info, zhInfo={}, onClickChart } = this.props\r\n        , {\r\n             name,\r\n             newest_available_date,\r\n             oldest_available_date,\r\n             frequency,\r\n             database_code, dataset_code,\r\n             description=''\r\n           } = info\r\n         , { item, linkFn } = zhInfo\r\n         , styleShow = isShow\r\n             ? styles.rootShow\r\n             : styles.rootHide\r\n        , _isDescriptionClose = (description.length>200)\r\n                ? true\r\n                : false;\r\n\r\n    return (\r\n       <div style={styleShow}>\r\n         <ButtonTab\r\n           caption=\"Chart\"\r\n           isShow={false}\r\n           onClick={onClickChart}\r\n         />\r\n         <InfoPart\r\n            caption=\"\"\r\n            text={name}\r\n            styleCaption={{ display: 'none' }}\r\n            styleText={styles.text}\r\n         />\r\n         <InfoPart\r\n            caption=\"Newest Date: \"\r\n            text={newest_available_date}\r\n            rootStyle={styles.rootStyle}\r\n            styleCaption={styles.label}\r\n            styleText={styles.text}\r\n         />\r\n         <InfoPart\r\n            caption=\"Oldest Date: \"\r\n            text={oldest_available_date}\r\n            styleCaption={styles.label}\r\n            styleText={styles.text}\r\n         />\r\n         <InfoPart\r\n            caption=\"Frequency: \"\r\n            text={frequency}\r\n            styleCaption={styles.label}\r\n            styleText={styles.text}\r\n         />\r\n         {this._renderQuandlLink(database_code, dataset_code)}\r\n         <OpenClose2\r\n             caption=\"Description\"\r\n             isClose={_isDescriptionClose}\r\n             style={styles.description}\r\n         >\r\n           <InfoPart\r\n              caption=\"\"\r\n              text={description}\r\n              isHtml={true}\r\n              classText={DESCR_CSS_CLASS}\r\n              rootStyle={styles.rootStyleDescription}\r\n              styleText={styles.textDescr}\r\n           />\r\n         </OpenClose2>\r\n         {this._renderNativeLink(linkFn, item)}\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PanelDataInfo\r\n"]}