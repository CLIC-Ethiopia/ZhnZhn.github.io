{"version":3,"sources":["../../../../src/components/zhn/__tests__/useInputKeyDown.test.js"],"names":["describe","test","onEnter","jest","fn","onDelete","initialValue","initialProps","result","rerender","onKeyDown","current","expect","toBe","keyCode","target","value","toHaveBeenCalledTimes","mock","calls","preventDefault","not"],"mappings":"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","sourcesContent":["import {renderHook, act} from '@testing-library/react-hooks'\r\nimport useInputKeyDown from '../useInputKeyDown'\r\n\r\ndescribe('useInputKeyDown', ()=>{\r\n  test('should return handle for input KeyDown', ()=>{\r\n    const onEnter = jest.fn()\r\n    , onDelete = jest.fn();\r\n    let initialValue = 'a';\r\n\r\n    const { result, rerender } = renderHook(\r\n      ({ onEnter, onDelete, initialValue})=>useInputKeyDown({onEnter, onDelete}, [initialValue]),\r\n      { initialProps: {\r\n       onEnter, onDelete,\r\n       initialValue\r\n      }}\r\n    )\r\n\r\n    //1 Test return type\r\n    let onKeyDown = result.current\r\n    expect(typeof onKeyDown).toBe('function')\r\n\r\n    //2.1 Test onEnter with event.target.value\r\n    act(() => onKeyDown({ keyCode: 13, target: { value: 'a'} }))\r\n    expect(onEnter).toHaveBeenCalledTimes(1)\r\n    expect(onEnter.mock.calls[0][0]).toBe('a')\r\n\r\n    //3.1 Test onDelete for Escape\r\n    const preventDefault = jest.fn()\r\n    act(() => onKeyDown({ keyCode: 27, preventDefault }))\r\n    expect(onDelete).toHaveBeenCalledTimes(1)\r\n    expect(preventDefault).toHaveBeenCalledTimes(1)\r\n    //3.2 Test onDelete for Delete\r\n    act(() => onKeyDown({ keyCode: 46, preventDefault }))\r\n    expect(onDelete).toHaveBeenCalledTimes(2)\r\n    expect(preventDefault).toHaveBeenCalledTimes(2)\r\n\r\n\r\n    //4 Test rerender with new deps\r\n    initialValue = 'b'\r\n    rerender({ onEnter: void 0, initialValue })\r\n    //4.1 Test return new function\r\n    expect(typeof result.current).toBe('function')\r\n    expect(result.current).not.toBe(onKeyDown)\r\n    //2.2 Test onEnter without fn\r\n    act(() => result.current({ keyCode: 13 }))\r\n    expect(onEnter).toHaveBeenCalledTimes(1)\r\n    \r\n  })\r\n})\r\n"],"file":"useInputKeyDown.test.js"}