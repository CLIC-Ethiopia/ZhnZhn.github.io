{"version":3,"sources":["../../../src/components/zhn/DialogContainer3.jsx"],"names":["S","ROOT","zIndex","position","top","left","width","getObjToFirst","arr","keyValue","index","i","max","length","key","slice","DialogContainer3","props","_checkActiveDialogs","dialogType","_activeDialogs","push","maxDialog","state","dialog","filterActiveDialogs","filter","value","_onStore","actionType","data","initAction","showAction","compDialogs","setState","dialogComp","_handlerToggleDialog","document","getElementsByTagName","style","cursor","_renderDialogs","map","compDialog","cloneElement","isShow","onClose","bind","unsubscribe","store","listen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,IAAI;AACRC,QAAM;AACJC,YAAS,IADL;AAEJC,cAAU,UAFN;AAGJC,SAAK,MAHD;AAIJC,UAAM,MAJF;AAKJC,WAAO;AALH;AADE,CAAV;;AAUA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAASC,GAAT,EAAcC,QAAd,EAAuB;AAC3C,MAAIC,cAAJ;AACA,OAAK,IAAIC,IAAE,CAAN,EAASC,MAAIJ,IAAIK,MAAtB,EAA8BF,IAAEC,GAAhC,EAAqCD,GAArC,EAAyC;AACvC,QAAIH,IAAIG,CAAJ,EAAOG,GAAP,KAAeL,QAAnB,EAA4B;AAC1BC,cAAQC,CAAR;AACA;AACD;AACF;AACD,oDAAWH,IAAIO,KAAJ,CAAU,CAAV,EAAaL,KAAb,CAAX,oCAAmCF,IAAIO,KAAJ,CAAUL,QAAM,CAAhB,CAAnC,IAAuDF,IAAIE,KAAJ,CAAvD;AACD,CATD;;IAYMM,gB;;;AACJ,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAgBjBC,mBAhBiB,GAgBK,UAACC,UAAD,EAAgB;AACpC,YAAKC,cAAL,CAAoBC,IAApB,CAAyBF,UAAzB;AACA,UAAI,MAAKC,cAAL,CAAoBP,MAApB,GAA6B,MAAKI,KAAL,CAAWK,SAA5C,EAAsD;AACpD,cAAKC,KAAL,CAAWC,MAAX,CAAkB,MAAKJ,cAAL,CAAoB,CAApB,CAAlB,IAA4C,KAA5C;AACA,cAAKA,cAAL,GAAsB,MAAKA,cAAL,CAAoBL,KAApB,CAA0B,CAA1B,CAAtB;AACD;AACF,KAtBgB;;AAAA,UAuBjBU,mBAvBiB,GAuBK,UAACN,UAAD,EAAgB;AACpC,YAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBM,MAApB,CAA2B,UAACC,KAAD,EAAW;AACxD,eAAOA,UAAUR,UAAjB;AACH,OAFqB,CAAtB;AAGD,KA3BgB;;AAAA,UA6BjBS,QA7BiB,GA6BN,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,wBACG,MAAKb,KADR;AAAA,UACvBc,UADuB,eACvBA,UADuB;AAAA,UACXC,UADW,eACXA,UADW;;AAE9B,UAAIH,eAAeG,UAAnB,EAA8B;AAC3B,YAAI,CAAC,MAAKT,KAAL,CAAWC,MAAX,CAAkBM,IAAlB,CAAL,EAA6B;AAC1B,gBAAKP,KAAL,CAAWC,MAAX,CAAkBM,IAAlB,IAA0B,IAA1B;AACA,gBAAKZ,mBAAL,CAAyBY,IAAzB;AACF;AACD,cAAKP,KAAL,CAAWU,WAAX,GAAyB1B,cAAc,MAAKgB,KAAL,CAAWU,WAAzB,EAAsCH,IAAtC,CAAzB;AACA,cAAKI,QAAL,CAAc,MAAKX,KAAnB;AAEF,OARD,MAQO,IAAIM,eAAeE,UAAnB,EAA+B;AACnC,cAAKR,KAAL,CAAWC,MAAX,CAAkBM,KAAKX,UAAvB,IAAqC,IAArC;AACA,cAAKI,KAAL,CAAWU,WAAX,CAAuBZ,IAAvB,CAA4BS,KAAKK,UAAjC;AACA,cAAKjB,mBAAL,CAAyBY,KAAKX,UAA9B;AACA,cAAKe,QAAL,CAAc,MAAKX,KAAnB;AACF;AACH,KA7CgB;;AAAA,UA+ClBa,oBA/CkB,GA+CK,UAACjB,UAAD,EAAgB;AAAA,UAC9BK,MAD8B,GACpB,MAAKD,KADe,CAC9BC,MAD8B;;AAErCA,aAAOL,UAAP,IAAqB,CAACK,OAAOL,UAAP,CAAtB;AACA,YAAKe,QAAL,CAAc,MAAKX,KAAnB;;AAEA,UAAI,CAACC,OAAOL,UAAP,CAAL,EAAyB;AACvB,cAAKM,mBAAL,CAAyBN,UAAzB;AACAkB,iBAASC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,KAAzC,CAA+CC,MAA/C,GAAwD,EAAxD;AACD;AACF,KAxDiB;;AAAA,UA0DlBC,cA1DkB,GA0DD,YAAM;AAAA,wBACS,MAAKlB,KADd;AAAA,UACdC,MADc,eACdA,MADc;AAAA,UACNS,WADM,eACNA,WADM;;AAErB,aAAOA,YAAYS,GAAZ,CAAgB,UAACC,UAAD,EAAajC,KAAb,EAAuB;AAC3C,eAAO,gBAAMkC,YAAN,CAAmBD,UAAnB,EACJ;AACG7B,eAAM6B,WAAW7B,GADpB;AAEG+B,kBAAUrB,OAAOmB,WAAW7B,GAAlB,CAFb;AAGGgC,mBAAU,MAAKV,oBAAL,CAA0BW,IAA1B,QAAqCJ,WAAW7B,GAAhD;AAHb,SADI,CAAP;AAMF,OAPM,CAAP;AAQD,KApEiB;;AAEhB,UAAKM,cAAL,GAAsB,EAAtB;AACA,UAAKG,KAAL,GAAa;AACXC,cAAQ,EADG;AAEXS,mBAAc;AAFH,KAAb;AAHgB;AAOjB;;;;yCAEoB;AAClB,WAAKe,WAAL,GAAmB,KAAK/B,KAAL,CAAWgC,KAAX,CAAiBC,MAAjB,CAAwB,KAAKtB,QAA7B,CAAnB;AACD;;;2CACqB;AACpB,WAAKoB,WAAL;AACD;;;6BAwDM;AACN,aACE;AAAA;AAAA,UAAK,OAAOhD,EAAEC,IAAd;AACG,aAAKwC,cAAL;AADH,OADF;AAKD;;;;;kBAGYzB,gB","file":"DialogContainer3.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    zIndex : 1030,\r\n    position: 'absolute',\r\n    top: '70px',\r\n    left: '10px',\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst getObjToFirst = function(arr, keyValue){\r\n  let index;\r\n  for (var i=0, max=arr.length; i<max; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  return [...arr.slice(0, index), ...arr.slice(index+1), arr[index]]\r\n}\r\n\r\n\r\nclass DialogContainer3 extends Component {\r\n  constructor(props){\r\n    super();\r\n    this._activeDialogs = [];\r\n    this.state = {\r\n      dialog: {},\r\n      compDialogs : []\r\n    }\r\n  }\r\n\r\n   componentWillMount(){\r\n     this.unsubscribe = this.props.store.listen(this._onStore);\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   }\r\n\r\n   _checkActiveDialogs = (dialogType) => {\r\n     this._activeDialogs.push(dialogType);\r\n     if (this._activeDialogs.length > this.props.maxDialog){\r\n       this.state.dialog[this._activeDialogs[0]] = false;\r\n       this._activeDialogs = this._activeDialogs.slice(1);\r\n     }\r\n   }\r\n   filterActiveDialogs = (dialogType) => {\r\n     this._activeDialogs = this._activeDialogs.filter((value) => {\r\n         return value !== dialogType;\r\n     })\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      const {initAction, showAction} = this.props;\r\n      if (actionType === showAction){\r\n         if (!this.state.dialog[data]){\r\n            this.state.dialog[data] = true;\r\n            this._checkActiveDialogs(data);\r\n         }\r\n         this.state.compDialogs = getObjToFirst(this.state.compDialogs, data);\r\n         this.setState(this.state);\r\n\r\n      } else if (actionType === initAction) {\r\n         this.state.dialog[data.dialogType] = true;\r\n         this.state.compDialogs.push(data.dialogComp);\r\n         this._checkActiveDialogs(data.dialogType);\r\n         this.setState(this.state);\r\n      }\r\n   }\r\n\r\n  _handlerToggleDialog = (dialogType) => {\r\n    const {dialog} = this.state;\r\n    dialog[dialogType] = !dialog[dialogType];\r\n    this.setState(this.state);\r\n\r\n    if (!dialog[dialogType]) {\r\n      this.filterActiveDialogs(dialogType);\r\n      document.getElementsByTagName('html')[0].style.cursor = '';\r\n    }\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const {dialog, compDialogs} = this.state;\r\n    return compDialogs.map((compDialog, index) => {\r\n       return React.cloneElement(compDialog,\r\n          {\r\n             key : compDialog.key,\r\n             isShow  : dialog[compDialog.key],\r\n             onClose : this._handlerToggleDialog.bind(this, compDialog.key)\r\n          });\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer3;\r\n"]}