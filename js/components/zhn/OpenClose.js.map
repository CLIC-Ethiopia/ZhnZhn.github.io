{"version":3,"sources":["../../../src/components/zhn/OpenClose.jsx"],"names":["CL","ROOT","SHOW_POPUP","NOT_SELECTED","DF","OPEN_COLOR","C","TITLE","CLOSE_COLOR","BLANK","S","ROOT_DIV","lineHeight","ROOT_SVG","display","width","height","marginLeft","CAPTION","color","paddingLeft","verticalAlign","fontFamily","fontWeight","fontSize","cursor","INLINE_BLOCK","BLOCK","NONE","PATH_OPEN","PATH_CLOSE","_crConf","isOpen","openColor","closeColor","_pathV","_fillV","_rootChildStyle","_rootChildCl","OpenClose","props","_hClick","setState","prev","_hKeyDown","event","isClose","state","render","rootStyle","ocStyle","caption","captionStyle","CompAfter","childStyle","children","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport C from '../styles/Color'\r\n\r\nimport isKeyEnter from './isKeyEnter'\r\n\r\nconst CL = {\r\n  ROOT: 'zhn-oc',\r\n  SHOW_POPUP: 'show-popup',\r\n  NOT_SELECTED: 'not-selected'\r\n};\r\n\r\nconst DF = {\r\n  OPEN_COLOR: C.TITLE,\r\n  CLOSE_COLOR: C.BLANK\r\n};\r\n\r\nconst S = {\r\n  ROOT_DIV: {\r\n    lineHeight: 2\r\n  },\r\n  ROOT_SVG: {\r\n    display: 'inline-block',\r\n    width: 16,\r\n    height: 16,\r\n    marginLeft: 8\r\n  },\r\n  CAPTION: {\r\n    color: C.TITLE,\r\n    paddingLeft: 4,\r\n    verticalAlign: 'top',\r\n    fontFamily: 'Roboto, Arial Unicode MS, Arial, sans-serif',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    cursor: 'pointer'\r\n  },\r\n\r\n  INLINE_BLOCK: {\r\n    display: 'inline-block'\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst PATH_OPEN = \"M 2,14 L 14,14 14,2 2,14\";\r\nconst PATH_CLOSE = \"M 2,2 L 14,8 2,14 2,2\";\r\n\r\nconst _crConf = ({ isOpen, openColor, closeColor }) => isOpen\r\n  ? {\r\n      _pathV: PATH_OPEN,\r\n      _fillV: openColor,\r\n      _rootChildStyle: S.BLOCK,\r\n      _rootChildCl: CL.SHOW_POPUP\r\n    }\r\n  : {\r\n      _pathV: PATH_CLOSE,\r\n      _fillV: closeColor,\r\n      _rootChildStyle: S.NONE,\r\n      _rootChildCl: null\r\n    };\r\n\r\nclass OpenClose extends Component {\r\n   /*\r\n   static propTypes = {\r\n     isClose: PropTypes.bool,\r\n\r\n     rootStyle: PropTypes.object,\r\n     ocStyle: PropTypes.object,\r\n     caption: PropTypes.string,\r\n     captionStyle: PropTypes.object,\r\n     openColor: PropTypes.string,\r\n     closeColor: PropTypes.string,\r\n     CompAfter: PropTypes.node,\r\n     childStyle: PropTypes.object\r\n   }\r\n   */\r\n\r\n   static defaultProps = {\r\n     openColor: DF.OPEN_COLOR,\r\n     closeColor: DF.CLOSE_COLOR\r\n   }\r\n   constructor(props){\r\n     super(props);\r\n     const { isClose } = props;\r\n     this.state = {\r\n       isOpen: isClose ? false : true\r\n     }\r\n   }\r\n\r\n  _hClick = () => {\r\n    this.setState(prev => ({\r\n      isOpen: !prev.isOpen\r\n    }));\r\n  }\r\n\r\n  _hKeyDown = (event) => {\r\n    if (isKeyEnter(event)){\r\n      this._hClick()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {\r\n        rootStyle, ocStyle,\r\n        caption, captionStyle,\r\n        openColor, closeColor,\r\n        CompAfter, childStyle, children\r\n      } = this.props\r\n    , { isOpen } = this.state\r\n    , {\r\n       _pathV, _fillV,\r\n       _rootChildStyle, _rootChildCl\r\n     } = _crConf({ isOpen, openColor, closeColor });\r\n\r\n    return (\r\n      <div style={{...S.ROOT_DIV, ...rootStyle}}>\r\n        <div className={CL.NOT_SELECTED}>\r\n          <div\r\n            role=\"menuitem\"\r\n            tabIndex=\"0\"\r\n            className={CL.ROOT}\r\n            style={ocStyle}\r\n            onClick={this._hClick}\r\n            onKeyDown={this._hKeyDown}\r\n          >\r\n            <div style={S.ROOT_SVG}>\r\n               <svg\r\n                  viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n                  preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                  style={S.INLINE_BLOCK}\r\n                >\r\n                 <path\r\n                    fill={_fillV}\r\n                    strokeWidth=\"1\"\r\n                    stroke={openColor}\r\n                    d={_pathV}\r\n                 />\r\n               </svg>\r\n           </div>\r\n           <span style={{...S.CAPTION, ...captionStyle}} >\r\n              {caption}\r\n           </span>\r\n         </div>\r\n         {CompAfter}\r\n      </div>\r\n      <div\r\n        className={_rootChildCl}\r\n        style={{ ...childStyle, ..._rootChildStyle}}\r\n      >\r\n        {children}\r\n      </div>\r\n     </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default OpenClose\r\n"],"file":"OpenClose.js"}