{"version":3,"sources":["../../../src/components/zhn/OpenClose.jsx"],"names":["styles","rootDiv","lineHeight","backgroundColor","rootSvg","display","width","height","marginLeft","labelCaption","paddingLeft","verticalAlign","color","fontFamily","fontWeight","fontSize","cursor","itemRow","OpenClose","props","_handleClickOpenClose","setState","isOpen","prev","isClose","state","pathOpen","fillOpen","pathClose","fillClose","caption","children","pathV","fillV","displayDivStyle","classShow"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAEA,IAAMA,SAAS;AACbC,WAAS;AACPC,gBAAY,CADL;AAEPC,qBAAiB;AAFV,GADI;AAKbC,WAAS;AACPC,aAAS,cADF;AAEPC,WAAO,MAFA;AAGPC,YAAQ,MAHD;AAIPC,gBAAY;AAJL,GALI;AAWbC,gBAAc;AACZC,iBAAa,KADD;AAEZC,mBAAe,KAFH;AAGZC,WAAO,wBAHK;AAIZC,gBAAY,6CAJA;AAKZC,gBAAY,MALA;AAMZC,cAAU,MANE;AAOZC,YAAQ;AAPI,GAXD;AAoBbC,WAAU;AACRd,qBAAiB;AADT;AApBG,CAAf;;IAyBMe,S;;;AACH,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAYnBC,qBAZmB,GAYK,YAAM;AAC5B,YAAKC,QAAL,CAAc;AAAA,eAAS,EAAEC,QAAQ,CAACC,KAAKD,MAAhB,EAAT;AAAA,OAAd;AACD,KAdkB;;AAEhB,QAAMA,SAAUH,MAAMK,OAAP,GAAkB,KAAlB,GAA0B,IAAzC;AACA,UAAKC,KAAL,GAAa;AACXH,cAAQA,MADG;AAEXI,gBAAU,0BAFC;AAGXC,gBAAU,QAHC;AAIXC,iBAAW,uBAJA;AAKXC,iBAAW;AALA,KAAb;AAHgB;AAUjB;;;;6BAMM;AAAA,mBACwB,KAAKV,KAD7B;AAAA,UACEW,OADF,UACEA,OADF;AAAA,UACWC,QADX,UACWA,QADX;AAAA,mBAMI,KAAKN,KANT;AAAA,UAGEH,MAHF,UAGEA,MAHF;AAAA,UAIEI,QAJF,UAIEA,QAJF;AAAA,UAIYC,QAJZ,UAIYA,QAJZ;AAAA,UAKEC,SALF,UAKEA,SALF;AAAA,UAKaC,SALb,UAKaA,SALb;;AAON,UAAIG,cAAJ;AAAA,UAAWC,cAAX;AAAA,UAAkBC,wBAAlB;AAAA,UAAmCC,kBAAnC;AACA,UAAIb,MAAJ,EAAW;AACTU,gBAAQN,QAAR;AACAO,gBAAQN,QAAR;AACAO,0BAAkB,OAAlB;AACAC,oBAAY,YAAZ;AACD,OALD,MAKO;AACLH,gBAAQJ,SAAR;AACAK,gBAAQJ,SAAR;AACAK,0BAAkB,MAAlB;AACAC,oBAAY,IAAZ;AACD;;AAED,aACE;AAAA;AAAA,UAAK,OAAOnC,OAAOC,OAAnB;AACE;AAAA;AAAA,YAAK,WAAU,cAAf,EAA8B,SAAS,KAAKmB,qBAA5C;AACE;AAAA;AAAA,cAAK,OAAOpB,OAAOI,OAAnB;AACG;AAAA;AAAA;AACG,yBAAQ,WADX,EACuB,OAAM,MAD7B,EACoC,QAAO,MAD3C;AAEG,qCAAoB,MAFvB,EAE8B,OAAM,4BAFpC;AAGG,uBAAO,EAACC,SAAS,cAAV;AAHV;AAKA;AACG,mBAAG2B,KADN;AAEG,sBAAMC,KAFT;AAGG,6BAAY,GAHf,EAGmB,QAAO;AAH1B;AALA;AADH,WADF;AAeC;AAAA;AAAA,cAAM,OAAOjC,OAAOS,YAApB;AACIqB;AADJ;AAfD,SADF;AAoBA;AAAA;AAAA,YAAK,WAAWK,SAAhB,EAA2B,OAAO,EAAC9B,SAAS6B,eAAV,EAAlC;AACGH;AADH;AApBA,OADF;AA0BA;;;;;;kBAGWb,S","file":"OpenClose.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst styles = {\r\n  rootDiv: {\r\n    lineHeight: 2,\r\n    backgroundColor: '#4D4D4D'\r\n  },\r\n  rootSvg: {\r\n    display: 'inline-block',\r\n    width: '16px',\r\n    height: '16px',\r\n    marginLeft: '8px'\r\n  },\r\n  labelCaption: {\r\n    paddingLeft: '4px',\r\n    verticalAlign: 'top',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    fontFamily: 'Roboto, Arial Unicode MS, Arial, sans-serif',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    cursor: 'pointer'\r\n  },\r\n  itemRow : {\r\n    backgroundColor: '#404040'\r\n  }\r\n};\r\n\r\nclass OpenClose extends Component {\r\n   constructor(props){\r\n     super();\r\n     const isOpen = (props.isClose) ? false : true;\r\n     this.state = {\r\n       isOpen: isOpen,\r\n       pathOpen: \"M 2,14 L 14,14 14,2 2,14\",\r\n       fillOpen: \"yellow\",\r\n       pathClose: \"M 2,2 L 14,8 2,14 2,2\",\r\n       fillClose: \"#4D4D4D\"\r\n     }\r\n   }\r\n\r\n  _handleClickOpenClose = () => {\r\n    this.setState(prev => ({ isOpen: !prev.isOpen }));\r\n  }\r\n\r\n  render(){\r\n    const { caption, children } = this.props\r\n        , {\r\n            isOpen,\r\n            pathOpen, fillOpen,\r\n            pathClose, fillClose\r\n          } = this.state;\r\n    let pathV, fillV, displayDivStyle, classShow;\r\n    if (isOpen){\r\n      pathV = pathOpen;\r\n      fillV = fillOpen;\r\n      displayDivStyle = 'block';\r\n      classShow = 'show-popup';\r\n    } else {\r\n      pathV = pathClose;\r\n      fillV = fillClose;\r\n      displayDivStyle = 'none';\r\n      classShow = null;\r\n    }\r\n\r\n    return (\r\n      <div style={styles.rootDiv}>\r\n        <div className=\"not-selected\" onClick={this._handleClickOpenClose}>\r\n          <div style={styles.rootSvg}>\r\n             <svg\r\n                viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n                preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                style={{display: 'inline-block'}}\r\n              >\r\n             <path\r\n                d={pathV}\r\n                fill={fillV}\r\n                strokeWidth=\"1\" stroke=\"yellow\"\r\n             >\r\n             </path>\r\n             </svg>\r\n         </div>\r\n         <span style={styles.labelCaption} >\r\n            {caption}\r\n         </span>\r\n      </div>\r\n      <div className={classShow} style={{display: displayDivStyle}}>\r\n        {children}\r\n      </div>\r\n     </div>\r\n    );\r\n   }\r\n}\r\n\r\nexport default OpenClose\r\n"]}