{"version":3,"sources":["../../../src/components/zhn/PanelIndicator.jsx"],"names":["styles","rootDiv","position","zIndex","top","left","backgroundColor","border","borderRadius","boxShadow","padding","paddingTop","paddingBottom","captionSpan","display","color","fontWeight","width","PanelIndicator","state","descr","mfiDescrs","_checkIfAlreadyAdded","arrObj","id","result","find","obj","undefined","_handleAddSma","refs","inputSMA","getValue","_id","value","props","onAddSma","push","setState","_handleRemoveSerias","onRemoveSeries","filter","_handleRemoveMfi","onRemoveMfi","_handleAddMfi","_value","inputMfi","onAddMfi","_renderIndicators","_descr","map","index","bind","paddingLeft","_renderMfi","isShow","isMfi","_mfiDom"],"mappings":"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","file":"PanelIndicator.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ShowHide from './ShowHide';\r\nimport InputText from './InputText';\r\nimport SvgPlus from './SvgPlus';\r\nimport SvgMinus from './SvgMinus';\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    position : 'absolute',\r\n    zIndex : 10,\r\n    top : '55px',\r\n    left : '8px',\r\n\r\n    backgroundColor: 'rgb(77, 77, 77)',\r\n    border : '2px solid rgb(35, 47, 59)',\r\n    borderRadius : '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 5px',\r\n\r\n    padding : '10px',\r\n    paddingTop : '5px',\r\n    paddingBottom : '5px'\r\n  },\r\n  captionSpan : {\r\n    display : 'inline-block',\r\n    color : 'black',\r\n    fontWeight : 'bold',\r\n    width : '48px'\r\n  }\r\n}\r\n\r\nclass PanelIndicator extends Component {\r\n  state = {\r\n    descr : [],\r\n    mfiDescrs : []\r\n  }\r\n\r\n  _checkIfAlreadyAdded = (arrObj, id) => {\r\n    const result = arrObj.find(obj => obj.id === id);\r\n    if (result === undefined){\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  _handleAddSma = () => {\r\n    const value = this.refs.inputSMA.getValue()\r\n        , {descr} = this.state\r\n        , _id = 'SMA(' + value + ')';\r\n\r\n    if ( !this._checkIfAlreadyAdded(descr, _id)  ){\r\n       const color = this.props.onAddSma(value);\r\n       if (color){\r\n          descr.push({\r\n            id : _id,\r\n            color : color\r\n          });\r\n        this.setState({descr : descr});\r\n       }\r\n    }\r\n  }\r\n  _handleRemoveSerias = (id) => {\r\n    if (this.props.onRemoveSeries(id)){\r\n       this.state.descr = this.state.descr.filter((descr) =>{\r\n         return descr.id !== id\r\n       });\r\n       this.setState({descr : this.state.descr});\r\n    }\r\n  }\r\n  _handleRemoveMfi = (id) => {\r\n    this.props.onRemoveMfi(id);\r\n    this.state.mfiDescrs = this.state.mfiDescrs.filter((descr) =>{\r\n         return descr.id !== id\r\n    });\r\n    this.setState({mfiDescrs : this.state.mfiDescrs});\r\n  }\r\n\r\n  _handleAddMfi = () => {\r\n    const {mfiDescrs} = this.state\r\n        , _value = this.refs.inputMfi.getValue()\r\n        , _id = 'MFI(' + _value + ')';\r\n\r\n    if ( !this._checkIfAlreadyAdded(mfiDescrs, _id)  ){\r\n        this.props.onAddMfi(_value, _id);\r\n        mfiDescrs.push({\r\n            id : _id,\r\n            color : 'green'\r\n        });\r\n        this.setState({mfiDescrs : mfiDescrs});\r\n    }\r\n  }\r\n\r\n  _renderIndicators = () => {\r\n    const _descr = this.state.descr.map((descr, index) => {\r\n      const {id, color} = descr;\r\n      return (\r\n        <div key={id} style={{paddingTop: '5px'}}>\r\n          <SvgMinus\r\n             onClick={this._handleRemoveSerias.bind(null, id)}\r\n          />\r\n          <span style={{color: color, paddingLeft: '8px'}}>{id}</span>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <div>\r\n         {_descr}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _renderMfi = () => {\r\n    const _descr = this.state.mfiDescrs.map((descr, index) => {\r\n      const {id, color} = descr;\r\n      return (\r\n        <div key={id} style={{paddingTop: '5px'}}>\r\n          <SvgMinus\r\n             onClick={this._handleRemoveMfi.bind(null, id)}\r\n          />\r\n          <span style={{color: color, paddingLeft: '8px'}}>{id}</span>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <div>\r\n         {_descr}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const {isShow, isMfi} = this.props\r\n\r\n    const _mfiDom = (isMfi) ? (\r\n      <div>\r\n        <div style={{paddingTop: '5px'}}>\r\n          <span style={styles.captionSpan}>MFI</span>\r\n            <InputText\r\n              ref=\"inputMfi\"\r\n              initValue=\"14\"\r\n            />\r\n            <SvgPlus onClick={this._handleAddMfi} />\r\n        </div>\r\n        {this._renderMfi()}\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <ShowHide isShow={isShow} style={styles.rootDiv}>\r\n        <div>\r\n          <span style={styles.captionSpan}>SMA</span>\r\n          <InputText\r\n             ref=\"inputSMA\"\r\n             initValue=\"50\"\r\n          />\r\n          <SvgPlus onClick={this._handleAddSma} />\r\n        </div>\r\n        {this._renderIndicators()}\r\n\r\n        {_mfiDom}\r\n\r\n      </ShowHide>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PanelIndicator\r\n"]}