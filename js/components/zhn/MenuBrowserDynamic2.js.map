{"version":3,"sources":["../../../src/components/zhn/MenuBrowserDynamic2.jsx"],"names":["SEARCH_PLACEHOLDER","CLASS","BROWSER","BROWSER_WITH_SEARCH","STYLE","paddingRight","paddingBottom","minWidth","WRAPPER_SEARCH","width","SPINNER_LOADING","position","display","textAlign","margin","marginTop","height","MenuBrowserDynamic2","props","_loadMenu","browserType","caption","sourceMenuUrl","onLoadMenu","_onStore","actionType","data","showAction","loadCompletedAction","_handleShow","setState","menuItems","json","isLoaded","_handleHide","isShow","_handleClickInfo","descrUrl","onClickInfo","_handleClickSearch","state","isShowSearch","scrollClass","_handleClickItem","item","modalDialogType","chartContainerType","onShowLoadDialog","onShowContainer","onShow","isInitShow","toolbarButtons","onClick","bind","unsubscribe","store","listen","nextProps","nextState","children","ItemOptionComp","ItemComp","_wrapperSearch","length","undefined","_spinnerLoading"],"mappings":"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","file":"MenuBrowserDynamic2.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Browser from './Browser';\r\nimport BrowserCaption from './BrowserCaption';\r\nimport ToolbarButtonCircle from '../dialogs/ToolbarButtonCircle';\r\n\r\nimport ShowHide from './ShowHide';\r\nimport WrapperInputSearch from '../zhn-select/WrapperInputSearch';\r\n\r\nimport ScrollPane from './ScrollPane';\r\nimport SpinnerLoading from './SpinnerLoading';\r\nimport MenuListType2 from './MenuListType2';\r\n\r\nconst SEARCH_PLACEHOLDER = \"Search By Symbol Or Name\"\r\n\r\nconst CLASS = {\r\n  BROWSER : \"scroll-browser-by\",\r\n  BROWSER_WITH_SEARCH : \"scroll-browser-by--search\"\r\n}\r\n\r\nconst STYLE = {\r\n  BROWSER : {\r\n    paddingRight: '0',\r\n    paddingBottom: '4px',\r\n    minWidth: '300px'\r\n  },\r\n  WRAPPER_SEARCH : {\r\n     paddingBottom: '8px',\r\n     width: '100%',\r\n     paddingRight: '24px'\r\n  },\r\n  SPINNER_LOADING : {\r\n    position: 'relative',\r\n    display: 'block',\r\n    textAlign: 'middle',\r\n    margin: '0 auto',\r\n    marginTop: '32px',\r\n    width: '32px',\r\n    height: '32px'\r\n  }\r\n};\r\n\r\nclass MenuBrowserDynamic2 extends Component {\r\n  constructor(props){\r\n    super();\r\n    const { isInitShow } = props;\r\n    this.toolbarButtons = [\r\n      { caption: 'I', onClick: this._handleClickInfo.bind(this) },\r\n      { caption: 'S', onClick: this._handleClickSearch.bind(this) }\r\n    ];\r\n    this.state = {\r\n      isShow: isInitShow ? true : false,\r\n      isShowSearch : false,\r\n      scrollClass : CLASS.BROWSER,\r\n      isLoaded : false,\r\n      menuItems: []\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  }\r\n  componentDidMount(){\r\n    this._loadMenu();\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n     if (!nextState.isLoaded && nextState.isShow){\r\n       this._loadMenu();\r\n     }\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _loadMenu = () => {\r\n    const { browserType, caption, sourceMenuUrl, onLoadMenu } = this.props;\r\n    onLoadMenu({ browserType, caption, sourceMenuUrl });\r\n  }\r\n\r\n  _onStore = (actionType, data) => {\r\n    const { browserType, showAction, loadCompletedAction } = this.props;\r\n    if (actionType === showAction && data === browserType){\r\n      this._handleShow();\r\n    } else if (actionType === loadCompletedAction && data.browserType === browserType){\r\n      this.setState({ menuItems: data.json, isLoaded : true });\r\n    }\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({isShow : false});\r\n  }\r\n  _handleShow = () => {\r\n    this.setState({isShow : true});\r\n  }\r\n\r\n  _handleClickInfo = () => {\r\n    const {descrUrl, onClickInfo} = this.props;\r\n    onClickInfo({ descrUrl });\r\n  }\r\n  _handleClickSearch = () => {\r\n    if (this.state.isShowSearch){\r\n      this.setState({\r\n         isShowSearch: false,\r\n         scrollClass: CLASS.BROWSER\r\n       });\r\n    } else {\r\n      this.setState({\r\n         isShowSearch: true,\r\n         scrollClass: CLASS.BROWSER_WITH_SEARCH\r\n       });\r\n    }\r\n  }\r\n\r\n  _handleClickItem = (item) => {\r\n    const {\r\n      modalDialogType, browserType, chartContainerType,\r\n      onShowLoadDialog, onShowContainer\r\n    } = this.props;\r\n\r\n    onShowLoadDialog(modalDialogType, {\r\n      item, browserType, chartContainerType,\r\n      onShow : onShowContainer\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            caption, children,\r\n            ItemOptionComp, ItemComp\r\n          } = this.props\r\n        , { menuItems, isShow, isShowSearch, scrollClass } = this.state\r\n        , _wrapperSearch = (menuItems.length !== 0)\r\n               ? (\r\n                   <ShowHide isShow={isShowSearch}>\r\n                     <WrapperInputSearch\r\n                       style={STYLE.WRAPPER_SEARCH}\r\n                       placeholder={SEARCH_PLACEHOLDER}\r\n                       data={menuItems}\r\n                       ItemOptionComp={ItemOptionComp}\r\n                       onSelect={this._handleClickItem}\r\n                     />\r\n                   </ShowHide>\r\n                 )\r\n               : undefined\r\n         , _spinnerLoading = (menuItems.length === 0)\r\n               ? (<SpinnerLoading style={STYLE.SPINNER_LOADING}/>)\r\n               : undefined\r\n    return (\r\n       <Browser isShow={isShow} style={STYLE.BROWSER}>\r\n           <BrowserCaption\r\n              caption={caption}\r\n              onClose={this._handleHide}\r\n           />\r\n          <ToolbarButtonCircle\r\n            buttons={this.toolbarButtons}\r\n          />\r\n\r\n          {_wrapperSearch}\r\n\r\n          <ScrollPane className={scrollClass}>\r\n            {_spinnerLoading}\r\n            <MenuListType2\r\n               model={menuItems}\r\n               ItemComp={ItemComp}\r\n               onClickItem={this._handleClickItem}\r\n            />\r\n            {children}\r\n          </ScrollPane>\r\n       </Browser>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuBrowserDynamic2;\r\n"]}