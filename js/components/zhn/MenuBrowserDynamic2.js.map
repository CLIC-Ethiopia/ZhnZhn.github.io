{"version":3,"sources":["../../../src/components/zhn/MenuBrowserDynamic2.jsx"],"names":["SEARCH_PLACEHOLDER","CL","BROWSER","BROWSER_WITH_SEARCH","ROW_ITEM","STYLE","paddingRight","paddingBottom","minWidth","WRAPPER_SEARCH","width","SPINNER_LOADING","position","display","textAlign","margin","marginTop","height","MenuBrowserDynamic2","props","_loadMenu","browserType","caption","sourceMenuUrl","onLoadMenu","_onStore","actionType","data","showAction","loadCompletedAction","_handleShow","setState","menuItems","json","isLoaded","_handleHide","isShow","_handleClickInfo","descrUrl","onClickInfo","_handleClickSearch","state","isShowSearch","scrollClass","_handleClickItem","item","modalDialogType","chartContainerType","onShowLoadDialog","onShowContainer","onShow","isInitShow","toolbarButtons","onClick","bind","componentDidMount","unsubscribe","store","listen","componentDidUpdate","componentWillUnmount","render","children","ItemOptionComp","ItemComp","_wrapperSearch","length","_spinnerLoading","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Browser from './Browser';\r\nimport BrowserCaption from './BrowserCaption';\r\nimport ToolbarButtonCircle from '../dialogs/ToolbarButtonCircle';\r\n\r\nimport ShowHide from './ShowHide';\r\nimport WrapperInputSearch from '../zhn-select/WrapperInputSearch';\r\n\r\nimport ScrollPane from './ScrollPane';\r\nimport SpinnerLoading from './SpinnerLoading';\r\nimport MenuListType2 from './MenuListType2';\r\n\r\nconst SEARCH_PLACEHOLDER = \"Search By Symbol Or Name\"\r\n\r\nconst CL = {\r\n  BROWSER : \"scroll-browser-by\",\r\n  BROWSER_WITH_SEARCH : \"scroll-browser-by--search\",\r\n  ROW_ITEM: 'row__type2-topic not-selected'\r\n}\r\n\r\nconst STYLE = {\r\n  BROWSER : {\r\n    paddingRight: '0',\r\n    paddingBottom: '4px',\r\n    minWidth: '300px'\r\n  },\r\n  WRAPPER_SEARCH : {\r\n     paddingBottom: '8px',\r\n     width: '100%',\r\n     paddingRight: '24px'\r\n  },\r\n  SPINNER_LOADING : {\r\n    position: 'relative',\r\n    display: 'block',\r\n    textAlign: 'middle',\r\n    margin: '0 auto',\r\n    marginTop: '32px',\r\n    width: '32px',\r\n    height: '32px'\r\n  }\r\n};\r\n\r\nclass MenuBrowserDynamic2 extends Component {\r\n  constructor(props){\r\n    super();\r\n    const { isInitShow } = props;\r\n    this.toolbarButtons = [\r\n      { caption: 'I', onClick: this._handleClickInfo.bind(this) },\r\n      { caption: 'S', onClick: this._handleClickSearch.bind(this) }\r\n    ];\r\n    this.state = {\r\n      isShow: isInitShow ? true : false,\r\n      isShowSearch : false,\r\n      scrollClass : CL.BROWSER,\r\n      isLoaded : false,\r\n      menuItems: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n    this._loadMenu()\r\n  }\r\n  componentDidUpdate(){\r\n    const {isLoaded, isShow} = this.state;\r\n    if (!isLoaded && isShow) {\r\n      this._loadMenu()\r\n    }\r\n  }  \r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _loadMenu = () => {\r\n    const { browserType, caption, sourceMenuUrl, onLoadMenu } = this.props;\r\n    onLoadMenu({ browserType, caption, sourceMenuUrl });\r\n  }\r\n\r\n  _onStore = (actionType, data) => {\r\n    const { browserType, showAction, loadCompletedAction } = this.props;\r\n    if (actionType === showAction && data === browserType){\r\n      this._handleShow();\r\n    } else if (actionType === loadCompletedAction && data.browserType === browserType){\r\n      this.setState({ menuItems: data.json, isLoaded : true });\r\n    }\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({isShow : false});\r\n  }\r\n  _handleShow = () => {\r\n    this.setState({isShow : true});\r\n  }\r\n\r\n  _handleClickInfo = () => {\r\n    const {descrUrl, onClickInfo} = this.props;\r\n    onClickInfo({ descrUrl });\r\n  }\r\n  _handleClickSearch = () => {\r\n    if (this.state.isShowSearch){\r\n      this.setState({\r\n         isShowSearch: false,\r\n         scrollClass: CL.BROWSER\r\n       });\r\n    } else {\r\n      this.setState({\r\n         isShowSearch: true,\r\n         scrollClass: CL.BROWSER_WITH_SEARCH\r\n       });\r\n    }\r\n  }\r\n\r\n  _handleClickItem = (item) => {\r\n    const {\r\n      modalDialogType, browserType, chartContainerType,\r\n      onShowLoadDialog, onShowContainer\r\n    } = this.props;\r\n\r\n    onShowLoadDialog(modalDialogType, {\r\n      item, browserType, chartContainerType,\r\n      onShow : onShowContainer\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            caption, children,\r\n            ItemOptionComp, ItemComp\r\n          } = this.props\r\n        , { menuItems, isShow, isShowSearch, scrollClass } = this.state\r\n        , _wrapperSearch = (menuItems.length !== 0)\r\n               ? (\r\n                   <ShowHide isShow={isShowSearch}>\r\n                     <WrapperInputSearch\r\n                       style={STYLE.WRAPPER_SEARCH}\r\n                       placeholder={SEARCH_PLACEHOLDER}\r\n                       data={menuItems}\r\n                       ItemOptionComp={ItemOptionComp}\r\n                       onSelect={this._handleClickItem}\r\n                     />\r\n                   </ShowHide>\r\n                 )\r\n               : null\r\n         , _spinnerLoading = (menuItems.length === 0)\r\n               ? (<SpinnerLoading style={STYLE.SPINNER_LOADING}/>)\r\n               : null;\r\n    return (\r\n       <Browser isShow={isShow} style={STYLE.BROWSER}>\r\n           <BrowserCaption\r\n              caption={caption}\r\n              onClose={this._handleHide}\r\n           />\r\n          <ToolbarButtonCircle\r\n            buttons={this.toolbarButtons}\r\n          />\r\n\r\n          {_wrapperSearch}\r\n\r\n          <ScrollPane className={scrollClass}>\r\n            {_spinnerLoading}\r\n            <MenuListType2\r\n               model={menuItems}\r\n               ItemComp={ItemComp}\r\n               itemClassName={CL.ROW_ITEM}\r\n               onClickItem={this._handleClickItem}\r\n            />\r\n            {children}\r\n          </ScrollPane>\r\n       </Browser>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuBrowserDynamic2;\r\n"],"file":"MenuBrowserDynamic2.js"}