{"version":3,"sources":["../../../src/components/zhn/ButtonTab.jsx"],"names":["TH_ID","ButtonTab","props","_hClick","isUpdatable","onClick","setState","prevState","isShow","state","UNSAFE_componentWillReceiveProps","nextProps","_isShow","render","theme","caption","style","children","TS","getStyle","_rootClass","BG","Component","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA;;AAFA;AAIA,IAAMA,KAAK,GAAG,SAAd;;IAEMC,S;;;;;AACJ;;;;;;;;;AAeA,qBAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;;AADgB,UA8BlBC,OA9BkB,GA8BR,YAAM;AAAA,wBACmB,MAAKD,KADxB;AAAA,UACNE,WADM,eACNA,WADM;AAAA,UACOC,OADP,eACOA,OADP;AAEdA,MAAAA,OAAO;;AACP,UAAID,WAAJ,EAAiB;AACf,cAAKE,QAAL,CAAc,UAAAC,SAAS;AAAA,iBAAK;AAC1BC,YAAAA,MAAM,EAAE,CAACD,SAAS,CAACC;AADO,WAAL;AAAA,SAAvB;AAGD;AACF,KAtCiB;;AAEhB,UAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,CAAC,CAACN,KAAK,CAACM;AADL,KAAb;AAFgB;AAKjB;AAED;;;;;;;;;;;;;;SAYAE,gC,GAAA,0CAAiCC,SAAjC,EAA2C;AACzC,QAAKA,SAAS,CAACP,WAAV,IACA,KAAKF,KAAL,KAAeS,SADpB,EAC+B;AAC3B,UAAMC,OAAO,GAAG,CAAC,CAACD,SAAS,CAACH,MAA5B;;AACA,UAAKI,OAAO,KAAK,KAAKH,KAAL,CAAWD,MAA5B,EAAoC;AAClC,aAAKF,QAAL,CAAc;AAAEE,UAAAA,MAAM,EAAEI;AAAV,SAAd;AACD;AACJ;AACF,G;;SAaDC,M,GAAA,kBAAQ;AAAA,uBACoC,KAAKX,KADzC;AAAA,QACCY,KADD,gBACCA,KADD;AAAA,QACQC,OADR,gBACQA,OADR;AAAA,QACiBC,KADjB,gBACiBA,KADjB;AAAA,QACwBC,QADxB,gBACwBA,QADxB;AAAA,QAEAC,EAFA,GAEKJ,KAAK,CAACK,QAAN,CAAenB,KAAf,CAFL;AAAA,QAGAoB,UAHA,GAGa,KAAKX,KAAL,CAAWD,MAAX,GACR,0CADQ,GAER,yBALL;;AAMN,WACE;AACE,MAAA,SAAS,EAAEY,UADb;AAEE,MAAA,KAAK,gCAAMJ,KAAN,MAAgBE,EAAE,CAACG,EAAnB,CAFP;AAGE,MAAA,OAAO,EAAE,KAAKlB;AAHhB,OAKIY,OALJ,EAMIE,QANJ,CADF;AAUD,G;;;EAxEqBK,gB;;AAAlBrB,S,CAWGsB,Y,GAAe;AACpBnB,EAAAA,WAAW,EAAE;AADO,C;;eAgET,2BAAUH,SAAV,C","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\n\r\nconst TH_ID = 'ELEMENT';\r\n\r\nclass ButtonTab extends Component {\r\n  /*\r\n  static propTypes = {\r\n    style : PropTypes.object,\r\n    isShow : PropTypes.bool,\r\n    notUpdatable : PropTypes.bool\r\n    caption : PropTypes.string,\r\n    onClick : PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    isUpdatable: true\r\n  }\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isShow: !!props.isShow\r\n    }\r\n  }\r\n\r\n  /*\r\n  componentDidUpdate(prevProps){\r\n     if (prevProps !== this.props) {\r\n       const _isShow = !!this.props.isShow;\r\n       if ( _isShow !== this.state.isShow ) {\r\n         this.setState({ isShow: _isShow })\r\n       }\r\n     }\r\n  }\r\n  */\r\n\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if ( nextProps.isUpdatable &&\r\n         this.props !== nextProps) {\r\n        const _isShow = !!nextProps.isShow;\r\n        if ( _isShow !== this.state.isShow) {\r\n          this.setState({ isShow: _isShow })\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  _hClick = () => {\r\n    const { isUpdatable, onClick } = this.props\r\n    onClick();\r\n    if (isUpdatable) {\r\n      this.setState(prevState => ({\r\n        isShow: !prevState.isShow\r\n      }));\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {theme, caption, style, children} = this.props\r\n        , TS = theme.getStyle(TH_ID)\r\n        , _rootClass = this.state.isShow\r\n             ? 'button-tab button-tab--show not-selected'\r\n             : 'button-tab not-selected';\r\n    return (\r\n      <div\r\n        className={_rootClass}\r\n        style={{...style, ...TS.BG}}\r\n        onClick={this._hClick}\r\n      >\r\n         {caption}\r\n         {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(ButtonTab)\r\n"],"file":"ButtonTab.js"}