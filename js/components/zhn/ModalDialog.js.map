{"version":3,"sources":["../../../src/components/zhn/ModalDialog.jsx"],"names":["ClassNames","SHOWING","HIDING","Styles","SHOW","display","HIDE","HIDE_POPUP","opacity","transform","ROOT_DIV","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","CAPTON_DIV","padding","color","textAlign","fontSize","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","ModalDialog","props","_handleClickDialog","event","stopPropagation","_renderCommandButton","commandButtons","onClose","wasClosing","nextProps","nextState","isNotUpdate","prevProps","prevState","setTimeout","setState","timeout","isShow","isWithButton","style","caption","styleCaption","children","_className","_style","Object","assign","propTypes","bool","number","string","object","func","defaultProps"],"mappings":"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","file":"ModalDialog.js","sourcesContent":["import React, { Component, PropTypes} from 'react';\r\n\r\nimport SvgClose from './SvgClose';\r\nimport ActionButton from './ActionButton';\r\n\r\nconst ClassNames = {\r\n  SHOWING : 'show-popup',\r\n  HIDING : 'hide-popup'\r\n};\r\n\r\nconst Styles = {\r\n  SHOW : {\r\n    display : 'block'\r\n  },\r\n  HIDE : {\r\n    display : 'none'\r\n  },\r\n  HIDE_POPUP : {\r\n    opacity: 0,\r\n    transform : 'scaleY(0)'\r\n  },\r\n  ROOT_DIV: {\r\n    position: 'absolute',\r\n    top: '20%',\r\n    left: '40%',\r\n    display: 'block',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #232F3B',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  CAPTON_DIV:{\r\n    padding: '5px',\r\n    color: 'rgba(164, 135, 212,1)',\r\n    backgroundColor: '#232F3B',\r\n    textAlign: 'center',\r\n    fontSize: '18px'\r\n  },\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n   static propTypes = {\r\n     isShow : PropTypes.bool,\r\n     isWithButton : PropTypes.bool,\r\n     timeout : PropTypes.number,\r\n     caption : PropTypes.string,\r\n     style : PropTypes.object,\r\n     onClose : PropTypes.func\r\n   }\r\n   static defaultProps = {\r\n     isWithButton : true,\r\n     isNotUpdate : false,\r\n     timeout : 450\r\n   }\r\n\r\n   constructor(props){\r\n     super()\r\n     this.wasClosing = false;\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if (this.wasClosing){\r\n       setTimeout(()=>{\r\n         this.setState({});\r\n       }, this.props.timeout)\r\n     }\r\n   }\r\n\r\n  _handleClickDialog = (event) => {\r\n    event.stopPropagation();\r\n   }\r\n\r\n  _renderCommandButton = () => {\r\n    const {commandButtons, onClose} = this.props;\r\n    return (\r\n      <div style={Styles.COMMAND_DIV}>\r\n        {commandButtons}\r\n        <ActionButton\r\n           type=\"TypeC\"\r\n           caption=\"Close\"\r\n           onClick={onClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, isWithButton, style,\r\n            caption, styleCaption,\r\n            children, onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = Styles.HIDE;\r\n      this.wasClosing = false;\r\n    } else {\r\n      _className = isShow ? ClassNames.SHOWING : ClassNames.HIDING;\r\n      _style = isShow ? Styles.SHOW : Styles.HIDE_POPUP;\r\n      if (!isShow){\r\n        this.wasClosing = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n         <div\r\n             className={_className}\r\n             style={Object.assign({}, Styles.ROOT_DIV, style, _style)}\r\n             onClick={this._handleClickDialog}\r\n         >\r\n             <div style={Styles.CAPTON_DIV}>\r\n                <span style={styleCaption}>{caption}</span>\r\n                <SvgClose onClose={onClose} />\r\n             </div>\r\n             <div>\r\n               {children}\r\n             </div>\r\n            {isWithButton && this._renderCommandButton()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog;\r\n"]}