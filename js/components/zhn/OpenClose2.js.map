{"version":3,"sources":["../../../src/components/zhn/OpenClose2.jsx"],"names":["CL","SHOW","NOT_SELECTED","DF","FILL_OPEN","C","YELLOW","FILL_CLOSE","BLANK","S","ROOT","lineHeight","DIV_SVG","display","width","height","marginLeft","SVG","CAPTION","color","TITLE","paddingLeft","verticalAlign","fontFamily","fontWeight","fontSize","cursor","PATH_OPEN","PATH_CLOSE","OpenClose2","props","_handleClickOpenClose","setState","prev","isOpen","isClose","state","render","style","styleNotSelected","styleCaption","caption","fillOpen","fillClose","isDraggable","option","onDragStart","onDragEnter","onDragOver","onDragLeave","onDrop","children","_dragOption","draggable","bind","undefined","_pathV","_fillV","_displayDivStyle","_classShow","_styleNotSelected","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport C from '../styles/Color';\r\n\r\nconst CL = {\r\n  SHOW: 'show-popup',\r\n  NOT_SELECTED: 'not-selected'\r\n};\r\n\r\nconst DF = {\r\n  FILL_OPEN: C.YELLOW,\r\n  //FILL_OPEN: C.TITLE,\r\n  FILL_CLOSE: C.BLANK\r\n};\r\n\r\nconst S = {\r\n  ROOT: {\r\n    lineHeight: 1.5\r\n  },\r\n  DIV_SVG : {\r\n    display: 'inline-block',\r\n    width: '16px',\r\n    height: '16px',\r\n    marginLeft: '8px'\r\n  },\r\n  SVG: {\r\n    display: 'inline-block'\r\n  },\r\n  CAPTION: {\r\n    //color: C.SIREN,\r\n    color: C.TITLE,\r\n    paddingLeft: '4px',\r\n    verticalAlign: 'top',\r\n    fontFamily: 'Roboto, Arial Unicode MS, Arial, sans-serif',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    cursor: 'pointer'\r\n  }\r\n};\r\n\r\nconst PATH_OPEN = \"M 2,14 L 14,14 14,2 2,14\";\r\nconst PATH_CLOSE = \"M 2,2 L 14,8 2,14 2,2\";\r\n\r\nclass OpenClose2 extends Component {\r\n   static defaultProps = {\r\n     fillOpen: DF.FILL_OPEN,\r\n     fillClose: DF.FILL_CLOSE\r\n   }\r\n   constructor(props){\r\n     super();\r\n     const { isClose } = props;\r\n      this.state = {\r\n        isOpen: isClose ? false : true\r\n      }\r\n   }\r\n\r\n  _handleClickOpenClose = () => {\r\n    this.setState(prev => ({ isOpen: !prev.isOpen }));\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            style, styleNotSelected, styleCaption, caption,\r\n            fillOpen, fillClose,\r\n            isDraggable, option, onDragStart, onDragEnter, onDragOver, onDragLeave, onDrop,\r\n            children\r\n          } = this.props\r\n        , { isOpen } = this.state\r\n        , _dragOption = (isDraggable)\r\n              ? {\r\n                  draggable : true,\r\n                  onDragStart : onDragStart.bind(null, option),\r\n                  onDrop : onDrop.bind(null, option),\r\n                  onDragEnter : onDragEnter,\r\n                  onDragOver : onDragOver,\r\n                  onDragLeave : onDragLeave\r\n                }\r\n              : undefined ;\r\n\r\n    let _pathV, _fillV, _displayDivStyle, _classShow, _styleNotSelected;\r\n    if (isOpen){\r\n      _pathV = PATH_OPEN;\r\n      _fillV = fillOpen;\r\n      _displayDivStyle = 'block';\r\n      _classShow = CL.SHOW;\r\n      _styleNotSelected = null;\r\n\r\n    } else {\r\n      _pathV = PATH_CLOSE;\r\n      _fillV = fillClose;\r\n      _displayDivStyle = 'none';\r\n      _classShow = null;\r\n      _styleNotSelected = styleNotSelected;\r\n    }\r\n\r\n    return (\r\n      <div style={{...S.ROOT, ...style}}>\r\n        <div\r\n           className={CL.NOT_SELECTED}\r\n           style={_styleNotSelected}\r\n           onClick={this._handleClickOpenClose}\r\n           {..._dragOption}\r\n         >\r\n          <div style={S.DIV_SVG}>\r\n             <svg\r\n                viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n                preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                style={S.SVG}\r\n              >\r\n               <path\r\n                  d={_pathV} fill={_fillV}\r\n                  strokeWidth=\"1\" stroke={fillOpen}\r\n               />\r\n             </svg>\r\n         </div>\r\n         <span style={{...S.CAPTION, ...styleCaption}} >\r\n            {caption}\r\n         </span>\r\n       </div>\r\n       <div className={_classShow} style={{display: _displayDivStyle}}>\r\n         {children}\r\n       </div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenClose2;\r\n"],"file":"OpenClose2.js"}