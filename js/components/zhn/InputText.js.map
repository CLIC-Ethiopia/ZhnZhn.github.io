{"version":3,"sources":["../../../src/components/zhn/InputText.jsx"],"names":["S","INPUT_TEXT","background","border","outline","height","paddingLeft","color","width","fontSize","fontWeight","backgroundColor","marginLeft","marginRight","display","InputText","props","_handleInputChange","event","setState","value","target","getValue","state","setValue","initValue","nextProps","style","Object","assign","propTypes","string","object","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;AAEA,IAAMA,IAAI;AACRC,cAAa;AACXC,gBAAY,oCADD;AAEXC,YAAQ,aAFG;AAGXC,aAAS,aAHE;AAIXC,YAAQ,MAJG;AAKXC,iBAAa,KALF;AAMXC,WAAO,OANI;AAOXC,WAAO,MAPI;AAQXC,cAAU,MARC;AASXC,gBAAY,MATD;AAUXC,qBAAkB,SAVP;AAWXC,gBAAa,KAXF;AAYXC,iBAAc,KAZH;AAaXC,aAAU;AAbC;AADL,CAAV;;IAmBMC,S;;;AASJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAalBC,kBAbkB,GAaG,UAACC,KAAD,EAAW;AAC9B,YAAKC,QAAL,CAAc,EAAEC,OAAQF,MAAMG,MAAN,CAAaD,KAAvB,EAAd;AACD,KAfiB;;AAAA,UAoClBE,QApCkB,GAoCP,YAAM;AACf,aAAO,MAAKC,KAAL,CAAWH,KAAlB;AACD,KAtCiB;;AAAA,UAuClBI,QAvCkB,GAuCP,UAACJ,KAAD,EAAW;AACpB,YAAKD,QAAL,CAAc,EAACC,YAAD,EAAd;AACD,KAzCiB;;AAEhB,UAAKG,KAAL,GAAa;AACXH,aAAQJ,MAAMS;AADH,KAAb;AAFgB;AAKjB;;;;8CAEyBC,S,EAAU;AAClC,UAAIA,cAAc,KAAKV,KAAvB,EAA6B;AAC3B,aAAKG,QAAL,CAAc,EAAEC,OAAQM,UAAUD,SAApB,EAAd;AACD;AACF;;;6BAMO;AACA,UAACE,KAAD,GAAU,KAAKX,KAAf,CAACW,KAAD;AAAA,UACCP,KADD,GACU,KAAKG,KADf,CACCH,KADD;;AAEN,aACE;AACE,cAAK,MADP;AAEE,sBAAa,UAFf;AAGE,qBAAY,KAHd;AAIE,wBAAe,KAJjB;AAKE,oBAAY,KALd;AAME,cAAK,MANP;AAOE,eAAOQ,OAAOC,MAAP,CAAc,EAAd,EAAkB7B,EAAEC,UAApB,EAAgC0B,KAAhC,CAPT;AAQE,eAAOP,KART;AASE,mBAAW,KATb;AAUE,kBAAU,KAAKH;AAVjB,QADF;AAcD;;;;4BA1CMa,S,GAAY;AACjBL,aAAY,iBAAUM,MADL;AAEjBJ,SAAQ,iBAAUK;AAFD,C,SAIZC,Y,GAAe;AACpBR,aAAY;AADQ,C;kBAgDTV,S","file":"InputText.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nconst S = {\r\n  INPUT_TEXT : {\r\n    background: 'transparent none repeat scroll 0 0',\r\n    border: 'medium none',\r\n    outline: 'medium none',\r\n    height: '26px',\r\n    paddingLeft: '5px',\r\n    color: 'green',\r\n    width: '40px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    backgroundColor : '#E1E1CB',\r\n    marginLeft : '5px',\r\n    marginRight : '5px',\r\n    display : 'inline'\r\n  }\r\n}\r\n\r\n\r\nclass InputText extends Component {\r\n  static propTypes = {\r\n    initValue : PropTypes.string,\r\n    style : PropTypes.object\r\n  }\r\n  static defaultProps = {\r\n    initValue : ''\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      value : props.initValue\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      this.setState({ value : nextProps.initValue });\r\n    }\r\n  }\r\n\r\n  _handleInputChange = (event) => {\r\n    this.setState({ value : event.target.value })\r\n  }\r\n\r\n  render(){\r\n    const {style} = this.props\r\n        , {value} = this.state;\r\n    return (\r\n      <input\r\n        name=\"text\"\r\n        autoComplete=\"new-text\"\r\n        autoCorrect=\"off\"\r\n        autoCapitalize=\"off\"\r\n        spellCheck={false}\r\n        type=\"text\"\r\n        style={Object.assign({}, S.INPUT_TEXT, style)}\r\n        value={value}\r\n        translate={false}\r\n        onChange={this._handleInputChange}\r\n      />\r\n    )\r\n  }\r\n\r\n  getValue = () => {\r\n    return this.state.value;\r\n  }\r\n  setValue = (value) => {\r\n    this.setState({value})\r\n  }\r\n}\r\n\r\nexport default InputText\r\n"]}