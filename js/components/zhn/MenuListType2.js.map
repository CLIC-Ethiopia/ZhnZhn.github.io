{"version":3,"sources":["../../../src/components/zhn/MenuListType2.jsx"],"names":["MODEL_PROP","CAPTION","GROUPS","LISTS","ITEMS","STYLE","GROUP_DIV","lineHeight","LIST_DIV","marginLeft","paddingLeft","borderLeft","LIST_DIV_NOT_SELECTED","borderBottom","marginRight","ITEM_DIV","position","paddingRight","paddingTop","paddingBottom","ITEM_SPAN","display","verticalAlign","width","whiteSpace","overflow","textOverflow","MenuListType2","state","_renderLevel3","items","captionProp","props","ItemComp","onClickItem","map","item","index","caption","_className","_renderLevel2","lists","itemsProp","list","_renderLevel1","model","meta","level1","level2","level3","_captionProp","_groupsProp","_listsProp","_itemsProp","groups","group","nextProps","nextState"],"mappings":"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","file":"MenuListType2.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport OpenClose2 from './OpenClose2'\r\n\r\nconst MODEL_PROP = {\r\n  CAPTION : 'caption',\r\n  GROUPS : 'groups',\r\n  LISTS : 'lists',\r\n  ITEMS : 'items'\r\n}\r\n\r\nconst STYLE = {\r\n  GROUP_DIV : {\r\n    lineHeight : 2\r\n  },\r\n  LIST_DIV : {\r\n    marginLeft : '8px',\r\n    paddingLeft : '12px',\r\n    borderLeft : '1px solid yellow',\r\n    lineHeight : 2\r\n  },\r\n  LIST_DIV_NOT_SELECTED : {\r\n    borderBottom : '1px solid rgba(128, 192, 64, 0.6)',\r\n    marginRight : '2px'\r\n  },\r\n  ITEM_DIV : {\r\n    position: 'relative',\r\n    paddingRight: '10px',\r\n    lineHeight : 1.4,\r\n    paddingTop : '5px',\r\n    paddingBottom: '5px'\r\n  },\r\n  ITEM_SPAN : {\r\n    display: 'inline-block',\r\n    verticalAlign : 'middle',\r\n    width: '100%',\r\n    //maxWidth: '250px',\r\n    //direction: \"ltr\",\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  }\r\n}\r\n\r\n\r\nclass MenuListType2 extends Component{\r\n  state = {}\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n      if (this.state === nextState && this.props.model === nextProps.model){\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n\r\n _renderLevel3 = (items=[], captionProp) => {\r\n   const { ItemComp, onClickItem } = this.props;\r\n   return items.map((item, index) => {\r\n     const caption  = item[captionProp]\r\n         , _className = (index % 2)\r\n              ? 'row__topic__even not-selected'\r\n              : 'row__topic__odd not-selected'\r\n     return (\r\n       <ItemComp\r\n          key={index}\r\n          className={_className}\r\n          caption={caption}\r\n          item={item}\r\n          onClickItem={onClickItem}\r\n       />\r\n     );\r\n   })\r\n }\r\n\r\n  _renderLevel2 = (lists=[], captionProp, itemsProp) => {\r\n    return lists.map((list, index) => {\r\n      const  caption  = list[captionProp]\r\n      , items = list[itemsProp]\r\n      return (\r\n        <OpenClose2\r\n           key={index}\r\n           fillOpen={'#80c040'}\r\n           style={STYLE.LIST_DIV}\r\n           styleNotSelected={STYLE.LIST_DIV_NOT_SELECTED}\r\n           isClose={true}\r\n           caption={caption}\r\n        >\r\n          {this._renderLevel3(items, captionProp)}\r\n        </OpenClose2>\r\n      );\r\n    })\r\n  }\r\n\r\n  _renderLevel1 = (model={}) => {\r\n     const { meta={} } = model\r\n     , { caption, level1, level2, level3 } = meta\r\n     , _captionProp = caption || MODEL_PROP.CAPTION\r\n     , _groupsProp = level1 || MODEL_PROP.GROUPS\r\n     , _listsProp = level2 || MODEL_PROP.LISTS\r\n     , _itemsProp = level3 || MODEL_PROP.ITEMS\r\n     , groups = model[_groupsProp] || []\r\n\r\n     return groups.map((group, index) => {\r\n        const caption  = group[_captionProp]\r\n        , lists = group[_listsProp]\r\n        return (\r\n          <OpenClose2\r\n             key={index}\r\n             style={STYLE.GROUP_DIV}\r\n             isClose={true}\r\n             caption={caption}\r\n          >\r\n            {this._renderLevel2(lists, _captionProp, _itemsProp)}\r\n          </OpenClose2>\r\n        );\r\n     })\r\n  }\r\n\r\n  render(){\r\n    const { model } = this.props;\r\n    return (\r\n      <div>\r\n         {this._renderLevel1(model)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuListType2\r\n"]}