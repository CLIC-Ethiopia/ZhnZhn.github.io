{"version":3,"sources":["../../../src/components/zhn/MenuListType2.jsx"],"names":["C_FILL_OPEN","C","GREEN","C_LEFT_BORDER","YELLOW","MODEL_PROP","CAPTION","GROUPS","LISTS","ITEMS","STYLE","GROUP_DIV","lineHeight","LIST_DIV","marginLeft","paddingLeft","borderLeft","LIST_DIV_NOT_SELECTED","borderBottom","marginRight","ITEM_DIV","position","paddingRight","paddingTop","paddingBottom","ITEM_SPAN","display","verticalAlign","width","whiteSpace","overflow","textOverflow","MenuListType2","state","_renderLevel3","items","captionProp","props","itemClassName","ItemComp","onClickItem","map","item","index","caption","_renderLevel2","lists","itemsProp","list","_renderLevel1","model","meta","level1","level2","level3","_captionProp","_groupsProp","_listsProp","_itemsProp","groups","group","shouldComponentUpdate","nextProps","nextState","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport C from '../styles/Color'\r\nimport OpenClose2 from './OpenClose2'\r\n\r\nconst C_FILL_OPEN = C.GREEN;\r\nconst C_LEFT_BORDER = C.YELLOW;\r\n\r\nconst MODEL_PROP = {\r\n  CAPTION : 'caption',\r\n  GROUPS : 'groups',\r\n  LISTS : 'lists',\r\n  ITEMS : 'items'\r\n}\r\n\r\nconst STYLE = {\r\n  GROUP_DIV : {\r\n    lineHeight : 2\r\n  },\r\n  LIST_DIV : {\r\n    marginLeft : '8px',\r\n    paddingLeft : '12px',\r\n    //borderLeft : '1px solid yellow',\r\n    borderLeft : `1px solid ${C_LEFT_BORDER}`,\r\n    lineHeight : 2\r\n  },\r\n  LIST_DIV_NOT_SELECTED : {\r\n    borderBottom : '1px solid rgba(128, 192, 64, 0.6)',\r\n    marginRight : '2px'\r\n  },\r\n  ITEM_DIV : {\r\n    position: 'relative',\r\n    paddingRight: '10px',\r\n    lineHeight : 1.4,\r\n    paddingTop : '5px',\r\n    paddingBottom: '5px'\r\n  },\r\n  ITEM_SPAN : {\r\n    display: 'inline-block',\r\n    verticalAlign : 'middle',\r\n    width: '100%',\r\n    //maxWidth: '250px',\r\n    //direction: \"ltr\",\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  }\r\n}\r\n\r\n\r\nclass MenuListType2 extends Component {\r\n  state = {}\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n      if (this.state === nextState && this.props.model === nextProps.model){\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n\r\n _renderLevel3 = (items=[], captionProp) => {\r\n   const { itemClassName, ItemComp, onClickItem } = this.props;\r\n   return items.map((item, index) => {\r\n     const caption  = item[captionProp];\r\n     return (\r\n       <ItemComp\r\n          key={index}\r\n          className={itemClassName}\r\n          caption={caption}\r\n          item={item}\r\n          onClickItem={onClickItem}\r\n       />\r\n     );\r\n   })\r\n }\r\n\r\n  _renderLevel2 = (lists=[], captionProp, itemsProp) => {\r\n    return lists.map((list, index) => {\r\n      const caption  = list[captionProp]\r\n          , items = list[itemsProp];\r\n      return (\r\n        <OpenClose2\r\n           key={index}\r\n           fillOpen={C_FILL_OPEN}\r\n           style={STYLE.LIST_DIV}\r\n           styleNotSelected={STYLE.LIST_DIV_NOT_SELECTED}\r\n           isClose={true}\r\n           caption={caption}\r\n        >\r\n          {this._renderLevel3(items, captionProp)}\r\n        </OpenClose2>\r\n      );\r\n    })\r\n  }\r\n\r\n  _renderLevel1 = (model={}) => {\r\n     const { meta={} } = model\r\n     , { caption, level1, level2, level3 } = meta\r\n     , _captionProp = caption || MODEL_PROP.CAPTION\r\n     , _groupsProp = level1 || MODEL_PROP.GROUPS\r\n     , _listsProp = level2 || MODEL_PROP.LISTS\r\n     , _itemsProp = level3 || MODEL_PROP.ITEMS\r\n     , groups = model[_groupsProp] || [];\r\n\r\n     return groups.map((group, index) => {\r\n        const caption  = group[_captionProp]\r\n        , lists = group[_listsProp]\r\n        return (\r\n          <OpenClose2\r\n             key={index}\r\n             style={STYLE.GROUP_DIV}\r\n             isClose={true}\r\n             caption={caption}\r\n          >\r\n            {this._renderLevel2(lists, _captionProp, _itemsProp)}\r\n          </OpenClose2>\r\n        );\r\n     })\r\n  }\r\n\r\n  render(){\r\n    const { model } = this.props;\r\n    return (\r\n      <div>\r\n         {this._renderLevel1(model)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuListType2\r\n"],"file":"MenuListType2.js"}