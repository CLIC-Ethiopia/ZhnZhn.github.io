{"version":3,"sources":["../../../src/components/zhn/DateField.jsx"],"names":["_isFn","fn","_crValueState","value","errorInput","isValid","DateField","props","_handleChangeValue","event","onTest","nForecastDate","target","setState","_handleBlurValue","errorMsg","state","_handleKeyDown","keyCode","isOnEnter","onEnter","preventDefault","initValue","_refDate","node","inputDate","getValue","focusInput","focus","render","rootStyle","inputStyle","placeholder","inputmode","name","maxLength","_styleHr","STYLE","HR_VALID","HR_NOT_VALID","ROOT","INPUT","HR","ERR_MSG","setValue","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport STYLE from './InputStyle';\r\n\r\nconst _isFn = fn => typeof(fn) === 'function';\r\n\r\nconst _crValueState = (value='') => ({\r\n  value,\r\n  errorInput: null,\r\n  isValid: true\r\n});\r\n\r\nclass DateField extends Component {\r\n  /*\r\n   static propTypes = {\r\n     rootStyle: PropTypes.object,\r\n     inputStyle: PropTypes.object,\r\n     initValue: PropTypes.string,\r\n     placeholder: PropTypes.string,\r\n     inpumode: PropTypes.string,\r\n     maxLength: PropTypes.number,\r\n     errorMsg: PropTypes.string,\r\n     nForecastDate: PropTypes.number,\r\n     onTest: PropTypes.func,\r\n     onEnter: PropTypes.func\r\n   }\r\n   */\r\n\r\n   static defaultProps = {\r\n     placeholder: 'YYYY-MM-DD',\r\n     inputmode: 'numeric',\r\n     name: 'text-date',\r\n     maxLength: 10,\r\n     onTest: () => true\r\n   }\r\n\r\n   constructor(props){\r\n     super(props)\r\n     this.isOnEnter = _isFn(props.onEnter)\r\n     this.state = _crValueState(props.initValue)\r\n   }\r\n\r\n  _handleChangeValue = (event) => {\r\n    const { onTest, nForecastDate } = this.props\r\n         , value = event.target.value;\r\n    if (!onTest(value, nForecastDate)){\r\n      this.setState({\r\n         value: value,\r\n         isValid: false\r\n      })\r\n    } else {\r\n      this.setState(_crValueState(value))\r\n    }\r\n  }\r\n\r\n  _handleBlurValue = () => {\r\n    const { onTest, nForecastDate, errorMsg } = this.props\r\n        , { value } = this.state;\r\n    if (!onTest(value, nForecastDate)){\r\n      this.setState({\r\n        errorInput: errorMsg,\r\n        isValid: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        errorInput: null,\r\n        isValid: true\r\n      })\r\n    }\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    switch(event.keyCode){\r\n      case 13:\r\n        if (this.isOnEnter) {\r\n          this.props.onEnter(event.target.value)\r\n        }\r\n        break;\r\n      case 27: case 46:\r\n        event.preventDefault()\r\n        this.setState(\r\n          _crValueState(this.props.initValue)\r\n        )\r\n        break;\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  _refDate = node => this.inputDate = node\r\n\r\n  render(){\r\n    const {\r\n            rootStyle, inputStyle,\r\n            placeholder,\r\n            inputmode,\r\n            name,\r\n            maxLength\r\n          } = this.props\r\n        , { value, errorInput, isValid } = this.state\r\n        , _styleHr = isValid\r\n            ? STYLE.HR_VALID\r\n            : STYLE.HR_NOT_VALID;\r\n    return (\r\n      <div style={{...STYLE.ROOT, ...rootStyle}}>\r\n        <input\r\n           ref={this._refDate}\r\n           style={{...STYLE.INPUT, ...inputStyle}}\r\n           name={name}\r\n           //autoComplete=\"new-text-date\"\r\n           autoComplete=\"off\"\r\n           autoCorrect=\"off\"\r\n           autoCapitalize=\"off\"\r\n           spellCheck={false}\r\n           type=\"text\"\r\n           placeholder={placeholder}\r\n           inputMode={inputmode}\r\n           value={value}\r\n           maxLength={maxLength}\r\n           onChange={this._handleChangeValue}\r\n           onBlur={this._handleBlurValue}\r\n           onKeyDown={this._handleKeyDown}\r\n        />\r\n        <hr style={{...STYLE.HR, ..._styleHr}} />\r\n        <div style={STYLE.ERR_MSG}>\r\n          {errorInput}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue = () => {\r\n    return this.state.value;\r\n  }\r\n  setValue(value) {\r\n    if (this.props.onTest(value)) {\r\n      this.setState(_crValueState(value))\r\n    }\r\n  }\r\n  isValid = () => {\r\n    return this.state.isValid;\r\n  }\r\n  focusInput = () => {\r\n    this.inputDate.focus();\r\n  }\r\n}\r\n\r\nexport default DateField\r\n"],"file":"DateField.js"}