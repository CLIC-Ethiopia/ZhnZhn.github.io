{"version":3,"sources":["../../../src/components/factories/ItemFactory.jsx"],"names":["crValueMoving","crId","ChartFn","_getIdKey","config","index","zhConfig","id","key","_fAddToWatch","caption","CA","showAddToWatch","_fOnPasteToDialog","store","toChart","showPasteTo","fromChart","getCopyFromChart","_crAreaChart","chartType","props","setActiveCheckbox","ChartActions","CHAT_TO_TOP","bind","CHAT_COPY","zoom","_crMapChart","_fItem","Comp","_rCrItem","DF","CIT_EUROSTAT_MAP","CIT_TABLE","Item","Table","CIT_ALPHA_PERF","AlphaPerf","CIT_INFO_ITEM","InfoItem","CIT_TW_LIST","TwList","ItemFactory","crItem","itemOptions","zhCompType","_crItem"],"mappings":"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","sourcesContent":["import ChartFn from '../../charts/ChartFn';\r\n\r\nimport CA from '../../flux/actions/ComponentActions';\r\nimport ChartActions, {\r\n  CHAT_TO_TOP,\r\n  CHAT_COPY\r\n} from '../../flux/actions/ChartActions';\r\nimport {\r\n  CIT_EUROSTAT_MAP,\r\n  CIT_TABLE,\r\n  CIT_ALPHA_PERF,\r\n  CIT_INFO_ITEM,\r\n  CIT_TW_LIST\r\n} from '../../constants/CompItemType';\r\n\r\nimport Item from '../items/Items';\r\n\r\nconst {\r\n  crValueMoving,\r\n  crId\r\n} = ChartFn;\r\n\r\nconst _getIdKey = (config, index) => {\r\n  const { zhConfig } = config\r\n  , { id, key } = zhConfig || {};\r\n  return [id || `Id:${index}`, key || id || crId()];\r\n};\r\n\r\n\r\nconst _fAddToWatch = (\r\n  caption,\r\n  config\r\n) => () => CA.showAddToWatch({ caption, config });\r\n\r\nconst _fOnPasteToDialog = store => {\r\n  return toChart => CA.showPasteTo({\r\n    toChart,\r\n    fromChart: store.getCopyFromChart()\r\n  });\r\n};\r\n\r\nconst _crAreaChart = function({\r\n  config,\r\n  index,\r\n  chartType,\r\n  props,\r\n  store\r\n}) {\r\n  const [id, key] = _getIdKey(config, index);\r\n  return (\r\n    <Item.AreaChart\r\n       key={key}\r\n       chartType={chartType}\r\n       caption={id}\r\n       config={config}\r\n       onSetActive={CA.setActiveCheckbox}\r\n       onAddToWatch={_fAddToWatch(id, config)}\r\n       {...props}\r\n       crValueMoving={crValueMoving}\r\n       onToTop={ChartActions[CHAT_TO_TOP].bind(null, chartType, id)}\r\n       onCopy={ChartActions[CHAT_COPY]}\r\n       onPasteTo={_fOnPasteToDialog(store)}\r\n       onZoom={CA.zoom}\r\n    />\r\n  );\r\n};\r\n\r\nconst _crMapChart = function({\r\n  config, index, chartType, props\r\n}) {\r\n  const [id, key] = _getIdKey(config, index);\r\n  return(\r\n    <Item.MapChart\r\n       key={key}\r\n       chartType={chartType}\r\n       caption={id}\r\n       config={config}\r\n       {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst _fItem = (Comp) => ({ config={}, props }) => (\r\n  <Comp\r\n    key={config.id}\r\n    config={config}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst _rCrItem = {\r\n  DF: _crAreaChart,\r\n  [CIT_EUROSTAT_MAP]: _crMapChart,\r\n  [CIT_TABLE]: _fItem(Item.Table),\r\n  [CIT_ALPHA_PERF]: _fItem(Item.AlphaPerf),\r\n  [CIT_INFO_ITEM]: _fItem(Item.InfoItem),\r\n  [CIT_TW_LIST]: _fItem(Item.TwList)\r\n};\r\n\r\nconst ItemFactory = {\r\n  /* { config, index, chartType, props, store } */\r\n  crItem(itemOptions){\r\n    const { config } = itemOptions\r\n    , { zhCompType } = config || {}\r\n    , _crItem = _rCrItem[zhCompType] || _rCrItem.DF;\r\n    return _crItem(itemOptions);\r\n  }\r\n};\r\n\r\nexport default ItemFactory\r\n"],"file":"ItemFactory.js"}