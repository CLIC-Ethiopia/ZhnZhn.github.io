{"version":3,"sources":["../../../src/components/quandl/JodiWorldOilDialog.jsx"],"names":["unitOptions","chartTypes","caption","value","JodiWorldOilDialog","Decor","dialog","props","_hClickOptions","setState","prevState","isShowOptions","_hSelectCountry","country","_hSelectUnits","units","_hSelectChartType","chartType","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msg","push","productFlow","getValidation","isValid1","isValid","msg1","concat","datesFragment","datesMsg","length","getValues","product","one","flow","two","fromDate","toDate","seriaType","fnValue","dataColumn","loadId","dataSource","title","subtitle","_handleClose","_handleWithValidationClose","_refProductFlow","c","_refDates","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","onClick","_commandButtons","_crCommandsWithLoad","state","_isWithInitialState","isShowDate","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","onFront","oneCaption","oneURI","oneJsonProp","parentCaption","parentChildURI","parentJsonProp","childCaption","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","isToolbar","isShowLabels","validationMessages","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport crMenuMore from '../dialogs/MenuMore'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst unitOptions = [\r\n  { \"caption\" : \"Thousand Barrels per day (kb/d)\", \"value\" : \"KD\" },\r\n  { \"caption\" : \"Thousand Barrels (kbbl)\", \"value\" : \"KB\" },\r\n  { \"caption\" : \"Thousand Kilolitres (kl)\", \"value\" : \"KL\" },\r\n  { \"caption\" : \"Thousand Metric Tons (kmt)\", \"value\" : \"KT\" },\r\n  { \"caption\" : \"Conversion factor barrels/ktons\", \"value\" : \"BK\" }\r\n];\r\n\r\nconst chartTypes = [\r\n  { caption: \"AreaSpline\", value: \"AREA\" },\r\n  { caption: \"Yearly by Month\", value: \"YEARLY\" }\r\n];\r\n\r\n@Decor.dialog\r\nclass JodiWorldOilDialog extends Component {\r\n\r\n   constructor(props){\r\n     super(props)\r\n\r\n     //this.country = null\r\n     //this.product = null\r\n     //this.flow = null\r\n     //this.units = null\r\n     //this.chartType = undefined\r\n\r\n     this._menuMore = crMenuMore(this, {\r\n       toggleToolBar: this._toggleWithToolbar,\r\n       onAbout: this._clickInfoWithToolbar\r\n     })\r\n\r\n     this.toolbarButtons = this._createType2WithToolbar(props)\r\n     this.toolbarButtons.push({\r\n       caption: 'O', title: 'Toggle Options Input',\r\n       onClick: this._hClickOptions\r\n     })\r\n     this._commandButtons = this._crCommandsWithLoad(this)\r\n\r\n     this.state = {\r\n       ...this._isWithInitialState(),\r\n       isShowDate: false,\r\n       isShowOptions: false\r\n     }\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (this.props !== nextProps){\r\n        if (this.props.isShow === nextProps.isShow){\r\n           return false;\r\n        }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   _hClickOptions = () => {\r\n     this.setState(prevState => ({\r\n       isShowOptions: !prevState.isShowOptions\r\n     }))\r\n   }\r\n\r\n   _hSelectCountry = (country) => {\r\n     this.country = country\r\n   }\r\n   _hSelectUnits = (units) => {\r\n     this.units = units\r\n   }\r\n   _hSelectChartType = (chartType) => {\r\n     this.chartType = chartType\r\n   }\r\n\r\n   _handleLoad = () => {\r\n     this._handleWithValidationLoad(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     );\r\n   }\r\n   _createValidationMessages = () => {\r\n     const { msgOnNotSelected } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.country) { msg.push(msgOnNotSelected('Country')); }\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.productFlow.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     if (!this.units) {\r\n       this.units = unitOptions[0];\r\n     }\r\n\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n   }\r\n   _createLoadOption = () => {\r\n      const { one:product, two:flow } = this.productFlow.getValues()\r\n          , { fromDate, toDate } = this.datesFragment.getValues()\r\n          , seriaType = this.chartType\r\n              ? this.chartType.value\r\n              : void 0\r\n          , { fnValue, dataColumn, loadId, dataSource } = this.props;\r\n      return {\r\n        value : fnValue(this.country.value, product.value, flow.value, this.units.value),\r\n        title : `${this.country.caption}: ${product.caption}`,\r\n        subtitle : `${flow.caption}: ${this.units.caption}`,\r\n        fromDate, toDate,\r\n        dataColumn, seriaType, loadId,\r\n        dataSource\r\n      };\r\n   }\r\n   _handleClose = () => {\r\n     this._handleWithValidationClose()\r\n   }\r\n\r\n   _refProductFlow = c => this.productFlow = c\r\n   _refDates = c => this.datesFragment = c\r\n\r\n   render(){\r\n     const {\r\n             caption, isShow, onShow, onFront,\r\n             oneCaption, oneURI, oneJsonProp,\r\n             parentCaption, parentChildURI, parentJsonProp, childCaption, msgOnNotSelected,\r\n             initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n           } = this.props\r\n         , {\r\n             isToolbar,\r\n             isShowLabels,\r\n             isShowDate, isShowOptions,\r\n             validationMessages\r\n           } = this.state;\r\n\r\n     return (\r\n       <D.DraggableDialog\r\n         isShow={isShow}\r\n         caption={caption}\r\n         menuModel={this._menuMore}\r\n         commandButtons={this._commandButtons}\r\n         onShowChart={onShow}\r\n         onFront={onFront}\r\n         onClose={this._handleClose}\r\n       >\r\n          <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n          />\r\n\r\n          <D.SelectWithLoad\r\n             isShow={isShow}\r\n             isShowLabels={isShowLabels}\r\n             uri={oneURI}\r\n             jsonProp={oneJsonProp}\r\n             caption={oneCaption}\r\n             optionNames=\"Items\"\r\n             onSelect={this._hSelectCountry}\r\n          />\r\n          <D.SelectOneTwo\r\n             ref={this._refProductFlow}\r\n             isShow={isShow}\r\n             isShowLabels={isShowLabels}\r\n             uri={parentChildURI}\r\n             oneCaption={parentCaption}\r\n             oneJsonProp={parentJsonProp}\r\n             twoCaption={childCaption}\r\n             msgOnNotSelected={msgOnNotSelected}\r\n          />\r\n          <D.RowInputSelect\r\n            isShowLabels={isShowLabels}\r\n            caption=\"Units\"\r\n            options={unitOptions}\r\n            onSelect={this._hSelectUnits}\r\n          />\r\n\r\n          <D.ShowHide isShow={isShowDate}>\r\n            <D.DatesFragment\r\n              ref={this._refDates}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={initFromDate}\r\n              initToDate={initToDate}\r\n              msgOnNotValidFormat={msgOnNotValidFormat}\r\n              onTestDate={onTestDate}\r\n            />\r\n          </D.ShowHide>\r\n\r\n          <D.ShowHide isShow={isShowOptions}>\r\n            <D.RowInputSelect\r\n              isShowLabels={isShowLabels}\r\n              caption=\"Chart Type\"\r\n              placeholder=\"Default: AreaSpline\"\r\n              options={chartTypes}\r\n              onSelect={this._hSelectChartType}\r\n            />\r\n          </D.ShowHide>\r\n\r\n          <D.ValidationMessages\r\n              validationMessages={validationMessages}\r\n          />\r\n       </D.DraggableDialog>\r\n     );\r\n   }\r\n}\r\n\r\nexport default JodiWorldOilDialog\r\n"],"file":"JodiWorldOilDialog.js"}