{"version":3,"sources":["../../../src/components/quandl/JodiWorldOilDialog.jsx"],"names":["Decor","crMenuMore","D","unitOptions","chartOptions","caption","value","CHT_AREA","CHT_YEARLY","JodiWorldOilDialog","dialog","Component","constructor","props","_hSelectCountry","country","_hSelectUnits","units","_hSelectChartType","chartType","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msg","push","isValid","isValid1","msg1","productFlow","getValidation","concat","datesMsg","datesFragment","length","one","product","two","flow","getValues","fromDate","toDate","seriaType","fnValue","dataColumn","loadId","dataSource","title","subtitle","_handleClose","_handleWithValidationClose","_refProductFlow","c","_refDates","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","isShowOptions","_commandButtons","_crCommandsWithLoad","state","_isWithInitialState","isShowDate","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","onFront","oneCaption","oneURI","oneJsonProp","parentCaption","parentChildURI","parentJsonProp","childCaption","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","isToolbar","isShowLabels","validationMessages"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n\r\nimport {\r\n  CHT_AREA,\r\n  CHT_YEARLY\r\n} from '../../constants/ChartType';\r\nimport D from '../dialogs/DialogCell'\r\nconst { Decor, crMenuMore } = D\r\n\r\nconst unitOptions = [\r\n  { \"caption\" : \"Thousand Barrels per day (kb/d)\", \"value\" : \"KD\" },\r\n  { \"caption\" : \"Thousand Barrels (kbbl)\", \"value\" : \"KB\" },\r\n  { \"caption\" : \"Thousand Kilolitres (kl)\", \"value\" : \"KL\" },\r\n  { \"caption\" : \"Thousand Metric Tons (kmt)\", \"value\" : \"KT\" },\r\n  { \"caption\" : \"Conversion factor barrels/ktons\", \"value\" : \"BK\" }\r\n];\r\n\r\nconst chartOptions = [\r\n  { caption: \"AreaSpline\", value: CHT_AREA },\r\n  { caption: \"Yearly by Month\", value: CHT_YEARLY }\r\n];\r\n\r\n@Decor.dialog\r\nclass JodiWorldOilDialog extends Component {\r\n\r\n   constructor(props){\r\n     super(props)\r\n\r\n     //this.country = null\r\n     //this.product = null\r\n     //this.flow = null\r\n     //this.units = null\r\n     //this.chartType = undefined\r\n\r\n     this._menuMore = crMenuMore(this, {\r\n       toggleToolBar: this._toggleWithToolbar,\r\n       onAbout: this._clickInfoWithToolbar\r\n     })\r\n\r\n     this.toolbarButtons = this._createType2WithToolbar(\r\n       props, { isShowOptions: true }\r\n     )\r\n\r\n     this._commandButtons = this._crCommandsWithLoad(this)\r\n\r\n     this.state = {\r\n       ...this._isWithInitialState(),\r\n       isShowDate: false,\r\n       isShowOptions: false\r\n     }\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (this.props !== nextProps){\r\n        if (this.props.isShow === nextProps.isShow){\r\n           return false;\r\n        }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   _hSelectCountry = (country) => {\r\n     this.country = country\r\n   }\r\n   _hSelectUnits = (units) => {\r\n     this.units = units\r\n   }\r\n   _hSelectChartType = (chartType) => {\r\n     this.chartType = chartType\r\n   }\r\n\r\n   _handleLoad = () => {\r\n     this._handleWithValidationLoad(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     );\r\n   }\r\n   _createValidationMessages = () => {\r\n     const { msgOnNotSelected } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.country) { msg.push(msgOnNotSelected('Country')); }\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.productFlow.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     if (!this.units) {\r\n       this.units = unitOptions[0];\r\n     }\r\n\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n   }\r\n   _createLoadOption = () => {\r\n      const { one:product, two:flow } = this.productFlow.getValues()\r\n          , { fromDate, toDate } = this.datesFragment.getValues()\r\n          , seriaType = this.chartType\r\n              ? this.chartType.value\r\n              : void 0\r\n          , { fnValue, dataColumn, loadId, dataSource } = this.props;\r\n      return {\r\n        value : fnValue(this.country.value, product.value, flow.value, this.units.value),\r\n        title : `${this.country.caption}: ${product.caption}`,\r\n        subtitle : `${flow.caption}: ${this.units.caption}`,\r\n        fromDate, toDate,\r\n        dataColumn, seriaType, loadId,\r\n        dataSource\r\n      };\r\n   }\r\n   _handleClose = () => {\r\n     this._handleWithValidationClose()\r\n   }\r\n\r\n   _refProductFlow = c => this.productFlow = c\r\n   _refDates = c => this.datesFragment = c\r\n\r\n   render(){\r\n     const {\r\n             caption, isShow, onShow, onFront,\r\n             oneCaption, oneURI, oneJsonProp,\r\n             parentCaption, parentChildURI, parentJsonProp, childCaption, msgOnNotSelected,\r\n             initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n           } = this.props\r\n         , {\r\n             isToolbar,\r\n             isShowLabels,\r\n             isShowDate, isShowOptions,\r\n             validationMessages\r\n           } = this.state;\r\n\r\n     return (\r\n       <D.DraggableDialog\r\n         isShow={isShow}\r\n         caption={caption}\r\n         menuModel={this._menuMore}\r\n         commandButtons={this._commandButtons}\r\n         onShowChart={onShow}\r\n         onFront={onFront}\r\n         onClose={this._handleClose}\r\n       >\r\n          <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n          />\r\n\r\n          <D.SelectWithLoad\r\n             isShow={isShow}\r\n             isShowLabels={isShowLabels}\r\n             uri={oneURI}\r\n             jsonProp={oneJsonProp}\r\n             caption={oneCaption}\r\n             optionNames=\"Items\"\r\n             onSelect={this._hSelectCountry}\r\n          />\r\n          <D.SelectOneTwo\r\n             ref={this._refProductFlow}\r\n             isShow={isShow}\r\n             isShowLabels={isShowLabels}\r\n             uri={parentChildURI}\r\n             oneCaption={parentCaption}\r\n             oneJsonProp={parentJsonProp}\r\n             twoCaption={childCaption}\r\n             msgOnNotSelected={msgOnNotSelected}\r\n          />\r\n          <D.RowInputSelect\r\n            isShowLabels={isShowLabels}\r\n            caption=\"Units\"\r\n            options={unitOptions}\r\n            onSelect={this._hSelectUnits}\r\n          />\r\n\r\n          <D.ShowHide isShow={isShowDate}>\r\n            <D.DatesFragment\r\n              ref={this._refDates}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={initFromDate}\r\n              initToDate={initToDate}\r\n              msgOnNotValidFormat={msgOnNotValidFormat}\r\n              onTestDate={onTestDate}\r\n            />\r\n          </D.ShowHide>\r\n\r\n          <D.ShowHide isShow={isShowOptions}>\r\n            <D.RowInputSelect\r\n              isShowLabels={isShowLabels}\r\n              caption=\"Chart Type\"\r\n              placeholder=\"Default: AreaSpline\"\r\n              options={chartOptions}\r\n              onSelect={this._hSelectChartType}\r\n            />\r\n          </D.ShowHide>\r\n\r\n          <D.ValidationMessages\r\n              validationMessages={validationMessages}\r\n          />\r\n       </D.DraggableDialog>\r\n     );\r\n   }\r\n}\r\n\r\nexport default JodiWorldOilDialog\r\n"],"file":"JodiWorldOilDialog.js"}