{"version":3,"sources":["../../../src/components/quandl/Futures3Dialog.jsx"],"names":["yearOptions","caption","value","Futures3Dialog","Decor","dialog","props","_handleSelectYear","year","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msgOnNotValidFormat","isFd","msg","_refItemMonth","current","getValidation","isValid1","isValid","msg1","concat","push","_refFromDate","length","getValues","item","one","month","two","fromDate","getValue","loadFn","_handleClose","_handleWithValidationClose","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","noDate","React","createRef","_commandButtons","_crCommandsWithLoad","state","_isWithInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","onFront","futuresURI","initFromDate","isYmdOrEmpty","errNotYmdOrEmpty","isToolbar","isShowLabels","validationMessages","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG,CAClB;AAAEC,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADkB,EAElB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFkB,EAGlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHkB,EAIlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJkB,EAKlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALkB,EAMlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CANkB,EAOlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAPkB,EAQlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CARkB,EASlB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CATkB,CAApB;IAaMC,c,WADLC,uBAAMC,M;;;AAGL,0BAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN,UADgB,CAEhB;;AAFgB,UA8BlBC,iBA9BkB,GA8BE,UAACC,IAAD,EAAU;AAC5B,YAAKA,IAAL,GAAYA,IAAZ;AACD,KAhCiB;;AAAA,UAkClBC,WAlCkB,GAkCJ,YAAM;AAClB,YAAKC,yBAAL,CACE,MAAKC,yBAAL,EADF,EAEE,MAAKC,iBAFP;AAID,KAvCiB;;AAAA,UAyClBD,yBAzCkB,GAyCU,YAAM;AAAA,wBACwB,MAAKL,KAD7B;AAAA,UACxBO,gBADwB,eACxBA,gBADwB;AAAA,UACNC,mBADM,eACNA,mBADM;AAAA,UACeC,IADf,eACeA,IADf;AAEhC,UAAMC,GAAG,GAAG,EAAZ;;AAFgC,kCAIO,MAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,aAA3B,EAJP;AAAA,UAIhBC,QAJgB,yBAIxBC,OAJwB;AAAA,UAIFC,IAJE,yBAINN,GAJM;;AAKhC,UAAI,CAACI,QAAL,EAAe;AAAEJ,QAAAA,GAAG,GAAGA,GAAG,CAACO,MAAJ,CAAWD,IAAX,CAAN;AAAyB;;AAE1C,UAAI,CAAC,MAAKd,IAAV,EAAgB;AAAEQ,QAAAA,GAAG,CAACQ,IAAJ,CAASX,gBAAgB,CAAC,MAAD,CAAzB;AAAqC;;AAEvD,UAAIE,IAAI,IAAI,CAAC,MAAKU,YAAL,CAAkBP,OAAlB,CAA0BG,OAA1B,EAAb,EAAiD;AAC/CL,QAAAA,GAAG,CAACQ,IAAJ,CAASV,mBAAmB,CAAC,WAAD,CAA5B;AACD;;AAEDE,MAAAA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACU,MAAJ,KAAe,CAAf,GACT,IADS,GACF,KADZ;AAEA,aAAOV,GAAP;AACD,KAzDiB;;AAAA,UA2DlBJ,iBA3DkB,GA2DE,YAAM;AAAA,mCACQ,MAAKK,aAAL,CAAmBC,OAAnB,CAA2BS,SAA3B,EADR;AAAA,UACZC,IADY,0BAChBC,GADgB;AAAA,UACFC,KADE,0BACNC,GADM;AAAA,UAEtBC,QAFsB,GAEX,MAAK1B,KAAL,CAAWS,IAAX,GACP,MAAKU,YAAL,CAAkBP,OAAlB,CAA0Be,QAA1B,EADO,GAEP,KAAK,CAJa;;AAKxB,aAAO,MAAK3B,KAAL,CAAW4B,MAAX,CACL,MAAK5B,KADA,EAEL;AAAEsB,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,KAAK,EAALA,KAAR;AAAetB,QAAAA,IAAI,EAAE,MAAKA,IAA1B;AAAgCwB,QAAAA,QAAQ,EAARA;AAAhC,OAFK,CAAP;AAID,KApEiB;;AAAA,UAsElBG,YAtEkB,GAsEH,YAAM;AACnB,YAAKC,0BAAL;AACD,KAxEiB;;AAIhB,UAAKC,SAAL,GAAiB,0EAAiB;AAChCC,MAAAA,aAAa,EAAE,MAAKC,kBADY;AAEhCC,MAAAA,OAAO,EAAE,MAAKC;AAFkB,KAAjB,CAAjB;AAKA,UAAKC,cAAL,GAAsB,MAAKC,uBAAL,CACpBrC,KADoB,EACb;AAAEsC,MAAAA,MAAM,EAAE;AAAV,KADa,CAAtB;AAGA,UAAK3B,aAAL,gBAAqB4B,kBAAMC,SAAN,EAArB;AACA,UAAKrB,YAAL,gBAAoBoB,kBAAMC,SAAN,EAApB;AACA,UAAKC,eAAL,GAAuB,MAAKC,mBAAL,gDAAvB;AAEA,UAAKC,KAAL,iCACK,MAAKC,mBAAL,EADL;AAhBgB;AAmBjB;;;;SAEDC,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAI,KAAK/C,KAAL,KAAe8C,SAAnB,EAA6B;AAC1B,UAAI,KAAK9C,KAAL,CAAWgD,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA2C;AACxC,eAAO,KAAP;AACF;AACH;;AACD,WAAO,IAAP;AACD,G;;SA8CDC,M,GAAA,kBAAQ;AAAA,uBAKI,KAAKjD,KALT;AAAA,QAEEgD,MAFF,gBAEEA,MAFF;AAAA,QAEUrD,OAFV,gBAEUA,OAFV;AAAA,QAEmBuD,MAFnB,gBAEmBA,MAFnB;AAAA,QAE2BC,OAF3B,gBAE2BA,OAF3B;AAAA,QAGEC,UAHF,gBAGEA,UAHF;AAAA,QAGc7C,gBAHd,gBAGcA,gBAHd;AAAA,QAIEE,IAJF,gBAIEA,IAJF;AAAA,QAIQ4C,YAJR,gBAIQA,YAJR;AAAA,QAIsBC,YAJtB,gBAIsBA,YAJtB;AAAA,QAIoCC,gBAJpC,gBAIoCA,gBAJpC;AAAA,sBAUI,KAAKZ,KAVT;AAAA,QAOEa,SAPF,eAOEA,SAPF;AAAA,QAQEC,YARF,eAQEA,YARF;AAAA,QASEC,kBATF,eASEA,kBATF;AAYN,wBACE,gCAAC,sBAAD,CAAG,eAAH;AACG,MAAA,MAAM,EAAEV,MADX;AAEG,MAAA,OAAO,EAAErD,OAFZ;AAGG,MAAA,SAAS,EAAE,KAAKoC,SAHnB;AAIG,MAAA,cAAc,EAAE,KAAKU,eAJxB;AAKG,MAAA,WAAW,EAAES,MALhB;AAMG,MAAA,OAAO,EAAEC,OANZ;AAOG,MAAA,OAAO,EAAE,KAAKtB;AAPjB,oBASK,gCAAC,sBAAD,CAAG,OAAH;AACG,MAAA,MAAM,EAAE2B,SADX;AAEG,MAAA,OAAO,EAAE,KAAKpB;AAFjB,MATL,eAaK,gCAAC,sBAAD,CAAG,YAAH;AACI,MAAA,GAAG,EAAE,KAAKzB,aADd;AAEI,MAAA,MAAM,EAAEqC,MAFZ;AAGI,MAAA,YAAY,EAAES,YAHlB;AAII,MAAA,GAAG,EAAEL,UAJT;AAKI,MAAA,UAAU,EAAC,SALf;AAMI,MAAA,cAAc,EAAC,SANnB;AAOI,MAAA,WAAW,EAAC,SAPhB;AAQI,MAAA,UAAU,EAAC,OARf;AASI,MAAA,gBAAgB,EAAE7C;AATtB,MAbL,eAwBK,gCAAC,sBAAD,CAAG,cAAH;AACG,MAAA,YAAY,EAAEkD,YADjB;AAEG,MAAA,OAAO,EAAC,MAFX;AAGG,MAAA,OAAO,EAAE/D,WAHZ;AAIG,MAAA,QAAQ,EAAE,KAAKO;AAJlB,MAxBL,EA+BQQ,IAAI,iBACJ,gCAAC,sBAAD,CAAG,OAAH;AACG,MAAA,QAAQ,EAAE,KAAKU,YADlB;AAEG,MAAA,YAAY,EAAEsC,YAFjB;AAGG,MAAA,UAAU,EAAC,YAHd;AAIG,MAAA,SAAS,EAAEJ,YAJd;AAKG,MAAA,QAAQ,EAAEE,gBALb;AAMG,MAAA,UAAU,EAAED;AANf,MAhCR,eAyCK,gCAAC,sBAAD,CAAG,kBAAH;AACG,MAAA,kBAAkB,EAAEI;AADvB,MAzCL,CADF;AA+CD,G;;;EAvI0BC,gB;eA0Id9D,c","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport crMenuMore from '../dialogs/MenuMore'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst yearOptions = [\r\n  { caption: '2020', value: 2020 },\r\n  { caption: '2019', value: 2019 },\r\n  { caption: '2018', value: 2018 },\r\n  { caption: '2017', value: 2017 },\r\n  { caption: '2016', value: 2016 },\r\n  { caption: '2015', value: 2015 },\r\n  { caption: '2014', value: 2014 },\r\n  { caption: '2013', value: 2013 },\r\n  { caption: '2012', value: 2012 }\r\n];\r\n\r\n@Decor.dialog\r\nclass Futures3Dialog extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    //this.year = undefined\r\n\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleToolBar: this._toggleWithToolbar,\r\n      onAbout: this._clickInfoWithToolbar\r\n    })\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this._refItemMonth = React.createRef()\r\n    this._refFromDate = React.createRef()\r\n    this._commandButtons = this._crCommandsWithLoad(this)\r\n\r\n    this.state = {\r\n      ...this._isWithInitialState()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectYear = (year) => {\r\n    this.year = year\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n    const { msgOnNotSelected, msgOnNotValidFormat, isFd } = this.props\r\n    let   msg = [];\r\n\r\n    const { isValid:isValid1, msg:msg1 } = this._refItemMonth.current.getValidation();\r\n    if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n    if (!this.year) { msg.push(msgOnNotSelected('Year')); }\r\n\r\n    if (isFd && !this._refFromDate.current.isValid()){\r\n      msg.push(msgOnNotValidFormat('From Date'));\r\n    }\r\n\r\n    msg.isValid = msg.length === 0\r\n       ? true : false;\r\n    return msg;\r\n  }\r\n\r\n  _createLoadOption = () => {\r\n    const { one:item, two:month } = this._refItemMonth.current.getValues()\r\n    , fromDate = this.props.isFd\r\n        ? this._refFromDate.current.getValue()\r\n        : void 0;\r\n    return this.props.loadFn(\r\n      this.props,\r\n      { item, month, year: this.year, fromDate }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, caption, onShow, onFront,\r\n            futuresURI, msgOnNotSelected,\r\n            isFd, initFromDate, isYmdOrEmpty, errNotYmdOrEmpty\r\n          } = this.props\r\n        , {\r\n            isToolbar,\r\n            isShowLabels,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n      <D.DraggableDialog\r\n         isShow={isShow}\r\n         caption={caption}\r\n         menuModel={this._menuMore}\r\n         commandButtons={this._commandButtons}\r\n         onShowChart={onShow}\r\n         onFront={onFront}\r\n         onClose={this._handleClose}\r\n       >\r\n           <D.Toolbar\r\n              isShow={isToolbar}\r\n              buttons={this.toolbarButtons}\r\n           />\r\n           <D.SelectOneTwo\r\n               ref={this._refItemMonth}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={futuresURI}\r\n               oneCaption=\"Futures\"\r\n               oneOptionNames=\"Futures\"\r\n               oneJsonProp=\"futures\"\r\n               twoCaption=\"Month\"\r\n               msgOnNotSelected={msgOnNotSelected}\r\n           />\r\n           <D.RowInputSelect\r\n              isShowLabels={isShowLabels}\r\n              caption=\"Year\"\r\n              options={yearOptions}\r\n              onSelect={this._handleSelectYear}\r\n           />\r\n           {\r\n              isFd &&\r\n              <D.RowDate\r\n                 innerRef={this._refFromDate}\r\n                 isShowLabels={isShowLabels}\r\n                 labelTitle=\"From Date:\"\r\n                 initValue={initFromDate}\r\n                 errorMsg={errNotYmdOrEmpty}\r\n                 onTestDate={isYmdOrEmpty}\r\n              />\r\n            }\r\n           <D.ValidationMessages\r\n              validationMessages={validationMessages}\r\n           />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Futures3Dialog\r\n"],"file":"Futures3Dialog.js"}