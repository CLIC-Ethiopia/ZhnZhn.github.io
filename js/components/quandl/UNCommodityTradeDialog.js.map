{"version":3,"sources":["../../../src/components/quandl/UNCommodityTradeDialog.jsx"],"names":["S","BT_ROOT","color","Placeholder","TRADE","INIT","SELECT","Filter","DEFAULT","IMPORT","EXPORT","REIMPORT","REEXPORT","TRADE_FILTER_OPTIONS","caption","value","CHART_TYPE_OPTIONS","ChartType","AREA","SEMI_DONUT","STACKED_AREA","STACKED_AREA_PERCENT","STACKED_COLUMN","STACKED_COLUMN_PERCENT","TREE_MAP","UNCommodityTradeDialog","Decor","withToolbar","withValidationLoad","withInitialState","props","_initTrade","subheading","optionTrades","setState","placeholderTrade","isLoadingTradeFailed","_filterTrade","options","tradeFilter","filterValue","filter","item","index","indexOf","_handlerClickAll","state","isShowFilter","isShowDate","isShowChartType","_isShow","_handlerClickFilter","_handlerClickDate","_handlerClickChartType","_handlerSelectCountry","country","_handlerSelectChapter","chapter","_handlerSelectTradeFilter","_handlerSelectTrade","trade","_handlerSelectChartType","chartType","_handlerLoadMeta","_handleWithValidationLoad","_createMetaValidationMessages","_createLoadMetaOption","_loadMeta","option","onLoad","isLoadingTrade","msg","push","msgOnNotSelected","datesFragment","getValidation","isValid","datesMsg","concat","length","getValues","fromDate","toDate","loadId","fnValue","isLoadMeta","_setOptionTrades","onCancel","_loadMetaOptionCancel","onFailed","_loadMetaOptionFailed","_handlerLoadData","_createDataValidationMessages","_createLoadDataOption","_dataColumn","dataColumn","dataSource","_chartType","_title","_sliceItems","_createSpliceItems","seriaType","sliceItems","title","subtitle","_filterLength","map","substring","_handlerClose","_handleWithValidationClose","_refDates","c","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","noDate","onClick","_commandButtons","_isWithInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","onFront","countryURI","countryJsonProp","commodityURI","commodityJsonProp","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","isToolbar","isShowLabels","validationMessages","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { ChartType } from '../../constants/Type';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport crMenuMore from '../dialogs/MenuMore'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst S = {\r\n  BT_ROOT: {\r\n     color: 'rgb(35, 47, 59)'\r\n  }\r\n};\r\n\r\nconst Placeholder = {\r\n  TRADE : {\r\n    INIT : 'First Load Meta',\r\n    SELECT : 'Select...'\r\n  }\r\n};\r\nconst Filter = {\r\n  DEFAULT : 'Default Empty',\r\n  IMPORT : 'Import - Trade (USD)',\r\n  EXPORT : 'Export - Trade (USD)',\r\n  REIMPORT : 'Re-Import - Trade (USD)',\r\n  REEXPORT : 'Re-Export - Trade (USD)'\r\n};\r\n\r\nconst TRADE_FILTER_OPTIONS = [\r\n  { caption: 'Default : Empty Filter', value: Filter.DEFAULT },\r\n  { caption: 'Import - Trade (USD)', value: 'Import - Trade (USD)' },\r\n  { caption: 'Import - Weight (Kg)', value: 'Import - Weight (Kg)' },\r\n  { caption: 'Export - Trade (USD)', value: 'Export - Trade (USD)' },\r\n  { caption: 'Export - Weight (Kg)', value: 'Export - Weight (Kg)' },\r\n  { caption: 'Re-Import - Trade (USD)', value: 'Re-Import - Trade (USD)' },\r\n  { caption: 'Re-Export - Trade (USD)', value: 'Re-Export - Trade (USD)' }\r\n]\r\n\r\nconst CHART_TYPE_OPTIONS = [\r\n  { caption : 'Default : Area', value: ChartType.AREA },\r\n  { caption : 'Semi Donut : Total Top90, On Every Year : Recent 2 Years', value: ChartType.SEMI_DONUT },\r\n  { caption : 'Stacked Area : Total Top90, On Recent Year', value: ChartType.STACKED_AREA },\r\n  { caption : 'Stacked Area Percent : Total Top90, On Recent Year', value: ChartType.STACKED_AREA_PERCENT },\r\n  { caption : 'Stacked Column : Total Top90, On Recent Year', value: ChartType.STACKED_COLUMN },\r\n  { caption : 'Stacked Column Percent : Total Top90, On Recent Year', value: ChartType.STACKED_COLUMN_PERCENT },\r\n  { caption : 'Tree Map : On Recent Year', value: ChartType.TREE_MAP }\r\n]\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\n@Decor.withInitialState\r\nclass UNCommodityTradeDialog extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    //this.country = null\r\n    //this.chapter = null\r\n    //this.tradeFilter = null\r\n    //this.subheading = null\r\n    //this.optionTrades = null\r\n    //this.chartType = null\r\n\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleToolBar: this._toggleWithToolbar,\r\n      onAbout: this._clickInfoWithToolbar\r\n    })\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this.toolbarButtons.push({\r\n        caption:'A', title: 'Toggle All Input',\r\n        onClick: this._handlerClickAll\r\n      },{\r\n        caption:'F', title: 'Toggle Filter Input',\r\n        onClick: this._handlerClickFilter\r\n      },{\r\n        caption:'D', title: 'Toggle Date Input',\r\n        onClick: this._handlerClickDate\r\n      },{\r\n        caption:'C', title: 'Toggle ChartType Input',\r\n        onClick: this._handlerClickChartType\r\n      })\r\n    this._commandButtons = [\r\n      <D.Button.Flat\r\n        key=\"meta\"\r\n        rootStyle={S.BT_ROOT}\r\n        caption=\"Load Meta\"\r\n        title=\"First Load Meta, then Load Item\"\r\n        onClick={this._handlerLoadMeta}\r\n      />,\r\n      <D.Button.Load\r\n         key=\"load\"\r\n         onClick={this._handlerLoadData}\r\n       />\r\n    ]\r\n    this.state = {\r\n      ...this._isWithInitialState(),\r\n      isShowFilter: false,\r\n      isShowChartType: false,\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      optionTrades: [],\r\n      placeholderTrade: Placeholder.TRADE.INIT,\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _initTrade = () => {\r\n    this.subheading = void 0\r\n    this.optionTrades = void 0\r\n    this.setState({\r\n      optionTrades: [],\r\n      placeholderTrade: Placeholder.TRADE.INIT,\r\n      isLoadingTradeFailed : false\r\n    })\r\n  }\r\n\r\n  _filterTrade = () => {\r\n    let options;\r\n    if (this.tradeFilter && this.optionTrades){\r\n      const filterValue = this.tradeFilter.value;\r\n      if (filterValue !== Filter.DEFAULT){\r\n        options = this.optionTrades.filter((item,index)=>{\r\n           return item.caption.indexOf(filterValue) !== -1;\r\n        })\r\n        if (filterValue === Filter.IMPORT){\r\n           options = options.filter((item,index)=>{\r\n              return item.caption.indexOf(Filter.REIMPORT) === -1;\r\n           })\r\n        }\r\n        if (filterValue === Filter.EXPORT){\r\n           options = options.filter((item,index)=>{\r\n             return item.caption.indexOf(Filter.REEXPORT) === -1;\r\n           })\r\n        }\r\n      } else {\r\n        options = this.optionTrades\r\n      }\r\n    } else {\r\n      options = this.optionTrades\r\n    }\r\n    return options;\r\n  }\r\n\r\n  _handlerClickAll = () => {\r\n    const { isShowFilter, isShowDate, isShowChartType } = this.state\r\n        , _isShow = (isShowFilter || isShowDate || isShowChartType) ? false : true;\r\n    this.setState({\r\n        isShowFilter : _isShow,\r\n        isShowDate : _isShow,\r\n        isShowChartType : _isShow\r\n      })\r\n  }\r\n  _handlerClickFilter = () => {\r\n    this.setState({ isShowFilter: !this.state.isShowFilter })\r\n  }\r\n  _handlerClickDate = () => {\r\n    this.setState({ isShowDate: !this.state.isShowDate })\r\n  }\r\n  _handlerClickChartType = () => {\r\n    this.setState({ isShowChartType: !this.state.isShowChartType })\r\n  }\r\n\r\n  _handlerSelectCountry = (country) => {\r\n    this.country = country\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectChapter = (chapter) => {\r\n    this.chapter = chapter\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectTradeFilter = (filter) => {\r\n     this.tradeFilter = filter\r\n     this.setState({ optionTrades: this._filterTrade() })\r\n  }\r\n  _handlerSelectTrade = (trade) => {\r\n    this.subheading = trade\r\n  }\r\n  _handlerSelectChartType = (chartType) => {\r\n    this.chartType = chartType\r\n  }\r\n  _handlerLoadMeta = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createMetaValidationMessages(),\r\n      this._createLoadMetaOption,\r\n      this._loadMeta\r\n    );\r\n  }\r\n  _loadMeta = (option) => {\r\n    this.props.onLoad(option)\r\n    this.setState({ isLoadingTrade: true })\r\n  }\r\n  _createMetaValidationMessages = () => {\r\n     let msg = [];\r\n     if (!this.country)  { msg.push(this.props.msgOnNotSelected('Country'));}\r\n     if (!this.chapter)  { msg.push(this.props.msgOnNotSelected('Subheading'));}\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadMetaOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , { loadId, fnValue } = this.props;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       isLoadMeta : true,\r\n       onLoad : this._setOptionTrades,\r\n       onCancel : this._loadMetaOptionCancel,\r\n       onFailed : this._loadMetaOptionFailed,\r\n       loadId : loadId\r\n    }\r\n  }\r\n  _setOptionTrades = (optionTrades) => {\r\n    this.optionTrades = optionTrades\r\n    this.setState({\r\n      optionTrades: this._filterTrade(),\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: Placeholder.TRADE.SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionCancel = () => {\r\n    this.setState({\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: Placeholder.TRADE.SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionFailed = () => {\r\n    this.setState({\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: true\r\n    })\r\n  }\r\n  _handlerLoadData = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createDataValidationMessages(),\r\n      this._createLoadDataOption\r\n    );\r\n  }\r\n  _createDataValidationMessages = () => {\r\n     let msg = [];\r\n     if ( !this.chartType || this.chartType.value === ChartType.AREA){\r\n       if (!this.subheading)  {\r\n         msg.push(this.props.msgOnNotSelected('Subheading'));\r\n       }\r\n     } else {\r\n       const { placeholderTrade } = this.state;\r\n       if (placeholderTrade === Placeholder.TRADE.INIT){\r\n         msg.push(Placeholder.TRADE.INIT);\r\n       }\r\n       if (!this.tradeFilter) {\r\n         msg.push(this.props.msgOnNotSelected('Trade Filter'));\r\n       }\r\n     }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadDataOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , _dataColumn = this.subheading\r\n              ? this.subheading.value\r\n              : this.props.dataColumn\r\n        , { loadId, fnValue, dataSource } = this.props\r\n        , _chartType = this.chartType\r\n             ? this.chartType.value\r\n             : ChartType.AREA\r\n        , _title = this.tradeFilter\r\n             ? `${this.country.caption}:${this.tradeFilter.caption}`\r\n             : `${this.country.caption}`\r\n        , _sliceItems = ( !(!this.chartType || this.chartType.value === ChartType.AREA) )\r\n              ? this._createSpliceItems()\r\n              : void 0;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       dataColumn : _dataColumn,\r\n       seriaType : _chartType,\r\n       sliceItems : _sliceItems,\r\n       title : _title,\r\n       subtitle: this.chapter.caption,\r\n       loadId : loadId,\r\n       dataSource : dataSource\r\n    };\r\n  }\r\n  _createSpliceItems = () => {\r\n     const _filterLength = this.tradeFilter.value.length + 2;\r\n     return this.state.optionTrades.map((item, index) => {\r\n        let {value, caption} = item;\r\n        caption = caption.substring( 0, (caption.length - _filterLength) );\r\n        return { caption, value };\r\n    });\r\n  }\r\n  _handlerClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  _refDates = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n           isShow, onShow, onFront,\r\n           countryURI, countryJsonProp,\r\n           commodityURI, commodityJsonProp,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , {\r\n           isToolbar,\r\n           isShowLabels,\r\n           isShowFilter, isShowDate, isShowChartType,\r\n           isLoadingTrade, isLoadingTradeFailed, optionTrades, placeholderTrade,\r\n           validationMessages\r\n         } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n             isShow={isShow}\r\n             caption=\"United Nations Commodity Trade\"\r\n             menuModel={this._menuMore}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handlerClose}\r\n         >\r\n             <D.Toolbar\r\n               isShow={isToolbar}\r\n               buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={countryURI}\r\n               jsonProp={countryJsonProp}\r\n               caption=\"Country:\"\r\n               optionNames=\"Countries\"\r\n               onSelect={this._handlerSelectCountry}\r\n             />\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={commodityURI}\r\n               jsonProp={commodityJsonProp}\r\n               caption=\"Chapter:\"\r\n               optionNames=\"Chapters\"\r\n               onSelect={this._handlerSelectChapter}\r\n             />\r\n\r\n             <D.ShowHide isShow={isShowFilter}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Filter Trade:\"\r\n                 options={TRADE_FILTER_OPTIONS}\r\n                 placeholder=\"Filter...\"\r\n                 onSelect={this._handlerSelectTradeFilter}\r\n               />\r\n             </D.ShowHide>\r\n             <D.RowInputSelect\r\n               isShowLabels={isShowLabels}\r\n               caption=\"Subheading:\"\r\n               options={optionTrades}\r\n               optionNames=\"Meta\"\r\n               isLoading={isLoadingTrade}\r\n               isLoadingFailed={isLoadingTradeFailed}\r\n               placeholder={placeholderTrade}\r\n               onLoadOption={this._handlerLoadMeta}\r\n               onSelect={this._handlerSelectTrade}\r\n             />\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                   ref={this._refDates}\r\n                   isShowLabels={isShowLabels}\r\n                   initFromDate={initFromDate}\r\n                   initToDate={initToDate}\r\n                   msgOnNotValidFormat={msgOnNotValidFormat}\r\n                   onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowChartType}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Chart Type:\"\r\n                 options={CHART_TYPE_OPTIONS}\r\n                 onSelect={this._handlerSelectChartType}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UNCommodityTradeDialog\r\n"],"file":"UNCommodityTradeDialog.js"}