{"version":3,"sources":["../../../src/components/quandl/UnCommodityTradeDialog.jsx"],"names":["Decor","crMenuMore","D","S_BT_ROOT","color","PLACEHOLDER_INITIAL","PLACEHOLDER_SELECT","FILTER_DEFAULT","FILTER_IMPORT","FILTER_EXPORT","FILTER_REIMPORT","FILTER_REEXPORT","_crFilterItem","caption","value","TRADE_FILTER_OPTIONS","CHART_TYPE_OPTIONS","CHT_AREA","CHT_SEMI_DONUT","CHT_STACKED_AREA","CHT_STACKED_AREA_PERCENT","CHT_STACKED_COLUMN","CHT_STACKED_COLUMN_PERCENT","CHT_TREE_MAP","UNCommodityTradeDialog","withToolbar","withValidationLoad","withInitialState","Component","constructor","props","_initTrade","subheading","optionTrades","setState","placeholderTrade","isLoadingTradeFailed","_filterTrade","options","tradeFilter","filterValue","filter","item","index","indexOf","_handlerClickAll","isShowFilter","isShowDate","isShowChartType","state","_isShow","_handlerClickFilter","_handlerClickDate","_handlerClickChartType","_handlerSelectCountry","country","_handlerSelectChapter","chapter","_handlerSelectTradeFilter","_handlerSelectTrade","trade","_handlerSelectChartType","chartType","_handlerLoadMeta","_handleWithValidationLoad","_createMetaValidationMessages","_createLoadMetaOption","_loadMeta","option","onLoad","isLoadingTrade","msg","push","msgOnNotSelected","isValid","datesMsg","datesFragment","getValidation","concat","length","fromDate","toDate","getValues","loadId","fnValue","isLoadMeta","_setOptionTrades","onCancel","_loadMetaOptionCancel","onFailed","_loadMetaOptionFailed","_handlerLoadData","_createDataValidationMessages","_createLoadDataOption","_dataColumn","dataColumn","dataSource","_chartType","_title","_sliceItems","_createSpliceItems","seriaType","sliceItems","title","subtitle","_filterLength","map","substring","_handlerClose","_handleWithValidationClose","_refDates","c","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","noDate","onClick","_commandButtons","_isWithInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","onFront","countryURI","countryJsonProp","commodityURI","commodityJsonProp","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","isToolbar","isShowLabels","validationMessages"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n\r\nimport {\r\n  CHT_AREA,\r\n  CHT_SEMI_DONUT,\r\n  CHT_STACKED_AREA,\r\n  CHT_STACKED_AREA_PERCENT,\r\n  CHT_STACKED_COLUMN,\r\n  CHT_STACKED_COLUMN_PERCENT,\r\n  CHT_TREE_MAP\r\n} from '../../constants/ChartType';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nconst { Decor, crMenuMore } = D\r\n\r\nconst S_BT_ROOT = { color: 'rgb(35, 47, 59)' }\r\n\r\n\r\nconst PLACEHOLDER_INITIAL = 'First Load Meta'\r\n, PLACEHOLDER_SELECT = 'Select...'\r\n\r\n, FILTER_DEFAULT = 'Default Empty'\r\n, FILTER_IMPORT = 'Import - Trade (USD)'\r\n, FILTER_EXPORT = 'Export - Trade (USD)'\r\n, FILTER_REIMPORT = 'Re-Import - Trade (USD)'\r\n, FILTER_REEXPORT = 'Re-Export - Trade (USD)'\r\n\r\n, _crFilterItem = caption => ({\r\n  caption,\r\n  value: caption\r\n})\r\n\r\n, TRADE_FILTER_OPTIONS = [\r\n  { caption: 'Default : Empty Filter', value: FILTER_DEFAULT },\r\n  _crFilterItem(FILTER_IMPORT),\r\n  _crFilterItem('Import - Weight (Kg)'),\r\n  _crFilterItem(FILTER_EXPORT),\r\n  _crFilterItem('Export - Weight (Kg)'),\r\n  _crFilterItem(FILTER_REIMPORT),\r\n  _crFilterItem(FILTER_REEXPORT)\r\n]\r\n\r\nconst CHART_TYPE_OPTIONS = [\r\n  { caption : 'Default : Area', value: CHT_AREA },\r\n  { caption : 'Semi Donut : Total Top90, On Every Year : Recent 2 Years', value: CHT_SEMI_DONUT },\r\n  { caption : 'Stacked Area : Total Top90, On Recent Year', value: CHT_STACKED_AREA },\r\n  { caption : 'Stacked Area Percent : Total Top90, On Recent Year', value: CHT_STACKED_AREA_PERCENT },\r\n  { caption : 'Stacked Column : Total Top90, On Recent Year', value: CHT_STACKED_COLUMN },\r\n  { caption : 'Stacked Column Percent : Total Top90, On Recent Year', value: CHT_STACKED_COLUMN_PERCENT },\r\n  { caption : 'Tree Map : On Recent Year', value: CHT_TREE_MAP }\r\n]\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\n@Decor.withInitialState\r\nclass UNCommodityTradeDialog extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    //this.country = null\r\n    //this.chapter = null\r\n    //this.tradeFilter = null\r\n    //this.subheading = null\r\n    //this.optionTrades = null\r\n    //this.chartType = null\r\n\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleToolBar: this._toggleWithToolbar,\r\n      onAbout: this._clickInfoWithToolbar\r\n    })\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this.toolbarButtons.push({\r\n        caption:'A', title: 'Toggle All Input',\r\n        onClick: this._handlerClickAll\r\n      },{\r\n        caption:'F', title: 'Toggle Filter Input',\r\n        onClick: this._handlerClickFilter\r\n      },{\r\n        caption:'D', title: 'Toggle Date Input',\r\n        onClick: this._handlerClickDate\r\n      },{\r\n        caption:'C', title: 'Toggle ChartType Input',\r\n        onClick: this._handlerClickChartType\r\n      })\r\n    this._commandButtons = [\r\n      <D.Button.Flat\r\n        key=\"meta\"\r\n        rootStyle={S_BT_ROOT}\r\n        caption=\"Load Meta\"\r\n        title=\"First Load Meta, then Load Item\"\r\n        onClick={this._handlerLoadMeta}\r\n      />,\r\n      <D.Button.Load\r\n         key=\"load\"\r\n         onClick={this._handlerLoadData}\r\n       />\r\n    ]\r\n    this.state = {\r\n      ...this._isWithInitialState(),\r\n      isShowFilter: false,\r\n      isShowChartType: false,\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      optionTrades: [],\r\n      placeholderTrade: PLACEHOLDER_INITIAL,\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _initTrade = () => {\r\n    this.subheading = void 0\r\n    this.optionTrades = void 0\r\n    this.setState({\r\n      optionTrades: [],\r\n      placeholderTrade: PLACEHOLDER_INITIAL,\r\n      isLoadingTradeFailed : false\r\n    })\r\n  }\r\n\r\n  _filterTrade = () => {\r\n    let options;\r\n    if (this.tradeFilter && this.optionTrades){\r\n      const filterValue = this.tradeFilter.value;\r\n      if (filterValue !== FILTER_DEFAULT){\r\n        options = this.optionTrades.filter((item,index)=>{\r\n           return item.caption.indexOf(filterValue) !== -1;\r\n        })\r\n        if (filterValue === FILTER_IMPORT){\r\n           options = options.filter((item,index)=>{\r\n              return item.caption.indexOf(FILTER_REIMPORT) === -1;\r\n           })\r\n        }\r\n        if (filterValue === FILTER_EXPORT){\r\n           options = options.filter((item,index)=>{\r\n             return item.caption.indexOf(FILTER_REEXPORT) === -1;\r\n           })\r\n        }\r\n      } else {\r\n        options = this.optionTrades\r\n      }\r\n    } else {\r\n      options = this.optionTrades\r\n    }\r\n    return options;\r\n  }\r\n\r\n  _handlerClickAll = () => {\r\n    const {\r\n      isShowFilter,\r\n      isShowDate,\r\n      isShowChartType\r\n    } = this.state\r\n    , _isShow = isShowFilter || isShowDate || isShowChartType\r\n        ? false : true;\r\n    this.setState({\r\n        isShowFilter : _isShow,\r\n        isShowDate : _isShow,\r\n        isShowChartType : _isShow\r\n      })\r\n  }\r\n  _handlerClickFilter = () => {\r\n    this.setState({ isShowFilter: !this.state.isShowFilter })\r\n  }\r\n  _handlerClickDate = () => {\r\n    this.setState({ isShowDate: !this.state.isShowDate })\r\n  }\r\n  _handlerClickChartType = () => {\r\n    this.setState({ isShowChartType: !this.state.isShowChartType })\r\n  }\r\n\r\n  _handlerSelectCountry = (country) => {\r\n    this.country = country\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectChapter = (chapter) => {\r\n    this.chapter = chapter\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectTradeFilter = (filter) => {\r\n     this.tradeFilter = filter\r\n     this.setState({ optionTrades: this._filterTrade() })\r\n  }\r\n  _handlerSelectTrade = (trade) => {\r\n    this.subheading = trade\r\n  }\r\n  _handlerSelectChartType = (chartType) => {\r\n    this.chartType = chartType\r\n  }\r\n  _handlerLoadMeta = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createMetaValidationMessages(),\r\n      this._createLoadMetaOption,\r\n      this._loadMeta\r\n    );\r\n  }\r\n  _loadMeta = (option) => {\r\n    this.props.onLoad(option)\r\n    this.setState({ isLoadingTrade: true })\r\n  }\r\n  _createMetaValidationMessages = () => {\r\n     let msg = [];\r\n     if (!this.country)  { msg.push(this.props.msgOnNotSelected('Country'));}\r\n     if (!this.chapter)  { msg.push(this.props.msgOnNotSelected('Subheading'));}\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadMetaOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , { loadId, fnValue } = this.props;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       isLoadMeta : true,\r\n       onLoad : this._setOptionTrades,\r\n       onCancel : this._loadMetaOptionCancel,\r\n       onFailed : this._loadMetaOptionFailed,\r\n       loadId : loadId\r\n    }\r\n  }\r\n  _setOptionTrades = (optionTrades) => {\r\n    this.optionTrades = optionTrades\r\n    this.setState({\r\n      optionTrades: this._filterTrade(),\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: PLACEHOLDER_SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionCancel = () => {\r\n    this.setState({\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: PLACEHOLDER_SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionFailed = () => {\r\n    this.setState({\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: true\r\n    })\r\n  }\r\n  _handlerLoadData = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createDataValidationMessages(),\r\n      this._createLoadDataOption\r\n    );\r\n  }\r\n  _createDataValidationMessages = () => {\r\n     let msg = [];\r\n     if ( !this.chartType || this.chartType.value === CHT_AREA){\r\n       if (!this.subheading)  {\r\n         msg.push(this.props.msgOnNotSelected('Subheading'));\r\n       }\r\n     } else {\r\n       const { placeholderTrade } = this.state;\r\n       if (placeholderTrade === PLACEHOLDER_INITIAL){\r\n         msg.push(PLACEHOLDER_INITIAL);\r\n       }\r\n       if (!this.tradeFilter) {\r\n         msg.push(this.props.msgOnNotSelected('Trade Filter'));\r\n       }\r\n     }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadDataOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , _dataColumn = this.subheading\r\n              ? this.subheading.value\r\n              : this.props.dataColumn\r\n        , { loadId, fnValue, dataSource } = this.props\r\n        , _chartType = this.chartType\r\n             ? this.chartType.value\r\n             : CHT_AREA\r\n        , _title = this.tradeFilter\r\n             ? `${this.country.caption}:${this.tradeFilter.caption}`\r\n             : `${this.country.caption}`\r\n        , _sliceItems = ( !(!this.chartType || this.chartType.value === CHT_AREA) )\r\n              ? this._createSpliceItems()\r\n              : void 0;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       dataColumn : _dataColumn,\r\n       seriaType : _chartType,\r\n       sliceItems : _sliceItems,\r\n       title : _title,\r\n       subtitle: this.chapter.caption,\r\n       loadId : loadId,\r\n       dataSource : dataSource\r\n    };\r\n  }\r\n  _createSpliceItems = () => {\r\n     const _filterLength = this.tradeFilter.value.length + 2;\r\n     return this.state.optionTrades.map((item, index) => {\r\n        let {value, caption} = item;\r\n        caption = caption.substring( 0, (caption.length - _filterLength) );\r\n        return { caption, value };\r\n    });\r\n  }\r\n  _handlerClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  _refDates = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n       isShow,\r\n       onShow,\r\n       onFront,\r\n       countryURI,\r\n       countryJsonProp,\r\n       commodityURI,\r\n       commodityJsonProp,\r\n       initFromDate,\r\n       initToDate,\r\n       msgOnNotValidFormat,\r\n       onTestDate\r\n      } = this.props\r\n    , {\r\n       isToolbar,\r\n       isShowLabels,\r\n       isShowFilter,\r\n       isShowDate,\r\n       isShowChartType,\r\n       isLoadingTrade,\r\n       isLoadingTradeFailed,\r\n       optionTrades,\r\n       placeholderTrade,\r\n       validationMessages\r\n     } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n             isShow={isShow}\r\n             caption=\"United Nations Commodity Trade\"\r\n             menuModel={this._menuMore}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handlerClose}\r\n         >\r\n             <D.Toolbar\r\n               isShow={isToolbar}\r\n               buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={countryURI}\r\n               jsonProp={countryJsonProp}\r\n               caption=\"Country:\"\r\n               optionNames=\"Countries\"\r\n               onSelect={this._handlerSelectCountry}\r\n             />\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={commodityURI}\r\n               jsonProp={commodityJsonProp}\r\n               caption=\"Chapter:\"\r\n               optionNames=\"Chapters\"\r\n               onSelect={this._handlerSelectChapter}\r\n             />\r\n\r\n             <D.ShowHide isShow={isShowFilter}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Filter Trade:\"\r\n                 options={TRADE_FILTER_OPTIONS}\r\n                 placeholder=\"Filter...\"\r\n                 onSelect={this._handlerSelectTradeFilter}\r\n               />\r\n             </D.ShowHide>\r\n             <D.RowInputSelect\r\n               isShowLabels={isShowLabels}\r\n               caption=\"Subheading:\"\r\n               options={optionTrades}\r\n               optionNames=\"Meta\"\r\n               isLoading={isLoadingTrade}\r\n               isLoadingFailed={isLoadingTradeFailed}\r\n               placeholder={placeholderTrade}\r\n               onLoadOption={this._handlerLoadMeta}\r\n               onSelect={this._handlerSelectTrade}\r\n             />\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                   ref={this._refDates}\r\n                   isShowLabels={isShowLabels}\r\n                   initFromDate={initFromDate}\r\n                   initToDate={initToDate}\r\n                   msgOnNotValidFormat={msgOnNotValidFormat}\r\n                   onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowChartType}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Chart Type:\"\r\n                 options={CHART_TYPE_OPTIONS}\r\n                 onSelect={this._handlerSelectChartType}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UNCommodityTradeDialog\r\n"],"file":"UnCommodityTradeDialog.js"}