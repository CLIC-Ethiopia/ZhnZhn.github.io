{"version":3,"sources":["../../../src/components/toolbars/RowMfi.jsx"],"names":["crMfiConfig","IndicatorBuilder","_isInArrObjWithId","arrObj","id","find","obj","_crMfiConfig","color","_crId","period","RowMfi","getChart","onAddMfi","onRemoveMfi","_refPeriod","mfiConfs","setMfiConfs","_onAddMfi","_period","current","getValue","_id","chart","config","_onRemoveMfi","filter","d"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;IAEQA,W,GAAgBC,4B,CAAhBD,W;;AAER,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,EAAT,EAAgB;AACxC,SAAO,CAAC,CAACD,MAAM,CAACE,IAAP,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACF,EAAJ,KAAWA,EAAf;AAAA,GAAf,CAAT;AACD,CAFD;;AAIA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACH,EAAD;AAAA,SAAS;AAC5BA,IAAAA,EAAE,EAAEA,EADwB;AAE5BI,IAAAA,KAAK,EAAE;AAFqB,GAAT;AAAA,CAArB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,MAAM;AAAA,SAAI,SAASA,MAAT,GAAkB,GAAtB;AAAA,CAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyC;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAChD,MAAAC,UAAU,GAAG,oBAAb;AAAA,kBACwB,qBAAS,EAAT,CADxB;AAAA,MACFC,QADE;AAAA,MACQC,WADR;AAAA,MAEJC,SAFI,GAEQ,SAAZA,SAAY,GAAM;AACjB,QAAMC,OAAO,GAAGJ,UAAU,CAACK,OAAX,CAAmBC,QAAnB,EAAhB;AAAA,QACOC,GAAG,GAAGb,KAAK,CAACU,OAAD,CADlB;;AAEC,QAAK,CAACjB,iBAAiB,CAACc,QAAD,EAAWM,GAAX,CAAvB,EAAwC;AACtC,UAAMC,KAAK,GAAGX,QAAQ,EAAtB;AAAA,UACEY,MAAM,GAAGxB,WAAW,CAACuB,KAAD,EAAQJ,OAAR,EAAiBG,GAAjB,CADtB;;AAEA,UAAIE,MAAJ,EAAY;AACVX,QAAAA,QAAQ,CAACW,MAAD,EAASF,GAAT,CAAR;AACAL,QAAAA,WAAW,WAAMD,QAAN,GAAgBT,YAAY,CAACe,GAAD,CAA5B,GAAX;AACD;AACF;AACF,GAbG;AAAA,MAcJG,YAdI,GAcW,SAAfA,YAAe,CAACrB,EAAD,EAAQ;AACtBU,IAAAA,WAAW,CAACV,EAAD,CAAX;AACAa,IAAAA,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAgB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACvB,EAAF,KAASA,EAAb;AAAA,KAAjB,CAAD,CAAX;AACF,GAjBK;;AAkBN,SACE,gCAAC,iBAAD,CAAO,QAAP,QACE,gCAAC,2BAAD;AACE,IAAA,OAAO,EAAC,KADV;AAEE,IAAA,UAAU,EAAEW,UAFd;AAGE,IAAA,SAAS,EAAE,EAHb;AAIE,IAAA,KAAK,EAAEG;AAJT,IADF,EAOE,gCAAC,wBAAD;AACE,IAAA,OAAO,EAAEF,QADX;AAEE,IAAA,QAAQ,EAAES;AAFZ,IAPF,CADF;AAcD,CAjCD;;eAmCed,M","sourcesContent":["import React, { useRef, useState } from 'react'\r\n\r\nimport IndicatorBuilder from '../../charts/IndicatorBuilder';\r\n\r\nimport RowCaptionInput from './RowCaptionInput'\r\nimport SeriaConfigs from './SeriaConfigs'\r\n\r\nconst { crMfiConfig } = IndicatorBuilder;\r\n\r\nconst _isInArrObjWithId = (arrObj, id) => {\r\n  return !!arrObj.find(obj => obj.id === id);\r\n};\r\n\r\nconst _crMfiConfig = (id) => ({\r\n  id: id,\r\n  color: '#90ed7d'\r\n});\r\n\r\nconst _crId = period => 'MFI(' + period + ')';\r\n\r\nconst RowMfi = ({ getChart, onAddMfi, onRemoveMfi }) => {\r\n  const _refPeriod = useRef()\r\n  , [ mfiConfs, setMfiConfs ] = useState([])\r\n  , _onAddMfi = () => {\r\n     const _period = _refPeriod.current.getValue()\r\n          , _id = _crId(_period);\r\n      if ( !_isInArrObjWithId(mfiConfs, _id) ){\r\n        const chart = getChart()\r\n        , config = crMfiConfig(chart, _period, _id);\r\n        if (config) {\r\n          onAddMfi(config, _id)\r\n          setMfiConfs([ ...mfiConfs, _crMfiConfig(_id)])\r\n        }\r\n      }\r\n    }\r\n  , _onRemoveMfi = (id) => {\r\n     onRemoveMfi(id);\r\n     setMfiConfs(mfiConfs.filter(d => d.id !== id))\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <RowCaptionInput\r\n        caption=\"MFI\"\r\n        forwardRef={_refPeriod}\r\n        initValue={14}\r\n        onAdd={_onAddMfi}\r\n      />\r\n      <SeriaConfigs\r\n        configs={mfiConfs}\r\n        onRemove={_onRemoveMfi}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RowMfi\r\n"],"file":"RowMfi.js"}