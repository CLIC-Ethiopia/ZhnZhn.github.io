{"version":3,"sources":["../../../src/components/toolbars/RowGrowthRate.jsx"],"names":["INITIAL_COLOR","OC_COLOR","DF_PERIOD","S","ROOT_OC","marginLeft","OC","width","paddingRight","CAPTION","color","PERIOD_INPUT","marginRight","PL_6","paddingLeft","PL_8","PL_24","TEXT","display","fontWeight","INLINE","NONE","fnSpan","InputPlus","initValue","onChangePeriod","onPlus","MinusPeriod","period","onMinus","RowGrowthRate","is","_refColor","_refPeriod","_refSeriaType","_refOnTop","_onColor","current","_onChangePeriod","n","parseInt","_onCheckColumn","_onUnCheckColumn","_onCheckTop","_onUnCheckTop","_onPlus","type","zIndex","undefined"],"mappings":"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","sourcesContent":["\r\nimport React, { useRef } from 'react';\r\n\r\nimport D from '../dialogs/DialogCell';\r\nimport A from '../zhn/A'\r\n\r\nconst INITIAL_COLOR = '#d2b772';\r\n//const OC_COLOR = '#1b2836';\r\nconst OC_COLOR = 'black';\r\nconst DF_PERIOD = 1;\r\n\r\nconst S = {\r\n  ROOT_OC: {\r\n    marginLeft: -8\r\n  },\r\n  OC: {\r\n    width: 'auto',\r\n    paddingRight: 8\r\n  },\r\n  CAPTION: {\r\n    color: OC_COLOR\r\n  },\r\n  PERIOD_INPUT: {\r\n    width: 56,\r\n    marginRight: 12\r\n  },\r\n  PL_6: {\r\n    paddingLeft: 6\r\n  },\r\n  PL_8: {\r\n    paddingLeft: 8\r\n  },\r\n  PL_24: {\r\n    paddingLeft: 24\r\n  },\r\n  TEXT: {\r\n    display: 'inline-block',\r\n    color: 'grey',\r\n    paddingLeft: 4,\r\n    fontWeight: 'bold'\r\n  },\r\n  INLINE: {\r\n    display: 'inline-block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  },\r\n  fnSpan: color => ({\r\n    color, paddingLeft: 8\r\n  })\r\n};\r\n\r\nconst InputPlus = ({ initValue, onChangePeriod, onPlus }) => (\r\n  <React.Fragment>\r\n    <A.InputText\r\n      style={S.PERIOD_INPUT}\r\n      type=\"number\"\r\n      initValue={initValue}\r\n      min={1}\r\n      max={999}\r\n      maxLength={3}\r\n      onInputChange={onChangePeriod}\r\n      onEnter={onPlus}\r\n    />\r\n    <A.SvgPlus style={S.INLINE} onClick={onPlus} />\r\n  </React.Fragment>\r\n);\r\nconst MinusPeriod = ({ color, period, onMinus }) => (\r\n  <React.Fragment>\r\n    <A.SvgMinus\r\n       style={S.INLINE}\r\n       onClick={onMinus}\r\n    />\r\n    <span style={S.fnSpan(color)}>\r\n      {period}\r\n    </span>\r\n  </React.Fragment>\r\n);\r\n\r\nconst RowGrowthRate = ({\r\n  is,\r\n  onMinus,\r\n  onPlus\r\n}) => {\r\n  const _refColor = useRef(INITIAL_COLOR)\r\n  , _refPeriod = useRef(DF_PERIOD)\r\n  , _refSeriaType = useRef('column')\r\n  , _refOnTop = useRef(false)\r\n  , _onColor = color => _refColor.current = color\r\n  , _onChangePeriod = n => _refPeriod.current = parseInt(n, 10) || DF_PERIOD\r\n  , _onCheckColumn = () => _refSeriaType.current = 'column'\r\n  , _onUnCheckColumn = () => _refSeriaType.current = 'spline'\r\n  , _onCheckTop = () => _refOnTop.current = true\r\n  , _onUnCheckTop = () => _refOnTop.current = false\r\n  , _onPlus = () => onPlus({\r\n      color: _refColor.current,\r\n      type: _refSeriaType.current,\r\n      zIndex: _refOnTop.current ? undefined : -1\r\n     }, _refPeriod.current);\r\n\r\n  return (\r\n  <A.OpenClose\r\n    isClose={true}\r\n    rootStyle={S.ROOT_OC}\r\n    ocStyle={S.OC}\r\n    caption=\"Growth Rate\"\r\n    captionStyle={S.CAPTION}\r\n    openColor={OC_COLOR}\r\n    CompAfter={\r\n      is ? <MinusPeriod\r\n              color={_refColor.current}\r\n              period={_refPeriod.current}\r\n              onMinus={onMinus}\r\n            />\r\n         : <InputPlus\r\n             initValue={_refPeriod.current}\r\n             onChangePeriod={_onChangePeriod}\r\n             onPlus={_onPlus}\r\n           />\r\n    }\r\n  >\r\n    <div style={S.PL_8}>\r\n      <D.RowInputColor\r\n        styleCaption={S.NONE}\r\n        initValue={INITIAL_COLOR}\r\n        onEnter={_onColor}\r\n      />\r\n      <div>\r\n        <D.RowCheckBox\r\n          caption=\"Column\"\r\n          rootStyle={{ ...S.INLINE, ...S.PL_6 }}\r\n          captionStyle={S.PL_6}\r\n          checkedColor={OC_COLOR}\r\n          initValue={true}\r\n          onCheck={_onCheckColumn}\r\n          onUnCheck={_onUnCheckColumn}\r\n        />\r\n        <D.RowCheckBox\r\n          caption=\"OnTop\"\r\n          rootStyle={{ ...S.INLINE, ...S.PL_24 }}\r\n          captionStyle={S.PL_6}\r\n          checkedColor={OC_COLOR}\r\n          initValue={false}\r\n          onCheck={_onCheckTop}\r\n          onUnCheck={_onUnCheckTop}\r\n        />\r\n       </div>\r\n       <div style={S.TEXT}>\r\n          Def: 100*(&Delta;y<sub>t1-t0</sub>/y<sub>t0</sub>)\r\n      </div>\r\n    </div>\r\n  </A.OpenClose>\r\n  );\r\n}\r\n\r\nexport default RowGrowthRate\r\n"],"file":"RowGrowthRate.js"}