{"version":3,"sources":["../../../src/components/toolbars/ChartToolBar.jsx"],"names":["S","TAB_INDICATOR","left","PANE_INDICATOR","width","BT_LEGEND","TAB_MINI","TAB_FN","BT_ADD","BT_CONF","INDICATOR_TAB_TYPES","_isIndicatorTab","isWithoutIndicator","series","Array","isArray","indexOf","type","ChartToolbar","shouldComponentUpdate","render","props","style","config","chartId","onMiniChart","getChart","onAddMfi","onRemoveMfi","onClickLegend","onClick2H","onAddToWatch","onCopy","onPasteTo","onMinMax","onZoom","onClickInfo","zhConfig","info","zhMiniConfigs","isWithLegend","isWithoutAdd","_btTabIndicator","_btLegend","_btAdd","_btInfo","_btTabMini","length","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport ButtonTab from '../zhn/ButtonTab'\r\n\r\nimport MenuTabItem from '../zhn-moleculs/MenuTabItem'\r\nimport ModalMenuIndicator from './ModalMenuIndicator'\r\nimport ModalMenuFn from './ModalMenuFn'\r\nimport ModalMenuMini from './ModalMenuMini'\r\n\r\nconst S = {\r\n  TAB_INDICATOR: {\r\n    left: 10\r\n  },\r\n  PANE_INDICATOR: {\r\n     width: 240\r\n  },\r\n  BT_LEGEND: {\r\n    left: 115\r\n  },\r\n  TAB_MINI: {\r\n    left: 350\r\n  },\r\n  TAB_FN: {\r\n    left: 190\r\n  },\r\n  BT_ADD: {\r\n    left: 250\r\n  },\r\n  BT_CONF: {\r\n    left: 430\r\n  }\r\n};\r\n\r\nconst INDICATOR_TAB_TYPES = [ 'area', 'spline', 'line' ];\r\nconst _isIndicatorTab = ({ series }, isWithoutIndicator) => !isWithoutIndicator\r\n  && Array.isArray(series)\r\n  && series[0]\r\n  && INDICATOR_TAB_TYPES.indexOf(series[0].type) !== -1;\r\n\r\nclass ChartToolbar extends Component {\r\n  /*\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    config: PropTypes.object\r\n  }\r\n  */\r\n\r\n  shouldComponentUpdate(){\r\n    return false;\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            style, config={},\r\n            chartId,\r\n            onMiniChart,\r\n            getChart,\r\n            onAddMfi, onRemoveMfi,\r\n            onClickLegend,\r\n            onClick2H,\r\n            onAddToWatch,\r\n            onCopy,\r\n            onPasteTo,\r\n            onMinMax,\r\n            onZoom,\r\n            onClickInfo\r\n          } = this.props\r\n        , { zhConfig={}, info, zhMiniConfigs } = config\r\n        , { isWithoutIndicator, isWithLegend, isWithoutAdd } = zhConfig;\r\n\r\n    const _btTabIndicator = _isIndicatorTab(config, isWithoutIndicator) ? (\r\n      <MenuTabItem\r\n        style= {S.TAB_INDICATOR}\r\n        caption=\"Indicator\"\r\n      >\r\n        <ModalMenuIndicator\r\n          chartId={chartId}\r\n          config={config}\r\n          getChart={getChart}\r\n          onAddMfi={onAddMfi}\r\n          onRemoveMfi={onRemoveMfi}\r\n        />\r\n      </MenuTabItem>\r\n     ) : null;\r\n\r\n    const _btLegend = isWithLegend ? (\r\n      <ButtonTab\r\n        style={S.BT_LEGEND}\r\n        caption=\"Legend\"\r\n        onClick={onClickLegend}\r\n      />\r\n    ) : null;\r\n\r\n    const _btAdd = !isWithoutAdd ? (\r\n      <ButtonTab\r\n        style={S.BT_ADD}\r\n        caption=\"Add\"\r\n        isUpdatable={false}\r\n        onClick={onAddToWatch}\r\n      />\r\n    ) : null;\r\n\r\n    const _btInfo = info ? (\r\n      <ButtonTab\r\n        caption=\"Info\"\r\n        onClick={onClickInfo}\r\n      />\r\n    ) : null;\r\n\r\n  const _btTabMini = zhMiniConfigs && zhMiniConfigs.length\r\n      ? (\r\n       <MenuTabItem\r\n         style= {S.TAB_MINI}\r\n         caption=\"Mini\"\r\n       >\r\n         <ModalMenuMini\r\n           configs={zhMiniConfigs}\r\n           onClickItem={onMiniChart}\r\n         />\r\n       </MenuTabItem>\r\n     ) : null;\r\n\r\n\r\n    return (\r\n      <div style={style}>\r\n         {_btTabIndicator}\r\n         {_btLegend}\r\n         <MenuTabItem\r\n           style={S.TAB_FN}\r\n           caption=\"Fn\"\r\n         >\r\n           <ModalMenuFn\r\n             config={config}\r\n             getChart={getChart}\r\n             onX2H={onClick2H}\r\n             onMinMax={onMinMax}\r\n             onZoom={onZoom}\r\n             onCopy={onCopy}\r\n             onPasteTo={onPasteTo}\r\n           />\r\n         </MenuTabItem>\r\n         {_btAdd}\r\n         {_btInfo}\r\n         {_btTabMini}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartToolbar\r\n"],"file":"ChartToolBar.js"}