{"version":3,"sources":["../../../src/components/zhn-search/InputSearch.jsx"],"names":["CL","INPUT_HR","S","ROOT","position","width","height","borderRadius","background","ROOT_OPTIONS","borderTopLeftRadius","borderTopRightRadius","INPUT","display","paddingLeft","marginLeft","boxShadow","_isHideOptions","keyCode","_isShowOptions","options","length","InputSearch","isSearch","searchApi","crInputChange","crInputChangeDf","refInput","inputKey","forceUpdate","reducer","initialState","state","dispatch","isLoading","isLoadingFailed","isOptions","ticket","action","_onInputChange","_onEnter","cancel","_onClickItem","value","setTicket","n","_onKeyDown","event","hideOptions","current","focus","showOptions","curent","onKeyDown","onInputChange","_rootStyle","toggleOptions"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useReducer, useEffect, Fragment } from 'react'\r\n\r\nimport InputText from '../zhn/InputText'\r\nimport SearchOptions from './SearchOptions'\r\nimport ToggleButton from './ToggleButton'\r\n\r\nimport initialState from './flux/initialState'\r\nimport reducer from './flux/reducer'\r\nimport crAction from './flux/crAction'\r\nimport crInputChangeDf from './flux/crInputChange'\r\n\r\nconst CL = {\r\n  INPUT_HR: 'zhn-search__input__hr'\r\n};\r\n\r\nconst S = {\r\n  ROOT: {\r\n    position: 'relative',\r\n    width: 250,\r\n    height: 36,\r\n    borderRadius: 14,\r\n    background: 'none 0px 0px repeat scroll rgb(225, 225, 203)'\r\n  },\r\n  ROOT_OPTIONS: {\r\n    borderRadius: 0,\r\n    borderTopLeftRadius: 5,\r\n    borderTopRightRadius: 5\r\n  },\r\n  INPUT: {\r\n    display: 'block',\r\n    width: '100%',\r\n    height: 30,\r\n    paddingLeft: 10,\r\n    marginLeft: 0,\r\n    borderRadius: 15,\r\n    boxShadow: 'none'\r\n  }\r\n};\r\n\r\nconst _isHideOptions = keyCode => keyCode === 38\r\n || keyCode === 46\r\n || keyCode === 27;\r\nconst _isShowOptions = (keyCode, options) => keyCode === 40\r\n && options.length > 0;\r\n\r\nconst InputSearch = ({\r\n  isSearch=true,\r\n  searchApi,\r\n  crInputChange=crInputChangeDf\r\n}) => {\r\n  const refInput = useRef()\r\n  , [inputKey, forceUpdate] = useState(0)\r\n  , [state, dispatch] = useReducer(reducer, initialState)\r\n  , {\r\n      isLoading, isLoadingFailed,\r\n      isOptions, options,\r\n      ticket\r\n    } = state\r\n  , action = crAction(dispatch)\r\n  , _onInputChange = crInputChange(action, searchApi);\r\n\r\n  const _onEnter = () => {\r\n    if (isSearch) {\r\n      _onInputChange.cancel()\r\n    }\r\n  }\r\n\r\n  const _onClickItem = (value) => {\r\n    action.setTicket(value)\r\n    forceUpdate(n => n+1)\r\n  }\r\n\r\n  const _onKeyDown = (event) => {\r\n    const { keyCode } = event;\r\n    if (_isHideOptions(keyCode)) {\r\n      action.hideOptions()\r\n      refInput.current.focus()\r\n    } else if (_isShowOptions(keyCode, options)) {\r\n      action.showOptions()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (refInput.curent) {\r\n      refInput.current.focus()\r\n    }\r\n  }, [inputKey])\r\n\r\n  const onKeyDown = isSearch ? _onKeyDown : null\r\n  , onInputChange = isSearch ? _onInputChange: null\r\n  , _rootStyle = isOptions\r\n    ? { ...S.ROOT, ...S.ROOT_OPTIONS }\r\n    : S.ROOT;\r\n\r\n  return (\r\n    <div style={_rootStyle}\r\n      tabIndex={\"-1\"}\r\n      role=\"textbox\"\r\n      onKeyDown={onKeyDown}\r\n    >\r\n      <InputText\r\n        ref={refInput}\r\n        key={inputKey}\r\n        style={S.INPUT}\r\n        initValue={ticket}\r\n        onInputChange={onInputChange}\r\n        onEnter={_onEnter}\r\n      />\r\n      <hr className={CL.INPUT_HR} />\r\n      { isSearch && <Fragment>\r\n          <ToggleButton\r\n            isLoading={isLoading}\r\n            isLoadingFailed={isLoadingFailed}\r\n            options={options}\r\n            isOptions={isOptions}\r\n            toggleOptions={action.toggleOptions}\r\n          />\r\n          <SearchOptions\r\n             isShow={isOptions}\r\n             options={options}\r\n             onClickItem={_onClickItem}\r\n          />\r\n        </Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputSearch\r\n"],"file":"InputSearch.js"}