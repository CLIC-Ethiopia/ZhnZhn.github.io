{"version":3,"sources":["../../../src/components/quandl-browser/UNCommodityTradeDialog.jsx"],"names":["S","BT_ROOT","color","Placeholder","TRADE","INIT","SELECT","Filter","DEFAULT","IMPORT","EXPORT","REIMPORT","REEXPORT","TRADE_FILTER_OPTIONS","caption","value","CHART_TYPE_OPTIONS","AREA","SEMI_DONUT","STACKED_AREA","STACKED_AREA_PERCENT","STACKED_COLUMN","STACKED_COLUMN_PERCENT","TREE_MAP","UNCommodityTradeDialog","withToolbar","withValidationLoad","props","_initTrade","subheading","optionTrades","setState","placeholderTrade","isLoadingTradeFailed","_filterTrade","options","tradeFilter","filterValue","filter","item","index","indexOf","_handlerClickAll","state","isShowFilter","isShowDate","isShowChartType","_isShow","_handlerClickFilter","_handlerClickDate","_handlerClickChartType","_handlerSelectCountry","country","_handlerSelectChapter","chapter","_handlerSelectTradeFilter","_handlerSelectTrade","trade","_handlerSelectChartType","chartType","_handlerLoadMeta","_handleWithValidationLoad","_createMetaValidationMessages","_createLoadMetaOption","_loadMeta","option","onLoad","isLoadingTrade","msg","push","msgOnNotSelected","datesFragment","getValidation","isValid","datesMsg","concat","length","getValues","fromDate","toDate","loadId","fnValue","isLoadMeta","_setOptionTrades","onCancel","_loadMetaOptionCancel","onFailed","_loadMetaOptionFailed","_handlerLoadData","_createDataValidationMessages","_createLoadDataOption","_dataColumn","dataColumn","dataSource","_chartType","_title","_sliceItems","_createSpliceItems","undefined","seriaType","sliceItems","title","subtitle","_filterLength","map","substring","_handlerClose","_handleWithValidationClose","toolbarButtons","_createType2WithToolbar","noDate","onClick","_commandButtons","isShowLabels","validationMessages","nextProps","nextState","isShow","onShow","onFront","countryURI","countryJsonProp","commodityURI","commodityJsonProp","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","c"],"mappings":"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","file":"UNCommodityTradeDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { ChartType } from '../../constants/Type';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst S = {\r\n  BT_ROOT: {\r\n     color: 'rgb(35, 47, 59)'\r\n  }\r\n};\r\n\r\nconst Placeholder = {\r\n  TRADE : {\r\n    INIT : 'First Load Meta',\r\n    SELECT : 'Select...'\r\n  }\r\n};\r\nconst Filter = {\r\n  DEFAULT : 'Default Empty',\r\n  IMPORT : 'Import - Trade (USD)',\r\n  EXPORT : 'Export - Trade (USD)',\r\n  REIMPORT : 'Re-Import - Trade (USD)',\r\n  REEXPORT : 'Re-Export - Trade (USD)'\r\n};\r\n\r\nconst TRADE_FILTER_OPTIONS = [\r\n  { caption: 'Default : Empty Filter', value: Filter.DEFAULT },\r\n  { caption: 'Import - Trade (USD)', value: 'Import - Trade (USD)' },\r\n  { caption: 'Import - Weight (Kg)', value: 'Import - Weight (Kg)' },\r\n  { caption: 'Export - Trade (USD)', value: 'Export - Trade (USD)' },\r\n  { caption: 'Export - Weight (Kg)', value: 'Export - Weight (Kg)' },\r\n  { caption: 'Re-Import - Trade (USD)', value: 'Re-Import - Trade (USD)' },\r\n  { caption: 'Re-Export - Trade (USD)', value: 'Re-Export - Trade (USD)' }\r\n]\r\n\r\nconst CHART_TYPE_OPTIONS = [\r\n  { caption : 'Default : Area', value: ChartType.AREA },\r\n  { caption : 'Semi Donut : Total Top90, On Every Year : Recent 2 Years', value: ChartType.SEMI_DONUT },\r\n  { caption : 'Stacked Area : Total Top90, On Recent Year', value: ChartType.STACKED_AREA },\r\n  { caption : 'Stacked Area Percent : Total Top90, On Recent Year', value: ChartType.STACKED_AREA_PERCENT },\r\n  { caption : 'Stacked Column : Total Top90, On Recent Year', value: ChartType.STACKED_COLUMN },\r\n  { caption : 'Stacked Column Percent : Total Top90, On Recent Year', value: ChartType.STACKED_COLUMN_PERCENT },\r\n  { caption : 'Tree Map : On Recent Year', value: ChartType.TREE_MAP }\r\n]\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass UNCommodityTradeDialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.country = null\r\n    this.chapter = null\r\n    this.tradeFilter = null\r\n    this.subheading = null\r\n    this.optionTrades = null\r\n    this.chartType = null\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this.toolbarButtons.push({\r\n        caption:'A', title: 'Toggle All Input',\r\n        onClick: this._handlerClickAll\r\n      },{\r\n        caption:'F', title: 'Toggle Filter Input',\r\n        onClick: this._handlerClickFilter\r\n      },{\r\n        caption:'D', title: 'Toggle Date Input',\r\n        onClick: this._handlerClickDate\r\n      },{\r\n        caption:'C', title: 'Toggle ChartType Input',\r\n        onClick: this._handlerClickChartType\r\n      })\r\n    this._commandButtons = [\r\n      <D.Button.Flat\r\n        rootStyle={S.BT_ROOT}\r\n        caption=\"Load Meta\"\r\n        title=\"First Load Meta, then Load Item\"\r\n        onClick={this._handlerLoadMeta}\r\n      />,\r\n      <D.Button.Load onClick={this._handlerLoadData} />\r\n    ]\r\n    this.state = {\r\n      isShowLabels: true,\r\n      isShowFilter : false,\r\n      isShowDate : true,\r\n      isShowChartType : false,\r\n      isLoadingTrade : false,\r\n      isLoadingTradeFailed : false,\r\n      optionTrades : [],\r\n      placeholderTrade : Placeholder.TRADE.INIT,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _initTrade = () => {\r\n    this.subheading = null\r\n    this.optionTrades = null\r\n    this.setState({\r\n      optionTrades: [],\r\n      placeholderTrade: Placeholder.TRADE.INIT,\r\n      isLoadingTradeFailed : false\r\n    })\r\n  }\r\n\r\n  _filterTrade = () => {\r\n    let options;\r\n    if (this.tradeFilter && this.optionTrades){\r\n      const filterValue = this.tradeFilter.value;\r\n      if (filterValue !== Filter.DEFAULT){\r\n        options = this.optionTrades.filter((item,index)=>{\r\n           return item.caption.indexOf(filterValue) !== -1;\r\n        })\r\n        if (filterValue === Filter.IMPORT){\r\n           options = options.filter((item,index)=>{\r\n              return item.caption.indexOf(Filter.REIMPORT) === -1;\r\n           })\r\n        }\r\n        if (filterValue === Filter.EXPORT){\r\n           options = options.filter((item,index)=>{\r\n             return item.caption.indexOf(Filter.REEXPORT) === -1;\r\n           })\r\n        }\r\n      } else {\r\n        options = this.optionTrades\r\n      }\r\n    } else {\r\n      options = this.optionTrades\r\n    }\r\n    return options;\r\n  }\r\n\r\n  _handlerClickAll = () => {\r\n    const { isShowFilter, isShowDate, isShowChartType } = this.state\r\n        , _isShow = (isShowFilter || isShowDate || isShowChartType) ? false : true;\r\n    this.setState({\r\n        isShowFilter : _isShow,\r\n        isShowDate : _isShow,\r\n        isShowChartType : _isShow\r\n      })\r\n  }\r\n  _handlerClickFilter = () => {\r\n    this.setState({ isShowFilter: !this.state.isShowFilter })\r\n  }\r\n  _handlerClickDate = () => {\r\n    this.setState({ isShowDate: !this.state.isShowDate })\r\n  }\r\n  _handlerClickChartType = () => {\r\n    this.setState({ isShowChartType: !this.state.isShowChartType })\r\n  }\r\n\r\n  _handlerSelectCountry = (country) => {\r\n    this.country = country\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectChapter = (chapter) => {\r\n    this.chapter = chapter\r\n    this._initTrade()\r\n  }\r\n  _handlerSelectTradeFilter = (filter) => {\r\n     this.tradeFilter = filter\r\n     this.setState({ optionTrades: this._filterTrade() })\r\n  }\r\n  _handlerSelectTrade = (trade) => {\r\n    this.subheading = trade\r\n  }\r\n  _handlerSelectChartType = (chartType) => {\r\n    this.chartType = chartType\r\n  }\r\n  _handlerLoadMeta = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createMetaValidationMessages(),\r\n      this._createLoadMetaOption,\r\n      this._loadMeta\r\n    );\r\n  }\r\n  _loadMeta = (option) => {\r\n    this.props.onLoad(option)\r\n    this.setState({ isLoadingTrade: true })\r\n  }\r\n  _createMetaValidationMessages = () => {\r\n     let msg = [];\r\n     if (!this.country)  { msg.push(this.props.msgOnNotSelected('Country'));}\r\n     if (!this.chapter)  { msg.push(this.props.msgOnNotSelected('Subheading'));}\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadMetaOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , { loadId, fnValue } = this.props;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       isLoadMeta : true,\r\n       onLoad : this._setOptionTrades,\r\n       onCancel : this._loadMetaOptionCancel,\r\n       onFailed : this._loadMetaOptionFailed,\r\n       loadId : loadId\r\n    }\r\n  }\r\n  _setOptionTrades = (optionTrades) => {\r\n    this.optionTrades = optionTrades\r\n    this.setState({\r\n      optionTrades: this._filterTrade(),\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: Placeholder.TRADE.SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionCancel = () => {\r\n    this.setState({\r\n      isLoadingTrade: false,\r\n      isLoadingTradeFailed: false,\r\n      placeholderTrade: Placeholder.TRADE.SELECT\r\n    })\r\n  }\r\n  _loadMetaOptionFailed = () => {\r\n    this.setState({ isLoadingTrade:false, isLoadingTradeFailed:true })\r\n  }\r\n  _handlerLoadData = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createDataValidationMessages(),\r\n      this._createLoadDataOption\r\n    );\r\n  }\r\n  _createDataValidationMessages = () => {\r\n     let msg = [];\r\n     if ( !this.chartType || this.chartType.value === ChartType.AREA){\r\n       if (!this.subheading)  {\r\n         msg.push(this.props.msgOnNotSelected('Subheading'));\r\n       }\r\n     } else {\r\n       const { placeholderTrade } = this.state;\r\n       if (placeholderTrade === Placeholder.TRADE.INIT){\r\n         msg.push(Placeholder.TRADE.INIT);\r\n       }\r\n       if (!this.tradeFilter) {\r\n         msg.push(this.props.msgOnNotSelected('Trade Filter'));\r\n       }\r\n     }\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadDataOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues()\r\n        , _dataColumn = (this.subheading) ? this.subheading.value : this.props.dataColumn\r\n        , { loadId, fnValue, dataSource } = this.props\r\n        , _chartType = (this.chartType) ? this.chartType.value : ChartType.AREA\r\n        , _title = (this.tradeFilter) ?\r\n                   `${this.country.caption}:${this.tradeFilter.caption}` :\r\n                   `${this.country.caption}`\r\n        , _sliceItems = ( !(!this.chartType || this.chartType.value === ChartType.AREA) )\r\n              ? this._createSpliceItems()\r\n              : undefined;\r\n    return {\r\n       value : fnValue(this.chapter.value, this.country.value),\r\n       fromDate: fromDate,\r\n       toDate: toDate,\r\n       dataColumn : _dataColumn,\r\n       seriaType : _chartType,\r\n       sliceItems : _sliceItems,\r\n       title : _title,\r\n       subtitle: this.chapter.caption,\r\n       loadId : loadId,\r\n       dataSource : dataSource\r\n    };\r\n  }\r\n  _createSpliceItems = () => {\r\n     const _filterLength = this.tradeFilter.value.length + 2;\r\n     return this.state.optionTrades.map((item, index) => {\r\n        let {value, caption} = item;\r\n        caption = caption.substring( 0, (caption.length - _filterLength) );\r\n        return { caption, value };\r\n    });\r\n  }\r\n  _handlerClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           isShow, onShow, onFront,\r\n           countryURI, countryJsonProp,\r\n           commodityURI, commodityJsonProp,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , {\r\n           isShowLabels,\r\n           isShowFilter, isShowDate, isShowChartType,\r\n           isLoadingTrade, isLoadingTradeFailed, optionTrades, placeholderTrade,\r\n           validationMessages\r\n         } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n             caption=\"United Nations Commodity Trade\"\r\n             isShow={isShow}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handlerClose}\r\n         >\r\n             <D.ToolbarButtonCircle\r\n               buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={countryURI}\r\n               jsonProp={countryJsonProp}\r\n               caption=\"Country:\"\r\n               optionNames=\"Countries\"\r\n               onSelect={this._handlerSelectCountry}\r\n             />\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={commodityURI}\r\n               jsonProp={commodityJsonProp}\r\n               caption=\"Chapter:\"\r\n               optionNames=\"Chapters\"\r\n               onSelect={this._handlerSelectChapter}\r\n             />\r\n\r\n             <D.ShowHide isShow={isShowFilter}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Filter Trade:\"\r\n                 options={TRADE_FILTER_OPTIONS}\r\n                 placeholder=\"Filter...\"\r\n                 onSelect={this._handlerSelectTradeFilter}\r\n               />\r\n             </D.ShowHide>\r\n             <D.RowInputSelect\r\n               isShowLabels={isShowLabels}\r\n               caption=\"Subheading:\"\r\n               options={optionTrades}\r\n               optionNames=\"Meta\"\r\n               isLoading={isLoadingTrade}\r\n               isLoadingFailed={isLoadingTradeFailed}\r\n               placeholder={placeholderTrade}\r\n               onLoadOption={this._handlerLoadMeta}\r\n               onSelect={this._handlerSelectTrade}\r\n             />\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                   ref={c => this.datesFragment = c}\r\n                   isShowLabels={isShowLabels}\r\n                   initFromDate={initFromDate}\r\n                   initToDate={initToDate}\r\n                   msgOnNotValidFormat={msgOnNotValidFormat}\r\n                   onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowChartType}>\r\n               <D.RowInputSelect\r\n                 isShowLabels={isShowLabels}\r\n                 caption=\"Chart Type:\"\r\n                 options={CHART_TYPE_OPTIONS}\r\n                 onSelect={this._handlerSelectChartType}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UNCommodityTradeDialog\r\n"]}