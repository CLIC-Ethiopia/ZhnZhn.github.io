{"version":3,"sources":["../../../src/components/quandl-browser/Futures3Dialog.jsx"],"names":["yearOptions","caption","value","Futures3Dialog","withToolbar","withValidationLoad","props","_handleSelectYear","year","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msgOnNotValidFormat","isContinious","msg","itemMonth","getValidation","isValid1","isValid","msg1","concat","push","fromDate","length","getValues","item","parent","month","child","getValue","undefined","loadFn","_handleClose","_handleWithValidationClose","toolbarButtons","_createType2WithToolbar","noDate","_commandButtons","state","isShowLabels","validationMessages","nextProps","nextState","isShow","onShow","onFront","futuresURI","initFromDate","onTestDateOrEmpty","msgTestDateOrEmpty","c"],"mappings":"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","file":"Futures3Dialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst yearOptions = [\r\n  { caption: '2017', value: 2017 },\r\n  { caption: '2016', value: 2016 },\r\n  { caption: '2015', value: 2015 },\r\n  { caption: '2014', value: 2014 },\r\n  { caption: '2013', value: 2013 },\r\n  { caption: '2012', value: 2012 }\r\n]\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass Futures3Dialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.year = undefined\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true}\r\n    )\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ];\r\n    this.state = {\r\n      isShowLabels: true,\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectYear = (year) => {\r\n    this.year = year\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n    const { msgOnNotSelected, msgOnNotValidFormat, isContinious } = this.props\r\n    let   msg = [];\r\n\r\n    const { isValid:isValid1, msg:msg1 } = this.itemMonth.getValidation();\r\n    if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n    if (!this.year) { msg.push(msgOnNotSelected('Year')); }\r\n\r\n    if (isContinious && !this.fromDate.isValid()){\r\n      msg.push(msgOnNotValidFormat('From Date'));\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  }\r\n\r\n  _createLoadOption = () => {\r\n    const { parent:item, child:month } = this.itemMonth.getValues()\r\n        , { isContinious } = this.props\r\n        , fromDate = (isContinious)\r\n              ? this.fromDate.getValue()\r\n              : undefined ;\r\n    return this.props.loadFn(\r\n      this.props,\r\n      { item, month, year : this.year, fromDate }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, caption, onShow, onFront,\r\n            futuresURI, msgOnNotSelected,\r\n            isContinious, initFromDate, onTestDateOrEmpty, msgTestDateOrEmpty\r\n          } = this.props\r\n        , {\r\n            isShowLabels,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n      <D.DraggableDialog\r\n         caption={caption}\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onShowChart={onShow}\r\n         onFront={onFront}\r\n         onClose={this._handleClose}\r\n       >\r\n           <D.ToolbarButtonCircle\r\n              buttons={this.toolbarButtons}\r\n           />\r\n           <D.SelectParentChild\r\n               ref={c => this.itemMonth = c}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={futuresURI}\r\n               parentCaption=\"Futures\"\r\n               parentOptionNames=\"Futures\"\r\n               parentJsonProp=\"futures\"\r\n               childCaption=\"Month\"\r\n               msgOnNotSelected={msgOnNotSelected}\r\n           />\r\n           <D.RowInputSelect\r\n              isShowLabels={isShowLabels}\r\n              caption=\"Year\"\r\n              options={yearOptions}\r\n              onSelect={this._handleSelectYear}\r\n           />\r\n           {\r\n              isContinious &&\r\n              <D.RowDate\r\n                 ref={ c => this.fromDate = c}\r\n                 isShowLabels={isShowLabels}\r\n                 labelTitle=\"From Date:\"\r\n                 initValue={initFromDate}\r\n                 errorMsg={msgTestDateOrEmpty}\r\n                 onTestDate={onTestDateOrEmpty}\r\n              />\r\n            }\r\n           <D.ValidationMessages\r\n              validationMessages={validationMessages}\r\n           />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Futures3Dialog\r\n"]}