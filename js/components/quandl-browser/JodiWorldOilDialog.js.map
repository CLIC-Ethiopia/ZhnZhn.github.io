{"version":3,"sources":["../../../src/components/quandl-browser/JodiWorldOilDialog.jsx"],"names":["unitOptions","JodiWorldOilDialog","createClass","getInitialState","country","product","flow","units","toolbarButtons","_createType2WithToolbar","isShowDate","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerSelectCountry","_handlerSelectUnits","_handlerLoad","_handlerWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msg","push","productFlow","getValidation","isValid1","isValid","msg1","concat","datesFragment","datesMsg","length","getValues","parent","child","fromDate","toDate","fnValue","dataColumn","loadId","value","title","caption","subtitle","_handlerClose","_handlerWithValidationClose","onClose","render","onShow","oneCaption","oneURI","oneJsonProp","parentCaption","parentChildURI","parentJsonProp","childCaption","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","state","_commandButtons","c"],"mappings":"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","file":"JodiWorldOilDialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\nimport WithToolbar from '../dialogs/WithToolbar';\r\nimport WithValidation from '../dialogs/WithValidation';\r\n\r\nimport ToolbarButtonCircle from '../dialogs/ToolbarButtonCircle';\r\nimport SelectWithLoad from '../dialogs/SelectWithLoad';\r\nimport RowInputSelect from '../dialogs/RowInputSelect';\r\nimport SelectParentChild from '../dialogs/SelectParentChild';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport DatesFragment from '../zhn-moleculs/DatesFragment';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport ShowHide from '../zhn/ShowHide';\r\n\r\nconst unitOptions = [\r\n  { \"caption\" : \"Thousand Barrels per day (kb/d)\", \"value\" : \"KD\" },\r\n  { \"caption\" : \"Thousand Barrels (kbbl)\", \"value\" : \"KB\" },\r\n  { \"caption\" : \"Thousand Kilolitres (kl)\", \"value\" : \"KL\" },\r\n  { \"caption\" : \"Thousand Metric Tons (kmt)\", \"value\" : \"KT\" },\r\n  { \"caption\" : \"Conversion factor barrels/ktons\", \"value\" : \"BK\" }\r\n]\r\n\r\n\r\nconst JodiWorldOilDialog = React.createClass({\r\n   ...WithToolbar,\r\n   ...WithValidation,\r\n\r\n   getInitialState(){\r\n      this.country = null;\r\n      this.product = null;\r\n      this.flow = null;\r\n      this.units = null;\r\n\r\n      this.toolbarButtons = this._createType2WithToolbar();\r\n      return {\r\n        isShowDate : true,\r\n        validationMessages : []\r\n      }\r\n   },\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (this.props !== nextProps){\r\n        if (this.props.isShow === nextProps.isShow){\r\n           return false;\r\n        }\r\n     }\r\n     return true;\r\n   },\r\n\r\n   _handlerSelectCountry(country){\r\n     this.country = country;\r\n   },\r\n   _handlerSelectUnits(units){\r\n     this.units = units;\r\n   },\r\n\r\n   _handlerLoad(){\r\n     this._handlerWithValidationLoad(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     );\r\n   },\r\n   _createValidationMessages(){\r\n     const { msgOnNotSelected } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.country) { msg.push(msgOnNotSelected('Country')); }\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.productFlow.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     if (!this.units) {\r\n       this.units = unitOptions[0];\r\n     }\r\n\r\n     const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n   },\r\n   _createLoadOption(){\r\n      const { parent:product, child:flow } = this.productFlow.getValues()\r\n          , { fromDate, toDate } = this.datesFragment.getValues()\r\n          , { fnValue, dataColumn, loadId } = this.props;\r\n      return {\r\n        value : fnValue(this.country.value, product.value, flow.value, this.units.value),\r\n        fromDate: fromDate,\r\n        toDate: toDate,\r\n        dataColumn : dataColumn,\r\n        loadId : loadId,\r\n        title : `${this.country.caption}:${product.caption}`,\r\n        subtitle : `${flow.caption}:${this.units.caption}`\r\n      }\r\n   },\r\n   _handlerClose(){\r\n     this._handlerWithValidationClose(this._createValidationMessages);\r\n     this.props.onClose();\r\n   },\r\n\r\n   render(){\r\n     const {\r\n             caption, isShow, onShow,\r\n             oneCaption, oneURI, oneJsonProp,\r\n             parentCaption, parentChildURI, parentJsonProp, childCaption, msgOnNotSelected,\r\n             initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n           } = this.props\r\n         , { isShowDate, validationMessages } = this.state\r\n         , _commandButtons = [\r\n               <ActionButton\r\n                  key=\"a\"\r\n                  type=\"TypeC\"\r\n                  caption=\"Load\"\r\n                  onClick={this._handlerLoad}\r\n               />\r\n          ];\r\n\r\n     return (\r\n       <DraggableDialog\r\n         caption={caption}\r\n         isShow={isShow}\r\n         commandButtons={_commandButtons}\r\n         onShowChart={onShow}\r\n         onClose={this._handlerClose}\r\n       >\r\n          <ToolbarButtonCircle\r\n            buttons={this.toolbarButtons}\r\n          />\r\n\r\n          <SelectWithLoad\r\n             isShow={isShow}\r\n             uri={oneURI}\r\n             jsonProp={oneJsonProp}\r\n             caption={oneCaption}\r\n             optionNames={'Items'}\r\n             onSelect={this._handlerSelectCountry}\r\n          />\r\n          <SelectParentChild\r\n             ref={c => this.productFlow = c}\r\n             isShow={isShow}\r\n             uri={parentChildURI}\r\n             parentCaption={parentCaption}\r\n             parentOptionNames=\"Items\"\r\n             parentJsonProp={parentJsonProp}\r\n             childCaption={childCaption}\r\n             msgOnNotSelected={msgOnNotSelected}\r\n          />\r\n          <RowInputSelect\r\n            caption=\"Units\"\r\n            options={unitOptions}\r\n            onSelect={this._handlerSelectUnits}\r\n          />\r\n\r\n          <ShowHide isShow={isShowDate}>\r\n            <DatesFragment\r\n              ref={c => this.datesFragment = c}\r\n              initFromDate={initFromDate}\r\n              initToDate={initToDate}\r\n              msgOnNotValidFormat={msgOnNotValidFormat}\r\n              onTestDate={onTestDate}\r\n            />\r\n          </ShowHide>\r\n          <ValidationMessages\r\n              validationMessages={validationMessages}\r\n          />\r\n       </DraggableDialog>\r\n     );\r\n   }\r\n});\r\n\r\nexport default JodiWorldOilDialog\r\n"]}