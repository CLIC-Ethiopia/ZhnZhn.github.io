{"version":3,"sources":["../../../src/components/quandl-browser/FuturesWikiDialog.jsx"],"names":["typeOptions","caption","value","FuturesWikiDialog","withToolbar","withValidationLoad","props","_handleSelectType","type","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msgOnNotValidFormat","isContinious","msg","exchangeItem","getValidation","isValid1","isValid","msg1","concat","push","fromDate","length","getValues","exchange","parent","item","child","getValue","undefined","loadFn","_handleClose","_handleWithValidationClose","toolbarButtons","_createType2WithToolbar","noDate","_commandButtons","state","isShowLabels","validationMessages","nextProps","nextState","isShow","onShow","onFront","futuresURI","initFromDate","onTestDateOrEmpty","msgTestDateOrEmpty","c"],"mappings":"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","file":"FuturesWikiDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst typeOptions = [\r\n  { caption: 'Continuous Contract #1', value: 1 },\r\n  { caption: 'Continuous Contract #2', value: 2 },\r\n  { caption: 'Continuous Contract #3', value: 3 },\r\n  { caption: 'Continuous Contract #4', value: 4 },\r\n  { caption: 'Continuous Contract #5', value: 5 }\r\n]\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass FuturesWikiDialog extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.type = undefined\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ]\r\n    this.state = {\r\n      isShowLabels: true,\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectType = (type) => {\r\n    this.type = type\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n  _createValidationMessages = () => {\r\n    const { msgOnNotSelected, msgOnNotValidFormat, isContinious } = this.props\r\n    let   msg = [];\r\n\r\n    const { isValid:isValid1, msg:msg1 } = this.exchangeItem.getValidation();\r\n    if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n    if (!this.type) { msg.push(msgOnNotSelected('Type')); }\r\n\r\n    if (isContinious && !this.fromDate.isValid()){\r\n      msg.push(msgOnNotValidFormat('From Date'));\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { parent:exchange, child:item } = this.exchangeItem.getValues()\r\n        , { isContinious } = this.props\r\n        , fromDate = (isContinious)\r\n              ? this.fromDate.getValue()\r\n              : undefined ;\r\n    return this.props.loadFn(\r\n      this.props,\r\n      { exchange, item , type : this.type, fromDate }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, caption, onShow, onFront,\r\n            futuresURI, msgOnNotSelected,\r\n            isContinious, initFromDate, onTestDateOrEmpty, msgTestDateOrEmpty\r\n          } = this.props\r\n        , { isShowLabels, validationMessages } = this.state;\r\n\r\n    return (\r\n      <D.DraggableDialog\r\n         caption={caption}\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onShowChart={onShow}\r\n         onFront={onFront}\r\n         onClose={this._handleClose}\r\n       >\r\n           <D.ToolbarButtonCircle\r\n              buttons={this.toolbarButtons}\r\n           />\r\n\r\n           <D.SelectParentChild\r\n               ref={c => this.exchangeItem = c}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={futuresURI}\r\n               parentCaption=\"Exchange\"\r\n               parentOptionNames=\"Exchanges\"\r\n               parentJsonProp=\"futures\"\r\n               childCaption=\"Asset\"\r\n               msgOnNotSelected={msgOnNotSelected}\r\n           />\r\n           <D.RowInputSelect\r\n              isShowLabels={isShowLabels}\r\n              caption=\"Type\"\r\n              options={typeOptions}\r\n              onSelect={this._handleSelectType}\r\n           />\r\n           {\r\n             isContinious &&\r\n             <D.RowDate\r\n                ref={ c => this.fromDate = c}\r\n                isShowLabels={isShowLabels}\r\n                labelTitle=\"From Date:\"\r\n                initValue={initFromDate}\r\n                errorMsg={msgTestDateOrEmpty}\r\n                onTestDate={onTestDateOrEmpty}\r\n             />\r\n           }\r\n           <D.ValidationMessages\r\n              validationMessages={validationMessages}\r\n           />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FuturesWikiDialog\r\n"]}