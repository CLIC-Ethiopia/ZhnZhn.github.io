{"version":3,"sources":["../../../src/components/quandl-browser/FuturesWikiDialog.jsx"],"names":["typeOptions","caption","value","Futures3Dialog","createClass","getInitialState","type","undefined","toolbarButtons","onClick","_handlerClickInfo","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","descrUrl","onClickInfo","_handlerSelectType","_handlerLoad","_handlerWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","msgOnNotValidFormat","isContinious","msg","exchangeItem","getValidation","isValid1","isValid","msg1","concat","push","fromDate","length","getValues","exchange","parent","item","child","getValue","_handlerClose","_handlerWithValidationClose","onClose","_renderFromDate","initFromDate","onTestDate","msgTestDate","c","render","onShow","futuresURI","onTestDateOrEmpty","msgTestDateOrEmpty","state","_commandButtons"],"mappings":"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","file":"FuturesWikiDialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport createLoadOptions from '../../flux/creaters/futuresWiki';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\nimport WithValidation from '../dialogs/WithValidation';\r\nimport ToolbarButtonCircle from '../dialogs/ToolbarButtonCircle';\r\nimport SelectParentChild from '../dialogs/SelectParentChild';\r\nimport RowInputSelect from '../dialogs/RowInputSelect';\r\nimport RowDate from '../dialogs/RowDate';\r\nimport ActionButton from '../zhn/ActionButton';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\n\r\nconst typeOptions = [\r\n  { caption: 'Continuous Contract #1', value: 1 },\r\n  { caption: 'Continuous Contract #2', value: 2 },\r\n  { caption: 'Continuous Contract #3', value: 3 },\r\n  { caption: 'Continuous Contract #4', value: 4 },\r\n  { caption: 'Continuous Contract #5', value: 5 }\r\n]\r\n\r\nconst Futures3Dialog = React.createClass({\r\n  ...WithValidation,\r\n\r\n  getInitialState(){\r\n    this.type = undefined;\r\n    this.toolbarButtons = [\r\n      { caption: 'I', onClick: this._handlerClickInfo }\r\n    ];\r\n\r\n    return {\r\n      validationMessages : []\r\n    }\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  },\r\n\r\n  _handlerClickInfo(){\r\n    const { descrUrl, onClickInfo } = this.props;\r\n    onClickInfo({ descrUrl });\r\n  },\r\n\r\n  _handlerSelectType(type){\r\n    this.type = type;\r\n  },\r\n\r\n  _handlerLoad(){\r\n    this._handlerWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  },\r\n  _createValidationMessages(){\r\n    const { msgOnNotSelected, msgOnNotValidFormat, isContinious } = this.props\r\n    let   msg = [];\r\n\r\n    const { isValid:isValid1, msg:msg1 } = this.exchangeItem.getValidation();\r\n    if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n    if (!this.type) { msg.push(msgOnNotSelected('Type')); }\r\n\r\n    if (isContinious && !this.fromDate.isValid()){\r\n      msg.push(msgOnNotValidFormat('From Date'));\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  },\r\n  _createLoadOption(){\r\n    const { parent:exchange, child:item } = this.exchangeItem.getValues()\r\n        //, { fnValue, columnName, dataColumn, seriaColumnNames, loadId, isContinious } = this.props\r\n        , { isContinious } = this.props\r\n        /*\r\n        , _subtitle = (columnName)\r\n              ? `${this.type.caption}:${columnName}`\r\n              : `${this.type.caption}`\r\n        */\r\n        , fromDate = (isContinious)\r\n              ? this.fromDate.getValue()\r\n              : undefined ;\r\n    return createLoadOptions(\r\n      this.props,\r\n      { exchange, item , type : this.type, fromDate }\r\n    );\r\n    /*\r\n    return {\r\n       value : fnValue(exchange.value, item.value, this.type.value ),\r\n       title : `${exchange.caption}:${item.caption}`,\r\n       subtitle : _subtitle,\r\n       columnName : columnName,\r\n       seriaColumnNames: seriaColumnNames,\r\n       dataColumn : dataColumn,\r\n       loadId : loadId,\r\n       fromDate : _fromDate\r\n    };\r\n    */\r\n  },\r\n\r\n  _handlerClose(){\r\n    this._handlerWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  },\r\n\r\n  _renderFromDate(initFromDate, onTestDate, msgTestDate){\r\n    return (\r\n       <RowDate\r\n          ref={ c => this.fromDate = c}\r\n          labelTitle=\"From Date:\"\r\n          initValue={initFromDate}\r\n          errorMsg={msgTestDate}\r\n          onTestDate={onTestDate}\r\n       />\r\n    );\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            isShow, caption, onShow,\r\n            futuresURI, msgOnNotSelected,\r\n            isContinious, initFromDate, onTestDateOrEmpty, msgTestDateOrEmpty\r\n          } = this.props\r\n        , { validationMessages } = this.state\r\n        , _commandButtons = [\r\n             <ActionButton\r\n                key=\"a\"\r\n                type=\"TypeC\"\r\n                caption=\"Load\"\r\n                onClick={this._handlerLoad}\r\n             />\r\n         ];\r\n\r\n    return (\r\n      <DraggableDialog\r\n         caption={caption}\r\n         isShow={isShow}\r\n         commandButtons={_commandButtons}\r\n         onShowChart={onShow}\r\n         onClose={this._handlerClose}\r\n       >\r\n           <ToolbarButtonCircle\r\n              buttons={this.toolbarButtons}\r\n           />\r\n\r\n           <SelectParentChild\r\n               ref={c => this.exchangeItem = c}\r\n               isShow={isShow}\r\n               uri={futuresURI}\r\n               parentCaption=\"Exchange\"\r\n               parentOptionNames=\"Exchanges\"\r\n               parentJsonProp=\"futures\"\r\n               childCaption=\"Asset\"\r\n               msgOnNotSelected={msgOnNotSelected}\r\n           />\r\n           <RowInputSelect\r\n              caption=\"Type\"\r\n              options={typeOptions}\r\n              onSelect={this._handlerSelectType}\r\n           />\r\n           {isContinious && this._renderFromDate(initFromDate, onTestDateOrEmpty, msgTestDateOrEmpty)}\r\n           <ValidationMessages\r\n              validationMessages={validationMessages}\r\n           />\r\n\r\n      </DraggableDialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default Futures3Dialog;\r\n"]}