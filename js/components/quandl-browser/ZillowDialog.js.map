{"version":3,"sources":["../../../src/components/quandl-browser/ZillowDialog.jsx"],"names":["S","TIP","margin","marginTop","fontWeight","_loadFn","props","options","fnValue","dataColumn","loadId","dataSource","one","two","three","fromDate","toDate","zipCode","_isKeyFeature","value","_three","caption","_value","undefined","title","subtitle","isKeyFeature","_reZipCode","_isZipCode","test","ZillowDialog","withToolbar","withValidationLoad","_handleSelectOne","_handleSelectType","type","setState","isShowPattern","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","msg","push","msgOnNotSelected","parentChild","getValues","parent","inputZipCode","isValid","concat","getValidation","isValid1","msg1","datesFragment","datesMsg","length","child","getValue","_handleClose","_handleWithValidationClose","toolbarButtons","_createType2WithToolbar","_commandButtons","state","isShowLabels","isShowDate","validationMessages","nextProps","nextState","isShow","onShow","onFront","oneURI","oneJsonProp","twoCaption","twoURI","twoJsonProp","threeCaption","initFromDate","initToDate","nForecastDate","msgOnNotValidFormat","onTestDate","c","n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,IAAI;AACRC,OAAK;AACHC,YAAQ,MADL;AAEHC,eAAW,MAFR;AAGHC,gBAAY;AAHT;AADG,CAAV;;AAQA,IAAMC,UAAU,SAAVA,OAAU,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAAA,MAC1BC,OAD0B,GACkBF,KADlB,CAC1BE,OAD0B;AAAA,MACjBC,UADiB,GACkBH,KADlB,CACjBG,UADiB;AAAA,MACLC,MADK,GACkBJ,KADlB,CACLI,MADK;AAAA,MACGC,UADH,GACkBL,KADlB,CACGK,UADH;AAAA,MAE1BC,GAF0B,GAEqBL,OAFrB,CAE1BK,GAF0B;AAAA,MAErBC,GAFqB,GAEqBN,OAFrB,CAErBM,GAFqB;AAAA,MAEhBC,KAFgB,GAEqBP,OAFrB,CAEhBO,KAFgB;AAAA,MAETC,QAFS,GAEqBR,OAFrB,CAETQ,QAFS;AAAA,MAECC,MAFD,GAEqBT,OAFrB,CAECS,MAFD;AAAA,MAESC,OAFT,GAEqBV,OAFrB,CAESU,OAFT;AAAA,MAG5BC,aAH4B,GAGXL,IAAIM,KAAJ,KAAc,GAAf,GACX,IADW,GAEX,KALuB;AAAA,MAM5BC,MAN4B,GAMlBP,IAAIM,KAAJ,KAAc,GAAf,GACJL,KADI,GAEJ,EAAEK,OAAMF,OAAR,EAAiBI,SAASJ,OAA1B,EARuB;AAAA,MAS5BK,MAT4B,GASlB,OAAOd,OAAP,KAAmB,UAApB,GACJA,QAAQI,IAAIO,KAAZ,EAAmBN,IAAIM,KAAvB,EAA8BC,OAAOD,KAArC,CADI,GAEJI,SAXuB;;AAYlC,SAAO;AACLJ,WAAQG,MADH;AAELP,cAAUA,QAFL;AAGLC,YAAQA,MAHH;AAILP,gBAAaA,UAJR;AAKLC,YAASA,MALJ;AAMLc,WAAWX,IAAIQ,OAAf,WAA4BD,OAAOC,OAN9B;AAOLI,cAAWb,IAAIS,OAPV;AAQLV,gBAAaA,UARR;AASLe,kBAAcR;AATT,GAAP;AAWD,CAvBD;;AAyBA,IAAMS,aAAa,SAAnB;AACA,IAAMC,aAAa,SAAbA,UAAa,CAACT,KAAD,EAAW;AAC5B,SAAOQ,WAAWE,IAAX,CAAgBV,KAAhB,CAAP;AACD,CAFD;;IAMOW,Y,WAFN,qBAAMC,W,UACN,qBAAMC,kB;;;AAGL,wBAAY1B,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAuBlB2B,gBAvBkB,GAuBC,UAACrB,GAAD,EAAS;AAC1B,YAAKA,GAAL,GAAWA,GAAX;AACD,KAzBiB;;AAAA,UA0BlBsB,iBA1BkB,GA0BE,UAACC,IAAD,EAAU;AAC5B,UAAIA,QAAQA,KAAKhB,KAAL,KAAe,GAA3B,EAA+B;AAC7B,cAAKiB,QAAL,CAAc,EAAEC,eAAe,IAAjB,EAAd;AACD,OAFD,MAEO;AACL,cAAKD,QAAL,CAAc,EAAEC,eAAe,KAAjB,EAAd;AACD;AACF,KAhCiB;;AAAA,UAkClBC,WAlCkB,GAkCJ,YAAM;AAClB,YAAKC,yBAAL,CACE,MAAKC,yBAAL,EADF,EAEE,MAAKC,iBAFP;AAID,KAvCiB;;AAAA,UAwClBD,yBAxCkB,GAwCU,YAAM;AAAA,UACvBE,UADuB,GACR,MAAKpC,KADG,CACvBoC,UADuB;;AAE/B,UAAIC,MAAM,EAAV;;AAEA,UAAI,CAAC,MAAK/B,GAAV,EAAkB;AAAE+B,YAAIC,IAAJ,CAAS,MAAKtC,KAAL,CAAWuC,gBAAX,CAA4BH,UAA5B,CAAT;AAAmD;;AAJxC,kCAMZ,MAAKI,WAAL,CAAiBC,SAAjB,EANY;AAAA,UAMvBC,MANuB,yBAMvBA,MANuB;;AAO/B,UAAIA,UAAUA,OAAO7B,KAAP,KAAiB,GAA/B,EAAmC;AACjC,YAAI,CAAC,MAAK8B,YAAL,CAAkBC,OAAlB,EAAL,EAAiC;AAC/BP,gBAAMA,IAAIQ,MAAJ,CAAW,uBAAX,CAAN;AACD;AACF,OAJD,MAIO;AAAA,qCACkC,MAAKL,WAAL,CAAiBM,aAAjB,EADlC;AAAA,YACWC,QADX,0BACGH,OADH;AAAA,YACyBI,IADzB,0BACqBX,GADrB;;AAEL,YAAI,CAACU,QAAL,EAAe;AAAEV,gBAAMA,IAAIQ,MAAJ,CAAWG,IAAX,CAAN;AAAyB;AAC3C;;AAd8B,kCAgBH,MAAKC,aAAL,CAAmBH,aAAnB,EAhBG;AAAA,UAgBxBF,OAhBwB,yBAgBxBA,OAhBwB;AAAA,UAgBfM,QAhBe,yBAgBfA,QAhBe;;AAiB/B,UAAI,CAACN,OAAL,EAAc;AAAEP,cAAMA,IAAIQ,MAAJ,CAAWK,QAAX,CAAN;AAA6B;;AAE7Cb,UAAIO,OAAJ,GAAeP,IAAIc,MAAJ,KAAe,CAAhB,GAAqB,IAArB,GAA4B,KAA1C;AACA,aAAOd,GAAP;AACF,KA7DiB;;AAAA,UA+DlBF,iBA/DkB,GA+DE,YAAM;AAAA,mCACY,MAAKK,WAAL,CAAiBC,SAAjB,EADZ;AAAA,UACTlC,GADS,0BAChBmC,MADgB;AAAA,UACElC,KADF,0BACJ4C,KADI;AAAA,mCAEK,MAAKH,aAAL,CAAmBR,SAAnB,EAFL;AAAA,UAEhBhC,QAFgB,0BAEhBA,QAFgB;AAAA,UAENC,MAFM,0BAENA,MAFM;AAAA,UAGlBC,OAHkB,GAGR,MAAKgC,YAAL,CAAkBU,QAAlB,EAHQ;;AAKxB,aAAOtD,QACL,MAAKC,KADA,EAEL,EAAEM,KAAM,MAAKA,GAAb,EAAkBC,QAAlB,EAAuBC,YAAvB,EAA8BC,kBAA9B,EAAwCC,cAAxC,EAAgDC,gBAAhD,EAFK,CAAP;AAID,KAxEiB;;AAAA,UA0ElB2C,YA1EkB,GA0EH,YAAM;AACnB,YAAKC,0BAAL;AACD,KA5EiB;;AAEhB,UAAKC,cAAL,GAAsB,MAAKC,uBAAL,CAA6BzD,KAA7B,CAAtB;AACA,UAAK0D,eAAL,GAAuB,CACrB,mDAAG,MAAH,CAAU,IAAV,IAAe,SAAS,MAAK1B,WAA7B,GADqB,CAAvB;AAGA,UAAK2B,KAAL,GAAa;AACXC,oBAAc,IADH;AAEXC,kBAAa,IAFF;AAGX9B,qBAAgB,KAHL;AAIX+B,0BAAoB;AAJT,KAAb;AANgB;AAYjB;;;;0CAEqBC,S,EAAWC,S,EAAU;AACzC,UAAI,KAAKhE,KAAL,KAAe+D,SAAnB,EAA6B;AAC1B,YAAI,KAAK/D,KAAL,CAAWiE,MAAX,KAAsBF,UAAUE,MAApC,EAA2C;AACxC,iBAAO,KAAP;AACF;AACH;AACD,aAAO,IAAP;AACD;;;6BAyDO;AAAA;;AAAA,mBAMI,KAAKjE,KANT;AAAA,UAECe,OAFD,UAECA,OAFD;AAAA,UAEUkD,MAFV,UAEUA,MAFV;AAAA,UAEkBC,MAFlB,UAEkBA,MAFlB;AAAA,UAE0BC,OAF1B,UAE0BA,OAF1B;AAAA,UAGC/B,UAHD,UAGCA,UAHD;AAAA,UAGagC,MAHb,UAGaA,MAHb;AAAA,UAGqBC,WAHrB,UAGqBA,WAHrB;AAAA,UAICC,UAJD,UAICA,UAJD;AAAA,UAIaC,MAJb,UAIaA,MAJb;AAAA,UAIqBC,WAJrB,UAIqBA,WAJrB;AAAA,UAIkCC,YAJlC,UAIkCA,YAJlC;AAAA,UAIgDlC,gBAJhD,UAIgDA,gBAJhD;AAAA,UAKCmC,YALD,UAKCA,YALD;AAAA,UAKeC,UALf,UAKeA,UALf;AAAA,UAK2BC,aAL3B,UAK2BA,aAL3B;AAAA,UAK0CC,mBAL1C,UAK0CA,mBAL1C;AAAA,UAK+DC,UAL/D,UAK+DA,UAL/D;AAAA,mBAUI,KAAKnB,KAVT;AAAA,UAQEC,YARF,UAQEA,YARF;AAAA,UAQgBC,UARhB,UAQgBA,UARhB;AAAA,UAQ4B9B,aAR5B,UAQ4BA,aAR5B;AAAA,UASE+B,kBATF,UASEA,kBATF;;;AAYN,aACI;AAAA,6BAAG,eAAH;AAAA;AACK,mBAAS/C,OADd;AAEK,kBAAQkD,MAFb;AAGK,0BAAgB,KAAKP,eAH1B;AAIK,uBAAaQ,MAJlB;AAKK,mBAASC,OALd;AAMK,mBAAS,KAAKb;AANnB;AAQK,2DAAG,mBAAH;AACG,mBAAS,KAAKE;AADjB,UARL;AAWK,2DAAG,cAAH;AACE,kBAAQS,MADV;AAEE,wBAAcL,YAFhB;AAGE,eAAKQ,MAHP;AAIE,oBAAUC,WAJZ;AAKE,mBAASjC,UALX;AAME,uBAAY,OANd;AAOE,oBAAU,KAAKT;AAPjB,UAXL;AAqBK,2DAAG,iBAAH;AACI,eAAK;AAAA,mBAAK,OAAKa,WAAL,GAAmBuC,CAAxB;AAAA,WADT;AAEI,kBAAQd,MAFZ;AAGI,wBAAcL,YAHlB;AAII,eAAKW,MAJT;AAKI,yBAAeD,UALnB;AAMI,6BAAkB,OANtB;AAOI,0BAAgBE,WAPpB;AAQI,wBAAcC,YARlB;AASI,4BAAkBlC,gBATtB;AAUI,0BAAgB,KAAKX;AAVzB,UArBL;AAiCK;AAAA,+BAAG,QAAH;AAAA,YAAY,QAAQG,aAApB;AACG,6DAAG,UAAH;AACE,iBAAK;AAAA,qBAAK,OAAKY,YAAL,GAAoBqC,CAAzB;AAAA,aADP;AAEE,0BAAcpB,YAFhB;AAGE,mBAAM,WAHR;AAIE,yBAAY,mBAJd;AAKE,oBAAQtC,UALV;AAME,sBAAS;AANX;AADH,SAjCL;AA2CK;AAAA,+BAAG,QAAH;AAAA,YAAY,QAAQuC,UAApB;AACE,6DAAG,aAAH;AACE,iBAAK;AAAA,qBAAK,OAAKZ,aAAL,GAAqB8B,CAA1B;AAAA,aADP;AAEE,0BAAcnB,YAFhB;AAGE,0BAAcc,YAHhB;AAIE,wBAAYC,UAJd;AAKE,2BAAeC,aALjB;AAME,iCAAqBC,mBANvB;AAOE,wBAAYC;AAPd;AADF,SA3CL;AAsDK;AAAA,+BAAG,QAAH;AAAA,YAAY,QAAQ/C,aAApB;AACE;AAAA;AAAA,cAAK,OAAOrC,EAAEC,GAAd;AAAA;AAAA;AADF,SAtDL;AA2DK,2DAAG,kBAAH;AACI,8BAAoBmE;AADxB;AA3DL,OADJ;AAiED;;;;kBAGYtC,Y","file":"ZillowDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst S = {\r\n  TIP: {\r\n    margin: '10px',\r\n    marginTop: '16px',\r\n    fontWeight: 'bold'\r\n  }\r\n};\r\n\r\nconst _loadFn = (props, options) => {\r\n  const { fnValue, dataColumn, loadId, dataSource } = props\r\n      , { one, two, three, fromDate, toDate, zipCode } = options\r\n      , _isKeyFeature = (two.value === 'Z')\r\n           ? true\r\n           : false\r\n      , _three = (two.value !== 'Z')\r\n           ? three\r\n           : { value:zipCode, caption: zipCode }\r\n      , _value = (typeof fnValue === 'function')\r\n           ? fnValue(one.value, two.value, _three.value)\r\n           : undefined\r\n  return {\r\n    value : _value,\r\n    fromDate: fromDate,\r\n    toDate: toDate,\r\n    dataColumn : dataColumn,\r\n    loadId : loadId,\r\n    title : `${two.caption} : ${_three.caption}`,\r\n    subtitle : one.caption,\r\n    dataSource : dataSource,\r\n    isKeyFeature: _isKeyFeature\r\n  }\r\n};\r\n\r\nconst _reZipCode = /^\\d{5}$/;\r\nconst _isZipCode = (value) => {\r\n  return _reZipCode.test(value);\r\n}\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass  ZillowDialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.toolbarButtons = this._createType2WithToolbar(props)\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ]\r\n    this.state = {\r\n      isShowLabels: true,\r\n      isShowDate : true,\r\n      isShowPattern : false,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n  _handleSelectType = (type) => {\r\n    if (type && type.value === 'Z'){\r\n      this.setState({ isShowPattern: true })\r\n    } else {\r\n      this.setState({ isShowPattern: false })\r\n    }\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.one)    { msg.push(this.props.msgOnNotSelected(oneCaption));}\r\n\r\n     const { parent } = this.parentChild.getValues()\r\n     if (parent && parent.value === 'Z'){\r\n       if (!this.inputZipCode.isValid()){\r\n         msg = msg.concat('Zip Code is not valid')\r\n       }\r\n     } else {\r\n       const { isValid:isValid1, msg:msg1 } = this.parentChild.getValidation();\r\n       if (!isValid1) { msg = msg.concat(msg1); }\r\n     }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n\r\n  _createLoadOption = () => {\r\n    const { parent:two, child:three } = this.parentChild.getValues()\r\n        , { fromDate, toDate } = this.datesFragment.getValues()\r\n        , zipCode = this.inputZipCode.getValue();\r\n\r\n    return _loadFn(\r\n      this.props,\r\n      { one : this.one, two, three, fromDate, toDate, zipCode }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow, onFront,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp, threeCaption, msgOnNotSelected,\r\n           initFromDate, initToDate, nForecastDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , {\r\n            isShowLabels, isShowDate, isShowPattern,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n             caption={caption}\r\n             isShow={isShow}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handleClose}\r\n         >\r\n             <D.ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames=\"Items\"\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n\r\n             <D.SelectParentChild\r\n                 ref={c => this.parentChild = c}\r\n                 isShow={isShow}\r\n                 isShowLabels={isShowLabels}\r\n                 uri={twoURI}\r\n                 parentCaption={twoCaption}\r\n                 parentOptionNames=\"Items\"\r\n                 parentJsonProp={twoJsonProp}\r\n                 childCaption={threeCaption}\r\n                 msgOnNotSelected={msgOnNotSelected}\r\n                 onSelectParent={this._handleSelectType}\r\n             />\r\n             <D.ShowHide isShow={isShowPattern}>\r\n                <D.RowPattern\r\n                  ref={n => this.inputZipCode = n}\r\n                  isShowLabels={isShowLabels}\r\n                  title=\"Zip Code*\"\r\n                  placeholder=\"Zip Code, 5 Digit\"\r\n                  onTest={_isZipCode}\r\n                  errorMsg=\"5 digit format must be\"\r\n                />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 isShowLabels={isShowLabels}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 nForecastDate={nForecastDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowPattern}>\r\n               <div style={S.TIP}>\r\n                 * Not for all Zip Code data are available.\r\n               </div>\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ZillowDialog\r\n"]}