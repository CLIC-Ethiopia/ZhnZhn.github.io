{"version":3,"sources":["../../../src/components/items/AreaChartItem.jsx"],"names":["CL","ROOT","S","TAB_DIV","position","height","backgroundColor","zIndex","SHOW_HIDE","marginLeft","WRAPPER","marginTop","DATA_SOURCE","left","bottom","color","fontSize","_isFn","fn","AreaChartItem","props","hideCaption","mainChart","zhHideCaption","setState","isShowToolbar","isCaption","showCaption","state","zhShowCaption","setItemCaption","str","itemCaption","setDataSource","strDataSource","_dataSourceEl","forceUpdate","getMainChart","_handleLoadedMiniChart","metricChart","options","zhDetailCharts","push","_handleUnLoadedMiniChart","objChart","charts","Array","isArray","filter","chart","_toggle","propName","prevState","_handleToggleSeria","item","zhToggleSeria","index","_handleClick2H","zhToggle2H","_handleZoom","onZoom","_handleAddToWatch","caption","config","onAddToWatch","_handleCopy","onCopy","_handlePasteTo","onPasteToDialog","toChart","fromChart","getCopyFromChart","_toggleMinMax","zhToggleMinMaxLines","_handleClickInfo","isShowInfo","isShowChart","isShowLegend","_handleClickChart","_handleCheckBox","isCheck","checkBox","chartType","onSetActive","_addMfi","id","mfiConfigs","_removeMfi","c","_handleClickConfig","onShowConfigDialog","onToggleToolbar","_handleToggleToolbar","_crValueMoving","prev","dateTo","crValueMoving","_handleMiniChart","btTitle","ChartFn","_titles","miniTitles","_t","find","t","isShowAbs","length","update","arMetricOption","_createChartToolBar","_chartId","_handleClickLegend","_renderLegend","zhConfig","isWithLegend","legend","_compLegend","_refChartComp","comp","chartComp","_handleToggleOpen","bind","_moreModel","onToggle","onToTop","onHideCaption","_fnOnCheck","_fnOnUnCheck","dataSource","_itemCaption","isOpen","componentDidMount","getChart","render","onCloseItem","isAdminMode","zhMiniConfigs","itemTime","valueMoving","info","reflowChart","width","spacingLeft","arCalcDeltaYAxis","setSize","undefined","forEach","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport safeGet from '../../utils/safeGet'\r\n\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport HighchartWrapper from '../zhn/HighchartWrapper';\r\nimport Legend from '../zhn/Legend';\r\nimport ChartToolBar from '../toolbars/ChartToolBar';\r\nimport crModelMore from './AreaMore'\r\nimport Header from './Header';\r\nimport MiniCharts from './MiniCharts';\r\nimport PanelDataInfo from './PanelDataInfo';\r\n\r\nconst CL = {\r\n  ROOT: 'chart-item'\r\n};\r\n\r\nconst S = {\r\n  TAB_DIV: {\r\n    position: 'relative',\r\n    height: '30px',\r\n    backgroundColor: 'transparent',\r\n    zIndex: 2\r\n  },\r\n  SHOW_HIDE: {\r\n    marginLeft: '8px'\r\n  },\r\n  WRAPPER: {\r\n    marginTop: '6px'\r\n  },\r\n  DATA_SOURCE: {\r\n    position: 'absolute',\r\n    left: '5px',\r\n    bottom: '0px',\r\n    color: '#909090',\r\n    fontSize: '11px'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nclass AreaChartItem extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    chartType: PropTypes.string,\r\n    config: PropTypes.shape({\r\n      zhConfig: PropTypes.shape({\r\n        dataSource: PropTypes.string,\r\n        itemCaption: PropTypes.string\r\n      }),\r\n      zhMiniConfigs: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          btTitle: PropTypes.string,\r\n          config: PropTypes.object\r\n      }))\r\n    }),\r\n    onAddToWatch: PropTypes.func,\r\n    onSetActive: PropTypes.func,\r\n    onShowConfigDialog: PropTypes.func,\r\n    onCloseItem: PropTypes.func,\r\n    isAdminMode: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.bool\r\n    ]),\r\n    crValueMoving: PropTypes.func,\r\n    onZoom: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this._handleToggleOpen = this._toggle.bind(this, 'isOpen')\r\n    this._handleClickLegend = this._toggle.bind(this, 'isShowLegend')\r\n    this._handleToggleToolbar = this._toggle.bind(this, 'isShowToolbar')\r\n\r\n    this._moreModel = crModelMore(this, {\r\n      onToggle: this._handleToggleToolbar,\r\n      onToTop: props.onToTop,\r\n      onHideCaption: this.hideCaption\r\n    })\r\n\r\n    this._fnOnCheck = this._handleCheckBox.bind(this, true)\r\n    this._fnOnUnCheck = this._handleCheckBox.bind(this, false)\r\n\r\n    const { config={}, caption='' } = props\r\n    , { zhConfig={} } = config\r\n    , { dataSource='', itemCaption, id } = zhConfig\r\n    , _itemCaption = itemCaption || caption;\r\n\r\n    this._chartId = id\r\n\r\n    this._dataSourceEl = (\r\n       <div style={S.DATA_SOURCE}>\r\n         {dataSource}\r\n       </div>\r\n    )\r\n    this.state = {\r\n      isOpen: true,\r\n      isShowToolbar: true,\r\n      isShowLegend: false,\r\n\r\n      isShowChart: true,\r\n      isShowInfo: false,\r\n\r\n      itemCaption: _itemCaption,\r\n      mfiConfigs: [],\r\n\r\n      isShowAbs: true,\r\n      miniTitles: [],\r\n\r\n      isCaption: true\r\n    }\r\n  }\r\n\r\n  hideCaption = () => {\r\n    this.mainChart.zhHideCaption()\r\n    this.setState({\r\n      isShowToolbar: false,\r\n      isCaption: false\r\n    })\r\n  }\r\n  showCaption = () => {\r\n    if (!this.state.isCaption) {\r\n      this.mainChart.zhShowCaption()\r\n      this.setState({\r\n        isShowToolbar: true,\r\n        isCaption: true\r\n      })\r\n    }\r\n  }\r\n\r\n  setItemCaption = (str) => {\r\n    this.setState({ itemCaption: str })\r\n  }\r\n  setDataSource = (strDataSource) => {\r\n    this._dataSourceEl = (\r\n       <div style={S.DATA_SOURCE}>\r\n         {strDataSource}\r\n       </div>\r\n    )\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mainChart = this.chartComp.getChart()\r\n  }\r\n\r\n  getMainChart = () => {\r\n    return this.mainChart;\r\n  }\r\n\r\n  _handleLoadedMiniChart = (metricChart) => {\r\n     this.mainChart.options.zhDetailCharts.push(metricChart);\r\n  }\r\n  _handleUnLoadedMiniChart = (objChart) => {\r\n    const charts = safeGet(this.mainChart, 'options.zhDetailCharts')\r\n    if (Array.isArray(charts)){\r\n      this.mainChart.options.zhDetailCharts = charts.filter((chart) => {\r\n        return chart !== objChart;\r\n      })\r\n    }\r\n  }\r\n\r\n  _toggle = (propName) => {\r\n    this.setState(prevState =>({\r\n      [propName]: !prevState[propName]\r\n    }))\r\n  }\r\n\r\n  _handleToggleSeria = (item) => {\r\n    this.mainChart.zhToggleSeria(item.index)\r\n  }\r\n\r\n  _handleClick2H = () => {\r\n    this.mainChart.zhToggle2H()\r\n  }\r\n\r\n  _handleZoom = () => {\r\n    const { onZoom } = this.props;\r\n    if (_isFn(onZoom)) {\r\n      onZoom({ chart: this.mainChart })\r\n    }\r\n  }\r\n\r\n  _handleAddToWatch = () => {\r\n    const { caption, config, onAddToWatch } = this.props;\r\n    onAddToWatch( {caption, config} )\r\n  }\r\n\r\n  _handleCopy = () => {\r\n    this.props.onCopy(this.mainChart)\r\n  }\r\n  _handlePasteTo = () => {\r\n    this.props.onPasteToDialog({\r\n      toChart: this.mainChart,\r\n      fromChart: this.props.getCopyFromChart()\r\n    })\r\n  }\r\n  _toggleMinMax = () => {\r\n    this.mainChart.zhToggleMinMaxLines()\r\n  }\r\n\r\n  _handleClickInfo = () => {\r\n    this.setState({\r\n      isShowInfo: true,\r\n      isShowChart: false,\r\n      isShowLegend: false\r\n    });\r\n  }\r\n\r\n  _handleClickChart = () => {\r\n    this.setState({\r\n       isShowChart: true,\r\n       isShowInfo: false\r\n     });\r\n  }\r\n\r\n  _handleCheckBox = (isCheck, checkBox) => {\r\n    const { chartType, onSetActive } = this.props;\r\n    checkBox.chartType = chartType\r\n    onSetActive(isCheck, checkBox, this.mainChart)\r\n  }\r\n\r\n  _addMfi = (config, id) => {\r\n    this.setState(prevState => {\r\n      prevState.mfiConfigs.push({ config, id })\r\n      return prevState;\r\n    })\r\n  }\r\n  _removeMfi = (id) => {\r\n    this.setState(prevState => {\r\n      prevState.mfiConfigs = prevState.mfiConfigs\r\n         .filter(c => c.id !== id)\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _handleClickConfig = () => {\r\n    const { caption, onShowConfigDialog } = this.props;\r\n    onShowConfigDialog({\r\n      caption,\r\n      chart: this.mainChart,\r\n      setItemCaption: this.setItemCaption,\r\n      setDataSource: this.setDataSource,\r\n      onToggleToolbar: this._handleToggleToolbar\r\n    })\r\n  }\r\n\r\n  _crValueMoving = (prev, dateTo) => {\r\n     return this.props.crValueMoving(this.mainChart, prev, dateTo);\r\n  }\r\n\r\n _handleMiniChart = (btTitle) => {\r\n   const { ChartFn } = this.props;\r\n   this.setState(prevState => {\r\n     const _titles = prevState.miniTitles\r\n         , _t = _titles.find(t => t === btTitle);\r\n     prevState.miniTitles = _t\r\n       ? _titles.filter(t => t !== btTitle)\r\n       : [btTitle, ..._titles]\r\n     prevState.isShowAbs = prevState.miniTitles.length === 0\r\n       ? true : false;\r\n     this.mainChart.update(\r\n       ChartFn.arMetricOption(\r\n         this.mainChart, prevState.isShowAbs\r\n       )\r\n     )\r\n     return prevState;\r\n   })\r\n }\r\n\r\n _createChartToolBar = (config) => {\r\n   const { isShowToolbar } = this.state;\r\n   return (\r\n         <ShowHide isShow={isShowToolbar}>\r\n           <ChartToolBar\r\n             style={S.TAB_DIV}\r\n             chartId={this._chartId}\r\n             config={config}\r\n             onMiniChart={this._handleMiniChart}\r\n             getChart={this.getMainChart}\r\n             onAddMfi={this._addMfi}\r\n             onRemoveMfi={this._removeMfi}\r\n             onClickLegend={this._handleClickLegend}\r\n             onClick2H={this._handleClick2H}\r\n             onAddToWatch={this._handleAddToWatch}\r\n             onClickInfo={this._handleClickInfo}\r\n             onClickConfig={this._handleClickConfig}\r\n             onCopy={this._handleCopy}\r\n             onPasteTo={this._handlePasteTo}\r\n             onMinMax={this._toggleMinMax}\r\n             onZoom={this._handleZoom}\r\n            />\r\n         </ShowHide>\r\n      );\r\n   }\r\n\r\n  _renderLegend = (config={}) => {\r\n    const { isShowLegend } = this.state\r\n        , { zhConfig={} } = config\r\n        , { isWithLegend, legend } = zhConfig;\r\n    const _compLegend = isWithLegend ? (\r\n      <ShowHide isShow={isShowLegend}>\r\n        <Legend\r\n           legend={legend}\r\n           onClickItem={this._handleToggleSeria}\r\n        />\r\n      </ShowHide>\r\n    ) : null;\r\n\r\n    return _compLegend;\r\n  }\r\n\r\n  _refChartComp = comp => this.chartComp = comp\r\n\r\n  render(){\r\n    const {\r\n            //chartType,\r\n            caption, config={},\r\n            onCloseItem, isAdminMode\r\n          } = this.props\r\n        , { zhConfig={}, zhMiniConfigs } = config\r\n        , { itemTime } = zhConfig\r\n        , {\r\n            isOpen, isShowChart, isShowInfo,\r\n            itemCaption,\r\n            mfiConfigs,\r\n            isShowAbs,\r\n            miniTitles,\r\n            isCaption\r\n        } = this.state;\r\n    //console.log(config)\r\n    return (\r\n      <div className={CL.ROOT}>\r\n         { isCaption && <Header\r\n            isOpen={isOpen}\r\n            //chartType={chartType}\r\n            moreModel={this._moreModel}\r\n            onCheck={this._fnOnCheck}\r\n            onUnCheck={this._fnOnUnCheck}\r\n            itemCaption={itemCaption}\r\n            itemTitle={caption}\r\n            itemTime={itemTime}\r\n            onToggle={this._handleToggleOpen}\r\n            valueMoving={config.valueMoving}\r\n            onClose={onCloseItem}\r\n            isAdminMode={isAdminMode}\r\n            crValueMoving={this._crValueMoving}\r\n         />\r\n        }\r\n        <ShowHide isShow={isOpen} style={S.SHOW_HIDE}>\r\n           {isShowChart && this._createChartToolBar(config)}\r\n           <HighchartWrapper\r\n              ref={this._refChartComp}\r\n              isShow={isShowChart}\r\n              rootStyle={S.WRAPPER}\r\n              config={config}\r\n              isShowAbs={isShowAbs}\r\n              absComp={this._dataSourceEl}\r\n           />\r\n           <PanelDataInfo\r\n              isShow={isShowInfo}\r\n              info={config.info}\r\n              zhInfo={config.zhConfig}\r\n              onClickChart={this._handleClickChart}\r\n           />\r\n          {this._renderLegend(config)}\r\n          <MiniCharts\r\n            configs={mfiConfigs}\r\n            absComp={this._dataSourceEl}\r\n            onLoaded={this._handleLoadedMiniChart}\r\n            onWillUnLoaded={this._handleUnLoadedMiniChart}\r\n          />\r\n          <MiniCharts\r\n            configs={zhMiniConfigs}\r\n            idPropName=\"btTitle\"\r\n            ids={miniTitles}\r\n            absComp={this._dataSourceEl}\r\n            onLoaded={this._handleLoadedMiniChart}\r\n            onWillUnLoaded={this._handleUnLoadedMiniChart}\r\n          />\r\n        </ShowHide>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  reflowChart(width){\r\n    const { ChartFn } = this.props\r\n        , spacingLeft = ChartFn.arCalcDeltaYAxis(this.mainChart)\r\n        , zhDetailCharts = this.mainChart.options.zhDetailCharts;\r\n\r\n    this.mainChart.setSize(width, undefined, true)\r\n    if (Array.isArray(zhDetailCharts)) {\r\n      zhDetailCharts.forEach(chart => {\r\n        if (spacingLeft) {\r\n          chart.update({ chart: { spacingLeft } }, false)\r\n        }\r\n        chart.setSize(width, undefined, true)\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default AreaChartItem\r\n"],"file":"AreaChartItem.js"}