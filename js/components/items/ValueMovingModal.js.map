{"version":3,"sources":["../../../src/components/items/ValueMovingModal.jsx"],"names":["S_MODAL_POPUP","position","top","left","zIndex","width","backgroundColor","padding","border","borderRadius","boxShadow","cursor","S_ROW","display","justifyContent","S_DATE","paddingLeft","whiteSpace","_isNotAdminMode","isAdminMode","isDenyToChange","_isAdminMode","RowValueDate","value","date","ValueMovingModal","props","isShow","updateDateTo","valueMoving","onClose","msgDateTo","setMsgDateTo","_refInput","_hEnterDate","dateTo","current","focus","valueTo","isDmy"],"mappings":"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","sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport { isDmy } from '../../utils/DateUtils';\r\nimport formatAllNumber from '../../utils/formatAllNumber'\r\n\r\nimport ModalPopup from '../zhn-moleculs/ModalPopup'\r\nimport SpanValue from '../zhn-span/SpanValue'\r\nimport SpanDate from '../zhn-span/SpanDate'\r\nimport DivCompareTo from './DivCompareTo'\r\n\r\nconst S_MODAL_POPUP = {\r\n  position: 'absolute',\r\n  top: 25,\r\n  left: 0,\r\n  zIndex: 20,\r\n  width: 'auto',\r\n  backgroundColor: 'inherit',\r\n  padding: '5px 10px 10px 10px',\r\n  border: '2px solid #1b2836',\r\n  borderRadius: 5,\r\n  boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 5px',\r\n  cursor: 'auto'\r\n}\r\n, S_ROW = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between'\r\n}\r\n, S_DATE = {\r\n  display: 'inline-block',\r\n  paddingLeft: 16,\r\n  whiteSpace: 'nowrap'\r\n};\r\n\r\nconst _isNotAdminMode = (isAdminMode, isDenyToChange) => {\r\n  const _isAdminMode = typeof isAdminMode == 'function'\r\n    ? isAdminMode()\r\n    : typeof isAdminMode == 'boolean'\r\n        ? isAdminMode\r\n        : false;\r\n  return !_isAdminMode || isDenyToChange;\r\n};\r\n\r\nconst RowValueDate = ({ value, date }) => (\r\n  <div style={S_ROW}>\r\n    <SpanValue value={formatAllNumber(value)} />\r\n    <SpanDate date={date} style={S_DATE} />\r\n  </div>\r\n);\r\n\r\nconst ValueMovingModal = (props) => {\r\n  const {\r\n    isShow,\r\n    updateDateTo,\r\n    valueMoving,\r\n    isAdminMode,\r\n    onClose\r\n  } = props\r\n  , [msgDateTo, setMsgDateTo] = useState('')\r\n  , _refInput = useRef()\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , _hEnterDate = useCallback(dateTo => {\r\n    if (isDmy(dateTo)){\r\n      if (updateDateTo(dateTo)){\r\n        setMsgDateTo('')\r\n      } else {\r\n        setMsgDateTo(`No data for ${dateTo}`)\r\n      }\r\n    }\r\n  }, []);\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  useEffect(()=>{\r\n    if (isShow) {\r\n      if (_refInput.current) {\r\n        _refInput.current.focus()\r\n      }\r\n      if (msgDateTo) {\r\n        setMsgDateTo('')\r\n      }\r\n    }\r\n  }, [props])\r\n\r\n  const {\r\n    value,\r\n    date,\r\n    valueTo,\r\n    dateTo,\r\n    isDenyToChange\r\n  } = valueMoving;\r\n\r\n  return (\r\n    <ModalPopup\r\n      isShow={isShow}\r\n      style={S_MODAL_POPUP}\r\n      onClose={onClose}\r\n    >\r\n      <RowValueDate value={value} date={date} />\r\n      <RowValueDate value={valueTo} date={dateTo} />\r\n      { !_isNotAdminMode(isAdminMode, isDenyToChange)\r\n        && <DivCompareTo\r\n         ref={_refInput}\r\n         initialValue={dateTo}\r\n         msgErr={msgDateTo}\r\n         onTest={isDmy}\r\n         onEnter={_hEnterDate}\r\n      />}\r\n    </ModalPopup>\r\n  );\r\n}\r\n\r\n/*\r\nModalValueMoving.propTypes = {\r\n  valueMoving: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    date: PropTypes.string,\r\n    valueTo: PropTypes.string,\r\n    dateTo: PropTypes.string,\r\n    isDenyToChange: PropTypes.bool\r\n  }),\r\n  isAdminMode: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.bool\r\n  ]),\r\n  msgDateTo: PropTypes.string,\r\n  updateDateTo: PropTypes.func,\r\n  onClose: PropTypes.func\r\n}\r\n*/\r\n\r\nexport default ValueMovingModal\r\n"],"file":"ValueMovingModal.js"}