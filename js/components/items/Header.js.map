{"version":3,"sources":["../../../src/components/items/Header.jsx"],"names":["STYLE","ROOT","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","lineHeight","height","width","CHECK_BOX","float","marginRight","CAPTION_OPEN","display","color","cursor","fontWeight","whiteSpace","textOverflow","overflow","CAPTION_CLOSE","CAPTION_WIDTH","TIME","Header","props","isOpen","chartType","onCheck","onUnCheck","itemCaption","itemTitle","itemTime","onToggle","valueMoving","onClose","_styleIsOpen","Object","assign","_styleCaption","_movingBadgeEl","undefined","_timeEl","propTypes","bool","isRequired","string","func","object"],"mappings":"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","file":"Header.js","sourcesContent":["import React, { PropTypes } from 'react';\r\n\r\nimport SvgCheckBox from '../zhn/SvgCheckBox';\r\nimport ValueMovingBadge from '../zhn/ValueMovingBadge';\r\nimport SvgClose from '../zhn/SvgClose';\r\n\r\nconst STYLE = {\r\n  ROOT : {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    height: '28px',\r\n    width : '100%'\r\n  },\r\n  CHECK_BOX : {\r\n    float: 'left',\r\n    marginRight: '10px'\r\n  },\r\n  CAPTION_OPEN : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    width: '125px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n  CAPTION_CLOSE : {\r\n    color : 'gray'\r\n  },\r\n  CAPTION_WIDTH : {\r\n    width: '385px'\r\n  },\r\n  TIME : {\r\n    color : 'rgb(253, 179, 22)',\r\n    fontWeight : 'bold',\r\n    paddingLeft : '16px'\r\n  }\r\n}\r\n\r\nconst Header = (props) => {\r\n  const {\r\n          isOpen,\r\n          chartType, onCheck, onUnCheck,\r\n          itemCaption, itemTitle, itemTime, onToggle,\r\n          valueMoving, onClose\r\n        } = props\r\n      , _styleIsOpen = isOpen\r\n             ? STYLE.CAPTION_OPEN\r\n             : Object.assign({}, STYLE.CAPTION_OPEN, STYLE.CAPTION_CLOSE)\r\n      , _styleCaption = (valueMoving)\r\n              ? _styleIsOpen\r\n              : Object.assign({}, _styleIsOpen, STYLE.CAPTION_WIDTH)\r\n      , _movingBadgeEl = (valueMoving)\r\n           ? (\r\n              <ValueMovingBadge\r\n                valueMoving={valueMoving}\r\n               />\r\n             )\r\n          : undefined\r\n      , _timeEl = (!valueMoving && itemTime)\r\n           ? (\r\n               <span style={STYLE.TIME}>\r\n                 {itemTime}\r\n               </span>\r\n             )\r\n           : undefined;\r\n\r\n  return (\r\n    <div style={STYLE.ROOT}>\r\n      <SvgCheckBox\r\n         rootStyle={STYLE.CHECK_BOX}\r\n         chartType={chartType}\r\n         onCheck={onCheck}\r\n         onUnCheck={onUnCheck}\r\n      />\r\n      <span\r\n         className=\"not-selected\"\r\n         title={itemTitle}\r\n         style={_styleCaption}\r\n         onClick={onToggle}\r\n      >\r\n         {itemCaption}\r\n      </span>\r\n      {_movingBadgeEl}\r\n      {_timeEl}\r\n      <SvgClose onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nHeader.propTypes = {\r\n  isOpen : PropTypes.bool.isRequired,\r\n  chartType : PropTypes.string.isRequired,\r\n  onCheck : PropTypes.func.isRequired,\r\n  onUnCheck : PropTypes.func.isRequired,\r\n  itemCaption : PropTypes.string.isRequired,\r\n  itemTitle : PropTypes.string.isRequired,\r\n  itemTime : PropTypes.string,\r\n  onToggle : PropTypes.func.isRequired,\r\n  valueMoving : PropTypes.object,\r\n  onClose : PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n"]}