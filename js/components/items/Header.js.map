{"version":3,"sources":["../../../src/components/items/Header.jsx"],"names":["STYLE","ROOT","backgroundColor","paddingTop","lineHeight","height","width","borderTopRightRadius","borderBottomRightRadius","CHECK_BOX","float","marginRight","marginLeft","CAPTION_OPEN","display","color","cursor","fontWeight","whiteSpace","textOverflow","overflow","CAPTION_CLOSE","CAPTION_WIDTH","TIME","paddingLeft","Header","props","isOpen","chartType","onCheck","onUnCheck","itemCaption","itemTitle","itemTime","onToggle","valueMoving","isAdminMode","crValueMoving","onClose","_styleIsOpen","Object","assign","_styleCaption","_movingBadgeEl","undefined","_timeEl","propTypes","bool","isRequired","string","func","object","oneOfType"],"mappings":"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","file":"Header.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SvgCheckBox from '../zhn/SvgCheckBox';\r\nimport SvgClose from '../zhn/SvgClose';\r\nimport ValueMovingBadge from './ValueMovingBadge';\r\n\r\nconst STYLE = {\r\n  ROOT : {\r\n    backgroundColor: '#1b2836',\r\n    paddingTop: '4px',\r\n    lineHeight: 1.8,\r\n    height: '32px',\r\n    width : '100%',\r\n    borderTopRightRadius: '2px',\r\n    borderBottomRightRadius: '2px'\r\n  },\r\n  CHECK_BOX : {\r\n    float: 'left',\r\n    marginRight: '10px',\r\n    marginLeft: '10px'\r\n  },\r\n  CAPTION_OPEN : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    width: '125px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n  CAPTION_CLOSE : {\r\n    color : 'gray'\r\n  },\r\n  CAPTION_WIDTH : {\r\n    width: '385px'\r\n  },\r\n  TIME : {\r\n    color : 'rgb(253, 179, 22)',\r\n    fontWeight : 'bold',\r\n    paddingLeft : '16px'\r\n  }\r\n}\r\n\r\nconst Header = (props) => {\r\n  const {\r\n          isOpen,\r\n          chartType, onCheck, onUnCheck,\r\n          itemCaption, itemTitle, itemTime, onToggle,\r\n          valueMoving, isAdminMode, crValueMoving,\r\n          onClose\r\n        } = props\r\n      , _styleIsOpen = isOpen\r\n             ? STYLE.CAPTION_OPEN\r\n             : Object.assign({}, STYLE.CAPTION_OPEN, STYLE.CAPTION_CLOSE)\r\n      , _styleCaption = (valueMoving)\r\n              ? _styleIsOpen\r\n              : Object.assign({}, _styleIsOpen, STYLE.CAPTION_WIDTH)\r\n      , _movingBadgeEl = (valueMoving)\r\n           ? (\r\n              <ValueMovingBadge\r\n                 valueMoving={valueMoving}\r\n                 isAdminMode={isAdminMode}\r\n                 crValueMoving={crValueMoving}\r\n               />\r\n             )\r\n          : undefined\r\n      , _timeEl = (!valueMoving && itemTime)\r\n           ? (\r\n               <span style={STYLE.TIME}>\r\n                 {itemTime}\r\n               </span>\r\n             )\r\n           : undefined;\r\n\r\n  return (\r\n    <div style={STYLE.ROOT}>\r\n      <SvgCheckBox\r\n         rootStyle={STYLE.CHECK_BOX}\r\n         chartType={chartType}\r\n         onCheck={onCheck}\r\n         onUnCheck={onUnCheck}\r\n      />\r\n      <span\r\n         className=\"not-selected\"\r\n         title={itemTitle}\r\n         style={_styleCaption}\r\n         onClick={onToggle}\r\n      >\r\n         {itemCaption}\r\n      </span>\r\n      {_movingBadgeEl}\r\n      {_timeEl}\r\n      <SvgClose onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nHeader.propTypes = {\r\n  isOpen : PropTypes.bool.isRequired,\r\n  chartType : PropTypes.string.isRequired,\r\n  onCheck : PropTypes.func.isRequired,\r\n  onUnCheck : PropTypes.func.isRequired,\r\n  itemCaption : PropTypes.string.isRequired,\r\n  itemTitle : PropTypes.string.isRequired,\r\n  itemTime : PropTypes.string,\r\n  onToggle : PropTypes.func.isRequired,\r\n  valueMoving : PropTypes.object,\r\n  isAdminMode: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.bool\r\n  ]),\r\n  crValueMoving: PropTypes.func,\r\n  onClose : PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n"]}