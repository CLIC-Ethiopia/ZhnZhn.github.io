{"version":3,"sources":["../../../src/components/items/MapChartItem.jsx"],"names":["styles","rootDiv","lineHeight","marginBottom","marginRight","marginLeft","position","headerDiv","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","height","width","checkBoxStyle","float","captionSpanOpen","display","color","cursor","fontWeight","whiteSpace","textOverflow","overflow","timeSpan","captionSpanClose","tabDiv","zIndex","mapDiv","spinnerLoading","textAlign","margin","marginTop","displayBlock","displayNone","MapChartItem","createClass","getInitialState","map","undefined","isOpen","isShowInfo","_handlerToggleOpen","setState","state","componentDidMount","props","caption","config","jsonCube","json","zhMapSlice","draw","then","option","_handlerClickInfo","_handlerClickChart","_renderTabToolbar","render","onCloseItem","zhDialog","subtitle","time","_styleCaption","_styleMap","label","Object","assign","info"],"mappings":"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","file":"MapChartItem.js","sourcesContent":["import React from 'react';\r\n\r\nimport ChoroplethMap from '../../adapters/eurostat/ChoroplethMap';\r\n\r\nimport SvgClose from '../zhn/SvgClose';\r\nimport ButtonTab from '../zhn/ButtonTab';\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport PanelDataInfo from '../zhn/PanelDataInfo';\r\nimport SpinnerLoading from '../zhn/SpinnerLoading';\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    marginLeft: '8px',\r\n    position : 'relative'\r\n  },\r\n  headerDiv: {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    height: '32px',\r\n    //width: '600px'\r\n    width : '100%'\r\n  },\r\n  checkBoxStyle : {\r\n    float: 'left',\r\n    marginRight: '10px'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    width: '410px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n  timeSpan : {\r\n    color : 'rgb(253, 179, 22)',\r\n    fontWeight : 'bold',\r\n    paddingLeft : '16px'\r\n  },\r\n  captionSpanClose : {\r\n    display : 'inline-block',\r\n    color : 'gray',\r\n    cursor: 'pointer',\r\n    width : '410px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n  tabDiv : {\r\n    position: 'relative',\r\n    height: '30px',\r\n    backgroundColor: 'transparent',\r\n    zIndex: 2\r\n  },\r\n  mapDiv : {\r\n    height : '400px'\r\n  },\r\n  spinnerLoading : {\r\n    position: 'relative',\r\n    display: 'block',\r\n    textAlign: 'middle',\r\n    margin: '0 auto',\r\n    marginTop: '64px',\r\n    width: '32px',\r\n    height: '32px'\r\n  },\r\n  displayBlock : {\r\n    display : 'block'\r\n  },\r\n  displayNone : {\r\n    display : 'none'\r\n  }\r\n}\r\n\r\n\r\nconst MapChartItem = React.createClass({\r\n  getInitialState(){\r\n    this.map = undefined;\r\n    return {\r\n      isOpen : true,\r\n      isShowInfo : false\r\n    }\r\n  },\r\n\r\n  _handlerToggleOpen(){\r\n     this.setState({ isOpen : !this.state.isOpen })\r\n  },\r\n\r\n  componentDidMount(){\r\n    const { caption, config } = this.props\r\n        , { json:jsonCube, zhMapSlice } = config\r\n\r\n    ChoroplethMap.draw(`map_${caption}`, jsonCube, zhMapSlice)\r\n                 .then( (option) => {\r\n                     this.map = option.map;\r\n                     return undefined;\r\n                 });\r\n  },\r\n\r\n  _handlerClickInfo(){\r\n    this.setState({ isShowInfo : true });\r\n  },\r\n  _handlerClickChart(){\r\n    this.setState({ isShowInfo : false });\r\n  },\r\n\r\n  _renderTabToolbar(){\r\n    return (\r\n      <div style={styles.tabDiv}>\r\n         <ButtonTab\r\n            caption={'Info'}\r\n            isShow={this.state.isShowInfo}\r\n            onClick={this._handlerClickInfo}\r\n         />\r\n      </div>\r\n    );\r\n  },\r\n\r\n  render(){\r\n    const { caption, config, onCloseItem } = this.props\r\n        , { json={}, zhDialog={} } = config\r\n        , { subtitle='', time='' } = zhDialog\r\n        , { isOpen, isShowInfo } = this.state\r\n        , _styleCaption = isOpen\r\n              ? styles.captionSpanOpen\r\n              : styles.captionSpanClose\r\n        , _styleMap = isShowInfo\r\n              ? styles.displayNone\r\n              : styles.displayBlock;\r\n\r\n    return (\r\n      <div style={styles.rootDiv}>\r\n        <div style={styles.headerDiv}>\r\n          <span\r\n             className=\"not-selected\"\r\n             title={json.label}\r\n             style={_styleCaption}\r\n             onClick={this._handlerToggleOpen}\r\n          >\r\n             {subtitle}\r\n          </span>\r\n          <span style={styles.timeSpan}>\r\n            {time}\r\n          </span>\r\n          <SvgClose onClose={onCloseItem} />\r\n        </div>\r\n        <ShowHide isShow={isOpen}>\r\n           {!isShowInfo && this._renderTabToolbar()}\r\n           <div\r\n              id={`map_${caption}`}\r\n              style={Object.assign({}, styles.mapDiv, _styleMap)}\r\n           >\r\n             <SpinnerLoading style={styles.spinnerLoading} />\r\n           </div>\r\n           <PanelDataInfo\r\n              isShow={isShowInfo}\r\n              info={config.info}\r\n              onClickChart={this._handlerClickChart}\r\n           />\r\n        </ShowHide>\r\n      </div>\r\n    )\r\n  }\r\n});\r\n\r\nexport default MapChartItem\r\n"]}