{"version":3,"sources":["../../../src/components/items/MapChartItem.jsx"],"names":["S","ROOT_DIV","position","marginBottom","marginRight","TIME","display","color","paddingLeft","fontWeight","TAB_DIV","height","backgroundColor","zIndex","MAP_DIV","SPINNER_LOADING","width","margin","marginTop","textAlign","BLOCK","NONE","BtTabInfo","isShow","onClick","_crMapId","caption","MapChartItem","state","isLoading","isOpen","isShowInfo","time","_hToggle","setState","prevState","_hClickInfo","_hClickChart","componentDidMount","props","config","jsonCube","json","zhMapSlice","zhDialog","ChoroplethMap","draw","id","then","map","err","render","onCloseItem","_mapId","info","itemCaption","_styleMap","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport ChoroplethMap from '../../adapters/eurostat/ChoroplethMap';\r\n\r\n\r\nimport A from '../Comp'\r\nimport ItemHeader from './ItemHeader'\r\nimport PanelDataInfo from './PanelDataInfo';\r\n\r\nconst S = {\r\n  ROOT_DIV: {\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    marginRight: 25,\r\n  },\r\n  TIME: {\r\n    position: 'absolute',\r\n    display: 'inline-block',\r\n    color: '#fdb316',\r\n    paddingLeft: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  TAB_DIV: {\r\n    position: 'relative',\r\n    height: 30,\r\n    backgroundColor: 'transparent',\r\n    zIndex: 2\r\n  },\r\n  MAP_DIV: {\r\n    height: 400\r\n  },\r\n  SPINNER_LOADING: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    width: 32,\r\n    height: 32,\r\n    margin: '0 auto',\r\n    marginTop: 64,\r\n    textAlign: 'middle'\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n}\r\n\r\nconst BtTabInfo = ({ isShow, onClick }) => {\r\n  if (!isShow) { return null; }\r\n  return (\r\n    <div style={S.TAB_DIV}>\r\n       <A.ButtonTab\r\n          caption=\"Info\"\r\n          onClick={onClick}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst _crMapId = caption => `map_${caption}`;\r\n\r\nclass MapChartItem extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    config: PropTypes.shape({\r\n      json: PropTypes.object,\r\n      zhMapSlice: PropTypes.object,\r\n      zhDialog: PropTypes.shape({\r\n        subtitle: PropTypes.string,\r\n        time: PropTypes.string\r\n      })\r\n    }),\r\n    onCloseItem: PropTypes.func\r\n  }\r\n  */\r\n\r\n  //map = void 0\r\n  state = {\r\n    isLoading: true,\r\n    isOpen: true,\r\n    isShowInfo: false,\r\n    time: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { caption, config } = this.props\r\n    , { json:jsonCube, zhMapSlice, zhDialog={} } = config\r\n    , { time } = zhDialog;\r\n\r\n    ChoroplethMap.draw({\r\n      id: _crMapId(caption),\r\n      jsonCube, zhMapSlice, time\r\n    }).then(({ map, time }) => {\r\n         this.map = map\r\n         this.setState({ isLoading: false, time })\r\n       })\r\n       .catch(err => {\r\n         this.setState({ isLoading: false })\r\n       });\r\n  }\r\n\r\n  _hToggle = () => {\r\n     this.setState(prevState => ({\r\n       isOpen: !prevState.isOpen\r\n     }))\r\n  }\r\n\r\n  _hClickInfo = () => {\r\n    this.setState({ isShowInfo: true });\r\n  }\r\n  _hClickChart = () => {\r\n    this.setState({ isShowInfo: false });\r\n  }\r\n\r\n  render(){\r\n    const { caption, config, onCloseItem } = this.props\r\n    , _mapId = _crMapId(caption)\r\n    , { zhDialog, info } = config\r\n    , { itemCaption='' } = zhDialog || {}\r\n    , {\r\n        isLoading, isOpen, isShowInfo,\r\n        time\r\n      } = this.state\r\n    , _styleMap = isShowInfo\r\n          ? S.NONE\r\n          : S.BLOCK;\r\n\r\n    return (\r\n      <div style={S.ROOT_DIV}>\r\n        <ItemHeader\r\n          isOpen={isOpen}\r\n          caption={itemCaption}\r\n          onClick={this._hToggle}\r\n          onClose={onCloseItem}\r\n        >\r\n          <span style={S.TIME}>\r\n            {time}\r\n          </span>\r\n        </ItemHeader>\r\n\r\n        <A.ShowHide isShow={isOpen}>\r\n           <BtTabInfo\r\n             isShow={!isShowInfo}\r\n             onClick={this._hClickInfo}\r\n           />\r\n           <div\r\n              id={_mapId}\r\n              style={{ ...S.MAP_DIV, ..._styleMap }}\r\n           >\r\n             {\r\n               isLoading && <A.SpinnerLoading style={S.SPINNER_LOADING} />\r\n             }\r\n           </div>\r\n           <PanelDataInfo\r\n              isShow={isShowInfo}\r\n              info={info}\r\n              onClickChart={this._hClickChart}\r\n           />\r\n        </A.ShowHide>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapChartItem\r\n"],"file":"MapChartItem.js"}