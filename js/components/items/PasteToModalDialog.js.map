{"version":3,"sources":["../../../src/components/items/PasteToModalDialog.jsx"],"names":["S","MODAL","position","width","height","margin","SCROLL_PANE","overflowY","paddingRight","PasteToModalDialog","props","_hPasteTo","data","onClose","toChart","_compSeries","getValues","forEach","conf","zhAddSeriaToYAxis","_refCompSeries","comp","_commandButtons","shouldComponentUpdate","nextProps","nextState","isShow","render","fromChart","Component","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AAGA,IAAMA,CAAC,GAAG;AACRC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,QADL;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE,GAHH;AAILC,IAAAA,MAAM,EAAE;AAJH,GADC;AAORC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,MADA;AAEXH,IAAAA,MAAM,EAAE,GAFG;AAGXI,IAAAA,YAAY,EAAE;AAHH;AAPL,CAAV;;IAcMC,kB;;;;;AAKJ,8BAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;;AADgB,UAsBlBC,SAtBkB,GAsBN,YAAM;AAAA,wBACU,MAAKD,KADf;AAAA,UACRE,IADQ,eACRA,IADQ;AAAA,UACFC,OADE,eACFA,OADE;AAAA,UAEZC,OAFY,GAEAF,IAFA,CAEZE,OAFY;;AAGhB,UAAIA,OAAJ,EAAa;AACX,cAAKC,WAAL,CACGC,SADH,GAEGC,OAFH,CAEW,UAAAC,IAAI,EAAI;AACf;AACAJ,UAAAA,OAAO,CAACK,iBAAR,CAA0BD,IAA1B;AACD,SALH;AAMD;;AACDL,MAAAA,OAAO;AACR,KAlCiB;;AAAA,UAoClBO,cApCkB,GAoCD,UAAAC,IAAI;AAAA,aAAI,MAAKN,WAAL,GAAmBM,IAAvB;AAAA,KApCH;;AAGhB,UAAKC,eAAL,GAAuB,CACrB,gCAAC,sBAAD;AACE,MAAA,GAAG,EAAC,OADN;AAEE,MAAA,OAAO,EAAC,eAFV;AAGE,MAAA,SAAS,EAAE,IAHb;AAIE,MAAA,OAAO,EAAE,MAAKX;AAJhB,MADqB,CAAvB;AAHgB;AAWjB;;;;SAEDY,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAKD,SAAS,KAAK,KAAKd,KAAnB,IACAc,SAAS,CAACE,MAAV,KAAqB,KAAKhB,KAAL,CAAWgB,MADrC,EAEE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,G;;SAkBDC,M,GAAA,kBAAQ;AAAA,uBAGA,KAAKjB,KAHL;AAAA,QAEFgB,MAFE,gBAEFA,MAFE;AAAA,QAEMd,IAFN,gBAEMA,IAFN;AAAA,QAEYC,OAFZ,gBAEYA,OAFZ;AAAA,QAIFe,SAJE,GAIqBhB,IAJrB,CAIFgB,SAJE;AAAA,QAISd,OAJT,GAIqBF,IAJrB,CAISE,OAJT;AAKN,WACE,gCAAC,uBAAD;AACE,MAAA,KAAK,EAAEd,CAAC,CAACC,KADX;AAEE,MAAA,OAAO,EAAC,iBAFV;AAGE,MAAA,MAAM,EAAEyB,MAHV;AAIE,MAAA,cAAc,EAAE,KAAKJ,eAJvB;AAKE,MAAA,OAAO,EAAET;AALX,OAOE,gCAAC,sBAAD;AACG,MAAA,GAAG,EAAE,KAAKO,cADb;AAEG,MAAA,SAAS,EAAEpB,CAAC,CAACM,WAFhB;AAGG,MAAA,SAAS,EAAEsB,SAHd;AAIG,MAAA,OAAO,EAAEd;AAJZ,MAPF,CADF;AAgBD,G;;;EAhE8Be,gB;;AAA3BpB,kB,CACGqB,Y,GAAe;AACpBlB,EAAAA,IAAI,EAAE;AADc,C;eAkETH,kB","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nimport SeriesPane from './SeriesPane'\r\n\r\n\r\nconst S = {\r\n  MODAL: {\r\n    position: 'static',\r\n    width: 365,\r\n    height: 340,\r\n    margin: '70px auto 0px'\r\n  },\r\n  SCROLL_PANE: {\r\n    overflowY: 'auto',\r\n    height: 250,\r\n    paddingRight: 10\r\n  }\r\n};\r\n\r\nclass PasteToModalDialog extends Component {\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this._commandButtons = [\r\n      <FlatButton\r\n        key=\"paste\"\r\n        caption=\"Paste & Close\"\r\n        isPrimary={true}\r\n        onClick={this._hPasteTo}\r\n      />\r\n    ]\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if ( nextProps !== this.props\r\n      && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _hPasteTo = () => {\r\n    const { data, onClose } = this.props\r\n    , { toChart } = data;\r\n    if (toChart) {\r\n      this._compSeries\r\n        .getValues()\r\n        .forEach(conf => {\r\n          //color, data, userMin, userMax, yIndex\r\n          toChart.zhAddSeriaToYAxis(conf)\r\n        })\r\n    }\r\n    onClose()\r\n  }\r\n\r\n  _refCompSeries = comp => this._compSeries = comp\r\n\r\n  render(){\r\n    const {\r\n        isShow, data, onClose\r\n      } = this.props\r\n    , { fromChart, toChart } = data;\r\n    return (\r\n      <ModalDialog\r\n        style={S.MODAL}\r\n        caption=\"Paste Series To\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        onClose={onClose}\r\n      >\r\n        <SeriesPane\r\n           ref={this._refCompSeries}\r\n           rootStyle={S.SCROLL_PANE}\r\n           fromChart={fromChart}\r\n           toChart={toChart}\r\n        />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasteToModalDialog\r\n"],"file":"PasteToModalDialog.js"}