{"version":3,"sources":["../../../src/components/items/ChartItem.jsx"],"names":["ShowHide","Comp","MsgRenderErr","HighchartWrapper","CL","ROOT","S","TAB_DIV","position","backgroundColor","zIndex","height","SHOW_HIDE","marginLeft","WRAPPER","marginTop","DATA_SOURCE","left","bottom","color","fontSize","_isFn","fn","_isNarrowWidth","has","wideWidth","ChartItem","props","hideCaption","mainChart","zhHideCaption","setState","isShowToolbar","isCaption","showCaption","state","zhShowCaption","setItemCaption","str","itemCaption","setDataSource","strDataSource","_dataSourceEl","forceUpdate","getMainChart","_handleLoadedMiniChart","metricChart","zhAddDetailChart","_handleUnLoadedMiniChart","objChart","zhRemoveDetailChart","_toggle","propName","prevState","_handleToggleSeria","item","zhToggleSeria","index","_handleClick2H","zhToggle2H","_handleZoom","onZoom","chart","_handleAddToWatch","caption","config","onAddToWatch","_handleCopy","onCopy","_handlePasteTo","onPasteToDialog","toChart","fromChart","getCopyFromChart","_toggleMinMax","zhToggleMinMaxLines","_handleClickInfo","isShowInfo","isShowChart","isShowLegend","_handleClickChart","_handleCheckBox","isCheck","checkBox","chartType","onSetActive","_addMfi","id","mfiConfigs","push","_removeMfi","filter","c","_handleClickConfig","onShowConfigDialog","onToggleToolbar","_handleToggleToolbar","_crValueMoving","prev","dateTo","crValueMoving","_regCompVm","comp","_compVm","_handleMiniChart","btTitle","ChartFn","_titles","miniTitles","_t","find","t","isShowAbs","length","update","arMetricOption","_createChartToolBar","withoutAnimation","hasError","_chartId","_handleClickLegend","_refChartComp","chartComp","_handleToggleOpen","bind","_moreModel","onToggle","onToTop","onHideCaption","_fnOnCheck","_fnOnUnCheck","zhConfig","dataSource","_itemCaption","isOpen","shouldComponentUpdate","nextProps","nextState","getDerivedStateFromError","error","componentDidMount","getChart","compareTo","_updateDateTo","render","onCloseItem","isAdminMode","zhMiniConfigs","itemTime","legend","_withoutAnimation","valueMoving","info","reflowChart","width","_isAnimate","zhIsAnimation","zhDetailCharts","zhGetDetailCharts","setSize","undefined","Array","isArray","spacingLeft","arCalcDeltaYAxis","forEach","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport has from '../has'\r\nimport Comp from '../Comp'\r\nimport ChartToolBar from '../toolbars/ChartToolBar';\r\nimport crModelMore from './ChartItemMore'\r\nimport Header from './Header';\r\nimport ChartLegend from './ChartLegend'\r\nimport MiniCharts from './MiniCharts';\r\nimport PanelDataInfo from './PanelDataInfo';\r\n\r\nconst {\r\n  ShowHide,\r\n  MsgRenderErr,\r\n  HighchartWrapper\r\n} = Comp\r\n\r\nconst CL = {\r\n  ROOT: 'chart-item'\r\n};\r\n\r\nconst S = {\r\n  TAB_DIV: {\r\n    position: 'relative',\r\n    backgroundColor: 'transparent',\r\n    zIndex: 2,\r\n    height: 30\r\n  },\r\n  SHOW_HIDE: {\r\n    marginLeft: 8\r\n  },\r\n  WRAPPER: {\r\n    marginTop: 6\r\n  },\r\n  DATA_SOURCE: {\r\n    position: 'absolute',\r\n    left: 5,\r\n    bottom: 0,\r\n    color: '#909090',\r\n    fontSize: '11px'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _isNarrowWidth = !has.wideWidth();\r\n\r\nclass ChartItem extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    chartType: PropTypes.string,\r\n    config: PropTypes.shape({\r\n      zhConfig: PropTypes.shape({\r\n        dataSource: PropTypes.string,\r\n        itemCaption: PropTypes.string\r\n      }),\r\n      zhMiniConfigs: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          btTitle: PropTypes.string,\r\n          config: PropTypes.object\r\n      }))\r\n    }),\r\n    onAddToWatch: PropTypes.func,\r\n    onSetActive: PropTypes.func,\r\n    onShowConfigDialog: PropTypes.func,\r\n    onCloseItem: PropTypes.func,\r\n    isAdminMode: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.bool\r\n    ]),\r\n    crValueMoving: PropTypes.func,\r\n    onZoom: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this._handleToggleOpen = this._toggle.bind(this, 'isOpen')\r\n    this._handleClickLegend = this._toggle.bind(this, 'isShowLegend')\r\n    this._handleToggleToolbar = this._toggle.bind(this, 'isShowToolbar')\r\n\r\n    this._moreModel = crModelMore(this, {\r\n      onToggle: this._handleToggleToolbar,\r\n      onToTop: props.onToTop,\r\n      onHideCaption: this.hideCaption\r\n    })\r\n\r\n    this._fnOnCheck = this._handleCheckBox.bind(this, true)\r\n    this._fnOnUnCheck = this._handleCheckBox.bind(this, false)\r\n\r\n    const { config={}, caption='' } = props\r\n    , { zhConfig={} } = config\r\n    , { dataSource='', itemCaption, id } = zhConfig\r\n    , _itemCaption = itemCaption || caption;\r\n\r\n    this._chartId = id\r\n\r\n    this._dataSourceEl = (\r\n       <div style={S.DATA_SOURCE}>\r\n         {dataSource}\r\n       </div>\r\n    )\r\n    this.state = {\r\n      hasError: false,\r\n      isOpen: true,\r\n      isShowToolbar: true,\r\n      isShowLegend: false,\r\n\r\n      isShowChart: true,\r\n      isShowInfo: false,\r\n\r\n      itemCaption: _itemCaption,\r\n      mfiConfigs: [],\r\n\r\n      isShowAbs: true,\r\n      miniTitles: [],\r\n\r\n      isCaption: true\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props !== nextProps) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hideCaption = () => {\r\n    if (this.mainChart) {\r\n      this.mainChart.zhHideCaption()\r\n      this.setState({\r\n        isShowToolbar: false,\r\n        isCaption: false\r\n      })\r\n    }\r\n  }\r\n  showCaption = () => {\r\n    if (!this.state.isCaption && this.mainChart) {\r\n      this.mainChart.zhShowCaption()\r\n      this.setState({\r\n        isShowToolbar: true,\r\n        isCaption: true\r\n      })\r\n    }\r\n  }\r\n\r\n  setItemCaption = (str) => {\r\n    this.setState({ itemCaption: str })\r\n  }\r\n  setDataSource = (strDataSource) => {\r\n    this._dataSourceEl = (\r\n       <div style={S.DATA_SOURCE}>\r\n         {strDataSource}\r\n       </div>\r\n    )\r\n    this.forceUpdate()\r\n  }\r\n\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  /*\r\n  componentDidCatch(error, errMsg){\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n    if (this.chartComp) {\r\n      this.mainChart = this.chartComp.getChart()\r\n    }\r\n  }\r\n\r\n  getMainChart = () => {\r\n    return this.mainChart;\r\n  }\r\n\r\n  _handleLoadedMiniChart = (metricChart) => {\r\n     if (this.mainChart) {\r\n       this.mainChart.zhAddDetailChart(metricChart)\r\n     }\r\n  }\r\n  _handleUnLoadedMiniChart = (objChart) => {\r\n    if (this.mainChart) {\r\n      this.mainChart.zhRemoveDetailChart(objChart)\r\n    }\r\n  }\r\n\r\n  _toggle = (propName) => {\r\n    this.setState(prevState =>({\r\n      [propName]: !prevState[propName]\r\n    }))\r\n  }\r\n\r\n  _handleToggleSeria = (item) => {\r\n    this.mainChart.zhToggleSeria(item.index)\r\n  }\r\n\r\n  _handleClick2H = () => {\r\n    this.mainChart.zhToggle2H()\r\n  }\r\n\r\n  _handleZoom = () => {\r\n    const { onZoom } = this.props;\r\n    if (_isFn(onZoom)) {\r\n      onZoom({ chart: this.mainChart })\r\n    }\r\n  }\r\n\r\n  _handleAddToWatch = () => {\r\n    const { caption, config, onAddToWatch } = this.props;\r\n    onAddToWatch( {caption, config} )\r\n  }\r\n\r\n  _handleCopy = () => {\r\n    this.props.onCopy(this.mainChart)\r\n  }\r\n  _handlePasteTo = () => {\r\n    this.props.onPasteToDialog({\r\n      toChart: this.mainChart,\r\n      fromChart: this.props.getCopyFromChart()\r\n    })\r\n  }\r\n  _toggleMinMax = () => {\r\n    this.mainChart.zhToggleMinMaxLines()\r\n  }\r\n\r\n  _handleClickInfo = () => {\r\n    this.setState({\r\n      isShowInfo: true,\r\n      isShowChart: false,\r\n      isShowLegend: false\r\n    });\r\n  }\r\n\r\n  _handleClickChart = () => {\r\n    this.setState({\r\n       isShowChart: true,\r\n       isShowInfo: false\r\n     });\r\n  }\r\n\r\n  _handleCheckBox = (isCheck, checkBox) => {\r\n    const { chartType, onSetActive } = this.props;\r\n    checkBox.chartType = chartType\r\n    onSetActive(isCheck, checkBox, this.mainChart)\r\n  }\r\n\r\n  _addMfi = (config, id) => {\r\n    this.setState(prevState => {\r\n      prevState.mfiConfigs.push({ config, id })\r\n      return prevState;\r\n    })\r\n  }\r\n  _removeMfi = (id) => {\r\n    this.setState(prevState => {\r\n      prevState.mfiConfigs = prevState.mfiConfigs\r\n         .filter(c => c.id !== id)\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _handleClickConfig = () => {\r\n    const { caption, onShowConfigDialog } = this.props;\r\n    onShowConfigDialog({\r\n      caption,\r\n      chart: this.mainChart,\r\n      setItemCaption: this.setItemCaption,\r\n      setDataSource: this.setDataSource,\r\n      onToggleToolbar: this._handleToggleToolbar\r\n    })\r\n  }\r\n\r\n  _crValueMoving = (prev, dateTo) => {\r\n     return this.props.crValueMoving(this.mainChart, prev, dateTo);\r\n  }\r\n\r\n  _regCompVm = (comp) => {\r\n    this._compVm = comp\r\n  }\r\n  compareTo(dateTo){\r\n    if (this._compVm) {\r\n      return this._compVm._updateDateTo(dateTo);\r\n    }\r\n  }\r\n\r\n _handleMiniChart = (btTitle) => {\r\n   const { ChartFn } = this.props;\r\n   this.setState(prevState => {\r\n     const _titles = prevState.miniTitles\r\n         , _t = _titles.find(t => t === btTitle);\r\n     prevState.miniTitles = _t\r\n       ? _titles.filter(t => t !== btTitle)\r\n       : [btTitle, ..._titles]\r\n     prevState.isShowAbs = prevState.miniTitles.length === 0\r\n       ? true : false;\r\n     this.mainChart.update(\r\n       ChartFn.arMetricOption(\r\n         this.mainChart, prevState.isShowAbs\r\n       )\r\n     )\r\n     return prevState;\r\n   })\r\n }\r\n\r\n _createChartToolBar = (config, withoutAnimation) => {\r\n   const { hasError, isShowToolbar } = this.state;\r\n   return (\r\n         <ShowHide\r\n            isShow={isShowToolbar}\r\n            withoutAnimation={withoutAnimation}\r\n         >\r\n           <ChartToolBar\r\n             hasError={hasError}\r\n             style={S.TAB_DIV}\r\n             chartId={this._chartId}\r\n             config={config}\r\n             onMiniChart={this._handleMiniChart}\r\n             getChart={this.getMainChart}\r\n             onAddMfi={this._addMfi}\r\n             onRemoveMfi={this._removeMfi}\r\n             onClickLegend={this._handleClickLegend}\r\n             onClick2H={this._handleClick2H}\r\n             onAddToWatch={this._handleAddToWatch}\r\n             onClickInfo={this._handleClickInfo}\r\n             onClickConfig={this._handleClickConfig}\r\n             onCopy={this._handleCopy}\r\n             onPasteTo={this._handlePasteTo}\r\n             onMinMax={this._toggleMinMax}\r\n             onZoom={this._handleZoom}\r\n            />\r\n         </ShowHide>\r\n      );\r\n   }\r\n\r\n  _refChartComp = comp => this.chartComp = comp\r\n\r\n  render(){\r\n    const {\r\n        caption, config={},\r\n        onCloseItem, isAdminMode\r\n      } = this.props\r\n    , { zhConfig={}, zhMiniConfigs } = config\r\n    , { itemTime, legend, withoutAnimation } = zhConfig\r\n    , {\r\n        hasError,\r\n        isOpen, isShowChart, isShowInfo,\r\n        isShowLegend,\r\n        itemCaption,\r\n        mfiConfigs,\r\n        isShowAbs,\r\n        miniTitles,\r\n        isCaption\r\n    } = this.state\r\n    , _withoutAnimation = _isNarrowWidth || withoutAnimation;\r\n\r\n    return (\r\n      <div className={CL.ROOT}>\r\n         { isCaption && <Header\r\n            isOpen={isOpen}\r\n            moreModel={this._moreModel}\r\n            onCheck={this._fnOnCheck}\r\n            onUnCheck={this._fnOnUnCheck}\r\n            itemCaption={itemCaption}\r\n            itemTitle={caption}\r\n            itemTime={itemTime}\r\n            onToggle={this._handleToggleOpen}\r\n            valueMoving={config.valueMoving}\r\n            onClose={onCloseItem}\r\n            isAdminMode={isAdminMode}\r\n            crValueMoving={this._crValueMoving}\r\n            regCompVm={this._regCompVm}\r\n         />\r\n        }\r\n        <ShowHide\r\n           isShow={isOpen}\r\n           withoutAnimation={_withoutAnimation}\r\n           style={S.SHOW_HIDE}\r\n        >\r\n           {isShowChart && this._createChartToolBar(config, _withoutAnimation)}\r\n           {hasError\r\n             ? <MsgRenderErr\r\n                 isShow={isShowChart}\r\n                 msg=\"chart\"\r\n               />\r\n             : <HighchartWrapper\r\n                ref={this._refChartComp}\r\n                isShow={isShowChart}\r\n                style={S.WRAPPER}\r\n                config={config}\r\n                isShowAbs={isShowAbs}\r\n                absComp={this._dataSourceEl}\r\n               />\r\n           }\r\n           <PanelDataInfo\r\n              isShow={isShowInfo}\r\n              info={config.info}\r\n              zhInfo={config.zhConfig}\r\n              onClickChart={this._handleClickChart}\r\n           />\r\n           <ChartLegend\r\n             isShow={isShowLegend}\r\n             legend={legend}\r\n             onClickItem={this._handleToggleSeria}\r\n           />\r\n           <MiniCharts\r\n              withoutAnimation={_withoutAnimation}\r\n              configs={mfiConfigs}\r\n              absComp={this._dataSourceEl}\r\n              onLoaded={this._handleLoadedMiniChart}\r\n              onWillUnLoaded={this._handleUnLoadedMiniChart}\r\n           />\r\n           <MiniCharts\r\n              withoutAnimation={_withoutAnimation}\r\n              configs={zhMiniConfigs}\r\n              idPropName=\"btTitle\"\r\n              ids={miniTitles}\r\n              absComp={this._dataSourceEl}\r\n              onLoaded={this._handleLoadedMiniChart}\r\n              onWillUnLoaded={this._handleUnLoadedMiniChart}\r\n           />\r\n        </ShowHide>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  reflowChart(width){\r\n    if (this.mainChart) {\r\n      const _isAnimate = !_isNarrowWidth && this.mainChart.zhIsAnimation()\r\n      , zhDetailCharts = this.mainChart.zhGetDetailCharts();\r\n\r\n      this.mainChart.setSize(width, undefined, _isAnimate)\r\n      if (Array.isArray(zhDetailCharts)) {\r\n        const { ChartFn } = this.props\r\n        , spacingLeft = ChartFn.arCalcDeltaYAxis(this.mainChart);\r\n        zhDetailCharts.forEach(chart => {\r\n          if (spacingLeft) {\r\n            chart.update({ chart: { spacingLeft } }, false)\r\n          }\r\n          chart.setSize(width, undefined, _isAnimate)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ChartItem\r\n"],"file":"ChartItem.js"}