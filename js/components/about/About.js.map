{"version":3,"sources":["../../../src/components/about/About.jsx"],"names":["useListen","use","useTheme","TH_ID","CL","ABOUT","SCROLL","SHOW","STEP","T1","T2","T3","T4","T5","OC_CAPTION_STYLE","color","C","TITLE","IS_CLOSE_PROVIDERS","has","isWideWidth","About","store","isInitShow","isShow","setIsShow","_hClose","actionType","CAT","SHOW_ABOUT","CHAT","INIT_AND_SHOW_CHART","SHOW_CHART","TS","_cn","_style","S","BLOCK","NONE","ROOT","BT_TWITTER","SCROLL_DIV","DIV_WRAPPER","GREY","MB_4","GREEN","BLACK","MARGIN_TOP","MB_8EM","MB_6EM","RED","LH_18","LH_14","YELLOW","BLUE_DARK"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\n\r\nimport use from '../hooks/use'\r\n\r\nimport { ComponentActionTypes as CAT } from '../../flux/actions/ComponentActions';\r\nimport { ChartActionTypes as CHAT } from '../../flux/actions/ChartActions';\r\n\r\nimport has from '../has'\r\n\r\nimport A from '../Comp';\r\nimport TwitterLink from './TwitterLink';\r\nimport DataProviders from './DataProviders';\r\nimport StepTitle from './StepTitle';\r\nimport Link from '../links/ProviderLinks';\r\nimport LogosBar from './LogosBar';\r\n\r\nimport C from '../styles/Color';\r\nimport S from './About.Style';\r\n\r\nconst { useListen, useTheme } = use\r\n\r\nconst TH_ID = 'ABOUT';\r\n\r\nconst CL = {\r\n  ABOUT: 'about-container',\r\n  SCROLL: 'scroll-container-y',\r\n  SHOW: 'show-popup'\r\n};\r\n\r\nconst STEP = {\r\n  T1: \"Please, choose a data source Browser from Topics [t]\",\r\n  T2: \"Next, choose a dataset menu item in the the opended up Browser\",\r\n  T3: \"Select params and enter query date in the opened up draggable Dialog\",\r\n  T4: \"Click a button Load\",\r\n  T5: \"Also you can export chart to PNG, JPG, SVG, print to PDF\"\r\n};\r\n\r\nconst OC_CAPTION_STYLE = {\r\n  color: C.TITLE\r\n};\r\n\r\nconst IS_CLOSE_PROVIDERS = !has.isWideWidth;\r\n\r\nconst About = ({ store, isInitShow }) => {\r\n  const [isShow, setIsShow] = useState(isInitShow)\r\n  , _hClose = useCallback(() => setIsShow(false), []);\r\n\r\n  useListen(store, actionType => {\r\n    if (actionType === CAT.SHOW_ABOUT){\r\n      setIsShow(true)\r\n    } else if (actionType === CHAT.INIT_AND_SHOW_CHART ||\r\n      actionType === CHAT.SHOW_CHART){\r\n      setIsShow(false)\r\n    }\r\n  })\r\n\r\n  const TS = useTheme(TH_ID)\r\n  , _cn = isShow\r\n      ? `${CL.ABOUT} ${CL.SHOW}`\r\n      : CL.ABOUT\r\n  , _style = isShow ? S.BLOCK : S.NONE;\r\n\r\n  return (\r\n    <div\r\n      className={_cn}\r\n      style={{..._style, ...TS.ROOT}}\r\n     >\r\n       <A.BrowserCaption\r\n          caption=\"About\"\r\n          onClose={_hClose}\r\n       >\r\n         <TwitterLink\r\n            rootStyle={S.BT_TWITTER}\r\n            account=\"webapperc\"\r\n            title=\"Twitter page @wepapperc with chart examples\"\r\n         />\r\n       </A.BrowserCaption>\r\n\r\n       <A.ScrollPane\r\n         className={CL.SCROLL}\r\n         style={S.SCROLL_DIV}\r\n       >\r\n\r\n       <div style={{...S.DIV_WRAPPER, ...S.GREY}}>\r\n       <p style={S.MB_4}>\r\n         <span style={S.GREEN}>\r\n           ERC (Economic RESTful Client)&nbsp;\r\n         </span>\r\n         <span>\r\n           is a web app that gives the ability to explore, visualize and compose economic and financial data mostly to charts from open and private data providers.\r\n         </span>\r\n       </p>\r\n       <DataProviders\r\n         isClose={IS_CLOSE_PROVIDERS}\r\n         ocCaptionStyle={OC_CAPTION_STYLE}\r\n       />\r\n       <div style={S.BLACK}>\r\n          <StepTitle step=\"1\" title={STEP.T1} />\r\n          <StepTitle step=\"2\" title={STEP.T2} />\r\n          <StepTitle step=\"3\" title={STEP.T3} />\r\n          <StepTitle step=\"4\" title={STEP.T4} />\r\n       </div>\r\n        <p style={S.MARGIN_TOP}>\r\n          The result will be shown in a chart in a resizebale container.\r\n        </p>\r\n        <p style={S.MB_8EM}>\r\n          Also it's possible to export the chart to PNG, JPG, SVG or print to PDF.\r\n        </p>\r\n        <p style={S.MB_6EM}>\r\n          <span style={S.RED}>\r\n             Attention:&nbsp;\r\n          </span>\r\n          <span>\r\n            For one item from <span style={S.BLACK}>Dialog</span> can be only one <span style={S.BLACK}>Chart item</span> in a container.\r\n            More information about a dataset can be found on a <span style={S.BLACK}>tab Info of Chart item.</span>\r\n          </span>\r\n       </p>\r\n        <A.OpenClose\r\n          isClose={true}\r\n          caption=\"More...\"\r\n          ocStyle={S.LH_18}\r\n          captionStyle={OC_CAPTION_STYLE}\r\n          rootStyle={S.LH_14}\r\n          openColor={C.YELLOW}\r\n        >\r\n          <p style={S.MB_8EM}>\r\n            After clicking a <span style={S.BLACK}>button Show</span> in a Dialog will be an opened up <span style={S.BLACK}>Chart container</span> with charts or empty.\r\n            After closing a <span style={S.BLACK}>Chart container</span> all charts remains. In one time max three <span style={S.BLACK}>Dialogs</span> can be opened.\r\n          </p>\r\n          <p style={S.MB_8EM}>\r\n            Some open and private data providers require user's <span style={S.BLACK}>API Key</span>.\r\n          </p>\r\n          <p style={S.MB_8EM}>\r\n            <span>For example, for loading data from&nbsp;</span>\r\n            <Link.Quandl/>\r\n            <span>\r\n            &nbsp;without API Key exists some restriction\r\n            on frequency and amount of queries (<span style={S.BLUE_DARK}>50 per day/1 at a time</span>) and can be deprecated,\r\n            according to Quandl. With <span style={S.BLACK}>API Key</span> it is possible to make (<span style={S.BLUE_DARK}>50 000 per day/1 at a time</span>).\r\n            It's free of charge to receive.\r\n            </span>\r\n          </p>\r\n          <p style={S.MB_8EM}>\r\n            Data providers API Keys can be set on the <span style={S.BLACK}>tab ApiKeys, dialog Settings [s]</span>.\r\n          </p>\r\n          <p style={S.MB_8EM}>\r\n            Also for loading data from data providers with HTTP protocol required <span style={S.BLACK}>HTTPS proxy server</span>,\r\n            by default settled in the <span style={S.BLACK}>tab Options, dialog Settings [s]</span>.\r\n          </p>\r\n          <p style={S.MB_8EM}>\r\n            There is three UI theme in the web app ERC: <span style={S.BLACK}>Dark, Light, and Sand</span> can be set on <span style={S.BLACK}>tab Options, dialog Settings [s]</span>. All user's settings keep in browser's memory only for a current web session.\r\n          </p>\r\n       </A.OpenClose>\r\n       <LogosBar />\r\n       <p>\r\n         <span style={S.BLACK}>\r\n           *Logos Fair Use.\r\n         </span>\r\n       </p>\r\n      </div>\r\n    </A.ScrollPane>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nAbout.propsTypes = {\r\n  isInitShow: PropTypes.bool,\r\n  store: PropTypes.object\r\n}\r\n*/\r\n\r\nexport default About\r\n"],"file":"About.js"}