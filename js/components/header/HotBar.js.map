{"version":3,"sources":["../../../src/components/header/HotBar.jsx"],"names":["S","ROOT","display","BT_D","color","BT_CL","_isIn","arr","type","len","length","i","_crBtProps","index","caption","_accessKey","has","touch","toString","accessKey","substring","title","_calcMaxButtons","props","strWidth","maxButtons","HotBar","_onStore","actionType","option","closeDialogAction","setState","prevState","hotButtons","countButtons","_maxButtons","_hClean","_renderHotButtons","onShowDialog","map","conf","bind","_btCleanEl","state","componentDidMount","store","unsubscribe","listen","componentWillUnmount","render","_cleanBtEl","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport has from '../has'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    display: 'inline-block'\r\n  },\r\n  BT_D: {\r\n    color: '#c0c0c0'\r\n  },\r\n  BT_CL: {\r\n    color: '#f44336'\r\n  }\r\n};\r\n\r\nconst _isIn = (arr, type) => {\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for(;i<len;i++){\r\n    if (arr[i].type === type){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nconst _crBtProps = (index, caption='') => {\r\n  const _accessKey = has.touch\r\n    ? ''\r\n    : (index+1).toString();\r\n  return {\r\n    accessKey: _accessKey || void 0,\r\n    caption: _accessKey + caption.substring(0, 3),\r\n    title: caption\r\n  };\r\n};\r\n\r\nconst _calcMaxButtons = (props) => {\r\n  switch(has.strWidth){\r\n    case '\"W600\"': return 3;\r\n    case '\"W500\"': return 2;\r\n    case '\"W360\"': return 1;\r\n    default: return props.maxButtons;\r\n  }\r\n};\r\n\r\nclass HotBar extends Component {\r\n  static defaultProps = {\r\n    maxButtons: 5\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this._btCleanEl = (\r\n      <FlatButton\r\n        key=\"BT_CLEAN\"\r\n        timeout={0}\r\n        style={S.BT_CL}\r\n        caption=\"CL\"\r\n        title=\"Clean Hot Bar\"\r\n        onClick={this._hClean}\r\n      />\r\n    )\r\n    this._maxButtons = _calcMaxButtons(props)\r\n    this.state = {\r\n      countButtons: 0,\r\n      hotButtons: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props;\r\n    this.unsubscribe = store.listen(this._onStore)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  _onStore = (actionType, option) => {\r\n    const { closeDialogAction } = this.props;\r\n    if (actionType === closeDialogAction ) {\r\n      this.setState(prevState => {\r\n        const { hotButtons, countButtons } = prevState;\r\n        if (!_isIn(hotButtons, option.type)) {\r\n          hotButtons[countButtons % this._maxButtons] = option\r\n          prevState.countButtons += 1\r\n        }\r\n        return prevState;\r\n      })\r\n    }\r\n  }\r\n\r\n  _hClean = () => {\r\n    this.setState({\r\n      countButtons: 0,\r\n      hotButtons: []\r\n    })\r\n  }\r\n\r\n  _renderHotButtons = (hotButtons, onShowDialog) => {\r\n    return hotButtons.map((conf, index) => {\r\n      const { type, caption } = conf;\r\n      return (\r\n        <FlatButton\r\n          {..._crBtProps(index, caption)}\r\n          key={type}\r\n          timeout={0}\r\n          style={S.BT_D}\r\n          onClick={onShowDialog.bind(null, type)}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { onShowDialog } = this.props\r\n        , { hotButtons } = this.state\r\n        , _cleanBtEl = (hotButtons.length !== 0)\r\n             ? this._btCleanEl\r\n             : null;\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderHotButtons(hotButtons, onShowDialog)}\r\n        {_cleanBtEl}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotBar\r\n"],"file":"HotBar.js"}