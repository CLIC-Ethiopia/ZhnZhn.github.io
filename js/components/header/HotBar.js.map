{"version":3,"sources":["../../../src/components/header/HotBar.jsx"],"names":["S","ROOT","display","BT_D","color","BT_CL","_isIn","arr","type","len","length","i","HotBar","props","_onStore","actionType","option","closeDialogAction","setState","prevState","hotButtons","countButtons","_maxButtons","_hClean","_renderHotButtons","onShowDialog","map","conf","index","caption","_accessKey","toString","_shortCaption","substr","bind","_btCleanEl","_calcMaxButtons","state","strWidth","window","getComputedStyle","document","body","getPropertyValue","maxButtons","componentDidMount","store","unsubscribe","listen","componentWillUnmount","render","_cleanBtEl","Component","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADE;AAIRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAJE;AAORC,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE;AADF;AAPC,CAAV;;AAYA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC3B,MAAMC,GAAG,GAAGF,GAAG,CAACG,MAAhB;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAKA,CAAC,GAACF,GAAP,EAAWE,CAAC,EAAZ,EAAe;AACb,QAAIJ,GAAG,CAACI,CAAD,CAAH,CAAOH,IAAP,KAAgBA,IAApB,EAAyB;AACvB,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,CATD;;IAWMI,M;;;;;AAKJ,kBAAYC,KAAZ,EAAkB;AAAA;;AAChB;;AADgB,UAsClBC,QAtCkB,GAsCP,UAACC,UAAD,EAAaC,MAAb,EAAwB;AAAA,UACzBC,iBADyB,GACH,MAAKJ,KADF,CACzBI,iBADyB;;AAEjC,UAAIF,UAAU,KAAKE,iBAAnB,EAAuC;AACrC,cAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AAAA,cACjBC,UADiB,GACYD,SADZ,CACjBC,UADiB;AAAA,cACLC,YADK,GACYF,SADZ,CACLE,YADK;;AAEzB,cAAI,CAACf,KAAK,CAACc,UAAD,EAAaJ,MAAM,CAACR,IAApB,CAAV,EAAqC;AACnCY,YAAAA,UAAU,CAACC,YAAY,GAAG,MAAKC,WAArB,CAAV,GAA8CN,MAA9C;AACAG,YAAAA,SAAS,CAACE,YAAV,IAA0B,CAA1B;AACD;;AACD,iBAAOF,SAAP;AACD,SAPD;AAQD;AACF,KAlDiB;;AAAA,UAoDlBI,OApDkB,GAoDR,YAAM;AACd,YAAKL,QAAL,CAAc;AAAEG,QAAAA,YAAY,EAAE,CAAhB;AAAmBD,QAAAA,UAAU,EAAE;AAA/B,OAAd;AACD,KAtDiB;;AAAA,UAwDlBI,iBAxDkB,GAwDE,UAACJ,UAAD,EAAaK,YAAb,EAA8B;AAChD,aAAOL,UAAU,CAACM,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,YAC7BpB,IAD6B,GACRmB,IADQ,CAC7BnB,IAD6B;AAAA,4BACRmB,IADQ,CACvBE,OADuB;AAAA,YACvBA,OADuB,8BACf,EADe;AAAA,YAEnCC,UAFmC,GAEtB,CAACF,KAAK,GAAC,CAAP,EAAUG,QAAV,EAFsB;AAAA,YAGnCC,aAHmC,GAGnBF,UAAU,GAAGD,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAHM;;AAIrC,eACE,gCAAC,sBAAD;AACE,UAAA,GAAG,EAAEzB,IADP;AAEE,UAAA,SAAS,EAAER,CAAC,CAACG,IAFf;AAGE,UAAA,OAAO,EAAE6B,aAHX;AAIE,UAAA,KAAK,EAAEH,OAJT;AAKE,UAAA,SAAS,EAAEC,UALb;AAME,UAAA,OAAO,EAAEL,YAAY,CAACS,IAAb,CAAkB,IAAlB,EAAwB1B,IAAxB;AANX,UADF;AAUD,OAdM,CAAP;AAeD,KAxEiB;;AAEhB,UAAK2B,UAAL,GACE,gCAAC,sBAAD;AACE,MAAA,GAAG,EAAC,UADN;AAEE,MAAA,SAAS,EAAEnC,CAAC,CAACK,KAFf;AAGE,MAAA,OAAO,EAAC,IAHV;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,OAAO,EAAE,MAAKkB;AALhB,MADF;AASA,UAAKD,WAAL,GAAmB,MAAKc,eAAL,CAAqBvB,KAArB,CAAnB;AACA,UAAKwB,KAAL,GAAa;AACXhB,MAAAA,YAAY,EAAE,CADH;AAEXD,MAAAA,UAAU,EAAE;AAFD,KAAb;AAZgB;AAgBjB;;;;SAEDgB,e,GAAA,yBAAgBvB,KAAhB,EAAsB;AACpB,QAAMyB,QAAQ,GAAGC,MAAM,CACfC,gBADS,CACQC,QAAQ,CAACC,IADjB,EACuB,QADvB,EAETC,gBAFS,CAEQ,SAFR,CAAjB;;AAGA,YAAOL,QAAP;AACE,WAAK,QAAL;AAAe,eAAO,CAAP;;AACf,WAAK,QAAL;AAAe,eAAO,CAAP;;AACf;AAAS,eAAOzB,KAAK,CAAC+B,UAAb;AAHX;AAKD,G;;SAEDC,iB,GAAA,6BAAmB;AAAA,QACTC,KADS,GACC,KAAKjC,KADN,CACTiC,KADS;AAEjB,SAAKC,WAAL,GAAmBD,KAAK,CAACE,MAAN,CAAa,KAAKlC,QAAlB,CAAnB;AACD,G;;SAEDmC,oB,GAAA,gCAAsB;AACpB,SAAKF,WAAL;AACD,G;;SAsCDG,M,GAAA,kBAAQ;AACA,QAAEzB,YAAF,GAAmB,KAAKZ,KAAxB,CAAEY,YAAF;AAAA,QACEL,UADF,GACiB,KAAKiB,KADtB,CACEjB,UADF;AAAA,QAEA+B,UAFA,GAEc/B,UAAU,CAACV,MAAX,KAAsB,CAAvB,GACR,KAAKyB,UADG,GAER,IAJL;;AAKN,WACE;AAAK,MAAA,KAAK,EAAEnC,CAAC,CAACC;AAAd,OACG,KAAKuB,iBAAL,CAAuBJ,UAAvB,EAAmCK,YAAnC,CADH,EAEG0B,UAFH,CADF;AAMD,G;;;EA3FkBC,gB;;AAAfxC,M,CACGyC,Y,GAAe;AACpBT,EAAAA,UAAU,EAAE;AADQ,C;eA6FThC,M","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    display: 'inline-block'\r\n  },\r\n  BT_D: {\r\n    color: '#c0c0c0'\r\n  },\r\n  BT_CL: {\r\n    color: '#f44336'\r\n  }\r\n};\r\n\r\nconst _isIn = (arr, type) => {\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for(;i<len;i++){\r\n    if (arr[i].type === type){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nclass HotBar extends Component {\r\n  static defaultProps = {\r\n    maxButtons: 5\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this._btCleanEl = (\r\n      <FlatButton\r\n        key=\"BT_CLEAN\"\r\n        rootStyle={S.BT_CL}\r\n        caption=\"CL\"\r\n        title=\"Clean Hot Bar\"\r\n        onClick={this._hClean}\r\n      />\r\n    )\r\n    this._maxButtons = this._calcMaxButtons(props)\r\n    this.state = {\r\n      countButtons: 0,\r\n      hotButtons: []\r\n    }\r\n  }\r\n\r\n  _calcMaxButtons(props){\r\n    const strWidth = window\r\n           .getComputedStyle(document.body, ':after')\r\n           .getPropertyValue('content');\r\n    switch(strWidth){\r\n      case '\"W600\"': return 3;\r\n      case '\"W500\"': return 2;\r\n      default: return props.maxButtons;\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props;\r\n    this.unsubscribe = store.listen(this._onStore)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  _onStore = (actionType, option) => {\r\n    const { closeDialogAction } = this.props;\r\n    if (actionType === closeDialogAction ) {\r\n      this.setState(prevState => {\r\n        const { hotButtons, countButtons } = prevState;\r\n        if (!_isIn(hotButtons, option.type)) {\r\n          hotButtons[countButtons % this._maxButtons] = option\r\n          prevState.countButtons += 1\r\n        }\r\n        return prevState;\r\n      })\r\n    }\r\n  }\r\n\r\n  _hClean = () => {\r\n    this.setState({ countButtons: 0, hotButtons: [] })\r\n  }\r\n\r\n  _renderHotButtons = (hotButtons, onShowDialog) => {\r\n    return hotButtons.map((conf, index) => {\r\n      const { type, caption='' } = conf\r\n      , _accessKey = (index+1).toString()\r\n      , _shortCaption = _accessKey + caption.substr(0, 3);\r\n      return (\r\n        <FlatButton\r\n          key={type}\r\n          rootStyle={S.BT_D}\r\n          caption={_shortCaption}\r\n          title={caption}\r\n          accessKey={_accessKey}\r\n          onClick={onShowDialog.bind(null, type)}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { onShowDialog } = this.props\r\n        , { hotButtons } = this.state\r\n        , _cleanBtEl = (hotButtons.length !== 0)\r\n             ? this._btCleanEl\r\n             : null;\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderHotButtons(hotButtons, onShowDialog)}\r\n        {_cleanBtEl}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HotBar\r\n"],"file":"HotBar.js"}