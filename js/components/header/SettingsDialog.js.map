{"version":3,"sources":["../../../src/components/header/SettingsDialog.jsx"],"names":["styles","S","MODAL","position","width","height","margin","SettingsDialog","_handleSet","setQuandlKey","inputEl","getValue","props","onClose","nextProps","nextState","isShow","commandButtons","rowDiv","labelSpan","c"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;;AAEA,IAAMA,+BAAN;;AAEA,IAAMC,IAAI;AACRC,SAAQ;AACNC,cAAW,QADL;AAENC,WAAO,OAFD;AAGNC,YAAQ,OAHF;AAINC,YAAQ;AAJF;AADA,CAAV;;IASMC,c;;;;;;;;;;;;;;sMASJC,U,GAAa,YAAM;AACjB,2BAAWC,YAAX,CAAwB,MAAKC,OAAL,CAAaC,QAAb,EAAxB;AACA,YAAKC,KAAL,CAAWC,OAAX;AACD,K;;;;;0CAVqBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKF,KAAnB,IAA4BE,UAAUE,MAAV,KAAqB,KAAKJ,KAAL,CAAWI,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAOO;AAAA;;AACN,UAAMC,iBAAgB,CACnB;AACG,aAAI,GADP;AAEG,cAAK,OAFR;AAGG,iBAAQ,KAHX;AAIG,iBAAS,KAAKT;AAJjB,QADmB,CAAtB;AADM,mBASoB,KAAKI,KATzB;AAAA,UASCI,MATD,UASCA,MATD;AAAA,UASSH,OATT,UASSA,OATT;;AAUN,aACK;AAAA;AAAA;AACG,iBAAOZ,EAAEC,KADZ;AAEG,mBAAQ,eAFX;AAGG,kBAAQc,MAHX;AAIG,0BAAgBC,cAJnB;AAKG,mBAASJ;AALZ;AAOE;AAAA;AAAA,YAAK,OAAOb,OAAOkB,MAAnB;AACG;AAAA;AAAA,cAAM,OAAOlB,OAAOmB,SAApB;AAAA;AAAA,WADH;AAIG;AACG,iBAAM;AAAA,qBAAK,OAAKT,OAAL,GAAeU,CAApB;AAAA,aADT;AAEG,yBAAY;AAFf;AAJH;AAPF,OADL;AAmBD;;;;;;kBAGYb,c","file":"SettingsDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport InputSecret from '../zhn/InputSecret';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport ChartStore from '../../flux/stores/ChartStore';\r\n\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst S = {\r\n  MODAL : {\r\n    position : 'static',\r\n    width: '400px',\r\n    height: '120px',\r\n    margin: '70px auto 0px'\r\n  }\r\n}\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSet = () => {\r\n    ChartStore.setQuandlKey(this.inputEl.getValue());\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const commandButtons =[\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Set\"\r\n          onClick={this._handleSet}\r\n       />\r\n    ];\r\n    const {isShow, onClose} = this.props;\r\n    return (\r\n         <ModalDialog\r\n            style={S.MODAL}\r\n            caption=\"User Settings\"\r\n            isShow={isShow}\r\n            commandButtons={commandButtons}\r\n            onClose={onClose}\r\n         >\r\n           <div style={styles.rowDiv}>\r\n              <span style={styles.labelSpan}>\r\n                Quandl:\r\n              </span>\r\n              <InputSecret\r\n                 ref={ c => this.inputEl = c}\r\n                 placeholder=\"Quandl API Key\"\r\n              />\r\n           </div>\r\n         </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SettingsDialog\r\n"]}