{"version":3,"sources":["../../../src/components/header/SettingsDialog.jsx"],"names":["S","MODAL","position","width","height","margin","TITLE_API","TITLE_OPTION","BT","color","_isFn","fn","SettingsDialog","_hClose","props","onClose","_modal","focusPrev","_refModal","n","shouldComponentUpdate","nextProps","nextState","isShow","render","data","Actions","changeTheme","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAGA;;AACA;;AACA;;AAPA;AASA,IAAMA,CAAC,GAAG;AACRC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAG,QADN;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE,GAHH;AAILC,IAAAA,MAAM,EAAE;AAJH,GADC;AAORC,EAAAA,SAAS,EAAE;AACTH,IAAAA,KAAK,EAAE;AADE,GAPH;AAURI,EAAAA,YAAY,EAAE;AACZJ,IAAAA,KAAK,EAAE;AADK,GAVN;AAaRK,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AAbI,CAAV;;AAkBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,OAAOA,EAAP,KAAc,UAAlB;AAAA,CAAhB;;IAEMC,c;;;;;;;;;;;;UAsBJC,O,GAAU,YAAM;AACd,YAAKC,KAAL,CAAWC,OAAX;;AACA,UAAI,MAAKC,MAAL,IACGN,KAAK,CAAC,MAAKM,MAAL,CAAYC,SAAb,CADZ,EACsC;AACpC,cAAKD,MAAL,CAAYC,SAAZ;AACD;AACF,K;;UAEDC,S,GAAY,UAAAC,CAAC;AAAA,aAAI,MAAKH,MAAL,GAAcG,CAAlB;AAAA,K;;;;;;;AA7Bb;;;;;;;;;;;SAYAC,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAID,SAAS,KAAK,KAAKP,KAAnB,IACGO,SAAS,CAACE,MAAV,KAAqB,KAAKT,KAAL,CAAWS,MADvC,EAEE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,G;;SAYDC,M,GAAA,kBAAQ;AAAA,sBACmB,KAAKV,KADxB;AAAA,QACES,MADF,eACEA,MADF;AAAA,QACUE,IADV,eACUA,IADV;AAEN,wBACK,gCAAC,gBAAD,CAAG,WAAH;AACG,MAAA,GAAG,EAAE,KAAKP,SADb;AAEG,MAAA,OAAO,EAAC,eAFX;AAGG,MAAA,KAAK,EAAElB,CAAC,CAACC,KAHZ;AAIG,MAAA,YAAY,EAAE,KAJjB;AAKG,MAAA,MAAM,EAAEsB,MALX;AAMG,MAAA,OAAO,EAAE,KAAKV;AANjB,oBAQE,gCAAC,gBAAD,CAAG,OAAH;AAAW,MAAA,YAAY,EAAE;AAAzB,oBACE,gCAAC,gBAAD,CAAG,GAAH;AAAO,MAAA,KAAK,EAAC;AAAb,oBACE,gCAAC,sBAAD;AACG,MAAA,MAAM,EAAEU,MADX;AAEG,MAAA,UAAU,EAAEvB,CAAC,CAACM,SAFjB;AAGG,MAAA,OAAO,EAAEN,CAAC,CAACQ,EAHd;AAIG,MAAA,IAAI,EAAEiB,IAJT;AAKG,MAAA,OAAO,EAAE,KAAKZ;AALjB,MADF,CADF,eAUE,gCAAC,gBAAD,CAAG,GAAH;AAAO,MAAA,KAAK,EAAC;AAAb,oBACE,gCAAC,uBAAD;AACE,MAAA,UAAU,EAAEb,CAAC,CAACO,YADhB;AAEE,MAAA,OAAO,EAAEP,CAAC,CAACQ,EAFb;AAGE,MAAA,IAAI,EAAEiB,IAHR;AAIE,MAAA,aAAa,EAAEC,6BAAQC,WAJzB;AAKE,MAAA,OAAO,EAAE,KAAKd;AALhB,MADF,CAVF,CARF,CADL;AA+BD,G;;;EAjE0Be,gB;;eAoEdhB,c","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport Actions from '../../flux/actions/ComponentActions'\r\n\r\n\r\nimport A from '../Comp'\r\nimport PaneApiKey from './PaneApiKey'\r\nimport PaneOptions from './PaneOptions'\r\n\r\nconst S = {\r\n  MODAL: {\r\n    position : 'static',\r\n    width: 380,\r\n    height: 410,\r\n    margin: '70px auto 0px'\r\n  },\r\n  TITLE_API: {\r\n    width: 80\r\n  },\r\n  TITLE_OPTION: {\r\n    width: 110\r\n  },\r\n  BT: {\r\n    color: '#232f3b'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nclass SettingsDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      setQuandlKey: PropTypes.func,\r\n      isAdminMode: PropTypes.func,\r\n      isDrawDeltaExtrems: PropTypes.func\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n        && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _hClose = () => {\r\n    this.props.onClose()\r\n    if (this._modal\r\n        && _isFn(this._modal.focusPrev) ) {\r\n      this._modal.focusPrev()\r\n    }\r\n  }\r\n\r\n  _refModal = n => this._modal = n\r\n\r\n  render(){\r\n    const { isShow, data } = this.props;\r\n    return (\r\n         <A.ModalDialog\r\n            ref={this._refModal}\r\n            caption=\"User Settings\"\r\n            style={S.MODAL}\r\n            isWithButton={false}\r\n            isShow={isShow}\r\n            onClose={this._hClose}\r\n         >\r\n           <A.TabPane isUpdateInit={true}>\r\n             <A.Tab title=\"ApiKeys\">\r\n               <PaneApiKey\r\n                  isShow={isShow}\r\n                  titleStyle={S.TITLE_API}\r\n                  btStyle={S.BT}\r\n                  data={data}\r\n                  onClose={this._hClose}\r\n                />\r\n             </A.Tab>\r\n             <A.Tab title=\"Options\">\r\n               <PaneOptions\r\n                 titleStyle={S.TITLE_OPTION}\r\n                 btStyle={S.BT}\r\n                 data={data}\r\n                 onChangeTheme={Actions.changeTheme}\r\n                 onClose={this._hClose}\r\n               />\r\n             </A.Tab>\r\n           </A.TabPane>\r\n         </A.ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsDialog\r\n"],"file":"SettingsDialog.js"}