{"version":3,"sources":["../../../src/components/eurostat/DialogEurostat2.jsx"],"names":["MAP_FREQUENCY_DF","DialogEurostat2","Decor","dialog","withForDate","props","_isCategory","RouterOptions","isCategory","chartType","_updateForDate","date","frequency","two","mapFrequency","mapDateDf","dateConfig","setState","isShowDate","_handleSelectOne","one","_handleSelectTwo","_handleSelectChartType","_onRegColor","comp","colorComp","_handleSelectDate","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","twoCaption","msg","push","msgOnNotSelected","isValid","length","dialogOptions","compSelect1","compSelect2","seriaColor","getColor","undefined","_getDateWithForDate","loadFn","selectOptions","getOptions","_handleClose","_handleWithValidationClose","_refSelect1","_refSelect2","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","isOptions","_commandButtons","_crCommandsWithLoad","_chartOptions","crOptions","state","_isWithInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","noDate","caption","onShow","onFront","oneURI","oneJsonProp","twoURI","twoJsonProp","isToolbar","isShowLabels","dateDefault","dateOptions","validationMessages","_toggleOptionWithToolbar","_hideOptionsWithToolbar","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport crDateConfig from './crDateConfig'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport crMenuMore from '../dialogs/MenuMore'\r\nimport Decor from '../dialogs/decorators/Decorators';\r\nimport withForDate from './withForDate'\r\n\r\nimport RouterOptions from './RouterOptions';\r\nimport ModalOptions from './ModalOptions'\r\n\r\nconst  MAP_FREQUENCY_DF = 'M';\r\n\r\n@Decor.dialog\r\n@withForDate\r\nclass DialogEurostat2 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n\r\n    oneCaption: PropTypes.string,\r\n    oneURI: PropTypes.string,\r\n    oneJsonProp: PropTypes.string,\r\n\r\n    twoCaption: PropTypes.string,\r\n    twoURI: PropTypes.string,\r\n    twoJsonProp: PropTypes.string,\r\n\r\n    mapFrequency: PropTypes.oneOf(['M', 'Q', 'Y']),\r\n    mapDateDf: PropTypes.number,\r\n\r\n    msgOnNotSelected: PropTypes.func,\r\n    onShow: PropTypes.func,\r\n    loadFn: PropTypes.func\r\n  }\r\n */\r\n\r\n  static defaultProps = {\r\n    oneCaption: 'Item',\r\n    oneJsonProp: 'items',\r\n    twoCaption: 'Metric',\r\n    twoJsonProp: 'metrics',\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    //this.one = undefined;\r\n    //this.two = undefined;\r\n    //this.date = undefined;\r\n    //this.chartType = undefined;\r\n\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleToolBar: this._toggleWithToolbar,\r\n      onAbout: this._clickInfoWithToolbar\r\n    })\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { isOptions: true }\r\n    )\r\n    this._commandButtons = this._crCommandsWithLoad(this)\r\n    this._chartOptions = RouterOptions.crOptions(props)\r\n\r\n    this.state = {\r\n      ...this._isWithInitialState(),\r\n      isOptions: false,\r\n      isShowDate: false,\r\n      ...crDateConfig('EMPTY')\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _isCategory = () => {\r\n    return RouterOptions.isCategory(this.chartType)\r\n  }\r\n\r\n  _updateForDate = () => {\r\n    this.date = null;\r\n    const frequency = (this.two)\r\n             ? (this.props.mapFrequency)\r\n                  ? this.props.mapFrequency\r\n                  : (this.two.mapFrequency)\r\n                       ? this.two.mapFrequency\r\n                       : MAP_FREQUENCY_DF\r\n             : null\r\n         , { mapDateDf } = this.props\r\n         , dateConfig = (frequency)\r\n             ? crDateConfig(frequency, mapDateDf)\r\n             : crDateConfig('EMPTY')\r\n\r\n    this.setState({\r\n       isShowDate: true,\r\n       ...dateConfig\r\n    });\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n\r\n  _handleSelectTwo = (two) => {\r\n    this.two = two;\r\n    if (this._isCategory()) {\r\n      this._updateForDate();\r\n    }\r\n  }\r\n\r\n  _handleSelectChartType = (chartType) => {\r\n    this.chartType = chartType;\r\n    if (this._isCategory()) {\r\n      this._updateForDate();\r\n    } else {\r\n      this.setState({ isShowDate : false });\r\n    }\r\n  }\r\n  _onRegColor = (comp) => {\r\n    this.colorComp = comp\r\n  }\r\n\r\n  _handleSelectDate = (date) => {\r\n    this.date = date;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption, twoCaption } = this.props;\r\n     const msg = [];\r\n\r\n     if (!this._isCategory()) {\r\n        if (!this.one) { msg.push(this.props.msgOnNotSelected(oneCaption)); }\r\n     }\r\n     if (!this.two) { msg.push(this.props.msgOnNotSelected(twoCaption)); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const {\r\n            one, two, dialogOptions,\r\n            chartType, colorComp,\r\n            compSelect1, compSelect2\r\n          } = this\r\n        , seriaColor = colorComp\r\n            ? colorComp.getColor()\r\n            : undefined\r\n        , date = this._getDateWithForDate();\r\n\r\n    return this.props.loadFn(\r\n      this.props, {\r\n        one, two, dialogOptions,\r\n        chartType, seriaColor,\r\n        date,\r\n        selectOptions: [\r\n          compSelect1.getOptions(),\r\n          compSelect2.getOptions()\r\n        ]\r\n      }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  _refSelect1 = (comp) => {\r\n    this.compSelect1 = comp\r\n  }\r\n  _refSelect2 = (comp) => {\r\n    this.compSelect2 = comp\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           noDate,\r\n           caption, isShow, onShow, onFront,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp\r\n          } = this.props\r\n        , {\r\n            isToolbar, isOptions,\r\n            isShowLabels, isShowDate,\r\n            dateDefault, dateOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n             isShow={isShow}\r\n             caption={caption}\r\n             menuModel={this._menuMore}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handleClose}\r\n         >\r\n             <D.Toolbar\r\n               isShow={isToolbar}\r\n               buttons={this.toolbarButtons}\r\n             />\r\n             <ModalOptions\r\n               isShow={isOptions}\r\n               toggleOption={this._toggleOptionWithToolbar}\r\n               onClose={this._hideOptionsWithToolbar}\r\n             />\r\n             <D.SelectWithLoad\r\n               ref={this._refSelect1}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames=\"Items\"\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n             <D.SelectWithLoad\r\n               ref={this._refSelect2}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={twoURI}\r\n               jsonProp={twoJsonProp}\r\n               caption={twoCaption}\r\n               optionNames=\"Metrics\"\r\n               onSelect={this._handleSelectTwo}\r\n             />\r\n             <D.RowChart\r\n               isShowLabels={isShowLabels}\r\n               options={this._chartOptions}\r\n               onSelectChart={this._handleSelectChartType}\r\n               onRegColor={this._onRegColor}\r\n             />\r\n             {\r\n               !noDate &&\r\n               <D.ShowHide isShow={isShowDate}>\r\n                 <D.RowInputSelect\r\n                    isShowLabels={isShowLabels}\r\n                    caption=\"For Date\"\r\n                    placeholder={dateDefault}\r\n                    options={dateOptions}\r\n                    onSelect={this._handleSelectDate}\r\n                 />\r\n               </D.ShowHide>\r\n           }\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogEurostat2\r\n"],"file":"DialogEurostat2.js"}