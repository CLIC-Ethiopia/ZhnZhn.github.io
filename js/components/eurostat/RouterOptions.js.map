{"version":3,"sources":["../../../src/components/eurostat/RouterOptions.js"],"names":["V","A","A_Y","S","S_C","M","C","C_C","C_2","B","B_C","B_2","B_L","D","TM","TM_C","TM_2","TM_2_C","CATEGORY_TYPES","EMPTY","_crItem","confArr","caption","value","dim","compType","_crItems","arr","map","_crDF","CompItemType","EUROSTAT_MAP","_crDF3","_crT1","_crT2","_crT2A","_crT3All","oneCaption","_crT3","_crT3B","_crT3A","_crT3A2","_crT4","twoCaption","_r","DF","t1","t2","t2a","t3","t3b","t3a","t3a2","t4","df3","_crCaptions","dims","Array","isArray","c","RouterOptions","crOptions","option","chartsType","_captions","_crOptions","isCategory","chartType","indexOf"],"mappings":"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","sourcesContent":["\r\nimport { CompItemType } from '../../constants/Type'\r\n\r\n\r\nconst V = {\r\n  A: 'AREA',\r\n  A_Y: 'AREA_YEARLY',\r\n  S: 'SPLINE',\r\n  S_C: 'COLUMN',\r\n  M: 'MAP',\r\n  C: 'COLUMN_SET',\r\n  C_C: 'COLUMN_CLUSTER' ,\r\n  C_2: 'COLUMN_BY_2',\r\n  B: 'BAR_SET',\r\n  B_C: 'BAR_CLUSTER',\r\n  B_2: 'BAR_BY_2',\r\n  B_L: 'BAR_WITH_LABELS',\r\n  D: 'DOT_SET',\r\n  TM: 'TREE_MAP',\r\n  TM_C: 'TREE_MAP_CLUSTER',\r\n  TM_2: 'TREE_MAP_2',\r\n  TM_2_C: 'TREE_MAP_2_CLUSTER'\r\n};\r\n\r\nconst CATEGORY_TYPES = [\r\n  V.M,\r\n  V.C, V.C_C, V.C_2,\r\n  V.B, V.B_C, V.B_2, V.B_L,\r\n  V.D,\r\n  V.TM, V.TM_C, V.TM_2, V.TM_2_C\r\n];\r\n\r\nconst C = {\r\n  EMPTY: ''\r\n};\r\n\r\nconst _crItem = confArr => ({\r\n  caption: confArr[0],\r\n  value: confArr[1],\r\n  dim: confArr[2],\r\n  compType: confArr[3]\r\n});\r\nconst _crItems = arr => arr.map(_crItem);\r\n\r\nconst _crDF = () => _crItems([\r\n  ['Default: Spline', V.S ],\r\n  ['Area', V.A ],\r\n  ['Column', V.S_C ],\r\n  ['Bar: All Countries', V.B ],\r\n  ['Bar+Labels: All Countries', V.B_L ],\r\n  ['Column: All Countries', V.C ],\r\n  ['Dots: All Countries', V.D ],\r\n  ['Map: All Countries' , V.M, void 0, CompItemType.EUROSTAT_MAP ],\r\n]);\r\n\r\nconst _crDF3 = () => _crItems([\r\n  ['Default: Spline', V.S ],\r\n  ['Column', V.S_C ],\r\n  ['Bar: All Countries', V.B ],\r\n  ['Column: All Countries', V.C ],\r\n  ['Dots: All Countries', V.D ]\r\n]);\r\n\r\nconst _crT1 = () => ([\r\n  _crItem(['Default: Spline', V.S ])\r\n]);\r\n\r\n\r\nconst _crT2 = () => ([\r\n  _crItem(['Default: Spline', V.S ]),\r\n  _crItem(['Column', V.S_C ]),\r\n]);\r\n\r\nconst _crT2A = () => ([\r\n  ..._crT2(),\r\n  _crItem(['Yearly by Months' , V.A_Y ])\r\n]);\r\n\r\nconst _crT3All = (oneCaption) => _crItems([\r\n  [`Column: By ${oneCaption}`, V.C, oneCaption],\r\n  [`Column: By ${oneCaption}: Cluster`, V.C_C, oneCaption],\r\n  [`Bar: By ${oneCaption}`, V.B, oneCaption],\r\n  [`Bar: By ${oneCaption}: Cluster`, V.B_C, oneCaption]\r\n]);\r\n\r\nconst _crT3 = ([oneCaption]) => ([\r\n  _crItem(['Default: Spline', V.A]),\r\n  ..._crT3All(oneCaption)\r\n]);\r\n\r\nconst _crT3B = ([oneCaption]) => ([\r\n  _crItem(['Default: Spline', V.A]),\r\n  _crItem(['Yearly by Months', V.A_Y]),\r\n  ..._crT3All(oneCaption)\r\n]);\r\n\r\n\r\nconst _crT3A = ([oneCaption]) => ([\r\n  ..._crT3([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}`, V.TM, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Cluster`, V.TM_C, oneCaption])\r\n]);\r\n\r\nconst _crT3A2 = ([oneCaption]) => ([\r\n  ..._crT3A([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2`, V.TM_2, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2: Cluster`, V.TM_2_C, oneCaption])\r\n]);\r\n\r\nconst _crT4 = ([oneCaption, twoCaption]) => ([\r\n  ..._crT3([oneCaption]),\r\n  _crItem([`Column: By ${twoCaption}`, V.C_2, twoCaption]),\r\n  _crItem([`Bar: By ${twoCaption}`, V.B_2, twoCaption])\r\n]);\r\n\r\nconst _r = {\r\n  DF: _crDF,\r\n  t1: _crT1,\r\n  t2: _crT2,\r\n  t2a: _crT2A,\r\n  t3: _crT3,\r\n  t3b: _crT3B,\r\n  t3a: _crT3A,\r\n  t3a2: _crT3A2,\r\n  t4: _crT4,\r\n  df3: _crDF3\r\n};\r\n\r\nconst _crCaptions = ({\r\n  dims,\r\n  oneCaption=C.EMPTY,\r\n  twoCaption=C.EMPTY\r\n}) => Array.isArray(dims)\r\n   ? dims.map(dim => dim.c || C.EMPTY)\r\n   : [ oneCaption, twoCaption ];\r\n\r\nconst RouterOptions = {\r\n  crOptions(option){\r\n     const { chartsType } = option\r\n     , _captions = _crCaptions(option)\r\n     , _crOptions = _r[chartsType] || _r.DF;\r\n     return _crOptions(_captions);\r\n  },\r\n\r\n  isCategory(chartType) {\r\n    if (!chartType) {\r\n      return false;\r\n    }\r\n    return CATEGORY_TYPES\r\n      .indexOf(chartType.value) !== -1;\r\n  }\r\n\r\n};\r\n\r\nexport default RouterOptions\r\n"],"file":"RouterOptions.js"}