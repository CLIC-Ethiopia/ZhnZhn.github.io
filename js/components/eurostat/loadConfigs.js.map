{"version":3,"sources":["../../../src/components/eurostat/loadConfigs.js"],"names":["MSG_STILL_LOADING","_isDimsWithOptions","dims","_len","length","i","options","_crConfigs","map","c","v","id","caption","_crUrl","proxy","baseMeta","dfId","_crMetaUrl","props","metaUrl","guard","LoadGuard","loadConfigs","isLoading","start","then","mapFrequency","timeId","stop","configs","noTime","errMsg","message","Promise","resolve"],"mappings":"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","sourcesContent":["import LoadGuard from '../../utils/LoadGuard'\r\n\r\nimport loadDims from './loadDims'\r\nimport loadDimsWithOptions from './loadDimsWithOptions'\r\n\r\n\r\nconst MSG_STILL_LOADING = \"Another dialog are still loading\";\r\n\r\nconst _isDimsWithOptions = (dims) => {\r\n  const _len = dims.length;\r\n  let i=0;\r\n  for(i; i<_len;i++) {\r\n    if (!dims[i].options) { break; }\r\n  }\r\n  return i === _len;\r\n};\r\n\r\nconst _crConfigs = dims => dims\r\n .map(({c, v, options}) => ({id:v, caption:c, options}));\r\n\r\n\r\n const _crUrl = ({ proxy='', baseMeta, dfId }) => {\r\n   return `${proxy}${baseMeta}/${dfId}`\r\n };\r\nconst _crMetaUrl = props => props.metaUrl\r\n || _crUrl(props);\r\n\r\n\r\nconst guard = new LoadGuard();\r\n\r\nconst loadConfigs = (props) => {\r\n  if (!guard.isLoading) {\r\n    const metaUrl = _crMetaUrl(props);\r\n    //Load from dims configuration\r\n    if (props.dims) {\r\n      return loadDims({ metaUrl, ...props })\r\n    }\r\n    guard.start(metaUrl);\r\n    return loadDimsWithOptions(metaUrl)\r\n      .then(({ dims, mapFrequency, timeId }) => {\r\n        guard.stop()\r\n        return _isDimsWithOptions(dims)\r\n          ? {\r\n              timeId, mapFrequency,\r\n              configs: _crConfigs(dims)\r\n            }\r\n          : loadDims({\r\n             noTime: props.noTime,\r\n             metaUrl, dims, mapFrequency, timeId\r\n            })\r\n      })\r\n      .catch(({ errMsg, message }) => {\r\n        guard.stop()\r\n        return { errMsg: errMsg || message };\r\n      });\r\n  } else {\r\n    return Promise\r\n      .resolve({ errMsg: MSG_STILL_LOADING });\r\n  }\r\n}\r\n\r\nexport default loadConfigs\r\n"],"file":"loadConfigs.js"}