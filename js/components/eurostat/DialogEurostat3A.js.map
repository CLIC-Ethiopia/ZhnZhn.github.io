{"version":3,"sources":["../../../src/components/eurostat/DialogEurostat3A.jsx"],"names":["MAP_FREQUENCY_DF","DialogEurostat3A","Decor","dialog","withForDate","props","_isCategory","RouterOptions","isCategory","chartType","_updateForDate","date","undefined","dfProps","mapFrequency","mapDateDf","_frequency","two","dateConfig","setState","isShowDate","_handleSelectOne","one","_handleSelectTwo","_handleSelectThree","three","_handleSelectChartType","_onRegColor","comp","colorComp","_handleSelectDate","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","twoCaption","threeCaption","msgOnNotSelected","msg","push","isValid","length","dialogOptions","compSelect1","compSelect2","seriaColor","getColor","_getDateWithForDate","loadFn","group","metric","selectOptions","getOptions","_handleClose","_handleWithValidationClose","_refSelect1","_refSelect2","_menuMore","toggleToolBar","_toggleWithToolbar","onAbout","_clickInfoWithToolbar","toolbarButtons","_createType2WithToolbar","isOptions","_commandButtons","_crCommandsWithLoad","_chartOptions","crOptions","state","_isWithInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","caption","onShow","onFront","oneURI","oneJsonProp","twoURI","twoJsonProp","threeURI","threeJsonProp","noDate","isToolbar","isShowLabels","dateDefault","dateOptions","validationMessages","_toggleOptionWithToolbar","_hideOptionsWithToolbar","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAGA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAOA,gBAAgB,GAAG,GAA1B;IAIMC,gB,WAFLC,uBAAMC,M,oBACNC,uB;;;;;AAEC;;;;;;;;;;;;;;;;;;;;;AAqCA,4BAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN,UADgB,CAEhB;AACA;AACA;AACA;AACA;;AANgB,UAoClBC,WApCkB,GAoCJ,YAAM;AAClB,aAAOC,0BAAcC,UAAd,CAAyB,MAAKC,SAA9B,CAAP;AACD,KAtCiB;;AAAA,UAwClBC,cAxCkB,GAwCD,YAAM;AACrB,YAAKC,IAAL,GAAYC,SAAZ;AADqB,gCAEE,MAAKP,KAFP,CAEbQ,OAFa;AAAA,UAEbA,OAFa,oCAEL,EAFK;AAAA,UAGbC,YAHa,GAGeD,OAHf,CAGbC,YAHa;AAAA,UAGCC,SAHD,GAGeF,OAHf,CAGCE,SAHD;;AAIrB,UAAMC,UAAU,GAAI,MAAKC,GAAN,GACRH,YADQ,GAERd,gBAFX;AAAA,UAGOkB,UAAU,GAAIF,UAAD,GACT,8BAAaA,UAAb,EAAyBD,SAAzB,CADS,GAET,8BAAa,OAAb,CALX;;AAOA,YAAKI,QAAL;AACGC,QAAAA,UAAU,EAAE;AADf,SAEMF,UAFN;AAID,KAvDiB;;AAAA,UAyDlBG,gBAzDkB,GAyDC,UAACC,GAAD,EAAS;AAC1B,YAAKA,GAAL,GAAWA,GAAX;AACD,KA3DiB;;AAAA,UA4DlBC,gBA5DkB,GA4DC,UAACN,GAAD,EAAS;AAC1B,YAAKA,GAAL,GAAWA,GAAX;;AACA,UAAI,MAAKX,WAAL,EAAJ,EAAwB;AACtB,cAAKI,cAAL;AACD;AACF,KAjEiB;;AAAA,UAkElBc,kBAlEkB,GAkEG,UAACC,KAAD,EAAW;AAC9B,YAAKA,KAAL,GAAaA,KAAb;AACD,KApEiB;;AAAA,UAsElBC,sBAtEkB,GAsEO,UAACjB,SAAD,EAAe;AACtC,YAAKA,SAAL,GAAiBA,SAAjB;;AACA,UAAI,MAAKH,WAAL,EAAJ,EAAwB;AACtB,cAAKI,cAAL;AACD,OAFD,MAEO;AACL,cAAKS,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAG;AAAf,SAAd;AACD;AACF,KA7EiB;;AAAA,UA8ElBO,WA9EkB,GA8EJ,UAACC,IAAD,EAAU;AACtB,YAAKC,SAAL,GAAiBD,IAAjB;AACD,KAhFiB;;AAAA,UAkFlBE,iBAlFkB,GAkFE,UAACnB,IAAD,EAAU;AAC5B,YAAKA,IAAL,GAAYA,IAAZ;AACD,KApFiB;;AAAA,UAsFlBoB,WAtFkB,GAsFJ,YAAM;AAClB,YAAKC,yBAAL,CACE,MAAKC,yBAAL,EADF,EAEE,MAAKC,iBAFP;AAID,KA3FiB;;AAAA,UA4FlBD,yBA5FkB,GA4FU,YAAM;AAAA,wBAIrB,MAAK5B,KAJgB;AAAA,UAEvB8B,UAFuB,eAEvBA,UAFuB;AAAA,UAEXC,UAFW,eAEXA,UAFW;AAAA,UAECC,YAFD,eAECA,YAFD;AAAA,UAGvBC,gBAHuB,eAGvBA,gBAHuB;AAK/B,UAAMC,GAAG,GAAG,EAAZ;;AAEA,UAAI,CAAC,MAAKjC,WAAL,EAAD,IAAuB,CAAC,MAAKgB,GAAjC,EAAsC;AACpCiB,QAAAA,GAAG,CAACC,IAAJ,CAASF,gBAAgB,CAACH,UAAD,CAAzB;AACD;;AACD,UAAI,CAAC,MAAKlB,GAAV,EAAe;AACbsB,QAAAA,GAAG,CAACC,IAAJ,CAASF,gBAAgB,CAACF,UAAD,CAAzB;AACD;;AACD,UAAI,CAAC,MAAKX,KAAV,EAAiB;AACfc,QAAAA,GAAG,CAACC,IAAJ,CAASF,gBAAgB,CAACD,YAAD,CAAzB;AACD;;AAEDE,MAAAA,GAAG,CAACE,OAAJ,GAAeF,GAAG,CAACG,MAAJ,KAAe,CAAhB,GACV,IADU,GACH,KADX;AAEA,aAAOH,GAAP;AACF,KAhHiB;;AAAA,UAiHlBL,iBAjHkB,GAiHE,YAAM;AAAA;AAAA,UAEtBZ,GAFsB,yBAEtBA,GAFsB;AAAA,UAEjBL,GAFiB,yBAEjBA,GAFiB;AAAA,UAEZQ,KAFY,yBAEZA,KAFY;AAAA,UAELkB,aAFK,yBAELA,aAFK;AAAA,UAGtBlC,SAHsB,yBAGtBA,SAHsB;AAAA,UAGXoB,SAHW,yBAGXA,SAHW;AAAA,UAItBe,WAJsB,yBAItBA,WAJsB;AAAA,UAITC,WAJS,yBAITA,WAJS;AAAA,UAMtBC,UANsB,GAMTjB,SAAS,GAClBA,SAAS,CAACkB,QAAV,EADkB,GAElBnC,SARkB;AAAA,UAStBD,IATsB,GASf,MAAKqC,mBAAL,EATe;;AAWxB,aAAO,MAAK3C,KAAL,CAAW4C,MAAX,CACL,MAAK5C,KADA,EACO;AACViB,QAAAA,GAAG,EAAEA,GADK;AAEV4B,QAAAA,KAAK,EAAEjC,GAFG;AAGVkC,QAAAA,MAAM,EAAE1B,KAHE;AAIVkB,QAAAA,aAAa,EAAbA,aAJU;AAKVlC,QAAAA,SAAS,EAATA,SALU;AAKCqC,QAAAA,UAAU,EAAVA,UALD;AAMVnC,QAAAA,IAAI,EAAJA,IANU;AAOVyC,QAAAA,aAAa,EAAE,CACbR,WAAW,CAACS,UAAZ,EADa,EAEbR,WAAW,CAACQ,UAAZ,EAFa;AAPL,OADP,CAAP;AAcD,KA1IiB;;AAAA,UA4IlBC,YA5IkB,GA4IH,YAAM;AACnB,YAAKC,0BAAL;AACD,KA9IiB;;AAAA,UAgJlBC,WAhJkB,GAgJJ,UAAC5B,IAAD,EAAU;AACtB,YAAKgB,WAAL,GAAmBhB,IAAnB;AACD,KAlJiB;;AAAA,UAmJlB6B,WAnJkB,GAmJJ,UAAC7B,IAAD,EAAU;AACtB,YAAKiB,WAAL,GAAmBjB,IAAnB;AACD,KArJiB;;AAQhB,UAAK8B,SAAL,GAAiB,0EAAiB;AAChCC,MAAAA,aAAa,EAAE,MAAKC,kBADY;AAEhCC,MAAAA,OAAO,EAAE,MAAKC;AAFkB,KAAjB,CAAjB;AAKA,UAAKC,cAAL,GAAsB,MAAKC,uBAAL,CACpB3D,KADoB,EACb;AAAE4D,MAAAA,SAAS,EAAE;AAAb,KADa,CAAtB;AAGA,UAAKC,eAAL,GAAuB,MAAKC,mBAAL,gDAAvB;AACA,UAAKC,aAAL,GAAqB7D,0BAAc8D,SAAd,CAAwBhE,KAAxB,CAArB;AAEA,UAAKiE,KAAL,iCACK,MAAKC,mBAAL,EADL;AAEEN,MAAAA,SAAS,EAAE,KAFb;AAGE7C,MAAAA,UAAU,EAAE;AAHd,OAIK,8BAAa,OAAb,CAJL;AAnBgB;AAyBjB;;;;SAEDoD,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAI,KAAKrE,KAAL,KAAeoE,SAAnB,EAA6B;AAC1B,UAAI,KAAKpE,KAAL,CAAWsE,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA2C;AACxC,eAAO,KAAP;AACF;AACH;;AACD,WAAO,IAAP;AACD,G;;SAqHDC,M,GAAA,kBAAQ;AAAA,uBAOI,KAAKvE,KAPT;AAAA,QAECwE,OAFD,gBAECA,OAFD;AAAA,QAEUF,MAFV,gBAEUA,MAFV;AAAA,QAEkBG,MAFlB,gBAEkBA,MAFlB;AAAA,QAE0BC,OAF1B,gBAE0BA,OAF1B;AAAA,QAGC5C,UAHD,gBAGCA,UAHD;AAAA,QAGa6C,MAHb,gBAGaA,MAHb;AAAA,QAGqBC,WAHrB,gBAGqBA,WAHrB;AAAA,QAIC7C,UAJD,gBAICA,UAJD;AAAA,QAIa8C,MAJb,gBAIaA,MAJb;AAAA,QAIqBC,WAJrB,gBAIqBA,WAJrB;AAAA,QAKC9C,YALD,gBAKCA,YALD;AAAA,QAKe+C,QALf,gBAKeA,QALf;AAAA,QAKyBC,aALzB,gBAKyBA,aALzB;AAAA,QAMCC,MAND,gBAMCA,MAND;AAAA,sBAaI,KAAKhB,KAbT;AAAA,QASEiB,SATF,eASEA,SATF;AAAA,QASatB,SATb,eASaA,SATb;AAAA,QAUEuB,YAVF,eAUEA,YAVF;AAAA,QAUgBpE,UAVhB,eAUgBA,UAVhB;AAAA,QAWEqE,WAXF,eAWEA,WAXF;AAAA,QAWeC,WAXf,eAWeA,WAXf;AAAA,QAYEC,kBAZF,eAYEA,kBAZF;AAcN,WACI,gCAAC,sBAAD,CAAG,eAAH;AACK,MAAA,MAAM,EAAEhB,MADb;AAEK,MAAA,OAAO,EAAEE,OAFd;AAGK,MAAA,SAAS,EAAE,KAAKnB,SAHrB;AAIK,MAAA,cAAc,EAAE,KAAKQ,eAJ1B;AAKK,MAAA,WAAW,EAAEY,MALlB;AAMK,MAAA,OAAO,EAAEC,OANd;AAOK,MAAA,OAAO,EAAE,KAAKzB;AAPnB,OASK,gCAAC,sBAAD,CAAG,OAAH;AACE,MAAA,MAAM,EAAEiC,SADV;AAEE,MAAA,OAAO,EAAE,KAAKxB;AAFhB,MATL,EAaK,gCAAC,wBAAD;AACE,MAAA,MAAM,EAAEE,SADV;AAEE,MAAA,YAAY,EAAE,KAAK2B,wBAFrB;AAGE,MAAA,OAAO,EAAE,KAAKC;AAHhB,MAbL,EAkBK,gCAAC,sBAAD,CAAG,cAAH;AACE,MAAA,GAAG,EAAE,KAAKrC,WADZ;AAEE,MAAA,MAAM,EAAEmB,MAFV;AAGE,MAAA,YAAY,EAAEa,YAHhB;AAIE,MAAA,GAAG,EAAER,MAJP;AAKE,MAAA,QAAQ,EAAEC,WALZ;AAME,MAAA,OAAO,EAAE9C,UANX;AAOE,MAAA,WAAW,EAAC,WAPd;AAQE,MAAA,QAAQ,EAAE,KAAKd;AARjB,MAlBL,EA4BK,gCAAC,sBAAD,CAAG,cAAH;AACE,MAAA,GAAG,EAAE,KAAKoC,WADZ;AAEE,MAAA,MAAM,EAAEkB,MAFV;AAGE,MAAA,YAAY,EAAEa,YAHhB;AAIE,MAAA,GAAG,EAAEN,MAJP;AAKE,MAAA,QAAQ,EAAEC,WALZ;AAME,MAAA,OAAO,EAAE/C,UANX;AAOE,MAAA,WAAW,EAAC,OAPd;AAQE,MAAA,QAAQ,EAAE,KAAKb;AARjB,MA5BL,EAsCK,gCAAC,sBAAD,CAAG,cAAH;AACE,MAAA,MAAM,EAAEoD,MADV;AAEE,MAAA,YAAY,EAAEa,YAFhB;AAGE,MAAA,GAAG,EAAEJ,QAHP;AAIE,MAAA,QAAQ,EAAEC,aAJZ;AAKE,MAAA,OAAO,EAAEhD,YALX;AAME,MAAA,WAAW,EAAC,SANd;AAOE,MAAA,QAAQ,EAAE,KAAKb;AAPjB,MAtCL,EA+CK,gCAAC,sBAAD,CAAG,QAAH;AACE,MAAA,YAAY,EAAEgE,YADhB;AAEE,MAAA,OAAO,EAAE,KAAKpB,aAFhB;AAGE,MAAA,aAAa,EAAE,KAAK1C,sBAHtB;AAIE,MAAA,UAAU,EAAE,KAAKC;AAJnB,MA/CL,EAsDO,CAAC2D,MAAD,IACA,gCAAC,sBAAD,CAAG,QAAH;AAAY,MAAA,MAAM,EAAElE;AAApB,OACE,gCAAC,sBAAD,CAAG,cAAH;AACG,MAAA,YAAY,EAAEoE,YADjB;AAEG,MAAA,OAAO,EAAC,UAFX;AAGG,MAAA,WAAW,EAAEC,WAHhB;AAIG,MAAA,OAAO,EAAEC,WAJZ;AAKG,MAAA,QAAQ,EAAE,KAAK5D;AALlB,MADF,CAvDP,EAiEK,gCAAC,sBAAD,CAAG,kBAAH;AACI,MAAA,kBAAkB,EAAE6D;AADxB,MAjEL,CADJ;AAuED,G;;;EAlR4BG,gB,WA6BtBC,Y,GAAe;AACpB5D,EAAAA,UAAU,EAAE,SADQ;AAEpB8C,EAAAA,WAAW,EAAE,WAFO;AAGpB7C,EAAAA,UAAU,EAAE,MAHQ;AAIpB+C,EAAAA,WAAW,EAAE,OAJO;AAKpB9C,EAAAA,YAAY,EAAE,QALM;AAMpBgD,EAAAA,aAAa,EAAE;AANK,C;eAwPTpF,gB","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport crDateConfig from './crDateConfig'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport crMenuMore from '../dialogs/MenuMore'\r\nimport Decor from '../dialogs/decorators/Decorators';\r\nimport withForDate from './withForDate'\r\n\r\nimport RouterOptions from './RouterOptions';\r\nimport ModalOptions from './ModalOptions'\r\n\r\nconst  MAP_FREQUENCY_DF = 'M';\r\n\r\n@Decor.dialog\r\n@withForDate\r\nclass DialogEurostat3A extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n\r\n    oneCaption: PropTypes.string,\r\n    oneURI: PropTypes.string,\r\n    oneJsonProp: PropTypes.string,\r\n\r\n    twoCaption: PropTypes.string,\r\n    twoURI: PropTypes.string,\r\n    twoJsonProp: PropTypes.string,\r\n\r\n    threeCaption: PropTypes.string,\r\n    threeURI: PropTypes.string,\r\n    threeJsonProp: PropTypes.string,\r\n\r\n    noDate: PropTypes.string,\r\n\r\n    mapFrequency: PropTypes.oneOf(['M', 'Q', 'Y']),\r\n    mapDateDf: PropTypes.number,\r\n\r\n    msgOnNotSelected: PropTypes.func,\r\n    onShow: PropTypes.func,\r\n    loadFn: PropTypes.func\r\n  }\r\n */\r\n\r\n  static defaultProps = {\r\n    oneCaption: 'Country',\r\n    oneJsonProp: 'countries',\r\n    twoCaption: 'Item',\r\n    twoJsonProp: 'items',\r\n    threeCaption: 'Metric',\r\n    threeJsonProp: 'items',\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    //this.one = undefined;\r\n    //this.two = undefined;\r\n    //this.three = undefined;\r\n    //this.date = undefined;\r\n    //this.chartType = undefined;\r\n\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleToolBar: this._toggleWithToolbar,\r\n      onAbout: this._clickInfoWithToolbar\r\n    })\r\n\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { isOptions: true }\r\n    )\r\n    this._commandButtons = this._crCommandsWithLoad(this)\r\n    this._chartOptions = RouterOptions.crOptions(props)\r\n\r\n    this.state = {\r\n      ...this._isWithInitialState(),\r\n      isOptions: false,\r\n      isShowDate: false,\r\n      ...crDateConfig('EMPTY')\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _isCategory = () => {\r\n    return RouterOptions.isCategory(this.chartType)\r\n  }\r\n\r\n  _updateForDate = () => {\r\n    this.date = undefined;\r\n    const { dfProps={} } = this.props\r\n        , { mapFrequency, mapDateDf } = dfProps;\r\n    const _frequency = (this.two)\r\n             ? mapFrequency\r\n             : MAP_FREQUENCY_DF\r\n         , dateConfig = (_frequency)\r\n             ? crDateConfig(_frequency, mapDateDf)\r\n             : crDateConfig('EMPTY')\r\n\r\n    this.setState({\r\n       isShowDate: true,\r\n       ...dateConfig\r\n    });\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n  _handleSelectTwo = (two) => {\r\n    this.two = two;\r\n    if (this._isCategory()) {\r\n      this._updateForDate();\r\n    }\r\n  }\r\n  _handleSelectThree = (three) => {\r\n    this.three = three;\r\n  }\r\n\r\n  _handleSelectChartType = (chartType) => {\r\n    this.chartType = chartType;\r\n    if (this._isCategory()) {\r\n      this._updateForDate();\r\n    } else {\r\n      this.setState({ isShowDate : false });\r\n    }\r\n  }\r\n  _onRegColor = (comp) => {\r\n    this.colorComp = comp\r\n  }\r\n\r\n  _handleSelectDate = (date) => {\r\n    this.date = date;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const {\r\n             oneCaption, twoCaption, threeCaption,\r\n             msgOnNotSelected\r\n           } = this.props;\r\n     const msg = [];\r\n\r\n     if (!this._isCategory() && !this.one) {\r\n       msg.push(msgOnNotSelected(oneCaption));\r\n     }\r\n     if (!this.two) {\r\n       msg.push(msgOnNotSelected(twoCaption));\r\n     }\r\n     if (!this.three) {\r\n       msg.push(msgOnNotSelected(threeCaption));\r\n     }\r\n\r\n     msg.isValid = (msg.length === 0)\r\n       ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const {\r\n      one, two, three, dialogOptions,\r\n      chartType, colorComp,\r\n      compSelect1, compSelect2\r\n    } = this\r\n    , seriaColor = colorComp\r\n        ? colorComp.getColor()\r\n        : undefined\r\n    , date = this._getDateWithForDate();\r\n\r\n    return this.props.loadFn(\r\n      this.props, {\r\n        one: one,\r\n        group: two,\r\n        metric: three,\r\n        dialogOptions,\r\n        chartType, seriaColor,\r\n        date,\r\n        selectOptions: [\r\n          compSelect1.getOptions(),\r\n          compSelect2.getOptions()\r\n        ]\r\n      }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  _refSelect1 = (comp) => {\r\n    this.compSelect1 = comp\r\n  }\r\n  _refSelect2 = (comp) => {\r\n    this.compSelect2 = comp\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow, onFront,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp,\r\n           threeCaption, threeURI, threeJsonProp,\r\n           noDate\r\n          } = this.props\r\n        , {\r\n            isToolbar, isOptions,\r\n            isShowLabels, isShowDate,\r\n            dateDefault, dateOptions,\r\n            validationMessages\r\n          } = this.state;\r\n    return(\r\n        <D.DraggableDialog\r\n             isShow={isShow}\r\n             caption={caption}\r\n             menuModel={this._menuMore}\r\n             commandButtons={this._commandButtons}\r\n             onShowChart={onShow}\r\n             onFront={onFront}\r\n             onClose={this._handleClose}\r\n         >\r\n             <D.Toolbar\r\n               isShow={isToolbar}\r\n               buttons={this.toolbarButtons}\r\n             />\r\n             <ModalOptions\r\n               isShow={isOptions}\r\n               toggleOption={this._toggleOptionWithToolbar}\r\n               onClose={this._hideOptionsWithToolbar}\r\n             />\r\n             <D.SelectWithLoad\r\n               ref={this._refSelect1}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames=\"Countries\"\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n             <D.SelectWithLoad\r\n               ref={this._refSelect2}\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={twoURI}\r\n               jsonProp={twoJsonProp}\r\n               caption={twoCaption}\r\n               optionNames=\"Items\"\r\n               onSelect={this._handleSelectTwo}\r\n             />\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={threeURI}\r\n               jsonProp={threeJsonProp}\r\n               caption={threeCaption}\r\n               optionNames=\"Metrics\"\r\n               onSelect={this._handleSelectThree}\r\n             />\r\n             <D.RowChart\r\n               isShowLabels={isShowLabels}\r\n               options={this._chartOptions}\r\n               onSelectChart={this._handleSelectChartType}\r\n               onRegColor={this._onRegColor}\r\n             />\r\n             {\r\n               !noDate &&\r\n               <D.ShowHide isShow={isShowDate}>\r\n                 <D.RowInputSelect\r\n                    isShowLabels={isShowLabels}\r\n                    caption=\"For Date\"\r\n                    placeholder={dateDefault}\r\n                    options={dateOptions}\r\n                    onSelect={this._handleSelectDate}\r\n                 />\r\n               </D.ShowHide>\r\n             }\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogEurostat3A\r\n"],"file":"DialogEurostat3A.js"}