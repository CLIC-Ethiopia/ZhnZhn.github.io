{"version":3,"sources":["../../../src/components/eurostat/ModalToggle.jsx"],"names":["TOGGLE_CHECKBOX_COLOR","CAPTION_CHECKBOX_COLOR","S","ROW","display","justifyContent","INLINE","CAPTION","maxWidth","CHB_CAPTION","paddingLeft","CheckBoxList","selectProps","crIsId","onToggle","onCheckCaption","onUnCheckCaption","map","item","index","id","STYLE","ROW_CB","caption","ModalToggle","isShow","style","className","CL","isFd","isShowFd","isCh","isShowDate","isShowChart","noForDate","onClose","_toggleFd","bind","_toggleChart","_toggleDate","ROOT"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport STYLE from './Modal.Style'\r\n\r\nconst TOGGLE_CHECKBOX_COLOR = '#1b75bb';\r\nconst CAPTION_CHECKBOX_COLOR = '#a487d4';\r\n\r\nconst S = {\r\n  ROW: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  INLINE: {\r\n    display: 'inline-block'\r\n  },\r\n  CAPTION: {\r\n    maxWidth: 150\r\n  },\r\n  CHB_CAPTION: {\r\n    display: 'inline-block',\r\n    paddingLeft: 40\r\n  }\r\n};\r\n\r\nconst CheckBoxList = ({\r\n  selectProps,\r\n  crIsId,\r\n  onToggle,\r\n  onCheckCaption,\r\n  onUnCheckCaption\r\n}) => selectProps\r\n .map((item, index) => (\r\n    <div style={S.ROW} key={item.id}>\r\n      <D.RowCheckBox\r\n        initValue={true}\r\n        rootStyle={{ ...STYLE.ROW_CB, ...S.INLINE}}\r\n        checkedColor={TOGGLE_CHECKBOX_COLOR}\r\n        caption={item.caption}\r\n        captionStyle={S.CAPTION}\r\n        onToggle={() => onToggle(crIsId(item.id))}\r\n      />\r\n      <D.RowCheckBox\r\n        initValue={index === 0}\r\n        rootStyle={S.CHB_CAPTION}\r\n        checkedColor={CAPTION_CHECKBOX_COLOR}\r\n        onCheck={() => onCheckCaption(index)}\r\n        onUnCheck={() => onUnCheckCaption(index)}\r\n      />\r\n  </div>\r\n));\r\n\r\n\r\nconst ModalToggle = ({\r\n  isShow, style, className=STYLE.CL,\r\n  selectProps=[],\r\n  isFd, isShowFd,\r\n  isCh=true, isShowDate, isShowChart,\r\n  noForDate=false,\r\n  crIsId,\r\n  onToggle,\r\n  onCheckCaption, onUnCheckCaption,\r\n  onClose\r\n}) => {\r\n  const _toggleFd = useCallback(\r\n    onToggle.bind(null, 'isShowFd'), [])\r\n  , _toggleChart = useCallback(\r\n    onToggle.bind(null, 'isShowChart'), [])\r\n  , _toggleDate = useCallback(\r\n    onToggle.bind(null, 'isShowDate'), []);\r\n  return (\r\n  <D.ModalPopup\r\n    isShow={isShow}\r\n    style={{...STYLE.ROOT, ...style}}\r\n    className={className}\r\n    onClose={onClose}\r\n  >\r\n    <CheckBoxList\r\n      selectProps={selectProps}\r\n      crIsId={crIsId}\r\n      onToggle={onToggle}\r\n      onCheckCaption={onCheckCaption}\r\n      onUnCheckCaption={onUnCheckCaption}\r\n    />\r\n    { isFd && <D.RowCheckBox\r\n        key=\"isShowFd\"\r\n        value={isShowFd}\r\n        rootStyle={STYLE.ROW_CB}\r\n        checkedColor={TOGGLE_CHECKBOX_COLOR}\r\n        caption=\"From Date\"\r\n        onToggle={_toggleFd}\r\n      />\r\n    }\r\n    { isCh && <D.RowCheckBox\r\n        key=\"isShowChart\"\r\n        value={isShowChart}\r\n        rootStyle={STYLE.ROW_CB}\r\n        checkedColor={TOGGLE_CHECKBOX_COLOR}\r\n        caption=\"Chart\"\r\n        onToggle={_toggleChart}\r\n      />\r\n    }\r\n    { !noForDate && <D.RowCheckBox\r\n        key=\"isForDate\"\r\n        value={isShowDate}\r\n        rootStyle={STYLE.ROW_CB}\r\n        checkedColor={TOGGLE_CHECKBOX_COLOR}\r\n        caption=\"For Date\"\r\n        onToggle={_toggleDate}\r\n      />\r\n    }\r\n  </D.ModalPopup>\r\n);\r\n}\r\n\r\nexport default ModalToggle\r\n"],"file":"ModalToggle.js"}