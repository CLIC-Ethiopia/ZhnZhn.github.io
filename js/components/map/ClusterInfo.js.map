{"version":3,"sources":["../../../src/components/map/ClusterInfo.jsx"],"names":["COLOR_MAX","COLOR_MIN","COLOR_EQUAL","SPOT_COLORS","S","CAPTION","position","opacity","lineHeight","padding","marginBottom","CAPTION_BT","top","right","fontSize","fontWeight","cursor","ITEM_ROOT","ITEM_TITLE","display","width","ITEM_VALUE","Caption","color","from","to","onClick","background","Item","title","value","ClusterItem","props","_handleClickItem","setState","prevState","isShowChart","data","point","seria","pointIndex","length","state","index","render","isShowRange","_maxLabel","_minLabel","id","Component","Cluster","cluster","points","map","ClusterInfo","_handleToggleRange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport ShowHide from '../zhn/ShowHide'\r\nimport {\r\n  Sparklines,\r\n  SparklinesLine,\r\n  //SparklinesSpots,\r\n  SparklinesSpot,\r\n  SparklinesMaxLabel,\r\n  SparklinesMinLabel\r\n} from '../zhn-sparklines/Sparklines'\r\n\r\nconst COLOR_MAX = \"#8bc34a\";\r\nconst COLOR_MIN = \"#f44336\";\r\nconst COLOR_EQUAL = 'black';\r\nconst SPOT_COLORS = {'-1': COLOR_MIN, '0': COLOR_EQUAL, '1': COLOR_MAX };\r\n\r\nconst S = {\r\n  CAPTION: {\r\n    position: 'relative',\r\n    opacity: 0.7,\r\n    lineHeight: 1.8,\r\n    padding: '3px',\r\n    marginBottom: '5px'\r\n  },\r\n  CAPTION_BT: {\r\n    position: 'absolute',\r\n    top: '4px',\r\n    right: '8px',\r\n    fontSize: '18px',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer'\r\n  },\r\n  ITEM_ROOT: {\r\n    padding: '3px',\r\n    cursor: 'pointer'\r\n  },\r\n  ITEM_TITLE: {\r\n    display: 'inline-block',\r\n    width: '30px',\r\n  },\r\n  ITEM_VALUE: {\r\n    display: 'inline-block',\r\n    float: 'right'\r\n  }\r\n}\r\n\r\n\r\nconst Caption = ({ color, from, to, onClick }) => (\r\n  <p style={{ ...S.CAPTION, ...{ background: color } }}>\r\n    <span>{from}&nbsp;&ndash;&nbsp;{to}</span>\r\n    <span style={S.CAPTION_BT} onClick={onClick}>*</span>\r\n  </p>\r\n);\r\n\r\n\r\nconst Item = ({ title, value, onClick }) => (\r\n  <p\r\n    style={S.ITEM_ROOT}\r\n    onClick={onClick}\r\n  >\r\n    <span style={S.ITEM_TITLE}>\r\n       {title}\r\n    </span>\r\n    <span style={S.ITEM_VALUE}>\r\n      {value}\r\n    </span>\r\n  </p>\r\n);\r\n\r\nclass ClusterItem extends Component {\r\n  /*\r\n  static propTypes = {\r\n    point: PropTypes.shape({\r\n      0: PropTypes.number,\r\n      id: PropTypes.string,\r\n      seria: PropTypes.shape({\r\n        data: PropTypes.array\r\n      })\r\n    }),\r\n    color: PropTypes.string,\r\n    index: PropTypes.number,\r\n    isShowRange: PropTypes.bool\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.data = props.point.seria.data\r\n    this.pointIndex = this.data.length - 1\r\n    this.state = {\r\n      isShowChart: (props.index<3) ? true : false\r\n    }\r\n  }\r\n\r\n  _handleClickItem = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isShowChart: !prevState.isShowChart\r\n      };\r\n    })\r\n  }\r\n\r\n  render(){\r\n      const { point, color, isShowRange } = this.props\r\n          , { isShowChart } = this.state\r\n          , _maxLabel = (isShowRange)\r\n              ? <SparklinesMaxLabel color={COLOR_MAX} fontSize={14} />\r\n              : <span/>\r\n          , _minLabel = (isShowRange)\r\n              ? <SparklinesMinLabel color={COLOR_MIN} fontSize={14} />\r\n              : <span/>;\r\n\r\n      return (\r\n        <div>\r\n          <Item\r\n            title={point.id}\r\n            value={point[0]}\r\n            onClick={this._handleClickItem}\r\n          />\r\n          <ShowHide isShow={isShowChart}>\r\n            <Sparklines\r\n              height={32}\r\n              width={140}\r\n              svgHeight={32}\r\n              svgWidth={140}\r\n              data={this.data}\r\n              margin={3}\r\n              //marginLeft={20}\r\n            >\r\n               {_maxLabel}\r\n               {_minLabel}\r\n               <SparklinesLine color={color} />\r\n               {/*<SparklinesSpots />*/}\r\n               <SparklinesSpot\r\n                   pointIndex={this.pointIndex}\r\n                   size={3}\r\n                   spotColors={SPOT_COLORS}\r\n                 />\r\n            </Sparklines>\r\n        </ShowHide>\r\n       </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst Cluster = ({ cluster,color, isShowRange }) => {\r\n  const points = cluster.points || [];\r\n  return (\r\n    <div>\r\n      {\r\n        points.map( (point, index) => {\r\n          return (\r\n            <ClusterItem\r\n               key={point.id}\r\n               {...{ point, color, index, isShowRange }}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n/*\r\nCluster.propTypes = {\r\n  cluster: PropTypes.shape({\r\n    points: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n           id: PropTypes.string\r\n    }))\r\n  }),\r\n  color: PropTypes.string\r\n}\r\n*/\r\n\r\nclass ClusterInfo extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      isShowRange: false\r\n    }\r\n  }\r\n  _handleToggleRange = () => {\r\n    this.setState(prevState => ({isShowRange: !prevState.isShowRange }))\r\n  }\r\n\r\n  render(){\r\n    const  { cluster, color, from, to } = this.props\r\n        ,  { isShowRange } = this.state;\r\n    return  (\r\n      <div>\r\n        <Caption {...{ color, from, to, onClick:this._handleToggleRange } } />\r\n        <Cluster {...{ cluster, color, isShowRange } } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/*\r\nClusterInfo.propTypes = {\r\n  cluster: PropTypes.object,\r\n  color: PropTypes.string,\r\n  from: PropTypes.string,\r\n  to: PropTypes.string\r\n}\r\n*/\r\n\r\nexport default ClusterInfo\r\n"],"file":"ClusterInfo.js"}