{"version":3,"sources":["../../../src/components/browser-container/BrowserContainer.jsx"],"names":["BrowserContainer","props","_onStore","actionType","data","initBrowserAction","setState","prevState","elBrowsers","unshift","_renderBrowsers","map","cloneElement","Comp","state","store","unsubscribe","listen","showBrowserAction","updateBrowserAction","showDialogAction","onCloseDialog","ECONOMIC"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAEA;;;;AACA;;;;;;IAEMA,gB;;;AACJ,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAgBlBC,QAhBkB,GAgBP,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAC9B,UAAID,eAAe,MAAKF,KAAL,CAAWI,iBAA9B,EAAgD;AAC9C,cAAKC,QAAL,CAAc,qBAAa;AACzBC,oBAAUC,UAAV,CAAqBC,OAArB,CAA6BL,IAA7B;AACA,iBAAOG,SAAP;AACD,SAHD;AAID;AACH,KAvBiB;;AAAA,UAyBlBG,eAzBkB,GAyBA,UAACF,UAAD,EAAgB;AAChC,aAAOA,WAAWG,GAAX,CAAe;AAAA,eAAQ,gBAAMC,YAAN,CAAmBC,IAAnB,CAAR;AAAA,OAAf,CAAP;AACD,KA3BiB;;AAEhB,UAAKC,KAAL,GAAa;AACXN,kBAAa;AADF,KAAb;AAFgB;AAKjB;;;;wCAEkB;AAAA,UACTO,KADS,GACC,KAAKd,KADN,CACTc,KADS;;AAEjB,WAAKC,WAAL,GAAmBD,MAAME,MAAN,CAAa,KAAKf,QAAlB,CAAnB;AACD;;;2CAEqB;AACpB,WAAKc,WAAL;AACD;;;6BAeO;AAAA,mBAII,KAAKf,KAJT;AAAA,UAEEc,KAFF,UAEEA,KAFF;AAAA,UAESG,iBAFT,UAESA,iBAFT;AAAA,UAE4BC,mBAF5B,UAE4BA,mBAF5B;AAAA,UAGEC,gBAHF,UAGEA,gBAHF;AAAA,UAGoBC,aAHpB,UAGoBA,aAHpB;AAAA,UAKEb,UALF,GAKiB,KAAKM,KALtB,CAKEN,UALF;;;AAON,aACE;AAAA;AAAA,UAAK,WAAU,eAAf;AACK;AACG,uBAAa,kBAAYc,QAD5B;AAEG,mBAAQ,uBAFX;AAGG,iBAAOP,KAHV;AAIG,sBAAYG,iBAJf;AAKG,wBAAcC;AALjB,UADL;AAQM,aAAKT,eAAL,CAAqBF,UAArB,CARN;AAUK;AACG,qBAAW,CADd;AAEG,iBAAOO,KAFV;AAGG,sBAAYK,gBAHf;AAIG,yBAAeC;AAJlB;AAVL,OADF;AAmBD;;;;;kBAGYrB,gB","file":"BrowserContainer.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { BrowserType } from '../../constants/Type';\r\n\r\nimport QuandlBrowser from '../quandl-browser/QuandlBrowser';\r\nimport DialogContainer from '../zhn-containers/DialogContainer';\r\n\r\nclass BrowserContainer extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      elBrowsers : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props;\r\n    this.unsubscribe = store.listen(this._onStore)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n  _onStore = (actionType, data) => {\r\n     if (actionType === this.props.initBrowserAction){\r\n       this.setState(prevState => {\r\n         prevState.elBrowsers.unshift(data)\r\n         return prevState;\r\n       })\r\n     }\r\n  }\r\n\r\n  _renderBrowsers = (elBrowsers) => {\r\n    return elBrowsers.map(Comp => React.cloneElement(Comp));\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            store, showBrowserAction, updateBrowserAction,\r\n            showDialogAction, onCloseDialog\r\n          } = this.props\r\n        , { elBrowsers } = this.state;\r\n\r\n    return (\r\n      <div className=\"hrz-container\">\r\n           <QuandlBrowser\r\n              browserType={BrowserType.ECONOMIC}\r\n              caption=\"Quandl: World Economy\"\r\n              store={store}\r\n              showAction={showBrowserAction}\r\n              updateAction={updateBrowserAction}\r\n           />\r\n           {this._renderBrowsers(elBrowsers)}\r\n\r\n           <DialogContainer\r\n              maxDialog={3}\r\n              store={store}\r\n              showAction={showDialogAction}\r\n              onCloseDialog={onCloseDialog}\r\n           />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowserContainer\r\n"]}