{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["CL","ELL","S","CAPTION","display","width","paddingLeft","color","fontSize","fontWeight","lineHeight","ITEM_ID","verticalAlign","DESCR","paddingRight","whiteSpace","wordWrap","AlertDialog","nextProps","nextState","props","isShow","data","onClose","alertCaption","alertItemId","alertDescr","_caption","rowDiv","defaultProps","propTypes","bool","shape","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,KAAK;AACTC,OAAK;AADI,CAAX;;AAIA,IAAMC,IAAI;AACRC,WAAU;AACRC,aAAU,cADF;AAERC,WAAQ,OAFA;AAGRC,iBAAc,MAHN;AAIRC,WAAQ,SAJA;AAKRC,cAAU,MALF;AAMRC,gBAAa,MANL;AAORC,gBAAa;AAPL,GADF;AAURC,WAAU;AACRN,WAAO,OADC;AAERE,WAAO,SAFC;AAGRE,gBAAa,MAHL;AAIRG,mBAAe;AAJP,GAVF;AAgBRC,SAAO;AACLN,WAAO,MADF;AAELF,WAAO,OAFF;AAGLC,iBAAa,MAHR;AAILQ,kBAAc,KAJT;AAKLL,gBAAY,MALP;AAMLC,gBAAY,GANP;AAOLK,gBAAY,UAPP;AAQLC,cAAU;AARL;AAhBC,CAAV;;IA4BMC,W;;;;;;;;;;0CAekBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKE,KAAnB,IAA4BF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAEO;AAAA,mBAC4B,KAAKD,KADjC;AAAA,UACEC,MADF,UACEA,MADF;AAAA,UACUC,IADV,UACUA,IADV;AAAA,UACgBC,OADhB,UACgBA,OADhB;AAAA,+BAEsDD,IAFtD,CAEEE,YAFF;AAAA,UAEEA,YAFF,sCAEe,MAFf;AAAA,8BAEsDF,IAFtD,CAEuBG,WAFvB;AAAA,UAEuBA,WAFvB,qCAEmC,EAFnC;AAAA,UAEuCC,UAFvC,GAEsDJ,IAFtD,CAEuCI,UAFvC;AAAA,UAGAC,QAHA,GAGWH,eAAe,IAH1B;;AAIN,aACE;AAAA;AAAA;AACE,mBAAQ,OADV;AAEE,kBAAQH,MAFV;AAGE,mBAASE;AAHX;AAKG;AAAA;AAAA,YAAK,OAAO,uBAAMK,MAAlB;AACG;AAAA;AAAA,cAAM,OAAO1B,EAAEC,OAAf;AACGwB,oBADH;AAEE;AAAA;AAAA;AACE,2BAAW3B,GAAGC,GADhB;AAEE,uBAAOC,EAAES,OAFX;AAGE,uBAAOc;AAHT;AAKGA;AALH;AAFF;AADH,SALH;AAiBG;AAAA;AAAA,YAAK,OAAO,uBAAMG,MAAlB;AACG;AAAA;AAAA,cAAG,OAAO1B,EAAEW,KAAZ;AACGa;AADH;AADH;AAjBH,OADF;AAyBD;;;4BAxCMG,Y,GAAe;AACpBP,QAAM;AADc,C;AAXlBL,W,CAEGa,S,2CAAY;AACjBT,UAAQ,oBAAUU,IADD;AAEjBT,QAAM,oBAAUU,KAAV,CAAgB;AACpBR,kBAAc,oBAAUS,MADJ;AAEpBR,iBAAa,oBAAUQ,MAFH;AAGpBP,gBAAY,oBAAUO;AAHF,GAAhB,CAFW;AAOjBV,WAAS,oBAAUW;AAPF,C;kBAoDNjB,W","file":"AlertDialog.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport STYLE from '../styles/DialogStyles'\r\n\r\nconst CL = {\r\n  ELL: 'ellipsis'\r\n};\r\n\r\nconst S = {\r\n  CAPTION : {\r\n    display : 'inline-block',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    width: '120px',\r\n    color: '#a487d4',\r\n    fontWeight : 'bold',\r\n    verticalAlign: 'bottom'\r\n  },\r\n  DESCR: {\r\n    color: 'gray',\r\n    width: '400px',\r\n    paddingLeft: '10px',\r\n    paddingRight: '8px',\r\n    fontWeight: 'bold',\r\n    lineHeight: 1.4,\r\n    whiteSpace: 'pre-line',\r\n    wordWrap: 'break-word'\r\n  }\r\n}\r\n\r\nclass AlertDialog extends Component{\r\n\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      alertCaption: PropTypes.string,\r\n      alertItemId: PropTypes.string,\r\n      alertDescr: PropTypes.string\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data, onClose } = this.props\r\n        , { alertCaption='Item', alertItemId='', alertDescr } = data\r\n        , _caption = alertCaption + ': ';\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Alert\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={STYLE.rowDiv}>\r\n            <span style={S.CAPTION}>\r\n              {_caption}\r\n              <span\r\n                className={CL.ELL}\r\n                style={S.ITEM_ID}\r\n                title={alertItemId}\r\n              >\r\n                {alertItemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={STYLE.rowDiv}>\r\n            <p style={S.DESCR}>\r\n              {alertDescr}\r\n            </p>\r\n         </div>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialog\r\n"]}