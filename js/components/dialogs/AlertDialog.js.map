{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["styles","Styles","CAPTION","display","width","paddingLeft","color","fontSize","fontWeight","lineHeight","ITEM_ID","DESCR","whiteSpace","ELLIPSIS","AlertDialog","props","nextProps","nextState","isShow","data","onClose","alertCaption","alertItemId","alertDescr","_alertItemId","substring","rowDiv","displayName"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,+BAAN;;AAEA,IAAMC,SAAS;AACbC,WAAU;AACRC,aAAU,cADF;AAERC,WAAQ,OAFA;AAGRC,iBAAc,MAHN;AAIRC,WAAQ,SAJA;AAKRC,cAAU,MALF;AAMRC,gBAAa,MANL;AAORC,gBAAa;AAPL,GADG;AAUbC,WAAU;AACRJ,WAAO,uBADC;AAERE,gBAAa;AAFL,GAVG;AAcbG,SAAQ;AACNL,WAAO,MADD;AAENF,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAING,gBAAY,MAJN;AAKNC,gBAAa,GALP;AAMNG,gBAAY;AANN;AAdK,CAAf;;AAwBA,IAAMC,WAAW,KAAjB;;IAEMC,W;;;AAEH,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;AAEjB;;;;0CAEoBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKD,KAAnB,IAA4BC,UAAUE,MAAV,KAAqB,KAAKH,KAAL,CAAWG,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAEO;AAAA,mBAC0B,KAAKH,KAD/B;AAAA,UACCG,MADD,UACCA,MADD;AAAA,UACSC,IADT,UACSA,IADT;AAAA,UACeC,OADf,UACeA,OADf;AAAA,UAECC,YAFD,GAE6CF,IAF7C,CAECE,YAFD;AAAA,8BAE6CF,IAF7C,CAEeG,WAFf;AAAA,UAEeA,WAFf,qCAE2B,EAF3B;AAAA,UAE+BC,UAF/B,GAE6CJ,IAF7C,CAE+BI,UAF/B;AAAA,UAGAC,YAHA,GAGeF,YAAYG,SAAZ,CAAsB,CAAtB,EAAwB,EAAxB,IAA8BZ,QAH7C;;AAIN,aACE;AAAA;AAAA;AACE,mBAAQ,OADV;AAEE,kBAAQK,MAFV;AAGE,mBAASE;AAHX;AAKG;AAAA;AAAA,YAAK,OAAOpB,OAAO0B,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,cAAM,OAAOzB,OAAOC,OAApB;AACGmB,2BAAe,IADlB;AAEE;AAAA;AAAA,gBAAM,OAAOpB,OAAOS,OAApB,EAA6B,OAAOY,WAApC;AACGE;AADH;AAFF;AADH,SALH;AAaG;AAAA;AAAA,YAAK,OAAOxB,OAAO0B,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,cAAG,OAAOzB,OAAOU,KAAjB;AAAyBY;AAAzB;AADH;AAbH,OADF;AAoBD;;;;;;AAGHT,YAAYa,WAAZ,GAA0B,aAA1B;;kBAEeb,W","file":"AlertDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst Styles = {\r\n  CAPTION : {\r\n    display : 'inline-block',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    color: 'rgba(164, 135, 212,1)',\r\n    fontWeight : 'bold'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace: 'pre-line'\r\n  }\r\n}\r\n\r\nconst ELLIPSIS = '...';\r\n\r\nclass AlertDialog extends Component{\r\n\r\n   constructor(props){\r\n     super();\r\n   }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n        , {alertCaption, alertItemId='', alertDescr} = data\r\n        , _alertItemId = alertItemId.substring(0,20) + ELLIPSIS\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Alert\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv} key=\"1\">\r\n            <span style={Styles.CAPTION}>\r\n              {alertCaption + ': '}\r\n              <span style={Styles.ITEM_ID} title={alertItemId}>\r\n                {_alertItemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={styles.rowDiv} key=\"2\">\r\n            <p style={Styles.DESCR}>{alertDescr}</p>\r\n         </div>\r\n\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nAlertDialog.displayName = 'AlertDialog';\r\n\r\nexport default AlertDialog\r\n"]}