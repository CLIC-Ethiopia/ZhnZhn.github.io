{"version":3,"sources":["../../../../src/components/dialogs/rows/SelectOneTwo.jsx"],"names":["_isFn","fn","SelectOneTwo","withLoadOptions","state","isLoading","isLoadingFailed","oneOptions","twoOptions","one","two","_loadOptions","props","uri","oneJsonProp","_handlerWithLoadOptions","_setTwoOptions","setState","_hSelectOne","onSelectOne","columns","_isDfColumns","_hSelectTwo","componentDidMount","componentDidUpdate","prevProps","prevState","isShow","componetWillUnmount","_unmountWithLoadOptions","render","isShowLabels","oneCaption","oneOptionNames","isHideTwo","twoCaption","getValidation","msg","msgOnNotSelected","push","length","isValid","getValues","Component","defaultProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\nimport ShowHide from '../../zhn/ShowHide'\r\nimport withLoadOptions from '../decorators/withLoadOptions';\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\n@withLoadOptions\r\nclass SelectOneTwo extends Component {\r\n\r\n  static defaultProps = {\r\n    isShow: true,\r\n    isHideTwo: false,\r\n    oneOptionNames: 'Items',\r\n    msgOnNotSelected: (item) => `${item} is not selected`\r\n  }\r\n\r\n  state = {\r\n    isLoading: false,\r\n    isLoadingFailed: false,\r\n    oneOptions: [],\r\n    twoOptions: []\r\n  }\r\n  one = null\r\n  two = null\r\n\r\n  /*\r\n  constructor(props){\r\n    super(props);\r\n    this.one = null;\r\n    this.two = null;\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n    this._loadOptions();\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (prevProps !== this.props){\r\n       if (this.state.isLoadingFailed && this.props.isShow){\r\n         this._loadOptions();\r\n       }\r\n    }\r\n  }\r\n  componetWillUnmount(){\r\n    this._unmountWithLoadOptions();\r\n  }\r\n\r\n  _loadOptions = () => {\r\n    const { uri, oneJsonProp } = this.props;\r\n    this._handlerWithLoadOptions(\r\n      'oneOptions', uri, oneJsonProp\r\n    );\r\n  }\r\n\r\n  _setTwoOptions = (twoOptions=[]) => {\r\n    this.two = null;\r\n    this.setState({ twoOptions });\r\n  }\r\n\r\n  _hSelectOne = (one) => {\r\n    const { onSelectOne } = this.props;\r\n    this.one = one;\r\n    if (one) {\r\n      if (one.columns) {\r\n        this._setTwoOptions(one.columns)\r\n      } else if (!this._isDfColumns) {\r\n        this._setTwoOptions()\r\n      }\r\n    } else if (!this._isDfColumns) {\r\n      this._setTwoOptions()\r\n    }\r\n    if (_isFn(onSelectOne)) {\r\n      onSelectOne(one)\r\n    }\r\n  }\r\n  _hSelectTwo = (two) => {\r\n    this.two = two;\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      isShowLabels,\r\n      oneCaption, oneOptionNames,\r\n      isHideTwo,\r\n      twoCaption\r\n    } = this.props\r\n    , {\r\n      isLoading, isLoadingFailed,\r\n      oneOptions,\r\n      twoOptions\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           isShowLabels={isShowLabels}\r\n           caption={oneCaption}\r\n           options={oneOptions}\r\n           optionNames={oneOptionNames}\r\n           isLoading={isLoading}\r\n           isLoadingFailed={isLoadingFailed}\r\n           onLoadOption={this._loadOptions}\r\n           onSelect={this._hSelectOne}\r\n         />\r\n         <ShowHide isShow={!isHideTwo}>\r\n           <RowInputSelect\r\n             isShowLabels={isShowLabels}\r\n             caption={twoCaption}\r\n             options={twoOptions}\r\n             onSelect={this._hSelectTwo}\r\n           />\r\n         </ShowHide>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getValidation() {\r\n     const msg = []\r\n     , { oneCaption, twoCaption, msgOnNotSelected } = this.props;\r\n     if (!this.one){\r\n       msg.push(msgOnNotSelected(oneCaption));\r\n     }\r\n     if (!this.two){\r\n       msg.push(msgOnNotSelected(twoCaption));\r\n     }\r\n\r\n     if (msg.length>0){\r\n       return { isValid: false, msg };\r\n     }\r\n     return { isValid: true };\r\n  }\r\n\r\n  getValues() {\r\n    return {\r\n      one: this.one,\r\n      two: this.two\r\n    };\r\n  }\r\n}\r\n\r\nexport default SelectOneTwo\r\n"],"file":"SelectOneTwo.js"}