{"version":3,"sources":["../../../../src/components/dialogs/rows/RowCheckBox.jsx"],"names":["CL","TH_ID","CHECKED_COLOR","S","ROOT","paddingTop","paddingLeft","CAPTION","display","color","fontSize","fontWeight","userSelect","cursor","CHECKED","_isFn","fn","_isUndefined","v","_crCheckedStyle","RowCheckBox","props","_hCheck","onCheck","onToggle","state","setState","isChecked","_hUnCheck","onUnCheck","_hToggle","_is","value","initValue","render","theme","rootStyle","checkedColor","caption","captionStyle","TS","getStyle","_value","_style","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../../hoc/withTheme'\r\n\r\nimport SvgCheckBox from '../../zhn/SvgCheckBox'\r\n\r\nconst CL = \"bt-chb\";\r\nconst TH_ID = 'ROW_CHECKBOX';\r\n\r\nconst CHECKED_COLOR = '#1b2836';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    paddingTop: 6,\r\n    paddingLeft: 16\r\n  },\r\n  CAPTION: {\r\n    display: 'inline-block',\r\n    color: 'grey',\r\n    paddingLeft: 12,\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n    cursor: 'pointer'\r\n  },\r\n  CHECKED: {\r\n    color: CHECKED_COLOR\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn == 'function';\r\nconst _isUndefined = v => typeof v === 'undefined';\r\n\r\nconst _crCheckedStyle = color => ({\r\n  color\r\n});\r\n\r\nclass RowCheckBox extends Component {\r\n  /*\r\n  static propTypes = {\r\n    rootStyle : PropTypes.object,\r\n    checkedRestStroke: PropTypes.string,\r\n    checkedRestFill: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    styleCheckedCaption: PropTypes.object,\r\n    initValue: PropTypes.bool,\r\n    value: PropTypes.bool,\r\n    onCheck: PropTypes.func,\r\n    onUnCheck: PropTypes.func,\r\n    onToggle: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    checkedColor: CHECKED_COLOR\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    if ( _isUndefined(props.value) ) {\r\n      this.state = {\r\n        isChecked: !!props.initValue\r\n      }\r\n    }\r\n  }\r\n\r\n  _hCheck = () => {    \r\n    const { onCheck, onToggle } = this.props;\r\n    if (_isFn(onCheck)){\r\n      onCheck()\r\n    } else if (_isFn(onToggle)) {\r\n      onToggle()\r\n    }\r\n    if (this.state) {\r\n      this.setState({ isChecked: true })\r\n    }\r\n  }\r\n  _hUnCheck = () => {\r\n    const { onUnCheck, onToggle } = this.props;\r\n    if (_isFn(onUnCheck)){\r\n      onUnCheck()\r\n    } else if (_isFn(onToggle)) {\r\n      onToggle()\r\n    }\r\n    if (this.state) {\r\n      this.setState({ isChecked: false })\r\n    }\r\n  }\r\n  _hToggle = () => {\r\n    const _is = this.state\r\n      ? this.state.isChecked\r\n      : this.props.value;\r\n    if (_is) {\r\n      this._hUnCheck()\r\n    } else {\r\n      this._hCheck()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      theme,\r\n      rootStyle,\r\n      checkedColor,\r\n      caption,\r\n      captionStyle,\r\n      value\r\n    } = this.props\r\n    , TS = theme.getStyle(TH_ID)\r\n    , _value = this.state\r\n         ? this.state.isChecked\r\n         : value\r\n    , _style = _value\r\n        ? { ...captionStyle, ..._crCheckedStyle(checkedColor) }\r\n        : captionStyle;\r\n    return (\r\n      <div style={{...S.ROOT, ...rootStyle}}>\r\n        <SvgCheckBox\r\n          value={_value}\r\n          checkedRestStroke={checkedColor}\r\n          checkedRestFill={checkedColor}\r\n          checkedColor={TS.CHECKED_COLOR}\r\n          onCheck={this._hCheck}\r\n          onUnCheck={this._hUnCheck}\r\n        />\r\n        {\r\n          caption && (\r\n            <button\r\n              className={CL}\r\n              tabIndex=\"-1\"\r\n              style={{...S.CAPTION, ..._style }}\r\n              onClick={this._hToggle}\r\n            >\r\n              {caption}\r\n            </button>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(RowCheckBox)\r\n"],"file":"RowCheckBox.js"}