{"version":3,"sources":["../../../src/components/dialogs/AskDialog.jsx"],"names":["styles","MSG_PREFIX","MSG_SUFFIX","S","MODAL","position","width","height","margin","NAME","color","paddingLeft","paddingRight","DESCR","paddingTop","fontWeight","lineHeight","whiteSpace","CAPTCHA","padding","paddingBottom","AskDialog","props","_handleLoad","bind","commandButtons","onClose","data","options","captchaComp","isOk","showBrowser","browserType","loadStock","chartType","nextProps","nextState","isShow","name","rowDiv","c","propTypes","bool","shape","string","func"],"mappings":"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","file":"AskDialog.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport ActionButton from '../zhn/ActionButton';\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport MathCaptcha from '../zhn-moleculs/MathCaptcha';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nimport BrowserActions from '../../flux/actions/BrowserActions';\r\nimport ChartActions from '../../flux/actions/ChartActions';\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst MSG_PREFIX = \"Would you like load item\"\r\nconst MSG_SUFFIX = \"from url?\";\r\n\r\nconst S = {\r\n  MODAL : {\r\n    position: 'static',\r\n    width: '400px',\r\n    height: '205px',\r\n    margin: '70px auto'\r\n  },\r\n  NAME : {\r\n    color: '#a487d4',\r\n    paddingLeft: '5px',\r\n    paddingRight: '5px'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    paddingTop: '5px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace : 'pre'\r\n  },\r\n  CAPTCHA : {\r\n    padding: '8px',\r\n    paddingBottom : '0px'\r\n  }\r\n}\r\n\r\nclass AskDialog extends Component {\r\n\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     data: PropTypes.shape({\r\n       options: PropTypes.shape({\r\n         chartType: PropTypes.string,\r\n         browserType: PropTypes.string\r\n       })\r\n     }),\r\n     onClose: PropTypes.func\r\n   }\r\n\r\n  constructor(props){\r\n    super();\r\n\r\n    this._handleLoad = this._handleLoad.bind(this)\r\n    this.commandButtons = [\r\n        <ActionButton\r\n          type=\"TypeC\"\r\n          caption=\"Yes, Load\"\r\n          onClick={this._handleLoad}\r\n        />,\r\n        <ActionButton\r\n          type=\"TypeC\"\r\n          caption=\"No, Close\"\r\n          onClick={props.onClose}\r\n        />\r\n    ]\r\n  }\r\n\r\n  _handleLoad(){\r\n    const { data={}, onClose } = this.props\r\n        , { options={} } = data\r\n\r\n    if (this.captchaComp.isOk()){\r\n      BrowserActions.showBrowser(options.browserType)\r\n      ChartActions.loadStock(\r\n        options.chartType,\r\n        options.browserType,\r\n        options\r\n      )\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data={}, onClose } = this.props\r\n        , { options={} } = data\r\n        , { name='' } = options;\r\n\r\n    return (\r\n      <ModalDialog\r\n        style={S.MODAL}\r\n        caption=\"Confirm Load\"\r\n        isShow={isShow}\r\n        commandButtons={this.commandButtons}\r\n        withoutClose={true}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv}>\r\n            <p style={S.DESCR}>\r\n               {MSG_PREFIX}\r\n               <span style={S.NAME}>{name}</span>\r\n               {MSG_SUFFIX}\r\n            </p>\r\n            <MathCaptcha\r\n              ref={c => this.captchaComp = c}\r\n              rootStyle={S.CAPTCHA}\r\n            />\r\n         </div>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AskDialog\r\n"]}