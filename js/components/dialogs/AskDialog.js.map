{"version":3,"sources":["../../../src/components/dialogs/AskDialog.jsx"],"names":["MSG_PREFIX","MSG_SUFFIX","S","MODAL","position","width","height","margin","ROOT_DIV","display","NAME","color","paddingLeft","paddingRight","DESCR","paddingTop","fontWeight","lineHeight","whiteSpace","CAPTCHA","padding","paddingBottom","AskDialog","props","_handleLoad","bind","_commandButtons","onClose","data","options","captchaComp","isOk","crLoadQuery","run","nextProps","nextState","isShow","name","c"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AANA;;AAQA,IAAMA,aAAa,0BAAnB;AACA,IAAMC,aAAa,WAAnB;;AAEA,IAAMC,IAAI;AACRC,SAAQ;AACNC,cAAU,QADJ;AAENC,WAAO,OAFD;AAGNC,YAAQ,OAHF;AAINC,YAAQ;AAJF,GADA;AAORC,YAAU;AACRC,aAAS,OADD;AAERF,YAAQ;AAFA,GAPF;AAWRG,QAAO;AACLC,WAAO,SADF;AAELC,iBAAa,KAFR;AAGLC,kBAAc;AAHT,GAXC;AAgBRC,SAAQ;AACNH,WAAO,MADD;AAENN,WAAQ,OAFF;AAGNO,iBAAc,MAHR;AAING,gBAAY,KAJN;AAKNC,gBAAY,MALN;AAMNC,gBAAa,GANP;AAONC,gBAAa;AAPP,GAhBA;AAyBRC,WAAU;AACRC,aAAS,KADD;AAERC,mBAAgB;AAFR;AAzBF,CAAV;;IA+BMC,S;;;AACH;;;;;;;;;;;;;AAaD,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAGhB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,eAAL,GAAuB,CACnB,+CAAQ,IAAR;AACE,eAAQ;AACR;AAFF,QAGE,WAAW,IAHb;AAIE,eAAS,MAAKF;AAJhB,MADmB,EAOnB,+CAAQ,IAAR;AACE,eAAQ;AACR;AAFF,QAGE,SAASD,MAAMI;AAHjB,MAPmB,CAAvB;AAJgB;AAiBjB;;;;kCAEY;AAAA,mBACkB,KAAKJ,KADvB;AAAA,+BACHK,IADG;AAAA,UACHA,IADG,+BACE,EADF;AAAA,UACMD,OADN,UACMA,OADN;AAAA,0BAEYC,IAFZ,CAEHC,OAFG;AAAA,UAEHA,OAFG,iCAEK,EAFL;;AAGX,UAAI,KAAKC,WAAL,CAAiBC,IAAjB,EAAJ,EAA4B;AACzB,gCACGC,WADH,CACeH,OADf,EAEGI,GAFH;AAGDN;AACD;AACF;;;0CAEqBO,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKX,KAAnB,IAA4BW,UAAUE,MAAV,KAAqB,KAAKb,KAAL,CAAWa,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAEO;AAAA;;AAAA,oBAC+B,KAAKb,KADpC;AAAA,UACEa,MADF,WACEA,MADF;AAAA,iCACUR,IADV;AAAA,UACUA,IADV,gCACe,EADf;AAAA,UACmBD,OADnB,WACmBA,OADnB;AAAA,2BAEiBC,IAFjB,CAEEC,OAFF;AAAA,UAEEA,OAFF,kCAEU,EAFV;AAAA,0BAGcA,OAHd,CAGEQ,IAHF;AAAA,UAGEA,IAHF,iCAGO,EAHP;;AAIN,aACE;AAAA;AAAA;AACE,iBAAOnC,EAAEC,KADX;AAEE,mBAAQ,cAFV;AAGE,kBAAQiC,MAHV;AAIE,0BAAgB,KAAKV,eAJvB;AAKE,wBAAc,IALhB;AAME,mBAASC;AANX;AAQG;AAAA;AAAA,YAAK,OAAOzB,EAAEM,QAAd;AACG;AAAA;AAAA,cAAG,OAAON,EAAEY,KAAZ;AACId,sBADJ;AAEG;AAAA;AAAA,gBAAM,OAAOE,EAAEQ,IAAf;AAAsB2B;AAAtB,aAFH;AAGIpC;AAHJ,WADH;AAMG;AACE,iBAAK;AAAA,qBAAK,OAAK6B,WAAL,GAAmBQ,CAAxB;AAAA,aADP;AAEE,uBAAWpC,EAAEiB;AAFf;AANH;AARH,OADF;AAsBD;;;;;kBAGYG,S","file":"AskDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Button from './Button'\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport MathCaptcha from '../zhn-moleculs/MathCaptcha';\r\n\r\nimport FactoryAction from '../../flux/actions/FactoryAction'\r\n\r\nconst MSG_PREFIX = \"Would you like load item\";\r\nconst MSG_SUFFIX = \"from url?\";\r\n\r\nconst S = {\r\n  MODAL : {\r\n    position: 'static',\r\n    width: '400px',\r\n    height: '205px',\r\n    margin: '70px auto'\r\n  },\r\n  ROOT_DIV: {\r\n    display: 'block',\r\n    margin: '5px'\r\n  },\r\n  NAME : {\r\n    color: '#a487d4',\r\n    paddingLeft: '5px',\r\n    paddingRight: '5px'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    paddingTop: '5px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace : 'pre'\r\n  },\r\n  CAPTCHA : {\r\n    padding: '8px',\r\n    paddingBottom : '0px'\r\n  }\r\n}\r\n\r\nclass AskDialog extends Component {\r\n   /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     data: PropTypes.shape({\r\n       options: PropTypes.shape({\r\n         chartType: PropTypes.string,\r\n         browserType: PropTypes.string\r\n       })\r\n     }),\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n\r\n  constructor(props){\r\n    super();\r\n\r\n    this._handleLoad = this._handleLoad.bind(this)\r\n    this._commandButtons = [\r\n        <Button.Flat\r\n          caption=\"Yes, Load\"\r\n          //accessKey=\"s\"\r\n          isPrimary={true}\r\n          onClick={this._handleLoad}\r\n        />,\r\n        <Button.Flat\r\n          caption=\"No, Close\"\r\n          //accessKey=\"c\"\r\n          onClick={props.onClose}\r\n        />\r\n    ]\r\n  }\r\n\r\n  _handleLoad(){\r\n    const { data={}, onClose } = this.props\r\n        , { options={} } = data;\r\n    if (this.captchaComp.isOk()){\r\n       FactoryAction\r\n         .crLoadQuery(options)\r\n         .run()\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data={}, onClose } = this.props\r\n        , { options={} } = data\r\n        , { name='' } = options;\r\n    return (\r\n      <ModalDialog\r\n        style={S.MODAL}\r\n        caption=\"Confirm Load\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        withoutClose={true}\r\n        onClose={onClose}\r\n      >\r\n         <div style={S.ROOT_DIV}>\r\n            <p style={S.DESCR}>\r\n               {MSG_PREFIX}\r\n               <span style={S.NAME}>{name}</span>\r\n               {MSG_SUFFIX}\r\n            </p>\r\n            <MathCaptcha\r\n              ref={c => this.captchaComp = c}\r\n              rootStyle={S.CAPTCHA}\r\n            />\r\n         </div>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AskDialog\r\n"]}