{"version":3,"sources":["../../../src/components/dialogs/StocksBySectorDialog.jsx"],"names":["S","ROOT_NOT_LABELS","width","CAPTION_SPAN","display","maxWidth","SOURCE_ROOT","lineHeight","marginBottom","LINK_SHOW_HIDE","LINK_ROOT","marginTop","fontWeight","LINK_CAPTION","color","textAlign","paddingRight","fontSize","LINK","paddingTop","LINK_NOT_LABELS","marginLeft","IEX_SOURCES","a","b","map","caption","value","dfProps","dfType","dfPeriod","SOURCE_OPTIONS","indicator","interval","outputsize","DF_SOURCE","_isFn","fn","_getItemId","props","data","item","id","_createInitialState","itemId","isShowLink","StocksBySectorDialog","_hClickLabels","setState","prevState","isShowLabels","_hClickLink","_hShow","onShow","_hSelectDataSource","_dataSource","_getDataSource","_hLoad","onClose","browserType","chartContainerType","dialogProps","text","ChartActions","loadStock","chartType","title","ticket","loadId","linkFn","dataSource","toolbarButtons","onClick","_commandButtons","state","getDerivedStateFromProps","nextProps","shouldComponentUpdate","nextState","isShow","render","_style","_linkStyle","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport ChartActions from '../../flux/actions/ChartActions';\r\n\r\nimport D from './DialogCell'\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport NasdaqLink from '../native-links/NasdaqLink';\r\n\r\nconst S = {\r\n  ROOT_NOT_LABELS: {\r\n    width: 280\r\n  },\r\n  CAPTION_SPAN : {\r\n    display: 'inline-block',\r\n    maxWidth: 295\r\n  },\r\n  SOURCE_ROOT : {\r\n    lineHeight: 1.5,\r\n    marginBottom: 0\r\n  },\r\n  LINK_SHOW_HIDE : {\r\n    marginBottom: 10\r\n  },\r\n  LINK_ROOT: {\r\n    marginTop: 8,\r\n    marginBottom : 0,\r\n    lineHeight: 1.5,\r\n    fontWeight: 'bold'\r\n  },\r\n  LINK_CAPTION : {\r\n    color: '#1b75bb',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    width: 100,\r\n    paddingRight: 5,\r\n    fontSize: '16px'\r\n  },\r\n  LINK: {\r\n    paddingTop: 0\r\n  },\r\n  LINK_NOT_LABELS: {\r\n    marginLeft: 8\r\n  }\r\n};\r\n\r\nconst IEX_SOURCES = [\r\n  { a: '1 Month', b: '1m'},\r\n  { a: '3 Months', b: '3m'},\r\n  { a: '6 Months', b: '6m'},\r\n  { a: '1 Year', b: '1y'},\r\n  { a: '2 Years', b: '2y'}\r\n].map(({a, b}) => ({\r\n  caption: 'IEX Cloud: ' + a , value: 'IEX',\r\n  dfProps: {\r\n    dfType: 'chart',\r\n    dfPeriod: b\r\n  }\r\n}));\r\n\r\nconst SOURCE_OPTIONS = [\r\n  {\r\n    caption: 'Alpha Vantage: Daily (100)' ,\r\n    value: 'AL_I',\r\n    dfProps: {\r\n      indicator: 'TIME_SERIES_DAILY',\r\n      interval: 'Daily',\r\n      outputsize: 'compact'\r\n    }\r\n  },{\r\n    caption: 'Barchart: 6 Months' , value: 'B'\r\n  },\r\n  ...IEX_SOURCES\r\n];\r\n\r\nconst DF_SOURCE = SOURCE_OPTIONS[0];\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _getItemId = props => ((props.data || {}).item || {}).id;\r\nconst _createInitialState = props => ({\r\n  itemId: _getItemId(props),\r\n  isShowLink: false,\r\n});\r\n\r\n\r\nclass StocksBySectorDialog extends Component {\r\n  /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     data: PropTypes.object,\r\n     store: PropTypes.object,\r\n     onClose: PropTypes.func\r\n   }\r\n  */\r\n\r\n   constructor(props){\r\n     super(props)\r\n\r\n     this.toolbarButtons =  [\r\n        {\r\n          caption: 'L',\r\n          title: 'Click to toggle labels',\r\n          onClick: this._hClickLabels\r\n        },{\r\n         caption: 'O',\r\n         title: 'Click to toggle options',\r\n         onClick: this._hClickLink\r\n       }\r\n     ]\r\n     this._commandButtons = [\r\n       <D.Button.Load\r\n         key=\"load\"\r\n         onClick={this._hLoad}\r\n       />,\r\n       <D.Button.Show\r\n         key=\"show\"\r\n         onClick={this._hShow}\r\n       />\r\n     ]\r\n     this.state = {\r\n       ..._createInitialState(props),\r\n       isShowLabels: true\r\n     }\r\n   }\r\n\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n     if ( _getItemId(nextProps) !== prevState.itemId ) {\r\n       return _createInitialState(nextProps);\r\n     }\r\n     return null;\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n       return false;\r\n     }\r\n     return true;\r\n   }\r\n\r\n   _hClickLabels = () => {\r\n     this.setState(prevState => ({\r\n      isShowLabels: !prevState.isShowLabels\r\n     }))\r\n   }\r\n  _hClickLink = () => {\r\n    this.setState(prevState => ({\r\n      isShowLink: !prevState.isShowLink\r\n    }))\r\n  }\r\n\r\n  _hShow = () => {\r\n    const { data } = this.props;\r\n    if (data && _isFn(data.onShow)) {\r\n      data.onShow()\r\n    }\r\n  }\r\n\r\n  _hSelectDataSource = (item) => {\r\n    this._dataSource = item\r\n  }\r\n  _getDataSource = () => this._dataSource || DF_SOURCE\r\n\r\n  _hLoad = () => {\r\n    const { data, onClose } = this.props\r\n    , { item={}, browserType, chartContainerType, dialogProps } = data\r\n    , { id, text } = item\r\n    , { caption, value, dfProps } = this._getDataSource();\r\n\r\n    ChartActions.loadStock(\r\n      {\r\n        chartType: chartContainerType, browserType\r\n      },{\r\n         title: text,\r\n         value: id,\r\n         ticket: id,\r\n         item: item,\r\n         loadId: value,\r\n         id: id,\r\n         linkFn: 'NASDAQ',\r\n         dataSource: caption,\r\n         ...dialogProps,\r\n         ...dfProps\r\n       }\r\n    )\r\n    onClose()\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data, onClose } = this.props\r\n    , { item } = data || {}\r\n    , { text } = item || {}\r\n    , {\r\n        isShowLabels,\r\n        isShowLink,\r\n      } = this.state\r\n    , _style = isShowLabels\r\n         ? null\r\n         : S.ROOT_NOT_LABELS\r\n    , _linkStyle = isShowLabels\r\n         ? S.LINK\r\n         : { ...S.LINK, ...S.LINK_NOT_LABELS };\r\n\r\n    return (\r\n      <ModalDialog\r\n         caption={text}\r\n         style={_style}\r\n         styleCaption={S.CAPTION_SPAN}\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onClose={onClose}\r\n      >\r\n        <D.ToolbarButtonCircle\r\n          buttons={this.toolbarButtons}\r\n        />\r\n        <D.RowInputSelect\r\n           isShowLabels={isShowLabels}\r\n           caption=\"Source\"\r\n           placeholder={DF_SOURCE.caption}\r\n           options={SOURCE_OPTIONS}\r\n           onSelect={this._hSelectDataSource}\r\n        />\r\n        <D.ShowHide isShow={isShowLink} style={S.LINK_SHOW_HIDE}>\r\n          <D.Row.Plain style={S.LINK_ROOT}>\r\n            {\r\n              isShowLabels && <span style={S.LINK_CAPTION}>\r\n                Link:\r\n              </span>\r\n            }\r\n            <NasdaqLink\r\n               style={_linkStyle}\r\n               item={item}\r\n               caption=\"NASDAQ\"\r\n             />\r\n          </D.Row.Plain>\r\n        </D.ShowHide>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StocksBySectorDialog\r\n"],"file":"StocksBySectorDialog.js"}