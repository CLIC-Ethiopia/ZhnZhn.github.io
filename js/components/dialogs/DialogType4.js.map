{"version":3,"sources":["../../../src/components/dialogs/DialogType4.jsx"],"names":["DialogType4","props","state","isShowDate","validationMessages","_handleSelectOne","one","_handleSelectTwo","two","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","twoCaption","msgOnNotSelected","msg","push","datesFragment","getValidation","isValid","datesMsg","concat","length","getValues","fromDate","toDate","_handleClose","_handleWithValidationClose","onClose","undefined","toolbarButtons","_createType2WithToolbar","nextProps","nextState","isShow","caption","onShow","oneURI","oneJsonProp","twoURI","twoJsonProp","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","_commandButtons","c","displayName"],"mappings":"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","file":"DialogType4.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport createLoadOptions from '../../flux/creaters/type4';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport SelectWithLoad from './SelectWithLoad';\r\nimport DatesFragment from '../zhn-moleculs/DatesFragment';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport ShowHide from '../zhn/ShowHide';\r\n\r\nimport withToolbar from './decorators/withToolbar';\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\n@withToolbar\r\n@withValidationLoad\r\nclass DialogType4 extends Component {\r\n\r\n  state = {\r\n    isShowDate : true,\r\n    validationMessages: []\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.one = undefined;\r\n    this.two = undefined;\r\n    this.toolbarButtons = this._createType2WithToolbar(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n  _handleSelectTwo = (two) => {\r\n    this.two = two;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption, twoCaption, msgOnNotSelected } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.one) { msg.push(msgOnNotSelected(oneCaption)); }\r\n     if (!this.two) { msg.push(msgOnNotSelected(twoCaption)); }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues();\r\n    return createLoadOptions(\r\n      this.props,\r\n      { one : this.one, two : this.two, fromDate, toDate }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , { isShowDate, validationMessages } = this.state\r\n        , _commandButtons = [\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Load\"\r\n          onClick={this._handleLoad}\r\n       />\r\n    ];\r\n\r\n    return(\r\n        <DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n         >\r\n             <ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <SelectWithLoad\r\n               isShow={isShow}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames={'Stocks'}\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n\r\n             <SelectWithLoad\r\n               isShow={isShow}\r\n               uri={twoURI}\r\n               jsonProp={twoJsonProp}\r\n               caption={twoCaption}\r\n               optionNames={'Indicators'}\r\n               onSelect={this._handleSelectTwo}\r\n             />\r\n\r\n             <ShowHide isShow={isShowDate}>\r\n               <DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </ShowHide>\r\n             <ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nDialogType4.displayName = 'DialogType4';\r\n\r\nexport default DialogType4\r\n"]}