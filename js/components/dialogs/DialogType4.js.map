{"version":3,"sources":["../../../src/components/dialogs/DialogType4.jsx"],"names":["HAS_SECOND_Y_AXIS","DialogType4","withToolbar","withValidationLoad","props","_handleClickOptions","setState","isShowOptions","state","_handleSelectOne","one","_handleSelectTwo","two","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","twoCaption","msgOnNotSelected","msg","push","datesFragment","getValidation","isValid","datesMsg","concat","length","getValues","fromDate","toDate","loadFn","hasSecondYAxis","_handleClose","_handleWithValidationClose","_handleMode","propName","value","undefined","toolbarButtons","_createType2WithToolbar","caption","title","onClick","_commandButtons","isShowLabels","isShowDate","validationMessages","nextProps","nextState","isShow","onShow","onFront","oneURI","oneJsonProp","twoURI","twoJsonProp","isWithInputTwo","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","c","bind"],"mappings":"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","file":"DialogType4.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\n\r\nconst HAS_SECOND_Y_AXIS = 'hasSecondYAxis';\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass DialogType4 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n\r\n    oneCaption: PropTypes.string,\r\n    oneURI: PropTypes.string,\r\n    oneJsonProp: PropTypes.string,\r\n    twoCaption: PropTypes.string,\r\n    twoURI: PropTypes.string,\r\n    twoJsonProp: PropTypes.string,\r\n\r\n    initFromDate: PropTypes.string,\r\n    initToDate: PropTypes.string,\r\n    msgOnNotValidFormat: PropTypes.func,\r\n    onTestDate: PropTypes.func,\r\n    onShow: PropTypes.func,\r\n\r\n    loadFn: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super();\r\n    this.one = undefined;\r\n    this.two = undefined;\r\n    this.toolbarButtons = this._createType2WithToolbar(props);\r\n    this.toolbarButtons.push({\r\n      caption: 'O', title: 'Toggle Options Input',\r\n      onClick: this._handleClickOptions\r\n    })\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ];\r\n    this.state = {\r\n      isShowLabels: true,\r\n      isShowDate : true,\r\n      isShowOptions: false,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickOptions = () => {\r\n    this.setState({ isShowOptions: !this.state.isShowOptions })\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n  _handleSelectTwo = (two) => {\r\n    this.two = two;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption, twoCaption, msgOnNotSelected } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.one) { msg.push(msgOnNotSelected(oneCaption)); }\r\n     if (!this.two) { msg.push(msgOnNotSelected(twoCaption)); }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment.getValues();\r\n    return this.props.loadFn(\r\n      this.props, {\r\n        one : this.one, two : this.two, fromDate, toDate,\r\n        hasSecondYAxis: this[HAS_SECOND_Y_AXIS]\r\n      }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()    \r\n  }\r\n\r\n  _handleMode = (propName, value) => {\r\n     this[propName] = value\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow, onFront,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp, isWithInputTwo,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , {\r\n            isShowLabels, isShowDate, isShowOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onFront={onFront}\r\n           onClose={this._handleClose}\r\n         >\r\n             <D.ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames=\"Stocks\"\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n\r\n             <D.SelectWithLoad\r\n               isShow={isShow}\r\n               isShowLabels={isShowLabels}\r\n               uri={twoURI}\r\n               jsonProp={twoJsonProp}\r\n               caption={twoCaption}\r\n               optionNames=\"Indicators\"\r\n               isWithInput={isWithInputTwo}\r\n               onSelect={this._handleSelectTwo}\r\n             />\r\n\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 isShowLabels={isShowLabels}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowOptions}>\r\n               <D.RowCheckBox\r\n                 initValue={false}\r\n                 caption=\"Add Seria with Second YAxis\"\r\n                 onCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, true)}\r\n                 onUnCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, false)}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType4\r\n"]}