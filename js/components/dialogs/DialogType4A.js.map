{"version":3,"sources":["../../../src/components/dialogs/DialogType4A.jsx"],"names":["HAS_SECOND_Y_AXIS","DialogType4A","withToolbar","withValidationLoad","props","_handleClickOptions","setState","isShowOptions","state","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msg","parentChild","getValidation","isValid1","isValid","msg1","concat","datesFragment","datesMsg","length","getValues","one","parent","two","child","fromDate","toDate","loadFn","hasSecondYAxis","_handleClose","_handleWithValidationClose","_handleMode","propName","value","toolbarButtons","_createType2WithToolbar","push","caption","title","onClick","_commandButtons","isShowLabels","isShowDate","validationMessages","nextProps","nextState","isShow","oneCaption","oneURI","oneJsonProp","twoCaption","msgOnNotSelected","onShow","onFront","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","c","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,gBAA1B;;IAIMC,Y,WAFL,qBAAMC,W,UACN,qBAAMC,kB;;;AAGL,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UA4BlBC,mBA5BkB,GA4BI,YAAM;AAC1B,YAAKC,QAAL,CAAc,EAAEC,eAAe,CAAC,MAAKC,KAAL,CAAWD,aAA7B,EAAd;AACD,KA9BiB;;AAAA,UAgClBE,WAhCkB,GAgCJ,YAAM;AAClB,YAAKC,yBAAL,CACE,MAAKC,yBAAL,EADF,EAEE,MAAKC,iBAFP;AAID,KArCiB;;AAAA,UAsClBD,yBAtCkB,GAsCU,YAAM;AAC/B,UAAIE,MAAM,EAAV;;AAD+B,kCAGQ,MAAKC,WAAL,CAAiBC,aAAjB,EAHR;AAAA,UAGfC,QAHe,yBAGvBC,OAHuB;AAAA,UAGDC,IAHC,yBAGLL,GAHK;;AAI/B,UAAI,CAACG,QAAL,EAAe;AAAEH,cAAMA,IAAIM,MAAJ,CAAWD,IAAX,CAAN;AAAyB;;AAJX,kCAMH,MAAKE,aAAL,CAAmBL,aAAnB,EANG;AAAA,UAMxBE,OANwB,yBAMxBA,OANwB;AAAA,UAMfI,QANe,yBAMfA,QANe;;AAO/B,UAAI,CAACJ,OAAL,EAAc;AAAEJ,cAAMA,IAAIM,MAAJ,CAAWE,QAAX,CAAN;AAA6B;;AAE7CR,UAAII,OAAJ,GAAeJ,IAAIS,MAAJ,KAAe,CAAhB,GAAqB,IAArB,GAA4B,KAA1C;AACA,aAAOT,GAAP;AACF,KAjDiB;;AAAA,UAmDlBD,iBAnDkB,GAmDE,YAAM;AAAA,mCACU,MAAKE,WAAL,CAAiBS,SAAjB,EADV;AAAA,UACTC,GADS,0BAChBC,MADgB;AAAA,UACEC,GADF,0BACJC,KADI;AAAA,mCAEK,MAAKP,aAAL,CAAmBG,SAAnB,EAFL;AAAA,UAEhBK,QAFgB,0BAEhBA,QAFgB;AAAA,UAENC,MAFM,0BAENA,MAFM;;AAGxB,aAAO,MAAKzB,KAAL,CAAW0B,MAAX,CACJ,MAAK1B,KADD,EACQ;AACVoB,gBADU,EACLE,QADK,EACAE,kBADA,EACUC,cADV;AAEVE,wBAAgB,MAAK/B,iBAAL;AAFN,OADR,CAAP;AAMD,KA5DiB;;AAAA,UA8DlBgC,YA9DkB,GA8DH,YAAM;AACnB,YAAKC,0BAAL;AACD,KAhEiB;;AAAA,UAkElBC,WAlEkB,GAkEJ,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAChC,YAAKD,QAAL,IAAiBC,KAAjB;AACF,KApEiB;;AAEhB,UAAKC,cAAL,GAAsB,MAAKC,uBAAL,CAA6BlC,KAA7B,CAAtB;AACA,UAAKiC,cAAL,CAAoBE,IAApB,CAAyB;AACvBC,eAAS,GADc,EACTC,OAAO,sBADE;AAEvBC,eAAS,MAAKrC;AAFS,KAAzB;AAIA,UAAKL,iBAAL,IAA0B,KAA1B;AACA,UAAK2C,eAAL,GAAuB,CACrB,mDAAG,MAAH,CAAU,IAAV,IAAe,SAAS,MAAKlC,WAA7B,GADqB,CAAvB;AAGA,UAAKD,KAAL,GAAa;AACXoC,oBAAc,IADH;AAEXC,kBAAY,IAFD;AAGXtC,qBAAe,KAHJ;AAIXuC,0BAAoB;AAJT,KAAb;AAXgB;AAiBjB;;;;0CAEqBC,S,EAAWC,S,EAAU;AACzC,UAAI,KAAK5C,KAAL,KAAe2C,SAAnB,EAA6B;AAC1B,YAAI,KAAK3C,KAAL,CAAW6C,MAAX,KAAsBF,UAAUE,MAApC,EAA2C;AACxC,iBAAO,KAAP;AACF;AACH;AACD,aAAO,IAAP;AACD;;;6BA4CO;AAAA;;AAAA,mBAKI,KAAK7C,KALT;AAAA,UAECoC,OAFD,UAECA,OAFD;AAAA,UAEUU,UAFV,UAEUA,UAFV;AAAA,UAEsBC,MAFtB,UAEsBA,MAFtB;AAAA,UAE8BC,WAF9B,UAE8BA,WAF9B;AAAA,UAE2CC,UAF3C,UAE2CA,UAF3C;AAAA,UAEuDC,gBAFvD,UAEuDA,gBAFvD;AAAA,UAGCL,MAHD,UAGCA,MAHD;AAAA,UAGSM,MAHT,UAGSA,MAHT;AAAA,UAGiBC,OAHjB,UAGiBA,OAHjB;AAAA,UAICC,YAJD,UAICA,YAJD;AAAA,UAIeC,UAJf,UAIeA,UAJf;AAAA,UAI2BC,mBAJ3B,UAI2BA,mBAJ3B;AAAA,UAIgDC,UAJhD,UAIgDA,UAJhD;AAAA,mBASI,KAAKpD,KATT;AAAA,UAOEoC,YAPF,UAOEA,YAPF;AAAA,UAOgBC,UAPhB,UAOgBA,UAPhB;AAAA,UAO4BtC,aAP5B,UAO4BA,aAP5B;AAAA,UAQEuC,kBARF,UAQEA,kBARF;;;AAWN,aACI;AAAA,6BAAG,eAAH;AAAA;AACG,mBAASN,OADZ;AAEG,kBAAQS,MAFX;AAGG,0BAAgB,KAAKN,eAHxB;AAIG,uBAAaY,MAJhB;AAKG,mBAASC,OALZ;AAMG,mBAAS,KAAKxB;AANjB;AAQK,2DAAG,mBAAH;AACG,mBAAS,KAAKK;AADjB,UARL;AAYK,2DAAG,iBAAH;AACI,eAAK;AAAA,mBAAK,OAAKvB,WAAL,GAAmB+C,CAAxB;AAAA,WADT;AAEI,kBAAQZ,MAFZ;AAGI,wBAAcL,YAHlB;AAII,eAAKO,MAJT;AAKI,yBAAeD,UALnB;AAMI,6BAAkB,OANtB;AAOI,0BAAgBE,WAPpB;AAQI,wBAAcC,UARlB;AASI,4BAAkBC;AATtB,UAZL;AAwBK;AAAA,+BAAG,QAAH;AAAA,YAAY,QAAQT,UAApB;AACE,6DAAG,aAAH;AACE,iBAAK;AAAA,qBAAK,OAAKzB,aAAL,GAAqByC,CAA1B;AAAA,aADP;AAEE,0BAAcjB,YAFhB;AAGE,0BAAca,YAHhB;AAIE,wBAAYC,UAJd;AAKE,iCAAqBC,mBALvB;AAME,wBAAYC;AANd;AADF,SAxBL;AAkCK;AAAA,+BAAG,QAAH;AAAA,YAAY,QAAQrD,aAApB;AACE,6DAAG,WAAH;AACE,uBAAW,KADb;AAEE,qBAAQ,6BAFV;AAGE,qBAAS,KAAK2B,WAAL,CAAiB4B,IAAjB,CAAsB,IAAtB,EAA4B9D,iBAA5B,EAA+C,IAA/C,CAHX;AAIE,uBAAW,KAAKkC,WAAL,CAAiB4B,IAAjB,CAAsB,IAAtB,EAA4B9D,iBAA5B,EAA+C,KAA/C;AAJb;AADF,SAlCL;AA0CK,2DAAG,kBAAH;AACI,8BAAoB8C;AADxB;AA1CL,OADJ;AAgDD;;;;kBAGY7C,Y","file":"DialogType4A.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\n\r\nconst HAS_SECOND_Y_AXIS = 'hasSecondYAxis';\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass DialogType4A extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.toolbarButtons = this._createType2WithToolbar(props)\r\n    this.toolbarButtons.push({\r\n      caption: 'O', title: 'Toggle Options Input',\r\n      onClick: this._handleClickOptions\r\n    })\r\n    this[HAS_SECOND_Y_AXIS] = false\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ];\r\n    this.state = {\r\n      isShowLabels: true,\r\n      isShowDate: true,\r\n      isShowOptions: false,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickOptions = () => {\r\n    this.setState({ isShowOptions: !this.state.isShowOptions })\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     let msg = [];\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.parentChild.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n\r\n  _createLoadOption = () => {\r\n    const { parent:one, child:two } = this.parentChild.getValues()\r\n        , { fromDate, toDate } = this.datesFragment.getValues();\r\n    return this.props.loadFn(\r\n       this.props, {\r\n         one, two, fromDate, toDate,\r\n         hasSecondYAxis: this[HAS_SECOND_Y_AXIS]\r\n       }\r\n     );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()        \r\n  }\r\n\r\n  _handleMode = (propName, value) => {\r\n     this[propName] = value\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, oneCaption, oneURI, oneJsonProp, twoCaption, msgOnNotSelected,\r\n           isShow, onShow, onFront,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , {\r\n            isShowLabels, isShowDate, isShowOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return(\r\n        <D.DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onFront={onFront}\r\n           onClose={this._handleClose}\r\n         >\r\n             <D.ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <D.SelectParentChild\r\n                 ref={c => this.parentChild = c}\r\n                 isShow={isShow}\r\n                 isShowLabels={isShowLabels}\r\n                 uri={oneURI}\r\n                 parentCaption={oneCaption}\r\n                 parentOptionNames=\"Items\"\r\n                 parentJsonProp={oneJsonProp}\r\n                 childCaption={twoCaption}\r\n                 msgOnNotSelected={msgOnNotSelected}\r\n             />\r\n\r\n             <D.ShowHide isShow={isShowDate}>\r\n               <D.DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 isShowLabels={isShowLabels}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ShowHide isShow={isShowOptions}>\r\n               <D.RowCheckBox\r\n                 initValue={false}\r\n                 caption=\"Add Seria with Second YAxis\"\r\n                 onCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, true)}\r\n                 onUnCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, false)}\r\n               />\r\n             </D.ShowHide>\r\n             <D.ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType4A\r\n"]}