{"version":3,"sources":["../../../src/components/dialogs/DialogType4A.jsx"],"names":["DialogType4A","props","state","isShowDate","validationMessages","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msg","parentChild","getValidation","isValid1","isValid","msg1","concat","datesFragment","datesMsg","length","getValues","one","parent","two","child","fromDate","toDate","_handleClose","_handleWithValidationClose","onClose","toolbarButtons","_createType2WithToolbar","nextProps","nextState","isShow","caption","oneCaption","oneURI","oneJsonProp","twoCaption","msgOnNotSelected","onShow","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","_commandButtons","c","displayName"],"mappings":"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","file":"DialogType4A.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport createLoadOptions from '../../flux/creaters/type4';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport SelectParentChild from './SelectParentChild';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport DatesFragment from '../zhn-moleculs/DatesFragment';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport ShowHide from '../zhn/ShowHide';\r\n\r\nimport withToolbar from './decorators/withToolbar';\r\nimport withValidationLoad from './decorators/withValidationLoad';\r\n\r\n@withToolbar\r\n@withValidationLoad\r\nclass DialogType4A extends Component {\r\n  state = {\r\n    isShowDate : true,\r\n    validationMessages: []\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.toolbarButtons = this._createType2WithToolbar(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     let msg = [];\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.parentChild.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { parent:one, child:two } = this.parentChild.getValues()\r\n        , { fromDate, toDate } = this.datesFragment.getValues();\r\n\r\n    return createLoadOptions(\r\n       this.props,\r\n       { one, two, fromDate, toDate }\r\n     );\r\n  }\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, oneCaption, oneURI, oneJsonProp, twoCaption, msgOnNotSelected,\r\n           isShow, onShow,\r\n           initFromDate, initToDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , { isShowDate, validationMessages } = this.state\r\n        , _commandButtons = [\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Load\"\r\n          onClick={this._handleLoad}\r\n       />\r\n    ];\r\n\r\n    return(\r\n        <DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n         >\r\n             <ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n\r\n             <SelectParentChild\r\n                 ref={c => this.parentChild = c}\r\n                 isShow={isShow}\r\n                 uri={oneURI}\r\n                 parentCaption={oneCaption}\r\n                 parentOptionNames=\"Items\"\r\n                 parentJsonProp={oneJsonProp}\r\n                 childCaption={twoCaption}\r\n                 msgOnNotSelected={msgOnNotSelected}\r\n             />\r\n\r\n             <ShowHide isShow={isShowDate}>\r\n               <DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </ShowHide>\r\n             <ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nDialogType4A.displayName = 'DialogType4A';\r\n\r\nexport default DialogType4A\r\n"]}