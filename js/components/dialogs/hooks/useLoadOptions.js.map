{"version":3,"sources":["../../../../src/components/dialogs/hooks/useLoadOptions.js"],"names":["_showMsgErr","alertCaption","alertDescr","CA","showAlert","_useLoadingFailed","setState","errCaption","errDescription","isLoading","isLoadingFailed","_useLoad","refLoadId","setLoadingFailed","loadOptions","option","uri","jsonProp","retryServer","retryNetwork","fetch","then","response","status","statusText","json","current","setTimeout","items","propCaption","options","catch","error","TypeError","ERR_NETWORK","caption","descr","_useIsReload","isShow","_hasToggled","useLoadOptions","state","_isReloadFailedOption","_setLoadingFailed","_load","id","clearTimeout"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react'\r\nimport useHasNotEqual from '../../hooks/useHasNotEqual'\r\n\r\nimport { ERR_NETWORK } from '../../../constants/Msg';\r\nimport CA from '../../../flux/actions/ComponentActions';\r\n\r\nimport crOptions from '../decorators/crOptions'\r\n\r\nconst _showMsgErr = (\r\n  alertCaption,\r\n  alertDescr\r\n) => {\r\n  CA.showAlert({ alertCaption, alertDescr })\r\n};\r\n\r\n/*eslint-disable react-hooks/exhaustive-deps */\r\nconst _useLoadingFailed = (setState) => useCallback(\r\n (errCaption, errDescription) => {\r\n   if (errCaption && errDescription) {\r\n     _showMsgErr(errCaption, errDescription)\r\n   }\r\n   setState({\r\n     isLoading: false,\r\n     isLoadingFailed: true\r\n   })\r\n}, [])\r\n//setState\r\n/*eslint-enable react-hooks/exhaustive-deps */\r\n\r\nconst _useLoad = (refLoadId, setLoadingFailed, setState) => {\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  const loadOptions = useCallback(option => {\r\n    const {\r\n      uri, jsonProp,\r\n      retryServer=0, retryNetwork=1\r\n    } = option;\r\n    fetch(uri)\r\n      .then(response => {\r\n         const {status, statusText} = response;\r\n         if (status>=200 && status<400){\r\n            return response.json();\r\n         } else if (status>=400 && status<500){\r\n            setLoadingFailed('Client Error:', status + ' ' + statusText)\r\n            return null;\r\n         } else if (status>=500 && status<600) {\r\n           if (retryServer !== 0) {\r\n             option.retryServer = retryServer - 1\r\n             refLoadId.current = setTimeout(loadOptions(option), 3E3)\r\n           } else {\r\n             setLoadingFailed('Server Error:', status + ' ' + statusText)\r\n           }\r\n           return null;\r\n         }\r\n      })\r\n      .then(json => {\r\n        if (json) {\r\n          const { items, propCaption } = crOptions(json, jsonProp);\r\n          setState({\r\n            isLoading: false,\r\n            isLoadingFailed: false,\r\n            propCaption,\r\n            options: items\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (retryNetwork === 0){\r\n          const [errCaption, errDescription] = error instanceof TypeError\r\n            ? [ERR_NETWORK.caption,  ERR_NETWORK.descr]\r\n            : [];\r\n          setLoadingFailed(errCaption, errDescription)\r\n        } else {\r\n          option.retryNetwork = retryNetwork - 1;\r\n          refLoadId.current = setTimeout(loadOptions(option), 2E3);\r\n        }\r\n      })\r\n  }, [])\r\n  //refLoadId, setLoadingFailed, setState\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n  return loadOptions;\r\n};\r\n\r\nconst _useIsReload = (isShow, isLoadingFailed) => {\r\n  const _hasToggled = useHasNotEqual(isShow)\r\n  return isShow && isLoadingFailed && _hasToggled;\r\n};\r\n\r\nconst useLoadOptions = (isShow, uri, jsonProp) => {\r\n  const [state, setState] = useState({\r\n    options: [],\r\n    isLoading: true,\r\n    isLoadingFailed: false\r\n  })\r\n  , { isLoadingFailed } = state\r\n  , refLoadId = useRef(null)\r\n  , _isReloadFailedOption = _useIsReload(isShow, isLoadingFailed)\r\n  , _setLoadingFailed = _useLoadingFailed(setState)\r\n  , _load = _useLoad(refLoadId, _setLoadingFailed, setState)\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , loadOptions = useCallback(() => _load({ uri, jsonProp }), []);\r\n  //load, uri, jsonProp\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  useEffect(() => {\r\n    loadOptions()\r\n    return () => {\r\n      const { current:id } = refLoadId;\r\n      clearTimeout(id)\r\n    };\r\n  }, [])\r\n  // loadOptions\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  useEffect(()=>{\r\n    if (_isReloadFailedOption) {\r\n      loadOptions()\r\n    }\r\n  }, [_isReloadFailedOption])\r\n  // loadOptions\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n\r\n  return [state, loadOptions];\r\n}\r\n\r\nexport default useLoadOptions\r\n"],"file":"useLoadOptions.js"}