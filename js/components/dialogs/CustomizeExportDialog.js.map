{"version":3,"sources":["../../../src/components/dialogs/CustomizeExportDialog.jsx"],"names":["styles","STYLE","GAP_BETWEEN_GROUP","marginTop","LABEL_WIDTH","color","display","textAlign","width","paddingRight","fontSize","fontWeight","LABEL_HEIGHT","paddingLeft","INPUT_NUMBER","marginLeft","height","INPUT_TEXT","CustomizeExportDialog","props","state","isShowDimension","isShowTitle","isShowStyle","_handleClickDimension","setState","_handleClickTitle","_handleClickStyle","_handleSelectStyle","item","exportStyle","value","_handleExport","data","onClose","chart","fn","_inputOption","inputWidth","getValue","inputHeight","title","text","inputTitle","subtitle","inputSubtitle","_customOption","apply","toolbarButtons","caption","onClick","optionStyles","createOptionStyles","nextProps","nextState","isShow","chartWidth","chartHeight","options","commandButtons","rowDiv","c","Object","assign","displayName"],"mappings":"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","file":"CustomizeExportDialog.js","sourcesContent":["import React, { Component } from 'react';\r\nimport merge from 'lodash.merge';\r\n\r\nimport ChartExportConfig from '../../charts/ChartExportConfig';\r\n\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport DialogStyles from '../styles/DialogStyles'\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport InputText from '../zhn/InputText';\r\nimport InputSelect from '../zhn/InputSelect';\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst STYLE = {\r\n  GAP_BETWEEN_GROUP : {\r\n    marginTop: '10px'\r\n  },\r\n  LABEL_WIDTH : {\r\n    color: '#1B75BB',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    width: '100px',\r\n    paddingRight: '5px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  LABEL_HEIGHT : {\r\n    color: '#1B75BB',\r\n    display: 'inline-block',\r\n    paddingRight: '5px',\r\n    paddingLeft: '3px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  INPUT_NUMBER : {\r\n    marginLeft: '0px',\r\n    height : '30px'\r\n  },\r\n  INPUT_TEXT : {\r\n    width: '250px',\r\n    marginLeft: '0px',\r\n    height : '30px'\r\n  }\r\n}\r\n\r\nclass CustomizeExportDialog extends Component {\r\n  state = {\r\n    isShowDimension : true,\r\n    isShowTitle : true,\r\n    isShowStyle : true\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.exportStyle = {};\r\n    this.toolbarButtons = [\r\n      { caption: 'D', onClick: this._handleClickDimension },\r\n      { caption: 'T', onClick: this._handleClickTitle },\r\n      { caption: 'S', onClick: this._handleClickStyle }\r\n    ];\r\n    this.optionStyles = ChartExportConfig.createOptionStyles();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickDimension = () => {\r\n    this.setState({ isShowDimension: !this.state.isShowDimension });\r\n  }\r\n  _handleClickTitle = () => {\r\n    this.setState({ isShowTitle: !this.state.isShowTitle });\r\n  }\r\n  _handleClickStyle = () => {\r\n    this.setState({ isShowStyle: !this.state.isShowStyle });\r\n  }\r\n\r\n  _handleSelectStyle = (item) => {\r\n    this.exportStyle = item.value;\r\n  }\r\n\r\n  _handleExport = () => {\r\n    const { data, onClose } = this.props\r\n        , { chart, fn } = data\r\n\r\n    const _inputOption = {\r\n      chart : {\r\n        width : this.inputWidth.getValue(),\r\n        height : this.inputHeight.getValue()\r\n      },\r\n      title : {\r\n        text : this.inputTitle.getValue()\r\n      },\r\n      subtitle : {\r\n        text : this.inputSubtitle.getValue()\r\n      }\r\n    }\r\n    const _customOption = merge(_inputOption, this.exportStyle);\r\n\r\n    fn.apply(chart, [null, _customOption]);\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n        , { chart } = data\r\n        , { chartWidth, chartHeight, options } = chart\r\n        , title = options.title.text\r\n        , subtitle = options.subtitle.text\r\n        , { isShowDimension, isShowTitle, isShowStyle } = this.state\r\n        , commandButtons =[\r\n             <ActionButton\r\n                key=\"a\"\r\n                type=\"TypeC\"\r\n                caption=\"Export\"\r\n                onClick={this._handleExport}\r\n             />\r\n          ];\r\n\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Customize Export Chart\"\r\n        isShow={isShow}\r\n        commandButtons={commandButtons}\r\n        onClose={onClose}\r\n      >\r\n         <ToolbarButtonCircle\r\n           buttons={this.toolbarButtons}\r\n         />\r\n         <ShowHide isShow={isShowDimension}>\r\n         <div style={styles.rowDiv} key=\"1\">\r\n            <span style={STYLE.LABEL_WIDTH}>Dimension:</span>\r\n            <span style={STYLE.LABEL_HEIGHT}>Width:</span>\r\n            <InputText\r\n              ref={ c => this.inputWidth = c }\r\n              initValue={chartWidth}\r\n              style = {STYLE.INPUT_NUMBER}\r\n            />\r\n            <span style={STYLE.LABEL_HEIGHT}>Height:</span>\r\n            <InputText\r\n              ref={ c => this.inputHeight = c }\r\n              initValue={chartHeight}\r\n              style = {STYLE.INPUT_NUMBER}\r\n            />\r\n         </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowTitle}>\r\n         <div style={Object.assign({}, styles.rowDiv, STYLE.GAP_BETWEEN_GROUP)} key=\"2\">\r\n           <span style={STYLE.LABEL_WIDTH}>Title:</span>\r\n           <InputText\r\n             ref={ c => this.inputTitle = c }\r\n             initValue={title}\r\n             style={STYLE.INPUT_TEXT}\r\n           />\r\n         </div>\r\n         <div style={styles.rowDiv} key=\"3\">\r\n           <span style={STYLE.LABEL_WIDTH}>Subtitle:</span>\r\n           <InputText\r\n             ref={ c => this.inputSubtitle = c }\r\n             initValue={subtitle}\r\n             style={STYLE.INPUT_TEXT}\r\n           />\r\n         </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowStyle}>\r\n         <div style={Object.assign({}, styles.rowDiv, STYLE.GAP_BETWEEN_GROUP)} key=\"4\">\r\n           <span style={STYLE.LABEL_WIDTH}>Style:</span>\r\n           <InputSelect\r\n             width=\"250\"\r\n             options={this.optionStyles}\r\n             placeholder=\"Default\"\r\n             onSelect={this._handleSelectStyle}\r\n           />\r\n         </div>\r\n         </ShowHide>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nCustomizeExportDialog.displayName = 'CustomizeExportDialog';\r\n\r\nexport default CustomizeExportDialog\r\n"]}