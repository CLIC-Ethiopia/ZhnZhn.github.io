{"version":3,"sources":["../../../src/components/dialogs/CustomizeExportDialog.jsx"],"names":["S","GAP_BETWEEN_GROUP","marginTop","LABEL_WIDTH","display","color","width","paddingRight","textAlign","fontSize","fontWeight","LABEL_HEIGHT","paddingLeft","INPUT_NUMBER","height","marginLeft","INPUT_TEXT","CustomizeExportDialog","props","_hClickDimension","setState","prevState","isShowDimension","_hClickTitle","isShowTitle","_hClickStyle","isShowStyle","_hSelectStyle","item","exportStyle","value","_hExport","data","onClose","chart","fn","_customOption","ChartExportConfig","merge","inputWidth","getValue","inputHeight","title","text","inputTitle","subtitle","inputSubtitle","apply","_refInputWidth","c","_refInputHeight","_refInputTitle","_refInputSubtitle","toolbarButtons","caption","onClick","optionStyles","createOptionStyles","_commandButtons","state","shouldComponentUpdate","nextProps","nextState","isShow","render","chartWidth","chartHeight","options","STYLE","rowDiv","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ChartExportConfig from '../../charts/ChartExportConfig';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport STYLE from '../styles/DialogStyles';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport Button from './Button'\r\n\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport InputText from '../zhn/InputText';\r\nimport InputSelect from '../zhn-select/InputSelect';\r\n\r\nconst S = {\r\n  GAP_BETWEEN_GROUP: {\r\n    marginTop: 10\r\n  },\r\n  LABEL_WIDTH : {\r\n    display: 'inline-block',\r\n    color: '#1b75bb',\r\n    width: 100,\r\n    paddingRight: 5,\r\n    textAlign: 'right',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  LABEL_HEIGHT : {\r\n    display: 'inline-block',\r\n    color: '#1b75bb',\r\n    paddingRight: 5,\r\n    paddingLeft: 3,\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  INPUT_NUMBER: {\r\n    height: 30,\r\n    marginLeft: 0,\r\n  },\r\n  INPUT_TEXT: {\r\n    width: 250,\r\n    height: 30,\r\n    marginLeft: 0\r\n  }\r\n};\r\n\r\nclass CustomizeExportDialog extends Component {\r\n\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.exportStyle = {}\r\n    this.toolbarButtons = [\r\n      { caption: 'D', onClick: this._hClickDimension },\r\n      { caption: 'T', onClick: this._hClickTitle },\r\n      { caption: 'S', onClick: this._hClickStyle }\r\n    ]\r\n    this.optionStyles = ChartExportConfig.createOptionStyles()\r\n    this._commandButtons = [\r\n         <Button.Flat\r\n            key=\"export\"\r\n            caption=\"Export\"\r\n            //accessKey=\"x\"\r\n            isPrimary={true}\r\n            onClick={this._hExport}\r\n         />\r\n    ];\r\n    this.state = {\r\n      isShowDimension: true,\r\n      isShowTitle: true,\r\n      isShowStyle: true\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n        && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _hClickDimension = () => {\r\n    this.setState(prevState => ({\r\n      isShowDimension: !prevState.isShowDimension\r\n    }))\r\n  }\r\n  _hClickTitle = () => {\r\n    this.setState(prevState => ({\r\n      isShowTitle: !prevState.isShowTitle\r\n    }))\r\n  }\r\n  _hClickStyle = () => {\r\n    this.setState(prevState => ({\r\n      isShowStyle: !prevState.isShowStyle\r\n    }))\r\n  }\r\n\r\n  _hSelectStyle = (item) => {\r\n    this.exportStyle = item\r\n      && item.value || {};\r\n  }\r\n\r\n  _hExport = () => {\r\n    const { data, onClose } = this.props\r\n    , { chart, fn } = data\r\n    , _customOption = ChartExportConfig.merge(\r\n      true, {\r\n        chart: {\r\n          width: this.inputWidth.getValue(),\r\n          height: this.inputHeight.getValue()\r\n        },\r\n        title: {\r\n          text: this.inputTitle.getValue()\r\n        },\r\n        subtitle: {\r\n          text: this.inputSubtitle.getValue()\r\n        }\r\n      }, this.exportStyle\r\n    );\r\n\r\n    fn.apply(chart, [null, _customOption]);\r\n    onClose();\r\n  }\r\n\r\n  _refInputWidth = c => this.inputWidth = c\r\n  _refInputHeight = c => this.inputHeight = c\r\n  _refInputTitle = c => this.inputTitle = c\r\n  _refInputSubtitle = c => this.inputSubtitle = c\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n    , { chart } = data\r\n    , { chartWidth, chartHeight, options } = chart\r\n    , title = options.title.text\r\n    , subtitle = options.subtitle.text\r\n    , {\r\n        isShowDimension, isShowTitle, isShowStyle\r\n      } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Customize Export Chart\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        onClose={onClose}\r\n      >\r\n         <ToolbarButtonCircle\r\n           buttons={this.toolbarButtons}\r\n         />\r\n         <ShowHide isShow={isShowDimension}>\r\n           <div style={STYLE.rowDiv}>\r\n              <span style={S.LABEL_WIDTH}>Dimension:</span>\r\n              <span style={S.LABEL_HEIGHT}>Width:</span>\r\n              <InputText\r\n                ref={this._refInputWidth}\r\n                initValue={chartWidth}\r\n                style={S.INPUT_NUMBER}\r\n              />\r\n              <span style={S.LABEL_HEIGHT}>Height:</span>\r\n              <InputText\r\n                ref={this._refInputHeight}\r\n                initValue={chartHeight}\r\n                style={S.INPUT_NUMBER}\r\n              />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowTitle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP }}>\r\n             <span style={S.LABEL_WIDTH}>Title:</span>\r\n             <InputText\r\n               ref={this._refInputTitle}\r\n               initValue={title}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n           <div style={STYLE.rowDiv}>\r\n             <span style={S.LABEL_WIDTH}>Subtitle:</span>\r\n             <InputText\r\n               ref={this._refInputSubtitle}\r\n               initValue={subtitle}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowStyle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP}}>\r\n             <span style={S.LABEL_WIDTH}>Style:</span>\r\n             <InputSelect\r\n               width=\"250\"\r\n               options={this.optionStyles}\r\n               placeholder=\"Default\"\r\n               onSelect={this._hSelectStyle}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeExportDialog\r\n"],"file":"CustomizeExportDialog.js"}