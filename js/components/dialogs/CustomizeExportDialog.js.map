{"version":3,"sources":["../../../src/components/dialogs/CustomizeExportDialog.jsx"],"names":["_S","LABEL","display","color","fontSize","fontWeight","S","GAP_BETWEEN_GROUP","marginTop","width","paddingRight","textAlign","LABEL_WIDTH","paddingLeft","LABEL_HEIGHT","INPUT_NUMBER","height","marginLeft","INPUT_TEXT","C","APP_HTML","DS_TOP_PADDING","DS_FONT_SIZE","W_MIN","W_MAX","H_MIN","H_MAX","_inRange","v","min","max","_crItemLabel","html","top","style","left","CustomizeExportDialog","props","_hClickDimension","setState","prevState","isShowDimension","_hClickTitle","isShowTitle","_hClickStyle","isShowStyle","_hSelectStyle","item","exportStyle","value","_getDimension","chart","chartWidth","chartHeight","_width","inputWidth","getValue","_height","inputHeight","_hExport","data","onClose","fn","_customOption","ChartExportConfig","merge","title","text","inputTitle","subtitle","inputSubtitle","labels","items","userOptions","zhConfig","dataSource","apply","_refInputWidth","c","_refInputHeight","_refInputTitle","_refInputSubtitle","toolbarButtons","caption","onClick","optionStyles","createOptionStyles","_commandButtons","state","shouldComponentUpdate","nextProps","nextState","isShow","render","options","STYLE","rowDiv","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ChartExportConfig from '../../charts/ChartExportConfig';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport STYLE from '../styles/DialogStyles';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport Button from './Button'\r\n\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport InputText from '../zhn/InputText';\r\nimport InputSelect from '../zhn-select/InputSelect';\r\n\r\nconst _S = {\r\n  LABEL: {\r\n    display: 'inline-block',\r\n    color: '#1b75bb',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  }\r\n};\r\n\r\nconst S = {\r\n  GAP_BETWEEN_GROUP: {\r\n    marginTop: 10\r\n  },\r\n  LABEL: {\r\n    ..._S.LABEL,\r\n    width: 100,\r\n    paddingRight: 5,\r\n    textAlign: 'right'\r\n  },\r\n  LABEL_WIDTH : {\r\n    ..._S.LABEL,\r\n    paddingRight: 5,\r\n    paddingLeft: 3\r\n  },\r\n  LABEL_HEIGHT: {\r\n    paddingLeft: 6,\r\n  },\r\n  INPUT_NUMBER: {\r\n    width: 60,\r\n    height: 30,\r\n    marginLeft: 0,\r\n  },\r\n  INPUT_TEXT: {\r\n    width: 250,\r\n    height: 30,\r\n    marginLeft: 0\r\n  }\r\n};\r\n\r\nconst C = {\r\n  APP_HTML: 'Web app ERC https://zhnzhn.github.io',\r\n  DS_TOP_PADDING: 90,\r\n  DS_FONT_SIZE: '10px',\r\n  W_MIN: 351,\r\n  W_MAX: 2001,\r\n  H_MIN: 251,\r\n  H_MAX: 1001\r\n};\r\n\r\nconst _inRange = (v, min, max) => v>min && v<max;\r\n\r\nconst _crItemLabel = (html, top=-70, fontSize='9px') => ({\r\n  html: html,\r\n  style: {\r\n    left: 0,\r\n    top: top,\r\n    color: '#909090',\r\n    'font-size': fontSize\r\n  }\r\n});\r\n\r\nclass CustomizeExportDialog extends Component {\r\n\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.exportStyle = {}\r\n    this.toolbarButtons = [\r\n      { caption: 'D', onClick: this._hClickDimension },\r\n      { caption: 'T', onClick: this._hClickTitle },\r\n      { caption: 'S', onClick: this._hClickStyle }\r\n    ]\r\n    this.optionStyles = ChartExportConfig.createOptionStyles()\r\n    this._commandButtons = [\r\n         <Button.Flat\r\n            key=\"export\"\r\n            caption=\"Export\"\r\n            //accessKey=\"x\"\r\n            isPrimary={true}\r\n            onClick={this._hExport}\r\n         />\r\n    ];\r\n    this.state = {\r\n      isShowDimension: true,\r\n      isShowTitle: true,\r\n      isShowStyle: true\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n        && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _hClickDimension = () => {\r\n    this.setState(prevState => ({\r\n      isShowDimension: !prevState.isShowDimension\r\n    }))\r\n  }\r\n  _hClickTitle = () => {\r\n    this.setState(prevState => ({\r\n      isShowTitle: !prevState.isShowTitle\r\n    }))\r\n  }\r\n  _hClickStyle = () => {\r\n    this.setState(prevState => ({\r\n      isShowStyle: !prevState.isShowStyle\r\n    }))\r\n  }\r\n\r\n  _hSelectStyle = (item) => {\r\n    this.exportStyle = item\r\n      && item.value || {};\r\n  }\r\n\r\n  _getDimension = (chart) => {\r\n    const { chartWidth, chartHeight } = chart\r\n    , _width = this.inputWidth.getValue()\r\n    , _height = this.inputHeight.getValue();\r\n    return {\r\n      width: _inRange(_width, C.W_MIN, C.W_MAX)\r\n        ? _width\r\n        : chartWidth,\r\n      height: _inRange(_height, C.H_MIN, C.H_MAX)\r\n        ? _height\r\n        : chartHeight\r\n    };\r\n  }\r\n\r\n  _hExport = () => {\r\n    const { data, onClose } = this.props\r\n    , { chart, fn } = data\r\n    , { width, height } = this._getDimension(chart)\r\n    , _customOption = ChartExportConfig.merge(\r\n        true, {\r\n          chart: { width, height },\r\n          title: {\r\n            text: this.inputTitle.getValue()\r\n          },\r\n          subtitle: {\r\n            text: this.inputSubtitle.getValue()\r\n          },\r\n          labels: {\r\n            items: [\r\n              _crItemLabel(C.APP_HTML),\r\n              _crItemLabel(\r\n                `DataSource: ${chart.userOptions.zhConfig?.dataSource ?? ''}`,\r\n                height - C.DS_TOP_PADDING, C.DS_FONT_SIZE\r\n              )\r\n            ]\r\n          }\r\n        }, this.exportStyle\r\n      );\r\n\r\n      fn.apply(chart, [null, _customOption]);\r\n      onClose();\r\n  }\r\n\r\n  _refInputWidth = c => this.inputWidth = c\r\n  _refInputHeight = c => this.inputHeight = c\r\n  _refInputTitle = c => this.inputTitle = c\r\n  _refInputSubtitle = c => this.inputSubtitle = c\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n    , { chart } = data\r\n    , { chartWidth, chartHeight, options } = chart\r\n    , title = options.title.text\r\n    , subtitle = options.subtitle.text\r\n    , {\r\n        isShowDimension, isShowTitle, isShowStyle\r\n      } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Customize Export Chart\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        onClose={onClose}\r\n      >\r\n         <ToolbarButtonCircle\r\n           buttons={this.toolbarButtons}\r\n         />\r\n         <ShowHide isShow={isShowDimension}>\r\n           <div style={STYLE.rowDiv}>\r\n              <span style={S.LABEL}>Dimension:</span>\r\n              <span style={S.LABEL_WIDTH}>Width:</span>\r\n              <InputText\r\n                ref={this._refInputWidth}\r\n                type=\"number\"\r\n                placeholder={chartWidth}\r\n                initValue={chartWidth}\r\n                style={S.INPUT_NUMBER}\r\n                min={C.W_MIN}\r\n                max={C.W_MAX}\r\n              />\r\n              <span style={{ ...S.LABEL_WIDTH, ...S.LABEL_HEIGHT}}>Height:</span>\r\n              <InputText\r\n                ref={this._refInputHeight}\r\n                type=\"number\"\r\n                placeholder={chartHeight}\r\n                initValue={chartHeight}\r\n                style={S.INPUT_NUMBER}\r\n                min={C.H_MIN}\r\n                max={C.H_MAX}\r\n              />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowTitle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP }}>\r\n             <span style={S.LABEL}>Title:</span>\r\n             <InputText\r\n               ref={this._refInputTitle}\r\n               initValue={title}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n           <div style={STYLE.rowDiv}>\r\n             <span style={S.LABEL}>Subtitle:</span>\r\n             <InputText\r\n               ref={this._refInputSubtitle}\r\n               initValue={subtitle}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowStyle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP}}>\r\n             <span style={S.LABEL}>Style:</span>\r\n             <InputSelect\r\n               width=\"250\"\r\n               options={this.optionStyles}\r\n               placeholder=\"Default\"\r\n               onSelect={this._hSelectStyle}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeExportDialog\r\n"],"file":"CustomizeExportDialog.js"}