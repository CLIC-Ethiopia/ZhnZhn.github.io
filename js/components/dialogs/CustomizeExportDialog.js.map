{"version":3,"sources":["../../../src/components/dialogs/CustomizeExportDialog.jsx"],"names":["S","GAP_BETWEEN_GROUP","marginTop","LABEL_WIDTH","color","display","textAlign","width","paddingRight","fontSize","fontWeight","LABEL_HEIGHT","paddingLeft","INPUT_NUMBER","marginLeft","height","INPUT_TEXT","CustomizeExportDialog","props","_handleClickDimension","setState","isShowDimension","state","_handleClickTitle","isShowTitle","_handleClickStyle","isShowStyle","_handleSelectStyle","item","exportStyle","value","_handleExport","data","onClose","chart","fn","_inputOption","inputWidth","getValue","inputHeight","title","text","inputTitle","subtitle","inputSubtitle","_customOption","apply","toolbarButtons","caption","onClick","optionStyles","createOptionStyles","_commandButtons","nextProps","nextState","isShow","chartWidth","chartHeight","options","rowDiv","c"],"mappings":"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","file":"CustomizeExportDialog.js","sourcesContent":["import React, { Component } from 'react';\r\nimport merge from 'lodash.merge';\r\n\r\nimport ChartExportConfig from '../../charts/ChartExportConfig';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport STYLE from '../styles/DialogStyles';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport Button from './Button'\r\n\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport InputText from '../zhn/InputText';\r\nimport InputSelect from '../zhn-select/InputSelect';\r\n\r\nconst S = {\r\n  GAP_BETWEEN_GROUP : {\r\n    marginTop: '10px'\r\n  },\r\n  LABEL_WIDTH : {\r\n    color: '#1B75BB',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    width: '100px',\r\n    paddingRight: '5px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  LABEL_HEIGHT : {\r\n    color: '#1B75BB',\r\n    display: 'inline-block',\r\n    paddingRight: '5px',\r\n    paddingLeft: '3px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  INPUT_NUMBER : {\r\n    marginLeft: '0px',\r\n    height : '30px'\r\n  },\r\n  INPUT_TEXT : {\r\n    width: '250px',\r\n    marginLeft: '0px',\r\n    height : '30px'\r\n  }\r\n}\r\n\r\nclass CustomizeExportDialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.exportStyle = {}\r\n    this.toolbarButtons = [\r\n      { caption: 'D', onClick: this._handleClickDimension },\r\n      { caption: 'T', onClick: this._handleClickTitle },\r\n      { caption: 'S', onClick: this._handleClickStyle }\r\n    ]\r\n    this.optionStyles = ChartExportConfig.createOptionStyles()\r\n    this._commandButtons = [\r\n         <Button.Flat\r\n            caption=\"Export\"\r\n            //accessKey=\"x\"\r\n            isPrimary={true}\r\n            onClick={this._handleExport}\r\n         />\r\n    ];\r\n    this.state = {\r\n      isShowDimension : true,\r\n      isShowTitle : true,\r\n      isShowStyle : true\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickDimension = () => {\r\n    this.setState({ isShowDimension: !this.state.isShowDimension });\r\n  }\r\n  _handleClickTitle = () => {\r\n    this.setState({ isShowTitle: !this.state.isShowTitle });\r\n  }\r\n  _handleClickStyle = () => {\r\n    this.setState({ isShowStyle: !this.state.isShowStyle });\r\n  }\r\n\r\n  _handleSelectStyle = (item) => {\r\n    this.exportStyle = item.value;\r\n  }\r\n\r\n  _handleExport = () => {\r\n    const { data, onClose } = this.props\r\n        , { chart, fn } = data\r\n\r\n    const _inputOption = {\r\n      chart : {\r\n        width : this.inputWidth.getValue(),\r\n        height : this.inputHeight.getValue()\r\n      },\r\n      title : {\r\n        text : this.inputTitle.getValue()\r\n      },\r\n      subtitle : {\r\n        text : this.inputSubtitle.getValue()\r\n      }\r\n    }\r\n    const _customOption = merge(_inputOption, this.exportStyle);\r\n\r\n    fn.apply(chart, [null, _customOption]);\r\n    onClose();\r\n  }\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n        , { chart } = data\r\n        , { chartWidth, chartHeight, options } = chart\r\n        , title = options.title.text\r\n        , subtitle = options.subtitle.text\r\n        , {\r\n            isShowDimension, isShowTitle, isShowStyle\r\n          } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Customize Export Chart\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        onClose={onClose}\r\n      >\r\n         <ToolbarButtonCircle\r\n           buttons={this.toolbarButtons}\r\n         />\r\n         <ShowHide isShow={isShowDimension}>\r\n           <div style={STYLE.rowDiv}>\r\n              <span style={S.LABEL_WIDTH}>Dimension:</span>\r\n              <span style={S.LABEL_HEIGHT}>Width:</span>\r\n              <InputText\r\n                ref={ c => this.inputWidth = c }\r\n                initValue={chartWidth}\r\n                style={S.INPUT_NUMBER}\r\n              />\r\n              <span style={S.LABEL_HEIGHT}>Height:</span>\r\n              <InputText\r\n                ref={ c => this.inputHeight = c }\r\n                initValue={chartHeight}\r\n                style={S.INPUT_NUMBER}\r\n              />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowTitle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP }}>\r\n             <span style={S.LABEL_WIDTH}>Title:</span>\r\n             <InputText\r\n               ref={ c => this.inputTitle = c }\r\n               initValue={title}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n           <div style={STYLE.rowDiv}>\r\n             <span style={S.LABEL_WIDTH}>Subtitle:</span>\r\n             <InputText\r\n               ref={ c => this.inputSubtitle = c }\r\n               initValue={subtitle}\r\n               style={S.INPUT_TEXT}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n         <ShowHide isShow={isShowStyle}>\r\n           <div style={{ ...STYLE.rowDiv, ...S.GAP_BETWEEN_GROUP}}>\r\n             <span style={S.LABEL_WIDTH}>Style:</span>\r\n             <InputSelect\r\n               width=\"250\"\r\n               options={this.optionStyles}\r\n               placeholder=\"Default\"\r\n               onSelect={this._handleSelectStyle}\r\n             />\r\n           </div>\r\n         </ShowHide>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomizeExportDialog\r\n"]}