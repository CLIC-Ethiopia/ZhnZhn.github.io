{"version":3,"sources":["../../../src/components/dialogs/ChartTypes.js"],"names":["_isArr","Array","isArray","V","A","A_Y","S","L","S_C","M","C","C_C","C_2","B","B_C","B_2","B_L","D","TM","TM_C","TM_2","TM_2_C","CATEGORY_TYPES","EMPTY","_crItem","confArr","caption","value","dim","compType","_crItems","arr","map","_isMonthly","mapFrequency","_crDF3","filter","Boolean","_crDF","captions","concat","CompItemType","EUROSTAT_MAP","_crT1","_crT1A","_crT2","_crT2A","_crT3All","oneCaption","_crT3","_crT3B","_crT3A","_crT3A2","_crT4","twoCaption","_r","DF","t1","t1a","t2","t2a","t3","t3b","t3a","t3a2","t4","df3","_crCaptions","configs","selectProps","_arr","item","ChartTypes","crOptions","dialogOption","chartsType","mF","dfProps","_mapFrequency","_captions","_crOptions","isCategory","chartItem","indexOf"],"mappings":"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","sourcesContent":["\r\nimport { CompItemType } from '../../constants/Type'\r\n\r\n\r\nconst _isArr = Array.isArray;\r\n\r\nconst V = {\r\n  A: 'AREA',\r\n  A_Y: 'AREA_YEARLY',\r\n  S: 'SPLINE',\r\n  L: 'LINE',\r\n  S_C: 'COLUMN',\r\n  M: 'MAP',\r\n  C: 'COLUMN_SET',\r\n  C_C: 'COLUMN_CLUSTER' ,\r\n  C_2: 'COLUMN_BY_2',\r\n  B: 'BAR_SET',\r\n  B_C: 'BAR_CLUSTER',\r\n  B_2: 'BAR_BY_2',\r\n  B_L: 'BAR_WITH_LABELS',\r\n  D: 'DOT_SET',\r\n  TM: 'TREE_MAP',\r\n  TM_C: 'TREE_MAP_CLUSTER',\r\n  TM_2: 'TREE_MAP_2',\r\n  TM_2_C: 'TREE_MAP_2_CLUSTER'\r\n};\r\n\r\nconst CATEGORY_TYPES = [\r\n  V.M,\r\n  V.C, V.C_C, V.C_2,\r\n  V.B, V.B_C, V.B_2, V.B_L,\r\n  V.D,\r\n  V.TM, V.TM_C, V.TM_2, V.TM_2_C\r\n];\r\n\r\nconst C = {\r\n  EMPTY: ''\r\n};\r\n\r\nconst _crItem = confArr => ({\r\n  caption: confArr[0],\r\n  value: confArr[1],\r\n  dim: confArr[2],\r\n  compType: confArr[3]\r\n});\r\nconst _crItems = arr => arr.map(_crItem);\r\n\r\nconst _isMonthly = mapFrequency => !mapFrequency\r\n  || mapFrequency === 'M';\r\n\r\nconst _crDF3 = (mapFrequency) => _crItems([\r\n  ['Default: Spline', V.S ],\r\n  ['Line', V.L],\r\n  _isMonthly(mapFrequency) && ['Yearly by Months', V.A_Y ],\r\n  ['Area', V.A ],\r\n  ['Column', V.S_C ],\r\n  ['Bar: All Countries', V.B ],\r\n  ['Bar+Labels: All Countries', V.B_L ],\r\n  ['Column: All Countries', V.C ],\r\n  ['Dots: All Countries', V.D ]\r\n].filter(Boolean));\r\n\r\nconst _crDF = (captions, mapFrequency) => _crDF3(mapFrequency)\r\n .concat(_crItems([\r\n   ['Map: All Countries' , V.M, void 0, CompItemType.EUROSTAT_MAP ]\r\n ]));\r\n\r\nconst _crT1 = () => ([\r\n  _crItem(['Default: Spline', V.S ]),\r\n  _crItem(['Line', V.L]),\r\n  _crItem(['Area', V.A]),\r\n]);\r\nconst _crT1A = () => ([\r\n  _crItem(['Default: Area', V.A]),\r\n  _crItem(['Line', V.L]),\r\n  _crItem(['Spline', V.S ])\r\n]);\r\n\r\n\r\nconst _crT2 = () => ([\r\n  ..._crT1(),\r\n  _crItem(['Column', V.S_C ]),\r\n]);\r\n\r\nconst _crT2A = () => ([\r\n  ..._crT2(),\r\n  _crItem(['Yearly by Months' , V.A_Y ])\r\n]);\r\n\r\nconst _crT3All = (oneCaption) => _crItems([\r\n  [`Column: By ${oneCaption}`, V.C, oneCaption],\r\n  [`Column: By ${oneCaption}: Cluster`, V.C_C, oneCaption],\r\n  [`Bar: By ${oneCaption}`, V.B, oneCaption],\r\n  [`Bar: By ${oneCaption}: Cluster`, V.B_C, oneCaption]\r\n]);\r\n\r\nconst _crT3 = ([oneCaption]) => ([\r\n  _crItem(['Default: Spline', V.S]),\r\n  ..._crT3All(oneCaption)\r\n]);\r\n\r\nconst _crT3B = ([oneCaption]) => ([\r\n  _crItem(['Default: Spline', V.S]),\r\n  _crItem(['Yearly by Months', V.A_Y]),\r\n  ..._crT3All(oneCaption)\r\n]);\r\n\r\n\r\nconst _crT3A = ([oneCaption]) => ([\r\n  ..._crT3([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}`, V.TM, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Cluster`, V.TM_C, oneCaption])\r\n]);\r\n\r\nconst _crT3A2 = ([oneCaption]) => ([\r\n  ..._crT3A([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2`, V.TM_2, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2: Cluster`, V.TM_2_C, oneCaption])\r\n]);\r\n\r\nconst _crT4 = ([oneCaption, twoCaption]) => ([\r\n  ..._crT3([oneCaption]),\r\n  _crItem([`Column: By ${twoCaption}`, V.C_2, twoCaption]),\r\n  _crItem([`Bar: By ${twoCaption}`, V.B_2, twoCaption])\r\n]);\r\n\r\nconst _r = {\r\n  DF: _crDF,\r\n  t1: _crT1,\r\n  t1a: _crT1A,\r\n  t2: _crT2,\r\n  t2a: _crT2A,\r\n  t3: _crT3,\r\n  t3b: _crT3B,\r\n  t3a: _crT3A,\r\n  t3a2: _crT3A2,\r\n  t4: _crT4,\r\n  df3: _crDF3\r\n};\r\n\r\nconst _crCaptions = ({\r\n  configs,\r\n  selectProps,\r\n  oneCaption=C.EMPTY,\r\n  twoCaption=C.EMPTY\r\n}) => {\r\n  const _arr = configs || selectProps;\r\n  return _isArr(_arr)\r\n    ? _arr.map(item => item.caption || C.EMPTY)\r\n    : [ oneCaption, twoCaption ];\r\n};\r\n\r\nconst ChartTypes = {\r\n  crOptions(dialogOption, { mapFrequency }={}){\r\n     const { chartsType, mapFrequency:mF, dfProps={} } = dialogOption\r\n     , _mapFrequency = mapFrequency\r\n          || mF || dfProps.mapFrequency\r\n     , _captions = _crCaptions(dialogOption)\r\n     , _crOptions = _r[chartsType] || _r.DF;\r\n     return _crOptions(_captions, _mapFrequency);\r\n  },\r\n\r\n  isCategory(chartItem) {\r\n    if (!chartItem) {\r\n      return false;\r\n    }\r\n    return CATEGORY_TYPES\r\n      .indexOf(chartItem.value) !== -1;\r\n  }\r\n\r\n};\r\n\r\nexport default ChartTypes\r\n"],"file":"ChartTypes.js"}