{"version":3,"sources":["../../../src/components/dialogs/ChartTypes.js"],"names":["_isArr","Array","isArray","V","A","A_Y","S","L","S_C","M","C","C_C","B","B_C","B_L","D","TM","TM_C","TM_2","TM_2_C","CATEGORY_TYPES","EMPTY","_crItem","confArr","caption","value","dim","compType","_crItems","arr","map","_isMonthly","mapFrequency","_crDF3","oneCaption","filter","Boolean","_crDF","captions","concat","CIT_EUROSTAT_MAP","_crT1","_crT1A","_crT2","_crYearlyByMonthItem","_crT2A","_","_crT3All","_crT2AE","_crT3","_crT3B","_crT3A","_crT3A2","_r","DF","t1","t1a","t2","t2a","t2ae","t3","t3b","t3a","t3a2","df3","_crCaptions","configs","selectProps","twoCaption","_arr","item","ChartTypes","crOptions","dialogOption","chartsType","mF","dfProps","_mapFrequency","_captions","_crOptions","crChartOptions","isCategory","chartItem","indexOf"],"mappings":"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","sourcesContent":["import toPlural from '../../utils/toPlural';\r\nimport { CIT_EUROSTAT_MAP } from '../../constants/CompItemType';\r\n\r\nconst _isArr = Array.isArray;\r\n\r\nconst V = {\r\n  A: 'AREA',\r\n  A_Y: 'AREA_YEARLY',\r\n  S: 'SPLINE',\r\n  L: 'LINE',\r\n  S_C: 'COLUMN',\r\n  M: 'MAP',\r\n  C: 'COLUMN_SET',\r\n  C_C: 'COLUMN_CLUSTER' ,\r\n  B: 'BAR_SET',\r\n  B_C: 'BAR_CLUSTER',\r\n  B_L: 'BAR_WITH_LABELS',\r\n  D: 'DOT_SET',\r\n  TM: 'TREE_MAP',\r\n  TM_C: 'TREE_MAP_CLUSTER',\r\n  TM_2: 'TREE_MAP_2',\r\n  TM_2_C: 'TREE_MAP_2_CLUSTER'\r\n};\r\n\r\nconst CATEGORY_TYPES = [\r\n  V.M,\r\n  V.C, V.C_C,\r\n  V.B, V.B_C, V.B_L,\r\n  V.D,\r\n  V.TM, V.TM_C, V.TM_2, V.TM_2_C\r\n];\r\n\r\nconst EMPTY = '';\r\n\r\nconst _crItem = confArr => ({\r\n  caption: confArr[0],\r\n  value: confArr[1],\r\n  dim: confArr[2],\r\n  compType: confArr[3]\r\n});\r\nconst _crItems = arr => arr.map(_crItem);\r\n\r\nconst _isMonthly = mapFrequency => !mapFrequency\r\n  || mapFrequency === 'M';\r\n\r\nconst _crDF3 = (oneCaption, mapFrequency) => _crItems([\r\n  ['Default: Spline', V.S ],\r\n  ['Line', V.L],\r\n  _isMonthly(mapFrequency) && ['Yearly by Months', V.A_Y ],\r\n  ['Area', V.A ],\r\n  ['Column', V.S_C ],\r\n  [`Bar: By ${oneCaption}`, V.B ],\r\n  [`Bar+Labels: By ${oneCaption}`, V.B_L ],\r\n  [`Column: By ${oneCaption}`, V.C ],\r\n  [`Dots: By ${oneCaption}`, V.D ]\r\n].filter(Boolean));\r\n\r\nconst _crDF = (captions, mapFrequency) => {\r\n  const oneCaption = toPlural(captions[0]) || 'Dim';\r\n  return _crDF3(oneCaption, mapFrequency)\r\n    .concat(_crItems([\r\n       [`Map: By ${oneCaption}` , V.M, void 0, CIT_EUROSTAT_MAP ]\r\n    ]));\r\n};\r\n\r\nconst _crT1 = () => [\r\n  _crItem(['Default: Spline', V.S ]),\r\n  _crItem(['Line', V.L]),\r\n  _crItem(['Area', V.A]),\r\n];\r\nconst _crT1A = () => [\r\n  _crItem(['Default: Area', V.A]),\r\n  _crItem(['Line', V.L]),\r\n  _crItem(['Spline', V.S ])\r\n];\r\n\r\n\r\nconst _crT2 = () => [\r\n  ..._crT1(),\r\n  _crItem(['Column', V.S_C ]),\r\n];\r\n\r\nconst _crYearlyByMonthItem = mapFrequency =>\r\n  _isMonthly(mapFrequency) && _crItem(['Yearly by Months' , V.A_Y ]);\r\n\r\nconst _crT2A = (_, mapFrequency) => [\r\n  ..._crT2(),\r\n  _crYearlyByMonthItem(mapFrequency)\r\n].filter(Boolean);\r\n\r\nconst _crT3All = (oneCaption) => _crItems([\r\n  [`Column: By ${oneCaption}`, V.C, oneCaption],\r\n  [`Column: By ${oneCaption}: Cluster`, V.C_C, oneCaption],\r\n  [`Bar: By ${oneCaption}`, V.B, oneCaption],\r\n  [`Bar: By ${oneCaption}: Cluster`, V.B_C, oneCaption]\r\n]);\r\n\r\nconst _crT2AE = (_, mapFrequency) => [\r\n  ..._crT2A(_, mapFrequency),\r\n  ..._crT3All(\"Dim\")\r\n];\r\n\r\nconst _crT3 = ([oneCaption]) => [\r\n  _crItem(['Default: Spline', V.S]),\r\n  ..._crT3All(oneCaption)\r\n];\r\n\r\nconst _crT3B = ([oneCaption], mapFrequency) => [\r\n  _crItem(['Default: Spline', V.S]),\r\n  _crYearlyByMonthItem(mapFrequency),\r\n  ..._crT3All(oneCaption)\r\n].filter(Boolean);\r\n\r\n\r\nconst _crT3A = ([oneCaption]) => [\r\n  ..._crT3([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}`, V.TM, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Cluster`, V.TM_C, oneCaption])\r\n];\r\n\r\nconst _crT3A2 = ([oneCaption]) => [\r\n  ..._crT3A([oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2`, V.TM_2, oneCaption]),\r\n  _crItem([`TreeMap: By ${oneCaption}: Depth 2: Cluster`, V.TM_2_C, oneCaption])\r\n];\r\n\r\nconst _r = {\r\n  DF: _crDF,\r\n  t1: _crT1,\r\n  t1a: _crT1A,\r\n  t2: _crT2,\r\n  t2a: _crT2A,\r\n  t2ae: _crT2AE,\r\n  t3: _crT3,\r\n  t3b: _crT3B,\r\n  t3a: _crT3A,\r\n  t3a2: _crT3A2,\r\n  df3: _crDF3\r\n};\r\n\r\nconst _crCaptions = ({\r\n  configs,\r\n  selectProps,\r\n  oneCaption=EMPTY,\r\n  twoCaption=EMPTY\r\n}) => {\r\n  const _arr = configs || selectProps;\r\n  return _isArr(_arr)\r\n    ? _arr.map(item => item.caption || EMPTY)\r\n    : [ oneCaption, twoCaption ];\r\n};\r\n\r\nconst ChartTypes = {\r\n  crOptions(dialogOption, { mapFrequency }={}){\r\n     const { chartsType, mapFrequency:mF, dfProps={} } = dialogOption\r\n     , _mapFrequency = mapFrequency\r\n          || mF || dfProps.mapFrequency\r\n     , _captions = _crCaptions(dialogOption)\r\n     , _crOptions = _r[chartsType] || _r.DF;\r\n     return _crOptions(_captions, _mapFrequency);\r\n  },\r\n\r\n  crChartOptions(selectProps, chartsType, mapFrequency) {\r\n    const _captions = _crCaptions({ selectProps })\r\n    , _crOptions = _r[chartsType] || _r.DF;\r\n    return _crOptions(_captions, mapFrequency);\r\n  },\r\n\r\n  isCategory(chartItem) {\r\n    if (!chartItem) {\r\n      return false;\r\n    }\r\n    return CATEGORY_TYPES\r\n      .indexOf(chartItem.value) !== -1;\r\n  }\r\n\r\n};\r\n\r\nexport default ChartTypes\r\n"],"file":"ChartTypes.js"}