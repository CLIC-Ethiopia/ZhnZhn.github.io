{"version":3,"sources":["../../../src/components/dialogs/DialogType3.jsx"],"names":["DF_TIMEOUT","transformOptions","caption","value","DialogType3","withToolbar","withValidationLoad","props","_handleClickTransform","setState","isShowTransform","prevState","_handleSelectTransform","option","transform","_clearLoaded","one","isLoaded","_handleSelectStock","_handleLoad","setTimeout","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","msgOnNotSelected","oneCaption","itemCaption","msg","push","datesFragment","getValidation","isValid","datesMsg","concat","length","getValues","fromDate","toDate","loadFn","_handleClose","_handleWithValidationClose","undefined","noDate","isTransform","toolbarButtons","_createType2WithToolbar","onClick","_commandButtons","state","isShowLabels","isShowDate","validationMessages","nextProps","nextState","isShow","onShow","onFront","oneURI","optionURI","optionsJsonProp","optionNames","isWithInputStock","initFromDate","initToDate","msgOnNotValidFormat","onTestDate","_oneCaption","_oneURI","c","defaultProps"],"mappings":"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","file":"DialogType3.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\n\r\nconst DF_TIMEOUT = 4000;\r\n\r\nconst transformOptions = [\r\n  { caption: \"NO EFFECT: z[t]=y[t]\", value: \"none\" },\r\n  { caption: \"ROW-ON-ROW CHANGE: z[t]=y[t]–y[t-1]\", value: \"diff\" },\r\n  { caption: \"ROW-ON-ROW % CHANGE: z[t]=(y[t]–y[t-1])/y[t-1]\", value: \"rdiff\" },\r\n  { caption: \"LATEST VALUE AS % INCREMENT: z[t]=(y[latest]–y[t])/y[t]\", value: \"rdiff_from\" },\r\n  { caption: \"SCALE SERIES TO START AT 100: z[t]=y[t]÷y[0]*100\", value: \"normalize\" }\r\n];\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass DialogType3 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n    itemCaption: PropTypes.string,\r\n    optionURI: PropTypes.string,\r\n    optionsJsonProp: PropTypes.string,\r\n    optionNames: PropTypes.string,\r\n    initFromDate: PropTypes.string,\r\n    initToDate: PropTypes.string,\r\n    msgOnNotValidFormat: PropTypes.func,\r\n    onTestDate: PropTypes.func,\r\n    onShow: PropTypes.func,\r\n\r\n    descrUrl: PropTypes.string,\r\n    isTransform: PropTypes.bool,\r\n    onClickInfo: PropTypes.func,\r\n    loadFn: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    itemCaption: 'Stock',\r\n    optionNames: 'Stocks'\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.one = undefined\r\n    this.transform = undefined\r\n    this.isLoaded = false\r\n\r\n    const { noDate, isTransform } = props;\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n       props, { noDate }\r\n    )\r\n    if (isTransform){\r\n      this.toolbarButtons.push({\r\n        caption: 'T', onClick: this._handleClickTransform\r\n      })\r\n    }\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ]\r\n    this.state = {\r\n       isShowLabels: true,\r\n       isShowDate: true,\r\n       isShowTransform: false,\r\n       validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickTransform = () => {\r\n    this.setState(prevState => {\r\n      return { isShowTransform: !prevState.isShowTransform };\r\n    })\r\n  }\r\n  _handleSelectTransform = (option) => {\r\n    this.transform = option\r\n  }\r\n\r\n  _clearLoaded = (one) => {\r\n    if (this.isLoaded && this.one === one) {\r\n      this.isLoaded = false\r\n    }\r\n  }\r\n  _handleSelectStock = (one) => {\r\n    if (one && this.one === one && !this.isLoaded) {\r\n      this._handleLoad()\r\n      this.isLoaded = true\r\n      setTimeout(this._clearLoaded, DF_TIMEOUT, one)\r\n    } else {\r\n      this.one = one\r\n      this.isLoaded = false\r\n    }\r\n\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    //event.target.focus();\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n    const {\r\n            msgOnNotSelected, oneCaption, itemCaption,\r\n          } = this.props;\r\n    let msg = [];\r\n\r\n    if (!this.one) {\r\n      msg.push(msgOnNotSelected(oneCaption || itemCaption));\r\n    }\r\n\r\n    if (this.datesFragment) {\r\n       const {\r\n               isValid, datesMsg\r\n             } = this.datesFragment.getValidation();\r\n       if (!isValid) {\r\n         msg = msg.concat(datesMsg);\r\n       }\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0)\r\n         ? true\r\n         : false;\r\n    return msg;\r\n  }\r\n\r\n  _createLoadOption = () => {\r\n    const { fromDate, toDate } = this.datesFragment\r\n              ? this.datesFragment.getValues()\r\n              : {};\r\n    return this.props.loadFn(\r\n      this.props, {\r\n        one: this.one,\r\n        fromDate, toDate,\r\n        transform: this.transform\r\n      }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow, onFront,\r\n            oneURI, optionURI, optionsJsonProp,\r\n            oneCaption, itemCaption, optionNames,\r\n            isWithInputStock,\r\n            noDate,\r\n            initFromDate, initToDate,\r\n            msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , _oneCaption = oneCaption || itemCaption\r\n        , _oneURI = oneURI || optionURI\r\n        , {\r\n            isShowLabels, isShowTransform, isShowDate,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onFront={onFront}\r\n           onClose={this._handleClose}\r\n       >\r\n         <D.ToolbarButtonCircle\r\n           buttons={this.toolbarButtons}\r\n         />\r\n         <D.SelectWithLoad\r\n           isShow={isShow}\r\n           isShowLabels={isShowLabels}\r\n           uri={_oneURI}\r\n           jsonProp={optionsJsonProp}\r\n           caption={_oneCaption}\r\n           optionNames={optionNames}\r\n           isWithInput={isWithInputStock}\r\n           onSelect={this._handleSelectStock}\r\n         />\r\n         <D.ShowHide isShow={isShowTransform}>\r\n           <D.RowInputSelect\r\n             isShowLabels={isShowLabels}\r\n             caption=\"Transform\"\r\n             options={transformOptions}\r\n             onSelect={this._handleSelectTransform}\r\n           />\r\n         </D.ShowHide>\r\n         {\r\n           !noDate &&\r\n           <D.ShowHide isShow={isShowDate}>\r\n             <D.DatesFragment\r\n                ref={c => this.datesFragment = c}\r\n                isShowLabels={isShowLabels}\r\n                initFromDate={initFromDate}\r\n                initToDate={initToDate}\r\n                msgOnNotValidFormat={msgOnNotValidFormat}\r\n                onTestDate={onTestDate}\r\n             />\r\n           </D.ShowHide>\r\n         }\r\n         <D.ValidationMessages\r\n            validationMessages={validationMessages}\r\n         />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3\r\n"]}