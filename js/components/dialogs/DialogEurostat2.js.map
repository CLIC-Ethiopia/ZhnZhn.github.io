{"version":3,"sources":["../../../src/components/dialogs/DialogEurostat2.jsx"],"names":["DATE_PLACEHOLDER","MAP_FREQUENCY_DF","AREA","MAP","categoryTypes","chartTypeOptions","caption","value","compType","EUROSTAT_MAP","isCategoryType","chartType","DialogEurostat2","props","state","isShowDate","dateDefault","dateOptions","validationMessages","_handleSelectOne","one","_updateForDate","date","undefined","two","mapFrequency","mapDateDf","config","frequency","createEurostatSelect","options","setState","_handleSelectTwo","_handleSelectChartType","_handleSelectDate","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","twoCaption","msg","push","msgOnNotSelected","isValid","length","_handleClose","_handleWithValidationClose","onClose","toolbarButtons","onClick","_clickInfoWithToolbar","bind","nextProps","nextState","isShow","onShow","oneURI","oneJsonProp","twoURI","twoJsonProp","_commandButtons","displayName"],"mappings":"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","file":"DialogEurostat2.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport createLoadOptions from '../../flux/creaters/eurostat2'\r\n\r\nimport { CompItemType } from '../../constants/Type';\r\nimport DateUtils from '../../utils/DateUtils';\r\nimport { isStrInArr } from '../../utils/is';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\n\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport SelectWithLoad from './SelectWithLoad';\r\nimport ActionButton from '../zhn/ActionButton';\r\nimport ShowHide from '../zhn/ShowHide';\r\nimport RowInputSelect from './RowInputSelect';\r\n\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\n\r\nimport withToolbar from './decorators/withToolbar';\r\nimport withValidationLoad from './decorators/withValidationLoad';\r\n\r\nconst  DATE_PLACEHOLDER = 'Before Select Indicator'\r\n     , MAP_FREQUENCY_DF = 'M'\r\n     , AREA = 'AREA'\r\n     , MAP = 'MAP'\r\n     , categoryTypes = [ 'MAP', 'COLUMN', 'BAR'];\r\n\r\nconst chartTypeOptions = [\r\n    { caption : 'Default : Area', value: AREA },\r\n    { caption : 'Map : All Countries' , value: MAP, compType : CompItemType.EUROSTAT_MAP },\r\n    { caption : 'Column : All Countries', value: 'COLUMN' },\r\n    { caption : 'Bar : All Countries', value: 'BAR' }\r\n]\r\n\r\nconst isCategoryType = (chartType) => {\r\n  if (!chartType){\r\n    return false;\r\n  }\r\n  return isStrInArr(chartType.value)(categoryTypes);\r\n}\r\n\r\n\r\n@withToolbar\r\n@withValidationLoad\r\nclass DialogEurostat2 extends Component {\r\n\r\n  state = {\r\n    isShowDate : false,\r\n    dateDefault : DATE_PLACEHOLDER,\r\n    dateOptions : [],\r\n    validationMessages: []\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.one = undefined;\r\n    this.two = undefined;\r\n    this.date = undefined;\r\n    this.chartType = undefined;\r\n\r\n    this.toolbarButtons = [\r\n      { caption: 'I', onClick: this._clickInfoWithToolbar.bind(this) }\r\n    ];\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n\r\n  _updateForDate = () => {\r\n    this.date = undefined;\r\n    const frequency = (this.two)\r\n             ? (this.props.mapFrequency)\r\n                  ? this.props.mapFrequency\r\n                  : (this.two.mapFrequency)\r\n                       ? this.two.mapFrequency\r\n                       : MAP_FREQUENCY_DF\r\n             : undefined\r\n         , { mapDateDf } = this.props\r\n         , config = (frequency)\r\n             ? DateUtils.createEurostatSelect(frequency, mapDateDf)\r\n             : { dateDefault : DATE_PLACEHOLDER , options : [] };\r\n\r\n    this.setState({\r\n       isShowDate : true,\r\n       dateDefault : config.dateDefault,\r\n       dateOptions : config.options\r\n    });\r\n  }\r\n\r\n  _handleSelectTwo = (two) => {\r\n    this.two = two;\r\n    if(isCategoryType(this.chartType)){\r\n      this._updateForDate();\r\n    }\r\n  }\r\n\r\n  _handleSelectChartType = (chartType) => {\r\n    this.chartType = chartType;\r\n    if(isCategoryType(this.chartType)){\r\n      this._updateForDate();\r\n    } else {\r\n      this.setState({ isShowDate : false });\r\n    }\r\n  }\r\n\r\n  _handleSelectDate = (date) => {\r\n    this.date = date;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption, twoCaption } = this.props;\r\n     let msg = [];\r\n\r\n     if(!isCategoryType(this.chartType)){\r\n        if (!this.one) { msg.push(this.props.msgOnNotSelected(oneCaption)); }\r\n     }\r\n     if (!this.two) { msg.push(this.props.msgOnNotSelected(twoCaption)); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { one, two, chartType, date } = this\r\n        , { dateDefault } = this.state;\r\n    return createLoadOptions(\r\n      this.props,\r\n      { one, two, chartType, date, dateDefault }\r\n    );\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp\r\n          } = this.props\r\n        , { isShowDate, dateDefault, dateOptions, validationMessages } = this.state\r\n        , _commandButtons = [\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Load\"\r\n          onClick={this._handleLoad}\r\n       />\r\n    ];\r\n\r\n    return(\r\n        <DraggableDialog\r\n             caption={caption}\r\n             isShow={isShow}\r\n             commandButtons={_commandButtons}\r\n             onShowChart={onShow}\r\n             onClose={this._handleClose}\r\n         >\r\n             <ToolbarButtonCircle\r\n               buttons={this.toolbarButtons}\r\n             />\r\n             <SelectWithLoad\r\n               isShow={isShow}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames={'Items'}\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n             <SelectWithLoad\r\n               isShow={isShow}\r\n               uri={twoURI}\r\n               jsonProp={twoJsonProp}\r\n               caption={twoCaption}\r\n               optionNames={'Items'}\r\n               onSelect={this._handleSelectTwo}\r\n             />\r\n             <RowInputSelect\r\n               caption={'Chart Type'}\r\n               placeholder={'Default: Area'}\r\n               options={chartTypeOptions}\r\n               onSelect={this._handleSelectChartType}\r\n             />\r\n             <ShowHide isShow={isShowDate}>\r\n               <RowInputSelect\r\n                  caption={'For Date'}\r\n                  placeholder={dateDefault}\r\n                  options={dateOptions}\r\n                  onSelect={this._handleSelectDate}\r\n               />\r\n             </ShowHide>\r\n             <ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nDialogEurostat2.displayName = 'DialogEurostat2';\r\n\r\nexport default DialogEurostat2\r\n"]}