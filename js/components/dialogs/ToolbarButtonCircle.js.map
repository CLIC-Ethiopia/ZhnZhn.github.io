{"version":3,"sources":["../../../src/components/dialogs/ToolbarButtonCircle.jsx"],"names":["STYLE","ROW","paddingTop","paddingBottom","BUTTON_CIRCLE","marginLeft","ToolbarButtonCircle","_renderButtons","buttons","map","button","index","caption","onClick","nextProps","nextState","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,QAAQ;AACZC,OAAM;AACJC,gBAAY,KADR;AAEJC,mBAAe;AAFX,GADM;AAKZC,iBAAgB;AACdC,gBAAY;AADE;AALJ,CAAd;;AAUA;;IACMC,mB;;;;;;;;;;;;;;8NASJC,c,GAAiB,YAAgB;AAAA,UAAfC,OAAe,uEAAP,EAAO;;AAC/B,aAAOA,QAAQC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,YAC7BC,OAD6B,GACTF,MADS,CAC7BE,OAD6B;AAAA,YACpBC,OADoB,GACTH,MADS,CACpBG,OADoB;;AAEpC,eACE;AACE,eAAKD,UAAUD,KADjB;AAEE,mBAASC,OAFX;AAGE,iBAAOZ,MAAMI,aAHf;AAIE,mBAASS;AAJX,UADF;AAQD,OAVM,CAAP;AAWD,K;;;;;0CAnBqBC,S,EAAWC,S,EAAU;AACzC,UAAID,UAAUN,OAAV,KAAsB,KAAKQ,KAAL,CAAWR,OAArC,EAA6C;AAC3C,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAgBO;AAAA,UACEA,OADF,GACc,KAAKQ,KADnB,CACER,OADF;;AAEN,aACE;AAAA;AAAA,UAAK,OAAOR,MAAMC,GAAlB;AACG,aAAKM,cAAL,CAAoBC,OAApB;AADH,OADF;AAKD;;;;AAGH;;kBAEeF,mB","file":"ToolbarButtonCircle.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Row from './Row';\r\nimport ButtonCircle from '../zhn/ButtonCircle';\r\n\r\nconst STYLE = {\r\n  ROW : {\r\n    paddingTop: '4px',\r\n    paddingBottom: '8px'\r\n  },\r\n  BUTTON_CIRCLE : {\r\n    marginLeft: '20px'\r\n  }\r\n}\r\n\r\n//const ToolbarButtonCircle = React.createClass({\r\nclass ToolbarButtonCircle extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps.buttons === this.props.buttons){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _renderButtons = (buttons=[]) => {\r\n    return buttons.map((button, index) => {\r\n      const {caption, onClick} = button\r\n      return (\r\n        <ButtonCircle\r\n          key={caption + index}\r\n          caption={caption}\r\n          style={STYLE.BUTTON_CIRCLE}\r\n          onClick={onClick}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { buttons } = this.props;\r\n    return (\r\n      <Row style={STYLE.ROW}>\r\n        {this._renderButtons(buttons)}\r\n      </Row>\r\n    )\r\n  }\r\n\r\n}\r\n//});\r\n\r\nexport default ToolbarButtonCircle\r\n"]}