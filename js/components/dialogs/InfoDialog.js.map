{"version":3,"sources":["../../../src/components/dialogs/InfoDialog.jsx"],"names":["styles","Styles","CAPTION","width","paddingLeft","color","fontSize","fontWeight","lineHeight","DESCR","whiteSpace","InfoDialog","props","nextProps","nextState","isShow","data","onClose","caption","descr","rowDiv","displayName"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,+BAAN;;AAEA,IAAMC,SAAS;AACbC,WAAU;AACRC,WAAQ,OADA;AAERC,iBAAc,MAFN;AAGRC,WAAQ,uBAHA;AAIRC,cAAU,MAJF;AAKRC,gBAAa,MALL;AAMRC,gBAAa;AANL,GADG;AASbC,SAAQ;AACNJ,WAAO,MADD;AAENF,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAING,gBAAY,MAJN;AAKNC,gBAAa,GALP;AAMNE,gBAAa;AANP;AATK,CAAf;;IAmBMC,U;;;AAEJ,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;AAEjB;;;;0CAEqBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKD,KAAnB,IAA4BC,UAAUE,MAAV,KAAqB,KAAKH,KAAL,CAAWG,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAEO;AAAA,mBAC0B,KAAKH,KAD/B;AAAA,UACCG,MADD,UACCA,MADD;AAAA,UACSC,IADT,UACSA,IADT;AAAA,UACeC,OADf,UACeA,OADf;AAAA,UAECC,OAFD,GAEmBF,IAFnB,CAECE,OAFD;AAAA,UAEUC,KAFV,GAEmBH,IAFnB,CAEUG,KAFV;;AAGN,aACE;AAAA;AAAA;AACE,mBAAQ,aADV;AAEE,kBAAQJ,MAFV;AAGE,mBAASE;AAHX;AAKG;AAAA;AAAA,YAAK,OAAOjB,OAAOoB,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,cAAG,OAAOnB,OAAOC,OAAjB;AACGgB;AADH;AADH,SALH;AAUG;AAAA;AAAA,YAAK,OAAOlB,OAAOoB,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,cAAG,OAAOnB,OAAOQ,KAAjB;AAAyBU;AAAzB;AADH;AAVH,OADF;AAiBD;;;;;;AAGHR,WAAWU,WAAX,GAAyB,YAAzB;;kBAEeV,U","file":"InfoDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst Styles = {\r\n  CAPTION : {\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : 'rgba(164, 135, 212,1)',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace : 'pre'\r\n  }\r\n}\r\n\r\nclass InfoDialog extends Component {\r\n\r\n  constructor(props){\r\n    super();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n        , {caption, descr} = data\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Information\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv} key=\"1\">\r\n            <p style={Styles.CAPTION}>\r\n              {caption}\r\n            </p>\r\n         </div>\r\n         <div style={styles.rowDiv} key=\"2\">\r\n            <p style={Styles.DESCR}>{descr}</p>\r\n         </div>\r\n\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nInfoDialog.displayName = 'InfoDialog';\r\n\r\nexport default InfoDialog\r\n"]}