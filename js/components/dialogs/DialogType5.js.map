{"version":3,"sources":["../../../src/components/dialogs/DialogType5.jsx"],"names":["DialogType5","props","state","isShowDate","validationMessages","_handleSelectOne","one","_handleLoad","_handleWithValidationLoad","_createValidationMessages","_createLoadOption","oneCaption","msg","push","msgOnNotSelected","parentChild","getValidation","isValid1","isValid","msg1","concat","datesFragment","datesMsg","length","getValues","two","parent","three","child","fromDate","toDate","_handleClose","_handleWithValidationClose","onClose","toolbarButtons","_createType2WithToolbar","nextProps","nextState","isShow","caption","onShow","oneURI","oneJsonProp","twoCaption","twoURI","twoJsonProp","threeCaption","initFromDate","initToDate","nForecastDate","msgOnNotValidFormat","onTestDate","_commandButtons","c","displayName"],"mappings":"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","file":"DialogType5.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport createLoadOptions from '../../flux/creaters/type5';\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog';\r\nimport ToolbarButtonCircle from './ToolbarButtonCircle';\r\nimport SelectWithLoad from './SelectWithLoad';\r\nimport SelectParentChild from './SelectParentChild';\r\nimport ActionButton from '../zhn/ActionButton';\r\n\r\nimport DatesFragment from '../zhn-moleculs/DatesFragment';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport ShowHide from '../zhn/ShowHide';\r\n\r\nimport withToolbar from './decorators/withToolbar';\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\n@withToolbar\r\n@withValidationLoad\r\nclass  DialogType5 extends Component {\r\n\r\n  state = {\r\n    isShowDate : true,\r\n    validationMessages: []\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.toolbarButtons = this._createType2WithToolbar(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectOne = (one) => {\r\n    this.one = one;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    this._handleWithValidationLoad(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  }\r\n  _createValidationMessages = () => {\r\n     const { oneCaption } = this.props;\r\n     let msg = [];\r\n\r\n     if (!this.one)    { msg.push(this.props.msgOnNotSelected(oneCaption));}\r\n\r\n     const { isValid:isValid1, msg:msg1 } = this.parentChild.getValidation();\r\n     if (!isValid1) { msg = msg.concat(msg1); }\r\n\r\n     const {isValid, datesMsg} = this.datesFragment.getValidation();\r\n     if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n     msg.isValid = (msg.length === 0) ? true : false;\r\n     return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { parent:two, child:three } = this.parentChild.getValues()\r\n        , { fromDate, toDate } = this.datesFragment.getValues();\r\n    return createLoadOptions(\r\n      this.props,\r\n      { one : this.one, two, three, fromDate, toDate }\r\n    );\r\n  }\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           caption, isShow, onShow,\r\n           oneCaption, oneURI, oneJsonProp,\r\n           twoCaption, twoURI, twoJsonProp, threeCaption, msgOnNotSelected,\r\n           initFromDate, initToDate, nForecastDate, msgOnNotValidFormat, onTestDate\r\n          } = this.props\r\n        , { isShowDate, validationMessages } = this.state\r\n        , _commandButtons = [\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Load\"\r\n          onClick={this._handleLoad}\r\n       />\r\n    ];\r\n\r\n    return(\r\n        <DraggableDialog\r\n             caption={caption}\r\n             isShow={isShow}\r\n             commandButtons={_commandButtons}\r\n             onShowChart={onShow}\r\n             onClose={this._handleClose}\r\n         >\r\n             <ToolbarButtonCircle\r\n                buttons={this.toolbarButtons}\r\n             />\r\n             <SelectWithLoad\r\n               isShow={isShow}\r\n               uri={oneURI}\r\n               jsonProp={oneJsonProp}\r\n               caption={oneCaption}\r\n               optionNames={'Items'}\r\n               onSelect={this._handleSelectOne}\r\n             />\r\n\r\n             <SelectParentChild\r\n                 ref={c => this.parentChild = c}\r\n                 isShow={isShow}\r\n                 uri={twoURI}\r\n                 parentCaption={twoCaption}\r\n                 parentOptionNames=\"Items\"\r\n                 parentJsonProp={twoJsonProp}\r\n                 childCaption={threeCaption}\r\n                 msgOnNotSelected={msgOnNotSelected}\r\n             />\r\n\r\n             <ShowHide isShow={isShowDate}>\r\n               <DatesFragment\r\n                 ref={c => this.datesFragment = c}\r\n                 initFromDate={initFromDate}\r\n                 initToDate={initToDate}\r\n                 nForecastDate={nForecastDate}\r\n                 msgOnNotValidFormat={msgOnNotValidFormat}\r\n                 onTestDate={onTestDate}\r\n               />\r\n             </ShowHide>\r\n             <ValidationMessages\r\n                 validationMessages={validationMessages}\r\n             />\r\n        </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nDialogType5.displayName = 'DialogType5';\r\n\r\nexport default DialogType5\r\n"]}