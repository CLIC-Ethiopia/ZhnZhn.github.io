{"version":3,"sources":["../../../src/components/dialogs/SelectParentChild.jsx"],"names":["SelectParentChild","props","state","parentOptions","isLoading","isLoadingFailed","childOptions","_handlerLoadParentOptions","uri","parentJsonProp","_handlerWithLoadOptions","_setChildOptions","child","setState","_handlerSelectParent","parent","onSelectParent","columns","_isDfColumns","_handlerSelectChild","getValidation","parentCaption","childCaption","msgOnNotSelected","msg","push","length","isValid","getValues","prevProps","prevState","isShow","_unmountWithLoadOptions","isShowLabels","parentOptionNames","defaultProps","item"],"mappings":"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","file":"SelectParentChild.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\nimport withLoadOptions from './decorators/withLoadOptions';\r\n\r\n//const defaultChildOptions = [];\r\n\r\n\r\n@withLoadOptions\r\nclass SelectParentChild extends Component {\r\n\r\n  static defaultProps = {\r\n    isShow : true,\r\n    msgOnNotSelected : (item) => `${item} is not selected`\r\n  }\r\n\r\n  state = {\r\n    parentOptions : [],\r\n    isLoading : false,\r\n    isLoadingFailed : false,\r\n    childOptions : []\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.parent = null;\r\n    this.child = null;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._handlerLoadParentOptions();\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (prevProps !== this.props){\r\n       if (this.state.isLoadingFailed && this.props.isShow){\r\n         this._handlerLoadParentOptions();\r\n       }\r\n    }\r\n  }\r\n  componetWillUnmount(){\r\n    this._unmountWithLoadOptions();\r\n  }\r\n\r\n  _handlerLoadParentOptions = () => {\r\n    const { uri, parentJsonProp } = this.props;\r\n    this._handlerWithLoadOptions(\r\n          'parentOptions', 'isLoading', 'isLoadingFailed',\r\n          uri, parentJsonProp\r\n    );\r\n  }\r\n\r\n  _setChildOptions = (childOptions=[]) => {\r\n    this.child = null;\r\n    this.setState({ childOptions });\r\n  }\r\n\r\n  _handlerSelectParent = (parent) => {\r\n    const { onSelectParent } = this.props;\r\n    this.parent = parent;\r\n    if (parent) {\r\n      if (parent.columns) {\r\n        this._setChildOptions(parent.columns)\r\n        /*\r\n        this.child = null;\r\n        this.setState({ childOptions: parent.columns });\r\n        */\r\n      } else if (!this._isDfColumns) {\r\n        this._setChildOptions()\r\n        /*\r\n        this.child = null;\r\n        this.setState({ childOptions : defaultChildOptions });\r\n        */\r\n      }\r\n    } else if (!this._isDfColumns) {\r\n      this._setChildOptions()\r\n      /*\r\n      this.child = null;\r\n      this.setState({ childOptions: [] });\r\n      */\r\n    }\r\n    if (typeof onSelectParent === 'function') {\r\n      onSelectParent(parent)\r\n    }\r\n  }\r\n  _handlerSelectChild = (child) => {\r\n    this.child = child;\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShowLabels,\r\n            parentCaption, parentOptionNames,\r\n            childCaption\r\n          } = this.props\r\n        , {\r\n            parentOptions, isLoading, isLoadingFailed,\r\n            childOptions\r\n          } = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           isShowLabels={isShowLabels}\r\n           caption={parentCaption}\r\n           options={parentOptions}\r\n           optionNames={parentOptionNames}\r\n           isLoading={isLoading}\r\n           isLoadingFailed={isLoadingFailed}\r\n           onLoadOption={this._handlerLoadParentOptions}\r\n           onSelect={this._handlerSelectParent}\r\n         />\r\n         <RowInputSelect\r\n           isShowLabels={isShowLabels}\r\n           caption={childCaption}\r\n           options={childOptions}\r\n           onSelect={this._handlerSelectChild}\r\n         />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getValidation = () => {\r\n     const msg = []\r\n         , { parentCaption, childCaption, msgOnNotSelected } = this.props;\r\n     if (!this.parent){\r\n       msg.push(msgOnNotSelected(parentCaption));\r\n     }\r\n     if (!this.child){\r\n       msg.push(msgOnNotSelected(childCaption));\r\n     }\r\n\r\n     if (msg.length>0){\r\n       return { isValid: false, msg }\r\n     }\r\n     return { isValid : true }\r\n  }\r\n\r\n  getValues = () => {\r\n    return {\r\n      parent : this.parent,\r\n      child : this.child\r\n    }\r\n  }\r\n}\r\n\r\nexport default SelectParentChild\r\n"]}