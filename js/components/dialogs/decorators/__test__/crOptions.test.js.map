{"version":3,"sources":["../../../../../src/components/dialogs/decorators/__test__/crOptions.test.js"],"names":["CAPTION_OPTIONS","items","caption","value","C_OPTIONS","c","v","S_OPTIONS","s","IS_CV_OPTIONS","isCv","describe","fn","crOptions","test","expect","propCaption","toBe"],"mappings":";;;;AAAA;;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAD;AADe,CAAxB;AAAA,IAEGC,SAAS,GAAG;AACbH,EAAAA,KAAK,EAAE,CAAC;AAAEI,IAAAA,CAAC,EAAE,KAAL;AAAYC,IAAAA,CAAC,EAAE;AAAf,GAAD;AADM,CAFf;AAAA,IAIGC,SAAS,GAAI;AACdN,EAAAA,KAAK,EAAE,CAAC;AAAEI,IAAAA,CAAC,EAAE,KAAL;AAAYC,IAAAA,CAAC,EAAE,GAAf;AAAoBE,IAAAA,CAAC,EAAE;AAAvB,GAAD;AADO,CAJhB;AAAA,IAMGC,aAAa,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBT,EAAAA,KAAK,EAAE,CAAC;AAAEI,IAAAA,CAAC,EAAE,KAAL;AAAYC,IAAAA,CAAC,EAAE;AAAf,GAAD;AAFU,CANnB;AAYAK,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B,MAAMC,EAAE,GAAGC,qBAAX;AACAC,EAAAA,IAAI,CAAC,gEAAD,EAAmE,YAAI;AACzEC,IAAAA,MAAM,CAACH,EAAE,CAACZ,eAAD,EAAkB,OAAlB,CAAF,CAA6BgB,WAA9B,CAAN,CAAiDC,IAAjD,CAAsD,KAAK,CAA3D;AACD,GAFG,CAAJ;AAGAH,EAAAA,IAAI,CAAC,kDAAD,EAAqD,YAAI;AAC3DC,IAAAA,MAAM,CAACH,EAAE,CAACR,SAAD,EAAY,OAAZ,CAAF,CAAuBY,WAAxB,CAAN,CAA2CC,IAA3C,CAAgD,GAAhD;AACD,GAFG,CAAJ;AAIAH,EAAAA,IAAI,CAAC,8BAAD,EAAiC,YAAM;AACzCC,IAAAA,MAAM,CAACH,EAAE,CAACL,SAAD,EAAY,OAAZ,CAAF,CAAuBN,KAAvB,CAA6B,CAA7B,EAAgCI,CAAjC,CAAN,CAA0CY,IAA1C,CAA+C,WAA/C;AACD,GAFG,CAAJ;AAGAH,EAAAA,IAAI,CAAC,6CAAD,EAAgD,YAAI;AACtDC,IAAAA,MAAM,CAACH,EAAE,CAACH,aAAD,EAAgB,OAAhB,CAAF,CAA2BR,KAA3B,CAAiC,CAAjC,EAAoCI,CAArC,CAAN,CAA8CY,IAA9C,CAAmD,WAAnD;AACD,GAFG,CAAJ;AAGD,CAfO,CAAR","sourcesContent":["import crOptions from '../crOptions'\r\n\r\nconst CAPTION_OPTIONS = {\r\n  items: [{ caption: 'Abc', value: 123}]\r\n}, C_OPTIONS = {\r\n  items: [{ c: 'Abc', v: 123}]\r\n}, S_OPTIONS  = {\r\n  items: [{ c: 'Abc', v: 123, s: 'Abc'}]\r\n}, IS_CV_OPTIONS = {\r\n  isCv: true,\r\n  items: [{ c: 'Abc', v: 'Abc' }]\r\n}\r\n\r\n\r\ndescribe('crOptions', () => {\r\n  const fn = crOptions;\r\n  test('should return propCaption undefined for item caption prop name', ()=>{\r\n    expect(fn(CAPTION_OPTIONS, 'items').propCaption).toBe(void 0)\r\n  })\r\n  test('should return propCaption c for item c prop name', ()=>{\r\n    expect(fn(C_OPTIONS, 'items').propCaption).toBe('c')\r\n  })\r\n\r\n  test('should add item s value to c', () => {\r\n    expect(fn(S_OPTIONS, 'items').items[0].c).toBe('Abc (Abc)')\r\n  })\r\n  test('should return correct options for isCv case', ()=>{\r\n    expect(fn(IS_CV_OPTIONS, 'items').items[0].c).toBe('Abc (Abc)')\r\n  })\r\n})\r\n"],"file":"crOptions.test.js"}