{"version":3,"sources":["../../../src/components/stock-markets/AlphaIndicatorDialog.jsx"],"names":["DF","INDICATOR","PERIOD","FOR_DAYS","HAS_SECOND_Y_AXIS","_testTicket","value","String","trim","_testInRangeOrEmpty","min","max","n","parseInt","Number","isNaN","_testPeriod","_testForDays","_crValue","indicator","period","AlphaIndicatorDialog","props","_handleClickOptions","setState","isShowOptions","state","_handleSelectOne","item","_handleLoad","_period","periodComp","isValid","getValue","_forDays","forDaysComp","_ticket","ticketComp","undefined","_indicator","option","loadId","ticket","forDays","hasSecondYAxis","onLoad","_handleClose","onClose","_refTicket","comp","_refPeriod","_refForDays","_handleMode","propName","toolbarButtons","_createType2WithToolbar","noDate","push","caption","title","onClick","_commandButtons","isShowLabels","nextProps","nextState","isShow","oneURI","oneJsonProp","oneCaption","onShow","onFront","bind"],"mappings":"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","file":"AlphaIndicatorDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport withToolbar from '../dialogs/decorators/withToolbar'\r\n\r\nconst DF = {\r\n  INDICATOR: 'SMA',\r\n  PERIOD: 30,\r\n  FOR_DAYS: 501\r\n};\r\nconst HAS_SECOND_Y_AXIS = 'hasSecondYAxis';\r\n\r\nconst _testTicket = (value) => {\r\n  if (String(value).trim() === '') {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst _testInRangeOrEmpty = (min, max) => (value) => {\r\n  if (String(value).trim() === ''){\r\n    return true;\r\n  }\r\n  const n = parseInt(String(value).trim(), 10)  ;\r\n  if (!Number.isNaN(n) && n>min && n<max) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst _testPeriod = _testInRangeOrEmpty(0, 201)\r\nconst _testForDays = _testInRangeOrEmpty(250, 2500)\r\n\r\nconst _crValue = (indicator, period) => {\r\n  switch(indicator) {\r\n    case 'MACD': return 'MACD(12, 24, 9)';\r\n    case 'STOCH': return 'STOCH(5, 3, 3, SMA)';\r\n    default: return `${indicator} (${period})`;\r\n  }\r\n}\r\n\r\n@withToolbar\r\nclass AlphaIndicatorDialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this.toolbarButtons.push({\r\n      caption: 'O', title: 'Toggle Options Input',\r\n      onClick: this._handleClickOptions\r\n    })\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ];\r\n    this.state = {\r\n      isShowLabels: true,\r\n      isShowOptions: false\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleClickOptions = () => {\r\n    this.setState({ isShowOptions: !this.state.isShowOptions })\r\n  }\r\n\r\n  _handleSelectOne = (item) => {\r\n     this.indicator = item;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    const _period = (this.periodComp.isValid())\r\n             ? (this.periodComp.getValue() !== '')\r\n                 ? this.periodComp.getValue()\r\n                 : DF.PERIOD\r\n             : DF.PERIOD\r\n        , _forDays = (this.forDaysComp.isValid())\r\n             ? (this.forDaysComp.getValue() !== '')\r\n                   ? this.forDaysComp.getValue()\r\n                   : DF.FOR_DAYS\r\n             : DF.FOR_DAYS\r\n        , _ticket = (this.ticketComp.isValid())\r\n             ? this.ticketComp.getValue()\r\n             : undefined\r\n        , _indicator = this.indicator\r\n             ? this.indicator.value\r\n             : DF.INDICATOR;\r\n    const option = {\r\n      loadId: 'AL',\r\n      indicator: _indicator,\r\n      ticket: _ticket,\r\n      period: _period,\r\n      forDays: _forDays,\r\n      value: _crValue(_indicator, _period), //for label\r\n      hasSecondYAxis: this[HAS_SECOND_Y_AXIS]\r\n    }\r\n    this.props.onLoad(option)\r\n  }\r\n\r\n  _handleClose = () => {\r\n    //this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  _refTicket = (comp) => {\r\n    this.ticketComp = comp\r\n  }\r\n  _refPeriod = (comp) => {\r\n    this.periodComp = comp\r\n  }\r\n  _refForDays = (comp) => {\r\n    this.forDaysComp = comp\r\n  }\r\n  _handleMode = (propName, value) => {\r\n     this[propName] = value\r\n  }\r\n\r\n  render() {\r\n    const {\r\n            isShow, caption,\r\n            oneURI, oneJsonProp, oneCaption,\r\n            onShow, onFront\r\n          } = this.props\r\n        , {\r\n            isShowLabels, isShowOptions\r\n          } = this.state;\r\n\r\n    return (\r\n      <D.DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onFront={onFront}\r\n           onClose={this._handleClose}\r\n       >\r\n           <D.ToolbarButtonCircle\r\n              buttons={this.toolbarButtons}\r\n           />\r\n           <D.SelectWithLoad\r\n             isShow={isShow}\r\n             isShowLabels={isShowLabels}\r\n             uri={oneURI}\r\n             jsonProp={oneJsonProp}\r\n             caption={oneCaption}\r\n             optionNames=\"Items\"\r\n             onSelect={this._handleSelectOne}\r\n           />\r\n          <D.RowPattern\r\n            ref={this._refTicket}\r\n            isShowLabels={isShowLabels}\r\n            title=\"Ticket\"\r\n            placeholder=\"Nyse or Nasdaq Ticket\"\r\n            onTest={_testTicket}\r\n            errorMsg=\"Not Empty\"\r\n          />\r\n          <D.ShowHide isShow={isShowOptions}>\r\n            <D.RowPattern\r\n              ref={this._refPeriod}\r\n              isShowLabels={isShowLabels}\r\n              title=\"Period\"\r\n              placeholder={`Default: ${DF.PERIOD}`}\r\n              onTest={_testPeriod}\r\n              errorMsg=\"Number in range 1-200\"\r\n            />\r\n            <D.RowPattern\r\n              ref={this._refForDays}\r\n              isShowLabels={isShowLabels}\r\n              title=\"For Days\"\r\n              placeholder={`Default: ${DF.FOR_DAYS} (2 Years)`}\r\n              onTest={_testForDays}\r\n              errorMsg=\"Number in range 250-2500\"\r\n            />\r\n\r\n          </D.ShowHide>\r\n          <D.RowCheckBox\r\n            initValue={false}\r\n            caption=\"Add Seria with Second YAxis\"\r\n            onCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, true)}\r\n            onUnCheck={this._handleMode.bind(null, HAS_SECOND_Y_AXIS, false)}\r\n          />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlphaIndicatorDialog\r\n"]}