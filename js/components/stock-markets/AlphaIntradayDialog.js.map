{"version":3,"sources":["../../../src/components/stock-markets/AlphaIntradayDialog.jsx"],"names":["DF","INTERVAL","_testTicket","value","String","trim","_intervalOptions","caption","AlphaIntradayDialog","props","_handleSelectInterval","item","interval","_handleLoad","_ticket","ticketComp","isValid","getValue","undefined","_interval","_value","option","loadId","indicator","ticket","onLoad","_handleClose","onClose","_refTicket","comp","toolbarButtons","_createType2WithToolbar","noDate","_commandButtons","state","isShowLabels","nextProps","nextState","isShow","onShow","onFront"],"mappings":"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","file":"AlphaIntradayDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport D from '../dialogs/DialogCell'\r\nimport withToolbar from '../dialogs/decorators/withToolbar'\r\n\r\nconst DF = {\r\n  INTERVAL: '15min',\r\n};\r\n\r\nconst _testTicket = (value) => {\r\n  if (String(value).trim() === '') {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst _intervalOptions = [\r\n  { caption: '1 min', value: '1min' },\r\n  { caption: '5 min', value: '5min' },\r\n  { caption: '15 min', value: '15min' },\r\n  { caption: '30 min', value: '30min' },\r\n  { caption: '60 min', value: '60min' }\r\n]\r\n\r\n@withToolbar\r\nclass AlphaIntradayDialog extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.toolbarButtons = this._createType2WithToolbar(\r\n      props, { noDate: true }\r\n    )\r\n    this._commandButtons = [\r\n      <D.Button.Load onClick={this._handleLoad} />\r\n    ];\r\n    this.state = {\r\n      isShowLabels: true\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectInterval = (item) => {\r\n     this.interval = item;\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    const\r\n\r\n         _ticket = (this.ticketComp.isValid())\r\n             ? this.ticketComp.getValue()\r\n             : undefined\r\n        , _interval = (this.interval)\r\n             ? this.interval.value\r\n             : DF.INTERVAL\r\n        , _value = `${_ticket} (${_interval})`;\r\n    const option = {\r\n      loadId: 'AL_I',\r\n      indicator: 'TIME_SERIES_INTRADAY',\r\n      interval: _interval,\r\n      ticket: _ticket,\r\n      value: _value, //for label\r\n    }\r\n    this.props.onLoad(option)\r\n  }\r\n\r\n  _handleClose = () => {\r\n    //this._handleWithValidationClose(this._createValidationMessages);\r\n    this.props.onClose();\r\n  }\r\n\r\n  _refTicket = (comp) => {\r\n    this.ticketComp = comp\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n            isShow, caption,\r\n            onShow, onFront\r\n          } = this.props\r\n        , { isShowLabels } = this.state ;\r\n\r\n    return (\r\n      <D.DraggableDialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onFront={onFront}\r\n           onClose={this._handleClose}\r\n       >\r\n           <D.ToolbarButtonCircle\r\n              buttons={this.toolbarButtons}\r\n           />\r\n          <D.RowPattern\r\n            ref={this._refTicket}\r\n            isShowLabels={isShowLabels}\r\n            title=\"Ticket\"\r\n            placeholder=\"Nyse or Nasdaq Ticket\"\r\n            onTest={_testTicket}\r\n            errorMsg=\"Not Empty\"\r\n          />\r\n          <D.RowInputSelect\r\n            isShowLabels={isShowLabels}\r\n            caption=\"Interval\"\r\n            placeholder=\"Default: 15min\"\r\n            options={_intervalOptions}\r\n            onSelect={this._handleSelectInterval}\r\n          />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlphaIntradayDialog\r\n"]}