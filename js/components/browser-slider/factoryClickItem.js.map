{"version":3,"sources":["../../../src/components/browser-slider/factoryClickItem.js"],"names":["conf","dialogConf","dialogType","dialogProps","chartsType","dfProps","isProxy","_toFirstUpperCase","str","charAt","toUpperCase","substr","_getFrequencyAndDims","json","dims","variables","mapFrequency","timeId","forEach","item","code","text","time","push","c","v","_fOnClickTable","rootUrl","id","proxy","bT","lT","sP","dU","noTime","dS","_href","_url","fetch","then","res","status","statusText","Error","title","_title","length","_conf","Object","assign","type","menuTitle","contFullCaption","baseMeta","loadId","descrUrl","dataSource","dfId","ComponentActions","showDialog","err","console","log","message"],"mappings":"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","sourcesContent":["import ComponentActions from '../../flux/actions/ComponentActions'\r\n\r\nconst conf = {\r\n  dialogConf: true,\r\n  dialogType: \"DialogStatN\",\r\n  dialogProps: {\r\n    chartsType: \"t2a\",\r\n    dfProps: { },\r\n    isProxy: true\r\n  }\r\n};\r\n\r\nconst _toFirstUpperCase = (str='') => {\r\n  return str\r\n    .charAt(0)\r\n    .toUpperCase() + str.substr(1);\r\n}\r\n\r\nconst _getFrequencyAndDims = (json) => {\r\n  const dims = []\r\n      , { variables=[] } = json;\r\n  let mapFrequency = 'Y'\r\n  let timeId\r\n  variables.forEach(item => {\r\n    const { code, text, time } = item;\r\n    if (time) { timeId = code }\r\n    if (code !== 'Tid') {\r\n     dims.push({\r\n       c: _toFirstUpperCase(text),\r\n       v: code\r\n     })\r\n   } else {\r\n     if (text === 'month') {\r\n       mapFrequency = 'M'\r\n     } else if ( text === 'quarter') {\r\n       mapFrequency = 'K'\r\n     }\r\n   }\r\n  })\r\n  return { mapFrequency, dims, timeId };\r\n}\r\n\r\nconst _fOnClickTable = (dfProps) => () => {\r\n   const {\r\n     rootUrl, id, proxy,\r\n     bT, lT, sP, dU,\r\n     noTime, dS\r\n   } = dfProps\r\n   , _href = `${rootUrl}/${id}`\r\n   , _url = proxy ? `${proxy}${_href}` : _href;\r\n   fetch(_url)\r\n      .then(res => {\r\n        const { status, statusText } = res;\r\n        if (status>=200 && status<400) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(statusText)\r\n        }\r\n      })\r\n      .then(json => {\r\n        const {\r\n                mapFrequency, dims, timeId\r\n              } = _getFrequencyAndDims(json)\r\n            , { title='' } = json\r\n            , _title = title.length>35\r\n                 ? title.substr(0, 35) + '...'\r\n                 : title\r\n            , _conf = Object.assign({}, conf, {\r\n                type: `${bT}_${id}`,\r\n                menuTitle: title.substr(0, 27),\r\n                contFullCaption: `${sP}: ${_title}`\r\n              });\r\n\r\n        Object.assign(_conf.dialogProps, {\r\n          baseMeta: rootUrl,\r\n          loadId: lT,\r\n          mapFrequency: mapFrequency,\r\n          dims: dims,\r\n          timeId: timeId,\r\n          descrUrl: dU,\r\n          dataSource: dS,\r\n          dfProps: { dfId: id },\r\n          noTime: noTime,\r\n          proxy: proxy\r\n        })\r\n\r\n        ComponentActions.showDialog(`${bT}_${id}` , bT, _conf)\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n      })\r\n};\r\n\r\nexport default _fOnClickTable\r\n"],"file":"factoryClickItem.js"}