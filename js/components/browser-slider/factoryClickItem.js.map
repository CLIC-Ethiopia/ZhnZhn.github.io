{"version":3,"sources":["../../../src/components/browser-slider/factoryClickItem.js"],"names":["conf","dialogConf","dialogType","dialogProps","chartsType","dfProps","isProxy","_toFirstUpperCase","str","charAt","toUpperCase","substr","_getFrequencyAndDims","json","variables","mapFrequency","forEach","code","item","text","dims","push","c","v","_fOnClickTable","rootUrl","id","bT","lT","sP","dU","proxy","_url","fetch","then","status","res","statusText","Error","title","_title","length","_conf","Object","assign","type","menuTitle","chartContainerCaption","baseMeta","loadId","descrUrl","dfId","showDialog","catch","console","log","err","message"],"mappings":"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","file":"factoryClickItem.js","sourcesContent":["import ComponentActions from '../../flux/actions/ComponentActions'\r\n\r\nconst conf = {\r\n  dialogConf: true,\r\n  dialogType: \"DialogStatN\",\r\n  dialogProps: {\r\n    chartsType: \"t2\",\r\n    dfProps: { },\r\n    isProxy: true\r\n  }\r\n};\r\n\r\nconst _toFirstUpperCase = (str='') => {\r\n  return str\r\n    .charAt(0)\r\n    .toUpperCase() + str.substr(1);\r\n}\r\n\r\nconst _getFrequencyAndDims = (json) => {\r\n  const dims = []\r\n      , { variables=[] } = json;\r\n  let mapFrequency = 'Y'\r\n  variables.forEach(item => {\r\n    const { code, text } = item;\r\n    if (code !== 'Tid') {\r\n     dims.push({\r\n       c: _toFirstUpperCase(text),\r\n       v: code\r\n     })\r\n   } else {\r\n     if (text === 'month') {\r\n       mapFrequency = 'M'\r\n     } else if ( text === 'quarter') {\r\n       mapFrequency = 'K'\r\n     }\r\n   }\r\n  })\r\n  return { mapFrequency, dims };\r\n}\r\n\r\nconst _fOnClickTable = ({ rootUrl, id, bT, lT, sP, dU, proxy }) => () => {\r\n   const _url = proxy\r\n           ? `${proxy}${rootUrl}/${id}`\r\n           : `${rootUrl}/${id}`;\r\n   fetch(_url)\r\n      .then(res => {\r\n        const { status, statusText } = res;\r\n        if (status>=200 && status<400) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(statusText)\r\n        }\r\n      })\r\n      .then(json => {\r\n        const {\r\n                mapFrequency, dims\r\n              } = _getFrequencyAndDims(json)\r\n            , { title='' } = json\r\n            , _title = title.length>35\r\n                 ? title.substr(0, 35) + '...'\r\n                 : title\r\n            , _conf = Object.assign({}, conf, {\r\n                type: `${bT}_${id}`,\r\n                menuTitle: title.substr(0, 27),\r\n                chartContainerCaption: `${sP}: ${_title}`\r\n              });\r\n\r\n        Object.assign(_conf.dialogProps, {\r\n          baseMeta: rootUrl,\r\n          loadId: lT,\r\n          mapFrequency: mapFrequency,\r\n          dims: dims,\r\n          descrUrl: dU,\r\n          dfProps: { dfId: id }\r\n        })\r\n\r\n        ComponentActions.showDialog(`${bT}_${id}` , bT, _conf)\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n      })\r\n};\r\n\r\nexport default _fOnClickTable\r\n"]}