{"version":3,"sources":["../../../src/components/browser-slider/MenuSlider.jsx"],"names":["S","ROOT","width","overflow","PAGES","overflowX","display","flexFlow","alignItems","transition","PAGE","_getTranslateX","node","_prevStr","style","transform","substr","replace","parseInt","MenuSlider","props","_loadItems","dfProps","store","proxy","getProxy","rootUrl","then","Array","isArray","model","setState","errMsg","undefined","catch","err","message","hPrevPage","pageNumber","prevState","pageCurrent","_direction","_addPage","pages","id","title","push","hNextPage","_max","length","key","splice","_refFirst","_firstNode","n","_renderMenu","state","items","map","item","index","text","_ref","bind","_renderPages","page","cloneElement","_crTransform","dX","_menuNode","_prevInt","_refMenu","focusFirst","focus","_transform","_pagesStyle","setTimeout"],"mappings":"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","file":"MenuSlider.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport fOnClickItem from './factoryClickItem'\r\nimport loadItems from './loadItems'\r\n\r\nimport Frame from './Frame'\r\nimport MenuItem from './MenuItem'\r\nimport ErrMsg from './ErrMsg'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    width: '300px',\r\n    overflow: 'hidden',\r\n    //border: '1px solid green'\r\n  },\r\n  PAGES: {\r\n    width: '1500px',\r\n    overflowX: 'hidden',\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'flex-start',\r\n    transition: 'all 750ms ease-out'\r\n  },\r\n  PAGE: {\r\n    width: '300px'\r\n    /*\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px',\r\n    paddingBottom: '4px'\r\n    */\r\n  }\r\n};\r\n\r\nconst _getTranslateX = (node) => {\r\n  const _prevStr = node\r\n           .style.transform\r\n           .substr(11)\r\n           .replace('px', '')\r\n           .replace(')', '');\r\n   return parseInt(_prevStr, 10);\r\n}\r\n\r\nclass MenuSlider extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this._direction = 0\r\n    this.state = {\r\n      model: [],\r\n      pageCurrent: 0,\r\n      pages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._loadItems()\r\n  }\r\n\r\n  _loadItems = () => {\r\n    //const { rootUrl } = this.props\r\n    const { dfProps, store } = this.props\r\n        , proxy = store.getProxy();\r\n    loadItems(dfProps.rootUrl, proxy)\r\n      .then(model => {\r\n         if (Array.isArray(model)) {\r\n            this.setState({ model, errMsg: undefined })\r\n         }\r\n      })\r\n      .catch(err => {\r\n         this.setState({ errMsg: err.message })\r\n      })\r\n  }\r\n\r\n\r\n  hPrevPage = (pageNumber) => {\r\n    this.setState(prevState => {\r\n      prevState.pageCurrent = pageNumber - 1\r\n      this._direction = -1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _addPage = (pages, id, title) => {\r\n    const { dfProps, store } = this.props;\r\n    pages.push((\r\n      <Frame\r\n        key={id}\r\n        id={id}\r\n        rootStyle={S.PAGE}\r\n        store={store}\r\n        title={title}\r\n        dfProps={dfProps}\r\n        onClickPrev={this.hPrevPage}\r\n        onClickNext={this.hNextPage}\r\n        loadItems={loadItems}\r\n        fOnClickItem={fOnClickItem}\r\n      />\r\n    ))\r\n  }\r\n\r\n\r\n  hNextPage = (id, title, pageNumber) => {\r\n    this.setState(prevState => {\r\n       const { pages } = prevState\r\n          , _max = pages.length-1;\r\n\r\n      if ( (_max+1) > pageNumber) {\r\n        if (pages[pageNumber] && pages[pageNumber].key !== id) {\r\n           if (pageNumber>0) {\r\n             prevState.pages.splice(pageNumber)\r\n           } else {\r\n             prevState.pages = []\r\n           }\r\n           this._addPage(prevState.pages, id, title)\r\n        }\r\n      } else {\r\n        this._addPage(pages, id, title)\r\n      }\r\n\r\n      prevState.pageCurrent = pageNumber + 1\r\n      this._direction = 1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n\r\n_refFirst = n => this._firstNode = n\r\n\r\n _renderMenu = () => {\r\n   const { model, errMsg } = this.state\r\n       , items = model.map((item, index) => {\r\n           const { text, id } = item\r\n                , _ref = index === 0\r\n                    ? this._refFirst\r\n                    : void 0;\r\n           return (\r\n             <MenuItem\r\n               ref={_ref}\r\n               key={id}\r\n               item={item}\r\n               onClick={this.hNextPage.bind(null, id, text, 0)}\r\n             />\r\n           );\r\n         })\r\n\r\n   return (\r\n     <div\r\n       //className=\"with-scroll\"\r\n       style={S.PAGE}\r\n     >\r\n       {items}\r\n       <ErrMsg errMsg={errMsg} />\r\n     </div>\r\n   );\r\n }\r\n\r\n\r\n  _renderPages = () => {\r\n    const { pages, pageCurrent } = this.state;\r\n    return pages.map((page, index) => {\r\n      return React.cloneElement(page, {\r\n        pageCurrent,\r\n        pageNumber: index + 1,\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n _crTransform = () => {\r\n   let dX = '0';\r\n   if (this._direction !== 0 && this._menuNode) {\r\n     const _prevInt = _getTranslateX(this._menuNode);\r\n     if ( this._direction === 1 ) {\r\n       dX = _prevInt-300\r\n     } else {\r\n       dX = _prevInt+300\r\n     }\r\n     this._direction = 0\r\n   } else if (this._direction === 0 && this._menuNode) {\r\n     dX = _getTranslateX(this._menuNode);\r\n   }\r\n\r\n   return { transform: `translateX(${dX}px)` };\r\n }\r\n\r\n  _refMenu = n => this._menuNode = n\r\n\r\n  render(){\r\n    const _transform = this._crTransform()\r\n        , _pagesStyle = {\r\n             ...S.PAGES,\r\n             ..._transform\r\n           };\r\n\r\n    return (\r\n      <div style={S.ROOT}>\r\n        <div\r\n          ref={this._refMenu}\r\n          style={_pagesStyle}\r\n        >\r\n           {this._renderMenu()}\r\n           {this._renderPages()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusFirst = () => {\r\n    if (this._firstNode){\r\n      this._firstNode.focus()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const { pageCurrent } = this.state;\r\n    if (pageCurrent === 0) {\r\n       setTimeout(this.focusFirst, 1000)\r\n    }\r\n  }\r\n}\r\n\r\nexport default MenuSlider\r\n"]}