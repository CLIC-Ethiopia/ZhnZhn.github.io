{"version":3,"sources":["../../../src/components/browser-slider/MenuSlider.jsx"],"names":["S","ROOT","width","overflow","PAGES","overflowX","display","flexFlow","alignItems","transition","PAGE","_getTranslateX","node","_prevStr","style","transform","substr","replace","parseInt","MenuSlider","props","_loadItems","dfProps","store","lT","proxy","getProxy","rootUrl","then","model","Array","isArray","setState","errMsg","undefined","err","message","hPrevPage","pageNumber","prevState","pageCurrent","_direction","_addPage","pages","id","title","push","hNextPage","loadItems","fOnClickItem","_max","length","key","splice","_refFirst","n","_firstNode","_renderMenu","state","items","map","item","index","text","_ref","bind","_renderPages","page","React","cloneElement","_crTransform","dX","_menuNode","_prevInt","_refMenu","focusFirst","focus","componentDidMount","render","_transform","_pagesStyle","componentDidUpdate","setTimeout","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport throttleOnce from '../../utils/throttleOnce'\r\n\r\nimport fOnClickItem from './factoryClickItem'\r\nimport loadItems from './loadItems'\r\n\r\nimport Frame from './Frame'\r\nimport MenuItem from './MenuItem'\r\nimport ErrMsg from './ErrMsg'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    width: '300px',\r\n    overflow: 'hidden',\r\n    //border: '1px solid green'\r\n  },\r\n  PAGES: {\r\n    width: '1500px',\r\n    overflowX: 'hidden',\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'flex-start',\r\n    transition: 'all 750ms ease-out'\r\n  },\r\n  PAGE: {\r\n    width: '300px'\r\n  }\r\n};\r\n\r\nconst _getTranslateX = (node) => {\r\n  const _prevStr = node\r\n           .style.transform\r\n           .substr(11)\r\n           .replace('px', '')\r\n           .replace(')', '');\r\n   return parseInt(_prevStr, 10);\r\n}\r\n\r\nclass MenuSlider extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n    this.hNextPage = throttleOnce(\r\n      this.hNextPage.bind(this)\r\n    )\r\n    this.hPrevPage = throttleOnce(\r\n      this.hPrevPage.bind(this)\r\n    )\r\n    this._direction = 0\r\n    this.state = {\r\n      model: [],\r\n      pageCurrent: 0,\r\n      pages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._loadItems()\r\n  }\r\n\r\n  _loadItems = () => {\r\n    const { dfProps={}, store } = this.props\r\n        , { lT } = dfProps\r\n        , proxy = store.getProxy(lT);\r\n    loadItems(dfProps.rootUrl, proxy)\r\n      .then(model => {\r\n         if (Array.isArray(model)) {\r\n            this.setState({ model, errMsg: undefined })\r\n         }\r\n      })\r\n      .catch(err => {\r\n         this.setState({ errMsg: err.message })\r\n      })\r\n  }\r\n\r\n\r\n  hPrevPage = (pageNumber) => {\r\n    this.setState(prevState => {\r\n      prevState.pageCurrent = pageNumber - 1\r\n      this._direction = -1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _addPage = (pages, id, title) => {\r\n    const { dfProps, store } = this.props;\r\n    pages.push((\r\n      <Frame\r\n        key={id}\r\n        id={id}\r\n        rootStyle={S.PAGE}\r\n        store={store}\r\n        title={title}\r\n        dfProps={dfProps}\r\n        onClickPrev={this.hPrevPage}\r\n        onClickNext={this.hNextPage}\r\n        loadItems={loadItems}\r\n        fOnClickItem={fOnClickItem}\r\n      />\r\n    ))\r\n  }\r\n\r\n\r\n  hNextPage = (id, title, pageNumber) => {\r\n    this.setState(prevState => {\r\n       const { pages } = prevState\r\n          , _max = pages.length-1;\r\n\r\n      if ( (_max+1) > pageNumber) {\r\n        if (pages[pageNumber] && pages[pageNumber].key !== id) {\r\n           if (pageNumber>0) {\r\n             prevState.pages.splice(pageNumber)\r\n           } else {\r\n             prevState.pages = []\r\n           }\r\n           this._addPage(prevState.pages, id, title)\r\n        }\r\n      } else {\r\n        this._addPage(pages, id, title)\r\n      }\r\n\r\n      prevState.pageCurrent = pageNumber + 1\r\n      this._direction = 1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n\r\n_refFirst = n => this._firstNode = n\r\n\r\n _renderMenu = () => {\r\n   const { model, errMsg } = this.state\r\n       , items = model.map((item, index) => {\r\n           const { text, id } = item\r\n                , _ref = index === 0\r\n                    ? this._refFirst\r\n                    : void 0;\r\n           return (\r\n             <MenuItem\r\n               ref={_ref}\r\n               key={id}\r\n               item={item}\r\n               onClick={this.hNextPage.bind(null, id, text, 0)}\r\n             />\r\n           );\r\n         })\r\n\r\n   return (\r\n     <div style={S.PAGE}>\r\n       {items}\r\n       <ErrMsg errMsg={errMsg} />\r\n     </div>\r\n   );\r\n }\r\n\r\n\r\n  _renderPages = () => {\r\n    const { pages, pageCurrent } = this.state;\r\n    return pages.map((page, index) => {\r\n      return React.cloneElement(page, {\r\n        pageCurrent,\r\n        pageNumber: index + 1,\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n _crTransform = () => {\r\n   let dX = '0';\r\n   if (this._direction !== 0 && this._menuNode) {\r\n     const _prevInt = _getTranslateX(this._menuNode);\r\n     if ( this._direction === 1 ) {\r\n       dX = _prevInt-300\r\n     } else {\r\n       dX = _prevInt+300\r\n     }\r\n     this._direction = 0\r\n   } else if (this._direction === 0 && this._menuNode) {\r\n     dX = _getTranslateX(this._menuNode);\r\n   }   \r\n\r\n   return { transform: `translateX(${dX}px)` };\r\n }\r\n\r\n  _refMenu = n => this._menuNode = n\r\n\r\n  render(){\r\n    const _transform = this._crTransform()\r\n        , _pagesStyle = {\r\n             ...S.PAGES,\r\n             ..._transform\r\n           };\r\n\r\n    return (\r\n      <div style={S.ROOT}>\r\n        <div\r\n          ref={this._refMenu}\r\n          style={_pagesStyle}\r\n        >\r\n           {this._renderMenu()}\r\n           {this._renderPages()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusFirst = () => {\r\n    if (this._firstNode){\r\n      this._firstNode.focus()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const { pageCurrent } = this.state;\r\n    if (pageCurrent === 0) {\r\n       setTimeout(this.focusFirst, 1000)\r\n    }\r\n  }\r\n}\r\n\r\nexport default MenuSlider\r\n"],"file":"MenuSlider.js"}