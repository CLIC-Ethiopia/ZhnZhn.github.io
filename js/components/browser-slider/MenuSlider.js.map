{"version":3,"sources":["../../../src/components/browser-slider/MenuSlider.jsx"],"names":["S","ROOT","width","overflow","PAGES","overflowX","display","flexFlow","alignItems","transition","PAGE","_getTranslateX","node","_prevStr","style","transform","substring","replace","parseInt","MenuSlider","props","_loadItems","dfProps","store","lT","proxy","getProxy","rootUrl","then","model","Array","isArray","setState","errMsg","Error","err","message","hPrevPage","pageNumber","pageCurrent","_direction","_addPage","pages","id","title","push","hNextPage","loadItems","fOnClickItem","length","key","splice","_crTransform","dX","_menuNode","_prevInt","_refMenu","n","focusFirst","_nodeItem","_refFirstItem","current","focus","bind","React","createRef","_fOnClickItem","text","state","componentDidMount","render","_transform","_pagesStyle","componentDidUpdate","setTimeout","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport throttleOnce from '../../utils/throttleOnce'\r\n\r\nimport fOnClickItem from './factoryClickItem'\r\nimport loadItems from './loadItems'\r\n\r\nimport Frame from './Frame'\r\nimport MenuList from './MenuList'\r\nimport ErrMsg from './ErrMsg'\r\nimport PageList from './PageList'\r\n\r\nconst S = {\r\n  ROOT: {\r\n    width: 300,\r\n    overflow: 'hidden'\r\n  },\r\n  PAGES: {\r\n    width: 1500,\r\n    overflowX: 'hidden',\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'flex-start',\r\n    transition: 'all 750ms ease-out'\r\n  },\r\n  PAGE: {\r\n    width: 300\r\n  }\r\n};\r\n\r\nconst _getTranslateX = (node) => {\r\n  const _prevStr = node\r\n     .style.transform\r\n     .substring(11)\r\n     .replace('px', '')\r\n     .replace(')', '');\r\n   return parseInt(_prevStr, 10);\r\n}\r\n\r\nclass MenuSlider extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.hNextPage = throttleOnce(\r\n      this.hNextPage.bind(this)\r\n    )\r\n    this.hPrevPage = throttleOnce(\r\n      this.hPrevPage.bind(this)\r\n    )\r\n    this._direction = 0\r\n    this._refFirstItem = React.createRef()\r\n\r\n    this._fOnClickItem = ({ id, text }) => this\r\n      .hNextPage.bind(null, id, text, 0)\r\n\r\n    this.state = {\r\n      model: [],\r\n      pageCurrent: 0,\r\n      pages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._loadItems()\r\n  }\r\n\r\n  _loadItems = () => {\r\n    const { dfProps={}, store } = this.props\r\n        , { lT } = dfProps\r\n        , proxy = store.getProxy(lT);\r\n    loadItems(dfProps.rootUrl, proxy)\r\n      .then(model => {\r\n         if (Array.isArray(model)) {\r\n            this.setState({ model, errMsg: void 0})\r\n         } else {\r\n           throw new Error('Response is not array');\r\n         }\r\n      })\r\n      .catch(err => {\r\n         this.setState({ errMsg: err.message })\r\n      })\r\n  }\r\n\r\n\r\n  hPrevPage = (pageNumber) => {\r\n    this.setState(({ pageCurrent }) => {\r\n      if (pageCurrent === 0 || pageCurrent !== pageNumber) {\r\n        return null;\r\n      }\r\n      this._direction = -1\r\n      return { pageCurrent: pageNumber - 1};\r\n    })\r\n  }\r\n\r\n  _addPage = (pages, id, title) => {\r\n    const { dfProps, store } = this.props;\r\n    pages.push((\r\n      <Frame\r\n        key={id}\r\n        id={id}\r\n        style={S.PAGE}\r\n        store={store}\r\n        title={title}\r\n        dfProps={dfProps}\r\n        onClickPrev={this.hPrevPage}\r\n        onClickNext={this.hNextPage}\r\n        loadItems={loadItems}\r\n        fOnClickItem={fOnClickItem}\r\n      />\r\n    ))\r\n  }\r\n\r\n\r\n  hNextPage = (id, title, pageNumber) => {\r\n    this.setState(({ pageCurrent, pages }) => {\r\n       if (pageNumber !== pageCurrent) {\r\n         return null;\r\n       }\r\n\r\n      if (pageNumber < pages.length) {\r\n        if (pages[pageNumber] && pages[pageNumber].key !== id) {\r\n           if (pageNumber>0) {\r\n             pages.splice(pageNumber)\r\n           } else {\r\n             pages = []\r\n           }\r\n           this._addPage(pages, id, title)\r\n        }\r\n      } else {\r\n        this._addPage(pages, id, title)\r\n      }\r\n\r\n      this._direction = 1\r\n      return { pages, pageCurrent: pageNumber + 1};\r\n    })\r\n  }\r\n\r\n\r\n _crTransform = () => {\r\n   let dX = '0';\r\n   if (this._direction !== 0 && this._menuNode) {\r\n     const _prevInt = _getTranslateX(this._menuNode);\r\n     if ( this._direction === 1 ) {\r\n       dX = _prevInt-300\r\n     } else {\r\n       dX = _prevInt+300\r\n     }\r\n     this._direction = 0\r\n   } else if (this._direction === 0 && this._menuNode) {\r\n     dX = _getTranslateX(this._menuNode);\r\n   }\r\n\r\n   return { transform: `translateX(${dX}px)` };\r\n }\r\n\r\n  _refMenu = n => this._menuNode = n\r\n\r\n  render(){\r\n    const {\r\n      model, errMsg,\r\n      pages, pageCurrent\r\n    } = this.state\r\n    const _transform = this._crTransform()\r\n    , _pagesStyle = {\r\n         ...S.PAGES,\r\n         ..._transform\r\n       };\r\n\r\n    return (\r\n      <div style={S.ROOT}>\r\n        <div\r\n          ref={this._refMenu}\r\n          style={_pagesStyle}\r\n        >\r\n          <div style={S.PAGE}>\r\n            <MenuList\r\n              refFirstItem={this._refFirstItem}\r\n              model={model}\r\n              fOnClickItem={this._fOnClickItem}\r\n            />\r\n            <ErrMsg errMsg={errMsg} />\r\n          </div>\r\n          <PageList\r\n            pages={pages}\r\n            pageCurrent={pageCurrent}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusFirst = () => {\r\n    const _nodeItem = this._refFirstItem.current;\r\n    if (_nodeItem) {\r\n      _nodeItem.focus()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const { pageCurrent } = this.state;\r\n    if (pageCurrent === 0) {\r\n       setTimeout(this.focusFirst, 1000)\r\n    }\r\n  }\r\n}\r\n\r\nexport default MenuSlider\r\n"],"file":"MenuSlider.js"}