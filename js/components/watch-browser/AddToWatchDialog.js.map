{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["addItem","Actions","actionCompleted","WAT","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","S_DIALOG","width","S_CAPTION","SELECT_WIDTH","AddToWatchDialog","withValidationLoad","Component","constructor","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handleSelectGroup","group","caption","groupCaption","lists","listOptions","_handleSelectList","list","listCaption","_handleAdd","_getValidationMessages","isValid","config","_updateValidationMessages","msg","push","_handleClose","_commandButtons","groupOptions","store","getWatchGroups","componentDidMount","unsubscribe","listen","componetWillUnmount","UNSAFE_componentWillReceiveProps","nextProps","isShow","groups","getWatchListsByGroup","shouldComponentUpdate","nextState","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Actions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\nimport {\r\n  notSelected\r\n} from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport Button from './Button';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport D from '../dialogs/DialogCell'\r\n\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad';\r\n\r\nconst { addItem } = Actions\r\n, actionCompleted = WAT.EDIT_WATCH_COMPLETED\r\n, actionFailed =  WAT.EDIT_WATCH_FAILED\r\n, forActionType = WAT.ADD_ITEM\r\n, S_DIALOG = { width: 300 }\r\n, S_CAPTION = { width: 70 }\r\n, SELECT_WIDTH = \"216\";\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow  : PropTypes.bool,\r\n    data    : PropTypes.object,\r\n    store   : PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n    this._commandButtons = [\r\n       <Button.Flat\r\n         key=\"add\"\r\n         caption=\"Add\"\r\n         title=\"Add Item To Watch List\"\r\n         isPrimary={true}\r\n         onClick={this._handleAdd}\r\n        />\r\n    ];\r\n    this.state = {\r\n      groupOptions : props.store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] })\r\n       }\r\n       this.props.onClose()\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null\r\n        this.listCaption = null\r\n        this.setState({ groupOptions:groups, listOptions:[] })\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null\r\n          this.setState({ listOptions:lists })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({ listOptions : group.lists })\r\n       }  else {\r\n         this.setState({ listOptions : [] })\r\n       }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n  _handleSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption\r\n      } else {\r\n        this.listCaption = null\r\n      }\r\n  }\r\n  _handleAdd = () => {\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      addItem({ caption, groupCaption, listCaption, config })\r\n    } else {\r\n      this._updateValidationMessages(validationMessages)\r\n    }\r\n  }\r\n  _getValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption)  { msg.push(notSelected('Group')) }\r\n    if (!this.listCaption)   { msg.push(notSelected('List'))  }\r\n    msg.isValid = (msg.length === 0) ? true : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n        , { caption } = data\r\n        , {\r\n            groupOptions, listOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n         style={S_DIALOG}\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <D.Row.Text\r\n          styleCaption={S_CAPTION}\r\n          caption=\"Item:\"\r\n          text={caption}\r\n        />\r\n        <D.RowInputSelect\r\n          caption=\"Group\"\r\n          captionStyle={S_CAPTION}\r\n          width={SELECT_WIDTH}\r\n          options={groupOptions}\r\n          onSelect={this._handleSelectGroup}\r\n        />\r\n        <D.RowInputSelect\r\n          caption=\"List\"\r\n          captionStyle={S_CAPTION}\r\n          width={SELECT_WIDTH}\r\n          onSelect={this._handleSelectList}\r\n          options={listOptions}\r\n        />\r\n        <ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddToWatchDialog\r\n"],"file":"AddToWatchDialog.js"}