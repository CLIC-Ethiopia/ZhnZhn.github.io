{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["addItem","Actions","actionCompleted","WAT","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","notSelected","Msg","AddToWatchDialog","withValidationLoad","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handleSelectGroup","group","caption","groupCaption","lists","listOptions","_handleSelectList","list","listCaption","_handleAdd","_getValidationMessages","isValid","config","_updateValidationMessages","msg","push","_handleClose","_commandButtons","groupOptions","store","getWatchGroups","componentDidMount","unsubscribe","listen","componetWillUnmount","UNSAFE_componentWillReceiveProps","nextProps","isShow","groups","getWatchListsByGroup","shouldComponentUpdate","nextState","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Actions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\nimport Msg from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport Button from './Button';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport D from '../dialogs/DialogCell'\r\n\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad';\r\n\r\nconst { addItem } = Actions;\r\nconst actionCompleted = WAT.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WAT.EDIT_WATCH_FAILED\r\n    , forActionType = WAT.ADD_ITEM;\r\nconst { notSelected } = Msg;\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow  : PropTypes.bool,\r\n    data    : PropTypes.object,\r\n    store   : PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n    this._commandButtons = [\r\n       <Button.Flat\r\n         key=\"add\"\r\n         caption=\"Add\"\r\n         title=\"Add Item To Watch List\"\r\n         isPrimary={true}\r\n         onClick={this._handleAdd}\r\n        />\r\n    ];\r\n    this.state = {\r\n      groupOptions : props.store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] })\r\n       }\r\n       this.props.onClose()\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null\r\n        this.listCaption = null\r\n        this.setState({ groupOptions:groups, listOptions:[] })\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null\r\n          this.setState({ listOptions:lists })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({ listOptions : group.lists })\r\n       }  else {\r\n         this.setState({ listOptions : [] })\r\n       }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n  _handleSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption\r\n      } else {\r\n        this.listCaption = null\r\n      }\r\n  }\r\n  _handleAdd = () => {\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      addItem({ caption, groupCaption, listCaption, config })\r\n    } else {\r\n      this._updateValidationMessages(validationMessages)\r\n    }\r\n  }\r\n  _getValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption)  { msg.push(notSelected('Group')) }\r\n    if (!this.listCaption)   { msg.push(notSelected('List'))  }\r\n    msg.isValid = (msg.length === 0) ? true : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n        , { caption } = data\r\n        , {\r\n            groupOptions, listOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <D.RowInputSelect\r\n          caption=\"Group:\"\r\n          options={groupOptions}\r\n          onSelect={this._handleSelectGroup}\r\n        />\r\n        <D.RowInputSelect\r\n          caption=\"List:\"\r\n          onSelect={this._handleSelectList}\r\n          options={listOptions}\r\n        />\r\n        <D.Row.Text\r\n          caption=\"Item:\"\r\n          text={caption}\r\n        />\r\n        <ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddToWatchDialog\r\n"],"file":"AddToWatchDialog.js"}