{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["styles","actionCompleted","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","AddToWatchDialog","createClass","displayName","propTypes","isShow","PropTypes","bool","isRequired","data","object","store","onClose","func","getInitialState","props","groupCaption","listCaption","groupOptions","getWatchGroups","listOptions","validationMessages","componentDidMount","unsubscribe","listen","_onStore","componetWillUnmount","actionType","state","length","setState","messages","componentWillReceiveProps","nextProps","groups","lists","getWatchListsByGroup","shouldComponentUpdate","nextState","_handlerSelectGroup","group","caption","_handlerSelectList","list","_handlerAdd","_getValidationMessages","isValid","config","addItem","_updateValidationMessages","msg","push","NOT_SELECTED","_handlerClose","render","commandButtons","rowDiv","labelSpan","Object","assign","lineHeight","fontWeight"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,+BAAN;;AAEA,IAAMC,kBAAkB,+BAAiBC,oBAAzC;AAAA,IACMC,eAAgB,+BAAiBC,iBADvC;AAAA,IAEMC,gBAAgB,+BAAiBC,QAFvC;;AAIA,IAAMC,mBAAmB,gBAAMC,WAAN;;AAGvBC,eAAc,kBAHS;AAIvBC,aAAY;AACVC,YAAU,gBAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,UADrB;AAEVC,UAAU,gBAAMH,SAAN,CAAgBI,MAAhB,CAAuBF,UAFvB;AAGVG,WAAU,gBAAML,SAAN,CAAgBI,MAHhB;AAIVE,aAAU,gBAAMN,SAAN,CAAgBO,IAAhB,CAAqBL;AAJrB,GAJW;AAUvBM,iBAVuB,6BAUN;AAAA,QACRH,KADQ,GACC,KAAKI,KADN,CACRJ,KADQ;;AAEf,SAAKK,YAAL,GAAoB,IAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,WAAO;AACLC,oBAAeP,MAAMQ,cAAN,EADV;AAELC,mBAAc,EAFT;AAGLC,0BAAqB;AAHhB,KAAP;AAKD,GAnBsB;AAqBvBC,mBArBuB,+BAqBJ;AACjB,SAAKC,WAAL,GAAmB,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,MAAjB,CAAwB,KAAKC,QAA7B,CAAnB;AACD,GAvBsB;AAwBvBC,qBAxBuB,iCAwBF;AACnB,SAAKH,WAAL;AACD,GA1BsB;AA2BvBE,UA3BuB,oBA2BdE,UA3Bc,EA2BFlB,IA3BE,EA2BG;AACxB,QAAIkB,eAAehC,eAAf,IAAkCc,KAAKV,aAAL,KAAuBA,aAA7D,EAA2E;AACxE,UAAI,KAAK6B,KAAL,CAAWP,kBAAX,CAA8BQ,MAA9B,GAAqC,CAAzC,EAA2C;AACzC,aAAKC,QAAL,CAAc,EAACT,oBAAmB,EAApB,EAAd;AACD;AACD,WAAKN,KAAL,CAAWH,OAAX;AACF,KALD,MAKO,IAAIe,eAAe9B,YAAf,IAA+BY,KAAKV,aAAL,KAAuBA,aAA1D,EAAwE;AAC5E,WAAK+B,QAAL,CAAc,EAACT,oBAAmBZ,KAAKsB,QAAzB,EAAd;AACF;AACF,GApCsB;AAsCvBC,2BAtCuB,qCAsCGC,SAtCH,EAsCa;AAClC,QAAIA,cAAc,KAAKlB,KAAnB,IAA4BkB,UAAU5B,MAAV,KAAqB,KAAKU,KAAL,CAAWV,MAAhE,EAAwE;AACtE,UAAM6B,SAASD,UAAUtB,KAAV,CAAgBQ,cAAhB,EAAf;AACA,UAAIe,WAAW,KAAKN,KAAL,CAAWV,YAA1B,EAAuC;AACrC,aAAKF,YAAL,GAAoB,IAApB;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACA,aAAKa,QAAL,CAAc,EAACZ,cAAagB,MAAd,EAAsBd,aAAY,EAAlC,EAAd;AACD,OAJD,MAIO,IAAI,KAAKJ,YAAT,EAAsB;AAC3B,YAAMmB,QAAQF,UAAUtB,KAAV,CAAgByB,oBAAhB,CAAqC,KAAKpB,YAA1C,CAAd;AACA,YAAImB,UAAU,KAAKP,KAAL,CAAWR,WAAzB,EAAqC;AACnC,eAAKH,WAAL,GAAmB,IAAnB;AACA,eAAKa,QAAL,CAAc,EAACV,aAAYe,KAAb,EAAd;AACD;AACF;AACF;AACF,GArDsB;AAuDvBE,uBAvDuB,iCAuDDJ,SAvDC,EAuDUK,SAvDV,EAuDoB;AACzC,QAAIL,cAAc,KAAKlB,KAAnB,IAA4BkB,UAAU5B,MAAV,KAAqB,KAAKU,KAAL,CAAWV,MAAhE,EAAwE;AACtE,aAAO,KAAP;AACD;AACD,WAAO,IAAP;AACD,GA5DsB;AA8DvBkC,qBA9DuB,+BA8DHC,KA9DG,EA8DG;AACxB,QAAIA,SAASA,MAAMC,OAAnB,EAA2B;AACxB;AACA,WAAKzB,YAAL,GAAoBwB,MAAMC,OAA1B;AACA,UAAID,MAAML,KAAV,EAAgB;AACd,aAAKL,QAAL,CAAc,EAACV,aAAcoB,MAAML,KAArB,EAAd;AACD,OAFD,MAEQ;AACN,aAAKL,QAAL,CAAc,EAACV,aAAc,EAAf,EAAd;AACD;AACH,KARD,MAQO;AACL,WAAKJ,YAAL,GAAoB,IAApB;AACD;AACF,GA1EsB;AA2EvB0B,oBA3EuB,8BA2EJC,IA3EI,EA2EC;AACpB,QAAIA,QAAQA,KAAKF,OAAjB,EAAyB;AACvB,WAAKxB,WAAL,GAAmB0B,KAAKF,OAAxB;AACD,KAFD,MAEO;AACL,WAAKxB,WAAL,GAAmB,IAAnB;AACD;AACJ,GAjFsB;AAkFvB2B,aAlFuB,yBAkFV;AACX,QAAMvB,qBAAqB,KAAKwB,sBAAL,EAA3B;AACA,QAAIxB,mBAAmByB,OAAvB,EAA+B;AACvB,UAAErC,IAAF,GAAW,KAAKM,KAAhB,CAAEN,IAAF;AAAA,UACEgC,OADF,GACsBhC,IADtB,CACEgC,OADF;AAAA,UACWM,MADX,GACsBtC,IADtB,CACWsC,MADX;AAAA,UAEE/B,YAFF,GAEgC,IAFhC,CAEEA,YAFF;AAAA,UAEgBC,WAFhB,GAEgC,IAFhC,CAEgBA,WAFhB;;;AAIN,6BAAa+B,OAAb,CAAqB,EAACP,gBAAD,EAAUzB,0BAAV,EAAwBC,wBAAxB,EAAqC8B,cAArC,EAArB;AACD,KAND,MAMO;AACL,WAAKE,yBAAL,CAA+B5B,kBAA/B;AACD;AACF,GA7FsB;AA8FvBwB,wBA9FuB,oCA8FC;AACtB,QAAMK,MAAM,EAAZ;AACA,QAAI,CAAC,KAAKlC,YAAV,EAAuB;AAAEkC,UAAIC,IAAJ,CAAS,cAAIC,YAAJ,CAAiB,OAAjB,CAAT;AAAqC;AAC9D,QAAI,CAAC,KAAKnC,WAAV,EAAuB;AAAEiC,UAAIC,IAAJ,CAAS,cAAIC,YAAJ,CAAiB,MAAjB,CAAT;AAAoC;AAC7DF,QAAIJ,OAAJ,GAAeI,IAAIrB,MAAJ,KAAe,CAAhB,GAAqB,IAArB,GAA4B,KAA1C;AACA,WAAOqB,GAAP;AACD,GApGsB;AAsGvBG,eAtGuB,2BAsGR;AACb,QAAI,KAAKzB,KAAL,CAAWP,kBAAX,CAA8BQ,MAA9B,GAAqC,CAAzC,EAA2C;AACzC,WAAKC,QAAL,CAAc,EAACT,oBAAmB,EAApB,EAAd;AACD;AACD,SAAKN,KAAL,CAAWH,OAAX;AACD,GA3GsB;AA6GvB0C,QA7GuB,oBA6Gf;AAAA,iBACmB,KAAKvC,KADxB;AAAA,QACEV,MADF,UACEA,MADF;AAAA,QACUI,IADV,UACUA,IADV;AAAA,QAEEgC,OAFF,GAEchC,IAFd,CAEEgC,OAFF;AAAA,iBAGoD,KAAKb,KAHzD;AAAA,QAGEV,YAHF,UAGEA,YAHF;AAAA,QAGgBE,WAHhB,UAGgBA,WAHhB;AAAA,QAG6BC,kBAH7B,UAG6BA,kBAH7B;AAAA,QAIAkC,cAJA,GAIgB,CACnB;AACG,WAAI,GADP;AAEG,YAAK,OAFR;AAGG,eAAQ,KAHX;AAIG,eAAS,KAAKX;AAJjB,MADmB,CAJhB;;AAYN,WACE;AAAA;AAAA;AACG,iBAAQ,mBADX;AAEG,gBAAQvC,MAFX;AAGG,wBAAgBkD,cAHnB;AAIG,iBAAS,KAAKF;AAJjB;AAME;AAAA;AAAA,UAAK,OAAO3D,OAAO8D,MAAnB,EAA2B,KAAI,GAA/B;AACE;AAAA;AAAA,YAAM,OAAO9D,OAAO+D,SAApB;AAAA;AAAA,SADF;AAIE;AACG,iBAAM,KADT;AAEG,mBAASvC,YAFZ;AAGG,oBAAU,KAAKqB;AAHlB;AAJF,OANF;AAgBE;AAAA;AAAA,UAAK,OAAO7C,OAAO8D,MAAnB,EAA2B,KAAI,GAA/B;AACE;AAAA;AAAA,YAAM,OAAO9D,OAAO+D,SAApB;AAAA;AAAA,SADF;AAIE;AACG,iBAAM,KADT;AAEG,oBAAU,KAAKf,kBAFlB;AAGG,mBAAStB;AAHZ;AAJF,OAhBF;AA0BE;AAAA;AAAA,UAAK,OAAOsC,OAAOC,MAAP,CAAc,EAAd,EAAkBjE,OAAO8D,MAAzB,EAAiC,EAACI,YAAY,CAAb,EAAjC,CAAZ,EAA+D,KAAI,GAAnE;AACE;AAAA;AAAA,YAAM,OAAOlE,OAAO+D,SAApB;AAAA;AAAA,SADF;AAIE;AAAA;AAAA,YAAM,OAAO,EAACI,YAAY,MAAb,EAAb;AACIpB;AADJ;AAJF,OA1BF;AAkCE;AACG,4BAAoBpB;AADvB;AAlCF,KADF;AAwCD;AAjKsB,GAAzB;;kBAoKepB,gB","file":"AddToWatchDialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport WithValidation from '../dialogs/WithValidation';\r\n\r\nimport WatchActions from '../../flux/actions/WatchActions';\r\nimport {WatchActionTypes} from '../../flux/actions/WatchActions';\r\nimport Msg from '../../constants/Msg';\r\n\r\n\r\nimport ModalDialog from '../zhn/ModalDialog';\r\nimport ActionButton from '../zhn/ActionButton';\r\nimport InputSelect from '../zhn/InputSelect';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\n\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst actionCompleted = WatchActionTypes.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WatchActionTypes.EDIT_WATCH_FAILED\r\n    , forActionType = WatchActionTypes.ADD_ITEM\r\n\r\nconst AddToWatchDialog = React.createClass({\r\n  ...WithValidation,\r\n\r\n  displayName : 'AddToWatchDialog',\r\n  propTypes : {\r\n    isShow  : React.PropTypes.bool.isRequired,\r\n    data    : React.PropTypes.object.isRequired,\r\n    store   : React.PropTypes.object,\r\n    onClose : React.PropTypes.func.isRequired\r\n  },\r\n  getInitialState(){\r\n    const {store} = this.props;\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n    return {\r\n      groupOptions : store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  },\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  },\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  },\r\n  _onStore(actionType, data){\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({validationMessages:[]});\r\n       }\r\n       this.props.onClose();\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({validationMessages:data.messages});\r\n    }\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null;\r\n        this.listCaption = null;\r\n        this.setState({groupOptions:groups, listOptions:[]});\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null;\r\n          this.setState({listOptions:lists})\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  _handlerSelectGroup(group){\r\n    if (group && group.caption){\r\n       //const {store} = this.props;\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({listOptions : group.lists})\r\n       }  else {\r\n         this.setState({listOptions : []})\r\n       }\r\n    } else {\r\n      this.groupCaption = null;\r\n    }\r\n  },\r\n  _handlerSelectList(list){\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption;\r\n      } else {\r\n        this.listCaption = null;\r\n      }\r\n  },\r\n  _handlerAdd(){\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      WatchActions.addItem({caption, groupCaption, listCaption, config});\r\n    } else {\r\n      this._updateValidationMessages(validationMessages);\r\n    }\r\n  },\r\n  _getValidationMessages(){\r\n    const msg = [];\r\n    if (!this.groupCaption){ msg.push(Msg.NOT_SELECTED('Group'));}\r\n    if (!this.listCaption) { msg.push(Msg.NOT_SELECTED('List'));}\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  },\r\n\r\n  _handlerClose(){\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages:[]});\r\n    }\r\n    this.props.onClose();\r\n  },\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n        , { caption } = data\r\n        , { groupOptions, listOptions, validationMessages } = this.state\r\n        , commandButtons =[\r\n       <ActionButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Add\"\r\n          onClick={this._handlerAdd}\r\n       />\r\n    ];\r\n    return (\r\n      <ModalDialog\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={commandButtons}\r\n         onClose={this._handlerClose}\r\n      >\r\n        <div style={styles.rowDiv} key=\"1\">\r\n          <span style={styles.labelSpan}>\r\n            Group:\r\n          </span>\r\n          <InputSelect\r\n             width=\"250\"\r\n             options={groupOptions}\r\n             onSelect={this._handlerSelectGroup}\r\n           />\r\n        </div>\r\n        <div style={styles.rowDiv} key=\"2\">\r\n          <span style={styles.labelSpan}>\r\n            List:\r\n          </span>\r\n          <InputSelect\r\n             width=\"250\"\r\n             onSelect={this._handlerSelectList}\r\n             options={listOptions}\r\n           />\r\n        </div>\r\n        <div style={Object.assign({}, styles.rowDiv, {lineHeight: 2})} key=\"3\">\r\n          <span style={styles.labelSpan}>\r\n            Item:\r\n          </span>\r\n          <span style={{fontWeight: 'bold'}}>\r\n             {caption}\r\n          </span>\r\n        </div>\r\n        <ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default AddToWatchDialog\r\n"]}