{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["actionCompleted","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","AddToWatchDialog","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handleSelectGroup","group","caption","groupCaption","lists","listOptions","_handleSelectList","list","listCaption","_handleAdd","_getValidationMessages","isValid","config","addItem","_updateValidationMessages","msg","push","NOT_SELECTED","_handleClose","_commandButtons","groupOptions","store","getWatchGroups","unsubscribe","listen","nextProps","isShow","groups","getWatchListsByGroup","nextState","propTypes","bool","object","shape","func"],"mappings":"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","file":"AddToWatchDialog.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport WatchActions, { WatchActionTypes } from '../../flux/actions/WatchActions';\r\nimport Msg from '../../constants/Msg';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport Button from './Button';\r\nimport ValidationMessages from '../zhn/ValidationMessages';\r\nimport RowInputSelect from '../dialogs/RowInputSelect';\r\nimport Row from '../dialogs/Row';\r\n\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad';\r\n\r\nconst actionCompleted = WatchActionTypes.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WatchActionTypes.EDIT_WATCH_FAILED\r\n    , forActionType = WatchActionTypes.ADD_ITEM;\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  static propTypes = {\r\n    isShow  : PropTypes.bool,\r\n    data    : PropTypes.object,\r\n    store   : PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    onClose : PropTypes.func\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n    this._commandButtons =[\r\n         <Button.Flat\r\n           caption=\"Add\"\r\n           title=\"Add Item To Watch List\"\r\n           isPrimary={true}\r\n           onClick={this._handleAdd}\r\n          />\r\n    ];\r\n    this.state = {\r\n      groupOptions : props.store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] })\r\n       }\r\n       this.props.onClose()\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null\r\n        this.listCaption = null\r\n        this.setState({ groupOptions:groups, listOptions:[] })\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null\r\n          this.setState({ listOptions:lists })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({ listOptions : group.lists })\r\n       }  else {\r\n         this.setState({ listOptions : [] })\r\n       }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n  _handleSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption\r\n      } else {\r\n        this.listCaption = null\r\n      }\r\n  }\r\n  _handleAdd = () => {\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      WatchActions.addItem({ caption, groupCaption, listCaption, config })\r\n    } else {\r\n      this._updateValidationMessages(validationMessages)\r\n    }\r\n  }\r\n  _getValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption)  { msg.push(Msg.NOT_SELECTED('Group')) }\r\n    if (!this.listCaption)   { msg.push(Msg.NOT_SELECTED('List'))  }\r\n    msg.isValid = (msg.length === 0) ? true : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n        , { caption } = data\r\n        , {\r\n            groupOptions, listOptions,\r\n            validationMessages\r\n          } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <RowInputSelect\r\n          caption=\"Group:\"\r\n          options={groupOptions}\r\n          onSelect={this._handleSelectGroup}\r\n        />\r\n        <RowInputSelect\r\n          caption=\"List:\"\r\n          onSelect={this._handleSelectList}\r\n          options={listOptions}\r\n        />\r\n        <Row.Text\r\n          caption=\"Item:\"\r\n          text={caption}\r\n        />\r\n        <ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddToWatchDialog\r\n"]}