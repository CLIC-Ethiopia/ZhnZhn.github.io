{"version":3,"sources":["../../../src/components/watch-browser/LoadItemDialog.jsx"],"names":["getFromDate","DateUtils","getToDate","isYmd","mlsToDmy","S","DIALOG","width","DIALOG_SHORT","ITEM_TEXT","display","maxWidth","height","verticalAlign","textOverflow","overflow","_crValue","x","y","trim","LoadItemDialog","Decor","dialog","props","_handleLoad","validationMessages","_createValidationMessages","isValid","data","onClose","id","title","subtitle","caption","columnName","dataColumn","seriaColumnNames","itemConf","datesFragment","getValues","fromDate","toDate","option","value","item","loadId","LT","WL","ChartActions","loadStock","chartType","CHT","WATCH_LIST","browserType","BT","_updateValidationMessages","msg","getValidation","datesMsg","concat","length","_handleClose","_handleWithValidationClose","_refDates","c","initToDate","onTestDate","isValue","toolbarButtons","_createType2WithToolbar","_commandButtons","state","_isWithInitialState","isShowDate","initFromDate","shouldComponentUpdate","nextProps","nextState","isShow","render","dataSource","isShowLabels","_style","_value","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport ChartActions from '../../flux/actions/ChartActions'\r\nimport { BrowserType as BT, LoadType as LT } from '../../constants/Type'\r\nimport CHT from '../../constants/ChartType'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog'\r\nimport D from '../dialogs/DialogCell'\r\nimport ValidationMessages from '../zhn/ValidationMessages'\r\n\r\nimport Decor from '../dialogs/decorators/Decorators'\r\n\r\nconst {\r\n  getFromDate,\r\n  getToDate,\r\n  isYmd,\r\n  mlsToDmy\r\n} = DateUtils;\r\n\r\nconst S = {\r\n  DIALOG: {\r\n    width: 365,\r\n  },\r\n  DIALOG_SHORT: {\r\n    width: 265\r\n  },\r\n  ITEM_TEXT: {\r\n    display: 'inline-block',\r\n    maxWidth: 250,\r\n    height: 32,\r\n    verticalAlign: 'middle',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden'\r\n  }\r\n};\r\n\r\nconst _crValue = (x='', y='') => (`${y} ${mlsToDmy(x)}`).trim();\r\n\r\n@Decor.dialog\r\nclass LoadItemDialog extends Component {\r\n   /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     data: PropTypes.shape({\r\n       fromDate: PropTypes.string,\r\n       initToDate: PropTypes.string,\r\n       onTestDate: PropTypes.func\r\n     }),\r\n     store: PropTypes.object,\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n\r\n   static defaultProps = {\r\n     data: {}\r\n   }\r\n\r\n   constructor(props){\r\n     super(props)\r\n     const {\r\n       fromDate,\r\n       initToDate,\r\n       onTestDate,\r\n       itemConf={}\r\n     } = props.data\r\n     , isValue = !!itemConf.x;\r\n\r\n     this.toolbarButtons = this._createType2WithToolbar(props, {\r\n       isValue\r\n     })\r\n\r\n     this._commandButtons = [\r\n       <D.Button.Load\r\n         key=\"load\"\r\n         onClick={this._handleLoad}\r\n       />\r\n     ]\r\n\r\n    this.state = {\r\n       ...this._isWithInitialState(),\r\n       isShowDate: false,\r\n       isValue,\r\n       initFromDate: fromDate || getFromDate(2),\r\n       initToDate: initToDate || getToDate(),\r\n       onTestDate: onTestDate || isYmd\r\n    }\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n       return false;\r\n     }\r\n     return true;\r\n   }\r\n\r\n  _handleLoad = () => {\r\n    const validationMessages = this._createValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data, onClose } = this.props\r\n          , {\r\n              id,\r\n              title, subtitle, caption,\r\n              columnName, dataColumn, seriaColumnNames,\r\n              itemConf={}\r\n              /*\r\n              _itemKey, url, loadId,\r\n              optionFetch, items,\r\n              itemCaption, seriaType,\r\n              dataSource, dfId, timeId\r\n              */\r\n             } = data\r\n          , { fromDate, toDate } = this.datesFragment.getValues()\r\n          , option = {\r\n             id, title, subtitle,\r\n             value: caption,\r\n             item: caption,\r\n             fromDate, toDate,\r\n             columnName, dataColumn, seriaColumnNames,\r\n             loadId: itemConf.loadId || LT.WL,\r\n             ...itemConf\r\n           };\r\n      ChartActions.loadStock({\r\n        chartType: CHT.WATCH_LIST,\r\n        browserType: BT.WATCH_LIST\r\n      }, option);\r\n      onClose()\r\n    }\r\n    this._updateValidationMessages(validationMessages)\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n    let msg = [];\r\n    const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n    if (!isValid) { msg = msg.concat(datesMsg) }\r\n    msg.isValid = (msg.length === 0) ? true : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this._handleWithValidationClose(this._createValidationMessages)\r\n    this.props.onClose()\r\n  }\r\n\r\n  _refDates = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n    , { caption, itemConf={} } = data\r\n    , { dataSource, x, y } = itemConf\r\n    , {\r\n        isShowLabels, isShowDate, isValue,\r\n        initFromDate, initToDate,\r\n        onTestDate, validationMessages\r\n      } = this.state\r\n    , _style = isShowLabels ? S.DIALOG : S.DIALOG_SHORT\r\n    , _value = _crValue(x, y);\r\n\r\n    return (\r\n      <ModalDialog\r\n         style={_style}\r\n         isShow={isShow}\r\n         caption=\"Load Item\"\r\n         commandButtons={this._commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <D.Toolbar\r\n          isShow={true}\r\n          buttons={this.toolbarButtons}\r\n        />\r\n        <D.Row.Text\r\n          isShowLabels={isShowLabels}\r\n          styleText={S.ITEM_TEXT}\r\n          caption=\"Item:\"\r\n          text={caption}\r\n        />\r\n        <D.ShowHide isShow={isValue}>\r\n          <D.Row.Text\r\n            isShowLabels={isShowLabels}\r\n            styleText={S.ITEM_TEXT}\r\n            caption=\"Value:\"\r\n            text={_value}\r\n          />\r\n        </D.ShowHide>\r\n        <D.ShowHide isShow={isShowDate}>\r\n          <D.DatesFragment\r\n              ref={this._refDates}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={initFromDate}\r\n              initToDate={initToDate}\r\n              onTestDate={onTestDate}\r\n          />\r\n        </D.ShowHide>\r\n        <D.Row.Text\r\n          isShowLabels={isShowLabels}\r\n          styleText={S.ITEM_TEXT}\r\n          caption=\"Source:\"\r\n          text={dataSource}\r\n        />\r\n        <ValidationMessages\r\n            validationMessages={validationMessages}\r\n        />\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoadItemDialog\r\n"],"file":"LoadItemDialog.js"}