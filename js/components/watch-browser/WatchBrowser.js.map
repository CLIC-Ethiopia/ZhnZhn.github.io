{"version":3,"sources":["../../../src/components/watch-browser/WatchBrowser.jsx"],"names":["DRAG","GROUP","LIST","ITEM","styles","browser","paddingRight","btCircle","marginLeft","lineHeight","position","top","scrollDiv","overflowY","height","groupDiv","listDiv","paddingLeft","borderLeft","itemNotSelected","borderBottom","marginRight","WatchBrowser","createClass","getInitialState","store","props","isShow","isModeEdit","watchList","getWatchList","componentWillMount","unsubscribe","listen","_onStore","componentWillUnmount","actionType","data","browserType","showAction","updateAction","_handlerShow","setState","_handlerHide","_handlerSaveWatch","saveWatch","_handlerToggleEditMode","state","_handlerEditGroup","showModalDialog","EDIT_WATCH_GROUP","_handlerEditList","EDIT_WATCH_LIST","_renderWatchList","groups","map","group","index","caption","lists","_handlerDragStartGroup","_handlerDragEnterGroup","_handlerDragOverGroup","_handlerDragLeaveGroup","_handlerDropGroup","_renderLists","groupCaption","list","items","_handlerDragStartList","_handlerDragEnterList","_handlerDragOverList","_handlerDragLeaveList","_handlerDropList","_renderItems","_handlerClickItem","item","LOAD_ITEM","_handlerRemoveItem","option","event","stopPropagation","removeItem","listCaption","id","_className","_handlerDragStartItem","_handlerDragOverItem","_handlerDragEnterItem","_handlerDragLeaveItem","_handlerDropItem","_renderEditBar","marginBottom","render","_captionEV"],"mappings":"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","file":"WatchBrowser.js","sourcesContent":["import React from 'react';\r\n\r\nimport WithDnDStyle from './with/WithDnDStyle';\r\nimport createHandlerDnDGroup from './with/createHandlerDnDGroup';\r\nimport createHandlerDnDList from './with/createHandlerDnDList';\r\nimport createHandlerDnDItem from './with/createHandlerDnDItem';\r\n\r\nimport { ModalDialog } from '../../constants/Type';\r\nimport ComponentActions from '../../flux/actions/ComponentActions';\r\nimport WatchActions from '../../flux/actions/WatchActions';\r\n\r\nimport Browser from '../zhn/Browser';\r\nimport BrowserCaption from '../zhn/BrowserCaption';\r\nimport ButtonCircle from '../zhn/ButtonCircle';\r\nimport ScrollPane from '../zhn/ScrollPane';\r\nimport OpenClose2 from '../zhn/OpenClose2';\r\nimport WatchItem from './WatchItem';\r\n\r\n\r\nconst DRAG = {\r\n  GROUP : 'GROUP',\r\n  LIST : 'LIST',\r\n  ITEM : 'ITEM'\r\n};\r\n\r\nconst styles = {\r\n  browser : {\r\n    paddingRight: '0px'\r\n  },\r\n  btCircle : {\r\n    marginLeft: '20px',\r\n    lineHeight: 'initial',\r\n    position: 'relative',\r\n    top: '-2px'\r\n  },\r\n  scrollDiv : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px'\r\n  },\r\n  groupDiv : {\r\n    lineHeight : 2\r\n  },\r\n  listDiv : {\r\n    marginLeft : '8px',\r\n    paddingLeft : '12px',\r\n    borderLeft : '1px solid yellow',\r\n    lineHeight : 2\r\n  },\r\n  itemNotSelected : {\r\n    borderBottom : '1px solid rgba(128, 192, 64, 0.6)',\r\n    marginRight : '10px'\r\n  }\r\n};\r\n\r\nconst WatchBrowser = React.createClass({\r\n  ...WithDnDStyle,\r\n  ...createHandlerDnDGroup(DRAG, WatchActions),\r\n  ...createHandlerDnDList(DRAG, WatchActions),\r\n  ...createHandlerDnDItem(DRAG, WatchActions),\r\n\r\n  getInitialState(){\r\n    const {store} = this.props;\r\n    return {\r\n      isShow : false,\r\n      isModeEdit : false,\r\n      watchList : store.getWatchList()\r\n    }\r\n  },\r\n\r\n  componentWillMount: function(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  },\r\n  componentWillUnmount: function(){\r\n    this.unsubscribe();\r\n  },\r\n  _onStore: function(actionType, data){\r\n     const { browserType, showAction, updateAction } = this.props;\r\n     if (actionType === showAction && data === browserType ){\r\n      this._handlerShow();\r\n    } else if (actionType === updateAction) {\r\n      this.setState({ watchList: data })\r\n    }\r\n  },\r\n\r\n  _handlerHide(){\r\n     this.setState({ isShow : false })\r\n  },\r\n  _handlerShow(){\r\n     this.setState({ isShow : true })\r\n  },\r\n\r\n  _handlerSaveWatch(){\r\n    WatchActions.saveWatch();\r\n  },\r\n  _handlerToggleEditMode(){\r\n    this.setState({ isModeEdit : !this.state.isModeEdit });\r\n  },\r\n\r\n  _handlerEditGroup(){\r\n    ComponentActions.showModalDialog(ModalDialog.EDIT_WATCH_GROUP);\r\n  },\r\n  _handlerEditList(){\r\n    ComponentActions.showModalDialog(ModalDialog.EDIT_WATCH_LIST);\r\n  },\r\n\r\n  _renderWatchList(watchList){\r\n     const { isModeEdit } = this.state;\r\n     return watchList.groups.map((group, index) => {\r\n       const {caption, lists} = group;\r\n       return (\r\n               <OpenClose2\r\n                  key={index}\r\n                  style={styles.groupDiv}\r\n                  caption={caption}\r\n                  isClose={true}\r\n                  isDraggable={isModeEdit}\r\n                  option={{ caption }}\r\n                  onDragStart={this._handlerDragStartGroup}\r\n                  onDragEnter={this._handlerDragEnterGroup}\r\n                  onDragOver={this._handlerDragOverGroup}\r\n                  onDragLeave={this._handlerDragLeaveGroup}\r\n                  onDrop={this._handlerDropGroup}\r\n                >\r\n                {lists && this._renderLists(lists, caption)}\r\n                </OpenClose2>\r\n              )\r\n     })\r\n  },\r\n\r\n  _renderLists(lists, groupCaption){\r\n    const { isModeEdit } = this.state;\r\n    return lists.map((list, index) => {\r\n      const {caption, items} = list;\r\n      return (\r\n        <OpenClose2\r\n           key={index}\r\n           fillOpen={'#80c040'}\r\n           style={styles.listDiv}\r\n           styleNotSelected={styles.itemNotSelected}\r\n           caption={caption}\r\n           isClose={true}\r\n           isDraggable={isModeEdit}\r\n           option={{ groupCaption, caption }}\r\n           onDragStart={this._handlerDragStartList}\r\n           onDragEnter={this._handlerDragEnterList}\r\n           onDragOver={this._handlerDragOverList}\r\n           onDragLeave={this._handlerDragLeaveList}\r\n           onDrop={this._handlerDropList}\r\n        >\r\n         {items && this._renderItems(items, groupCaption, caption)}\r\n        </OpenClose2>\r\n      )\r\n    })\r\n  },\r\n\r\n  _handlerClickItem(item){\r\n    ComponentActions.showModalDialog(ModalDialog.LOAD_ITEM, item);\r\n  },\r\n  _handlerRemoveItem(option, event){\r\n    event.stopPropagation();\r\n    WatchActions.removeItem(option);\r\n  },\r\n\r\n  _renderItems(items, groupCaption, listCaption) {\r\n      const {isModeEdit} = this.state;\r\n      return items.map((item, index) => {\r\n        const { id, caption } = item\r\n            , _className = (index % 2)\r\n                 ? 'row__topic__even not-selected'\r\n                 : 'row__topic__odd not-selected'\r\n        return (\r\n            <WatchItem\r\n               key={id}\r\n               className={_className}\r\n               isModeEdit={isModeEdit}\r\n               item={item}\r\n               option={{ groupCaption, listCaption, caption }}\r\n               onClick={this._handlerClickItem}\r\n               onClose={this._handlerRemoveItem}\r\n               onDragStart={this._handlerDragStartItem}\r\n               onDragOver={this._handlerDragOverItem}\r\n               onDragEnter={this._handlerDragEnterItem}\r\n               onDragLeave={this._handlerDragLeaveItem}\r\n               onDrop={this._handlerDropItem}\r\n            />\r\n        );\r\n      })\r\n    },\r\n\r\n  _renderEditBar(isModeEdit){\r\n    if (isModeEdit){\r\n      return (\r\n        <div style={{marginBottom: '10px'}}>\r\n           <ButtonCircle\r\n             caption={'GROUP'}\r\n             className={'bt__watch__bar'}\r\n             isWithoutDefault={true}\r\n             onClick={this._handlerEditGroup}\r\n          />\r\n          <ButtonCircle\r\n             caption={'LIST'}\r\n             className={'bt__watch__bar'}\r\n             isWithoutDefault={true}\r\n             style={{marginLeft: '20px'}}\r\n             onClick={this._handlerEditList}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  render(){\r\n    const { caption } = this.props\r\n        , { isShow, isModeEdit, watchList } = this.state\r\n        , _captionEV = (isModeEdit) ? 'V' : 'E';\r\n    return (\r\n       <Browser isShow={isShow} style={styles.browser}>\r\n          <BrowserCaption\r\n            caption={caption}\r\n            onClose={this._handlerHide}\r\n          >         \r\n           <ButtonCircle\r\n             caption={'S'}\r\n             style={styles.btCircle}\r\n             onClick={this._handlerSaveWatch}\r\n           />\r\n           <ButtonCircle\r\n              caption={_captionEV}\r\n              style={styles.btCircle}\r\n              onClick={this._handlerToggleEditMode}\r\n           />\r\n         </BrowserCaption>\r\n         {this._renderEditBar(isModeEdit)}\r\n         <ScrollPane style={styles.scrollDiv}>\r\n           {watchList && this._renderWatchList(watchList)}\r\n         </ScrollPane>\r\n      </Browser>\r\n    )\r\n  }\r\n});\r\n\r\nexport default WatchBrowser\r\n"]}