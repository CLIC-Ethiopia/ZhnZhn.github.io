{"version":3,"sources":["../../../src/components/watch-browser/WatchBrowser.jsx"],"names":["C_FILL_OPEN","CL_WATCH_ITEM","DRAG","GROUP","LIST","ITEM","S","BROWSER","paddingRight","BT_CIRCLE","marginLeft","position","top","SCROLL_DIV","overflowY","height","GROUP_DIV","lineHeight","LIST_DIV","paddingLeft","borderLeft","ITEM_NOT_SELECTED","borderBottom","marginRight","WatchBrowser","withDnDStyle","withDnDGroup","withDnDList","withDnDItem","props","_onStore","actionType","data","browserType","showAction","updateAction","_handlerShow","setState","watchList","_handlerHide","isShow","_handlerToggleEditMode","isModeEdit","state","_renderWatchList","groups","map","group","index","caption","lists","_handlerDragStartGroup","_handlerDragEnterGroup","_handlerDragOverGroup","_handlerDragLeaveGroup","_handlerDropGroup","_renderLists","groupCaption","list","items","_handlerDragStartList","_handlerDragEnterList","_handlerDragOverList","_handlerDragLeaveList","_handlerDropList","_renderItems","listCaption","item","id","_handlerClickItem","_handlerRemoveItem","_handlerDragStartItem","_handlerDragOverItem","_handlerDragEnterItem","_handlerDragLeaveItem","_handlerDropItem","bind","isInitShow","store","getWatchList","unsubscribe","listen","saveWatch","showModalDialog","EDIT_WATCH_GROUP","EDIT_WATCH_LIST","LOAD_ITEM","option","event","stopPropagation","removeItem","_captionEV","_handlerSaveWatch","_handlerEditGroup","_handlerEditList"],"mappings":"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","file":"WatchBrowser.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { ModalDialog } from '../../constants/Type';\r\nimport ComponentActions from '../../flux/actions/ComponentActions';\r\nimport WatchActions from '../../flux/actions/WatchActions';\r\n\r\nimport Browser from '../zhn/Browser';\r\nimport BrowserCaption from '../zhn/BrowserCaption';\r\nimport ButtonCircle from '../zhn/ButtonCircle';\r\nimport ScrollPane from '../zhn/ScrollPane';\r\nimport OpenClose2 from '../zhn/OpenClose2';\r\nimport EditBar from './EditBar';\r\nimport WatchItem from './WatchItem';\r\n\r\nimport Decor from './decorators/Decorators';\r\n\r\nconst C_FILL_OPEN = '#80c040';\r\nconst CL_WATCH_ITEM = 'row__type2-topic not-selected';\r\n\r\nconst DRAG = {\r\n  GROUP : 'GROUP',\r\n  LIST : 'LIST',\r\n  ITEM : 'ITEM'\r\n};\r\n\r\nconst S = {\r\n  BROWSER: {\r\n    paddingRight: '0px'\r\n  },\r\n  BT_CIRCLE: {\r\n    marginLeft: '20px',\r\n    position: 'relative',\r\n    top: '-2px'\r\n  },\r\n  SCROLL_DIV: {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px'\r\n  },\r\n  GROUP_DIV: {\r\n    lineHeight : 2\r\n  },\r\n  LIST_DIV: {\r\n    marginLeft : '8px',\r\n    paddingLeft : '12px',\r\n    borderLeft : '1px solid yellow',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_NOT_SELECTED: {\r\n    borderBottom : '1px solid rgba(128, 192, 64, 0.6)',\r\n    marginRight : '10px'\r\n  }\r\n};\r\n\r\n@Decor.withDnDStyle\r\n@Decor.withDnDGroup(DRAG, WatchActions)\r\n@Decor.withDnDList(DRAG, WatchActions)\r\n@Decor.withDnDItem(DRAG, WatchActions)\r\nclass WatchBrowser extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n\r\n    this._handlerDragStartGroup = this._handlerDragStartGroup.bind(this)\r\n    this._handlerDropGroup = this._handlerDropGroup.bind(this)\r\n    this._handlerDragEnterGroup = this._handlerDragEnterGroup.bind(this)\r\n    this._handlerDragLeaveGroup = this._handlerDragLeaveGroup.bind(this)\r\n\r\n    this._handlerDragStartList = this._handlerDragStartList.bind(this)\r\n    this._handlerDropList = this._handlerDropList.bind(this)\r\n    this._handlerDragEnterList = this._handlerDragEnterList.bind(this)\r\n    this._handlerDragLeaveList = this._handlerDragLeaveList.bind(this)\r\n\r\n    this._handlerDragStartItem = this._handlerDragStartItem.bind(this)\r\n    this._handlerDropItem = this._handlerDropItem.bind(this)\r\n    this._handlerDragEnterItem = this._handlerDragEnterItem.bind(this)\r\n    this._handlerDragLeaveItem = this._handlerDragLeaveItem.bind(this)\r\n\r\n    this.state = {\r\n      isShow : !!props.isInitShow,\r\n      isModeEdit : false,\r\n      watchList : props.store.getWatchList()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n     const { browserType, showAction, updateAction } = this.props;\r\n     if (actionType === showAction && data === browserType ){\r\n      this._handlerShow()\r\n    } else if (actionType === updateAction) {\r\n      this.setState({ watchList: data })\r\n    }\r\n  }\r\n\r\n  _handlerHide = () => {\r\n     this.setState({ isShow : false })\r\n  }\r\n  _handlerShow = () => {\r\n     this.setState({ isShow : true })\r\n  }\r\n\r\n  _handlerSaveWatch() {\r\n    WatchActions.saveWatch()\r\n  }\r\n  _handlerToggleEditMode = () => {\r\n    this.setState({ isModeEdit : !this.state.isModeEdit })\r\n  }\r\n\r\n  _handlerEditGroup() {\r\n    ComponentActions.showModalDialog(ModalDialog.EDIT_WATCH_GROUP)\r\n  }\r\n  _handlerEditList() {\r\n    ComponentActions.showModalDialog(ModalDialog.EDIT_WATCH_LIST)\r\n  }\r\n\r\n  _renderWatchList = (watchList) => {\r\n     const { isModeEdit } = this.state;\r\n     return watchList.groups.map((group, index) => {\r\n       const {caption, lists} = group;\r\n       return (\r\n               <OpenClose2\r\n                  key={index}\r\n                  style={S.GROUP_DIV}\r\n                  caption={caption}\r\n                  isClose={true}\r\n                  isDraggable={isModeEdit}\r\n                  option={{ caption }}\r\n                  onDragStart={this._handlerDragStartGroup}\r\n                  onDragEnter={this._handlerDragEnterGroup}\r\n                  onDragOver={this._handlerDragOverGroup}\r\n                  onDragLeave={this._handlerDragLeaveGroup}\r\n                  onDrop={this._handlerDropGroup}\r\n                >\r\n                {lists && this._renderLists(lists, caption)}\r\n                </OpenClose2>\r\n              );\r\n     });\r\n  }\r\n\r\n  _renderLists = (lists, groupCaption) => {\r\n    const { isModeEdit } = this.state;\r\n    return lists.map((list, index) => {\r\n      const {caption, items} = list;\r\n      return (\r\n        <OpenClose2\r\n           key={index}\r\n           fillOpen={C_FILL_OPEN}\r\n           style={S.LIST_DIV}\r\n           styleNotSelected={S.ITEM_NOT_SELECTED}\r\n           caption={caption}\r\n           isClose={true}\r\n           isDraggable={isModeEdit}\r\n           option={{ groupCaption, caption }}\r\n           onDragStart={this._handlerDragStartList}\r\n           onDragEnter={this._handlerDragEnterList}\r\n           onDragOver={this._handlerDragOverList}\r\n           onDragLeave={this._handlerDragLeaveList}\r\n           onDrop={this._handlerDropList}\r\n        >\r\n         {items && this._renderItems(items, groupCaption, caption)}\r\n        </OpenClose2>\r\n      );\r\n    });\r\n  }\r\n\r\n  _handlerClickItem(item) {\r\n    ComponentActions.showModalDialog(ModalDialog.LOAD_ITEM, item)\r\n  }\r\n  _handlerRemoveItem(option, event) {\r\n    event.stopPropagation()\r\n    WatchActions.removeItem(option)\r\n  }\r\n\r\n  _renderItems = (items, groupCaption, listCaption) => {\r\n      const {isModeEdit} = this.state;\r\n      return items.map((item, index) => {\r\n        const { id, caption } = item;\r\n        return (\r\n            <WatchItem\r\n               key={id}\r\n               className={CL_WATCH_ITEM}\r\n               isModeEdit={isModeEdit}\r\n               item={item}\r\n               option={{ groupCaption, listCaption, caption }}\r\n               onClick={this._handlerClickItem}\r\n               onClose={this._handlerRemoveItem}\r\n               onDragStart={this._handlerDragStartItem}\r\n               onDragOver={this._handlerDragOverItem}\r\n               onDragEnter={this._handlerDragEnterItem}\r\n               onDragLeave={this._handlerDragLeaveItem}\r\n               onDrop={this._handlerDropItem}\r\n            />\r\n        );\r\n      });\r\n    }\r\n\r\n  render(){\r\n    const { caption } = this.props\r\n        , { isShow, isModeEdit, watchList } = this.state\r\n        , _captionEV = isModeEdit ? 'V' : 'E';\r\n    return (\r\n       <Browser isShow={isShow} style={S.BROWSER}>\r\n          <BrowserCaption\r\n            caption={caption}\r\n            onClose={this._handlerHide}\r\n          >\r\n           <ButtonCircle\r\n             caption=\"S\"\r\n             title=\"Save to LocalStorage\"\r\n             style={S.BT_CIRCLE}\r\n             onClick={this._handlerSaveWatch}\r\n           />\r\n           <ButtonCircle\r\n              caption={_captionEV}\r\n              title=\"Toggle Edit Mode: E/V\"\r\n              style={S.BT_CIRCLE}\r\n              onClick={this._handlerToggleEditMode}\r\n           />\r\n         </BrowserCaption>\r\n         <EditBar\r\n            isShow={isModeEdit}\r\n            onClickGroup={this._handlerEditGroup}\r\n            onClickList={this._handlerEditList}\r\n         />\r\n         <ScrollPane style={S.SCROLL_DIV}>\r\n           {watchList && this._renderWatchList(watchList)}\r\n         </ScrollPane>\r\n      </Browser>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WatchBrowser\r\n"]}