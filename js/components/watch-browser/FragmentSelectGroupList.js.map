{"version":3,"sources":["../../../src/components/watch-browser/FragmentSelectGroupList.jsx"],"names":["FragmentSelectGroupList","props","_handleSelectGroup","item","caption","groupCaption","lists","setState","listOptions","_handleSelectList","listCaption","state","UNSAFE_componentWillReceiveProps","nextProps","groupOptions","store","getWatchListsByGroup","render","getValue","captionGroup","captionList","setValueNull","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAFA;IAIMA,uB;;;AACJ;;;;;;;;;;;AAYA,mCAAYC,KAAZ,EAAkB;AAAA;;AAChB;;AADgB,UA2BlBC,kBA3BkB,GA2BG,UAACC,IAAD,EAAU;AAC7B,UAAIA,IAAI,IAAIA,IAAI,CAACC,OAAjB,EAAyB;AACvB,cAAKC,YAAL,GAAoBF,IAAI,CAACC,OAAzB;;AACA,YAAID,IAAI,CAACG,KAAT,EAAe;AACb,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAEL,IAAI,CAACG;AAApB,WAAd;AACD,SAFD,MAEQ;AACN,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAd;AACD;AACF,OAPD,MAOO;AACL,cAAKH,YAAL,GAAoB,IAApB;AACD;AACF,KAtCiB;;AAAA,UAwClBI,iBAxCkB,GAwCE,UAACN,IAAD,EAAU;AAC3B,YAAKO,WAAL,GAAoBP,IAAI,IAAIA,IAAI,CAACC,OAAd,IAA0B,IAA7C;AACF,KA1CiB;;AAEhB,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKK,WAAL,GAAmB,IAAnB;AAEA,UAAKC,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE;AADF,KAAb;AALgB;AAQjB;;;;SAEDI,gC,GAAA,0CAAiCC,SAAjC,EAA2C;AACzC,QAAIA,SAAS,KAAK,KAAKZ,KAAvB,EAA6B;AAC3B,UAAIY,SAAS,CAACC,YAAV,KAA2B,KAAKb,KAAL,CAAWa,YAA1C,EAAuD;AACnD,aAAKT,YAAL,GAAoB,IAApB;AACA,aAAKK,WAAL,GAAmB,IAAnB;AACA,aAAKH,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH,OAJD,MAIO;AACL,YAAI,KAAKH,YAAT,EAAsB;AACpB,cAAMG,WAAW,GAAG,KAAKP,KAAL,CAAWc,KAAX,CAAiBC,oBAAjB,CAAsC,KAAKX,YAA3C,CAApB;AACA,cAAIG,WAAW,KAAK,KAAKG,KAAL,CAAWH,WAA/B,EACE,KAAKE,WAAL,GAAmB,IAAnB;AACA,eAAKH,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAXA;AAAF,WAAd;AACH;AACF;AACF;AACF,G;;SAmBDS,M,GAAA,kBAAQ;AAAA,sBAC8C,KAAKhB,KADnD;AAAA,QACEI,YADF,eACEA,YADF;AAAA,QACgBS,YADhB,eACgBA,YADhB;AAAA,QAC8BJ,WAD9B,eAC8BA,WAD9B;AAAA,QAEEF,WAFF,GAEkB,KAAKG,KAFvB,CAEEH,WAFF;AAGN,wBACE,0DACG,gCAAC,0BAAD;AACE,MAAA,OAAO,EAAEH,YADX;AAEE,MAAA,OAAO,EAAES,YAFX;AAGE,MAAA,QAAQ,EAAE,KAAKZ;AAHjB,MADH,eAMG,gCAAC,0BAAD;AACE,MAAA,OAAO,EAAEQ,WADX;AAEE,MAAA,OAAO,EAAEF,WAFX;AAGE,MAAA,QAAQ,EAAE,KAAKC;AAHjB,MANH,CADF;AAcD,G;;SAEDS,Q,GAAA,oBAAU;AACR,WAAO;AACLC,MAAAA,YAAY,EAAE,KAAKd,YADd;AAELe,MAAAA,WAAW,EAAE,KAAKV;AAFb,KAAP;AAID,G;;SAEDW,Y,GAAA,wBAAc;AACZ,SAAKhB,YAAL,GAAoB,IAApB;AACA,SAAKK,WAAL,GAAmB,IAAnB;AACD,G;;;EAtFmCY,gB;;eAyFvBtB,uB","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\n\r\nclass FragmentSelectGroupList extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    groupCaption: PropTypes.string,\r\n    groupOptions: PropTypes.array,\r\n    listCaption: PropTypes.string\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n\r\n    this.state = {\r\n      listOptions: []\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      if (nextProps.groupOptions !== this.props.groupOptions){\r\n          this.groupCaption = null;\r\n          this.listCaption = null;\r\n          this.setState({ listOptions: [] });\r\n      } else {\r\n        if (this.groupCaption){\r\n          const listOptions = this.props.store.getWatchListsByGroup(this.groupCaption);\r\n          if (listOptions !== this.state.listOptions)\r\n            this.listCaption = null;\r\n            this.setState({ listOptions });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n    if (item && item.caption){\r\n      this.groupCaption = item.caption;\r\n      if (item.lists){\r\n        this.setState({ listOptions: item.lists })\r\n      }  else {\r\n        this.setState({ listOptions: [] })\r\n      }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n\r\n  _handleSelectList = (item) => {\r\n     this.listCaption = (item && item.caption) || null;\r\n  }\r\n\r\n  render(){\r\n    const { groupCaption, groupOptions, listCaption } = this.props\r\n        , { listOptions } = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           caption={groupCaption}\r\n           options={groupOptions}\r\n           onSelect={this._handleSelectGroup}\r\n         />\r\n         <RowInputSelect\r\n           caption={listCaption}\r\n           options={listOptions}\r\n           onSelect={this._handleSelectList}\r\n         />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return {\r\n      captionGroup: this.groupCaption,\r\n      captionList: this.listCaption\r\n    };\r\n  }\r\n\r\n  setValueNull(){\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n  }\r\n}\r\n\r\nexport default FragmentSelectGroupList\r\n"],"file":"FragmentSelectGroupList.js"}