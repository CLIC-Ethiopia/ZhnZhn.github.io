{"version":3,"sources":["../../../src/components/watch-browser/FragmentSelectGroupList.jsx"],"names":["FragmentSelectGroupList","props","_handleSelectGroup","item","caption","groupCaption","lists","setState","listOptions","_handleSelectList","listCaption","state","nextProps","groupOptions","store","getWatchListsByGroup","captionGroup","captionList","propTypes","shape","listen","func","string","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;IAEMA,uB;;;AAWJ,mCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UA2BlBC,kBA3BkB,GA2BG,UAACC,IAAD,EAAU;AAC7B,UAAIA,QAAQA,KAAKC,OAAjB,EAAyB;AACvB,cAAKC,YAAL,GAAoBF,KAAKC,OAAzB;AACA,YAAID,KAAKG,KAAT,EAAe;AACb,gBAAKC,QAAL,CAAc,EAAEC,aAAcL,KAAKG,KAArB,EAAd;AACD,SAFD,MAEQ;AACN,gBAAKC,QAAL,CAAc,EAAEC,aAAc,EAAhB,EAAd;AACD;AACF,OAPD,MAOO;AACL,cAAKH,YAAL,GAAoB,IAApB;AACD;AACF,KAtCiB;;AAAA,UAwClBI,iBAxCkB,GAwCE,UAACN,IAAD,EAAU;AAC3B,YAAKO,WAAL,GAAoBP,QAAQA,KAAKC,OAAd,GAAyBD,KAAKC,OAA9B,GAAwC,IAA3D;AACF,KA1CiB;;AAEhB,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKK,WAAL,GAAmB,IAAnB;;AAEA,UAAKC,KAAL,GAAa;AACXH,mBAAc;AADH,KAAb;AALgB;AAQjB;;;;8CAEyBI,S,EAAU;AAClC,UAAIA,cAAc,KAAKX,KAAvB,EAA6B;AAC3B,YAAIW,UAAUC,YAAV,KAA2B,KAAKZ,KAAL,CAAWY,YAA1C,EAAuD;AACnD,eAAKR,YAAL,GAAoB,IAApB;AACA,eAAKK,WAAL,GAAmB,IAAnB;AACA,eAAKH,QAAL,CAAc,EAAEC,aAAa,EAAf,EAAd;AACH,SAJD,MAIO;AACL,cAAI,KAAKH,YAAT,EAAsB;AACpB,gBAAMG,cAAc,KAAKP,KAAL,CAAWa,KAAX,CAAiBC,oBAAjB,CAAsC,KAAKV,YAA3C,CAApB;AACA,gBAAIG,gBAAgB,KAAKG,KAAL,CAAWH,WAA/B,EACE,KAAKE,WAAL,GAAmB,IAAnB;AACA,iBAAKH,QAAL,CAAc,EAAEC,wBAAF,EAAd;AACH;AACF;AACF;AACF;;;6BAmBO;AAAA,mBAC8C,KAAKP,KADnD;AAAA,UACEI,YADF,UACEA,YADF;AAAA,UACgBQ,YADhB,UACgBA,YADhB;AAAA,UAC8BH,WAD9B,UAC8BA,WAD9B;AAAA,UAEEF,WAFF,GAEkB,KAAKG,KAFvB,CAEEH,WAFF;;AAGN,aACE;AAAA;AAAA;AACG;AACE,mBAASH,YADX;AAEE,mBAASQ,YAFX;AAGE,oBAAU,KAAKX;AAHjB,UADH;AAMG;AACE,mBAASQ,WADX;AAEE,mBAASF,WAFX;AAGE,oBAAU,KAAKC;AAHjB;AANH,OADF;AAcD;;;+BAES;AACR,aAAO;AACLO,sBAAc,KAAKX,YADd;AAELY,qBAAa,KAAKP;AAFb,OAAP;AAID;;;mCAEa;AACZ,WAAKL,YAAL,GAAoB,IAApB;AACA,WAAKK,WAAL,GAAmB,IAAnB;AACD;;;;;AApFGV,uB,CACGkB,S,2CAAY;AACjBJ,SAAO,oBAAUK,KAAV,CAAgB;AACrBC,YAAQ,oBAAUC,IADG;AAErBN,0BAAsB,oBAAUM;AAFX,GAAhB,CADU;AAKjBhB,gBAAc,oBAAUiB,MALP;AAMjBT,gBAAc,oBAAUU,KANP;AAOjBb,eAAa,oBAAUY;AAPN,C;kBAsFNtB,uB","file":"FragmentSelectGroupList.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\n\r\nclass FragmentSelectGroupList extends Component {\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    groupCaption: PropTypes.string,\r\n    groupOptions: PropTypes.array,\r\n    listCaption: PropTypes.string\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n\r\n    this.state = {\r\n      listOptions : []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      if (nextProps.groupOptions !== this.props.groupOptions){\r\n          this.groupCaption = null;\r\n          this.listCaption = null;\r\n          this.setState({ listOptions: [] });\r\n      } else {\r\n        if (this.groupCaption){\r\n          const listOptions = this.props.store.getWatchListsByGroup(this.groupCaption);\r\n          if (listOptions !== this.state.listOptions)\r\n            this.listCaption = null;\r\n            this.setState({ listOptions });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n    if (item && item.caption){\r\n      this.groupCaption = item.caption;\r\n      if (item.lists){\r\n        this.setState({ listOptions : item.lists })\r\n      }  else {\r\n        this.setState({ listOptions : [] })\r\n      }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n\r\n  _handleSelectList = (item) => {\r\n     this.listCaption = (item && item.caption) ? item.caption : null\r\n  }\r\n\r\n  render(){\r\n    const { groupCaption, groupOptions, listCaption } = this.props\r\n        , { listOptions } = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           caption={groupCaption}\r\n           options={groupOptions}\r\n           onSelect={this._handleSelectGroup}\r\n         />\r\n         <RowInputSelect\r\n           caption={listCaption}\r\n           options={listOptions}\r\n           onSelect={this._handleSelectList}\r\n         />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return {\r\n      captionGroup: this.groupCaption,\r\n      captionList: this.listCaption\r\n    };\r\n  }\r\n\r\n  setValueNull(){\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n  }\r\n}\r\n\r\nexport default FragmentSelectGroupList\r\n"]}