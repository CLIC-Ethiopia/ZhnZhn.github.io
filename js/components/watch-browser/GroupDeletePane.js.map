{"version":3,"sources":["../../../src/components/watch-browser/GroupDeletePane.jsx"],"names":["GroupDeletePane","props","_onStore","actionType","data","actionCompleted","forActionType","store","_handleClear","setState","groupOptions","getWatchGroups","_handleSelectGroup","item","caption","state","validationMessages","length","_handleDeleteGroup","onDelete","msgOnNotSelect","_primaryBt","componentDidMount","unsubscribe","listen","componentWillUnmount","render","onClose","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport A from './Atoms'\r\n\r\nclass GroupDeletePane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func\r\n    }),\r\n    actionCompleted: PropTypes.string,\r\n    forActionType: PropTypes.string,\r\n    msgOnNotSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.caption = null\r\n    this._primaryBt = <A.Button.Primary\r\n       caption=\"Delete\"\r\n       title=\"Delete Group\"\r\n       onClick={this._handleDeleteGroup}\r\n    />\r\n    this.state = {\r\n      groupOptions: props.store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const { actionCompleted, forActionType, store } = this.props;\r\n    if (actionType === actionCompleted) {\r\n      if (data.forActionType === forActionType){\r\n        this._handleClear()\r\n      }\r\n      this.setState({ groupOptions : store.getWatchGroups() })\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n     this.caption = (item && item.caption) || null;\r\n  }\r\n\r\n  _handleClear = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n  }\r\n\r\n  _handleDeleteGroup = () => {\r\n     const { onDelete, msgOnNotSelect } = this.props;\r\n     if (this.caption){\r\n       onDelete({ caption:this.caption })\r\n     } else {\r\n       this.setState({\r\n         validationMessages: [msgOnNotSelect('Group')]\r\n       })\r\n     }\r\n  }\r\n\r\n  render(){\r\n      const { onClose } = this.props\r\n          , {\r\n              groupOptions, validationMessages\r\n            } = this.state;\r\n\r\n      return (\r\n         <div>\r\n           <A.RowInputSelect\r\n             caption=\"Group:\"\r\n             options={groupOptions}\r\n             onSelect={this._handleSelectGroup}\r\n           />\r\n           <A.ValidationMessages\r\n             validationMessages={validationMessages}\r\n           />\r\n           <A.RowButtons\r\n             Primary={this._primaryBt}\r\n             withoutClear={true}\r\n             onClose={onClose}\r\n           />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupDeletePane\r\n"],"file":"GroupDeletePane.js"}