{"version":3,"sources":["../../../src/components/zhn-moleculs/MathCaptcha.jsx"],"names":["MSG","S","color","fontWeight","P_SUM","textAlign","fontSize","paddingTop","SUM_OK","SUM_NOT_OK","_crRandomNumber","m","n","Math","floor","random","MatchCaptcha","props","_hChangeSlider","event","value","_isOk","firstNumber","secondNumber","setState","isOk","resultSum","state","render","rootStyle","_sumStyle","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAFA;AAIA,IAAMA,GAAG,GAAG,gDAAZ;AAEA,IAAMC,CAAC,GAAG;AACRD,EAAAA,GAAG,EAAE;AACHE,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADG;AAKRC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,UAAU,EAAE;AAHP,GALC;AAURC,EAAAA,MAAM,EAAE;AACNN,IAAAA,KAAK,EAAE;AADD,GAVA;AAaRO,EAAAA,UAAU,EAAE;AACVP,IAAAA,KAAK,EAAE;AADG;AAbJ,CAAV;;AAkBA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAMC,CAAN,EAAe;AAAA,MAAdD,CAAc;AAAdA,IAAAA,CAAc,GAAZ,CAAY;AAAA;;AAAA,MAATC,CAAS;AAATA,IAAAA,CAAS,GAAP,EAAO;AAAA;;AACrC,SAAOD,CAAC,GAAIE,IAAI,CAACC,KAAL,CAAW,CAACF,CAAC,GAACD,CAAF,GAAI,CAAL,IAAQE,IAAI,CAACE,MAAL,EAAnB,CAAZ;AACD,CAFD;;IAIMC,Y;;;AACJ;;;;;AAMA,wBAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;;AADgB,UAUlBC,cAVkB,GAUD,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACjC,UAAMC,KAAK,GAAI,MAAKC,WAAL,GAAmB,MAAKC,YAAxB,KAAyCH,KAA1C,GACV,IADU,GAEV,KAFJ;;AAGA,YAAKI,QAAL,CAAc;AACXC,QAAAA,IAAI,EAAEJ,KADK;AAEXK,QAAAA,SAAS,EAAEN;AAFA,OAAd;AAID,KAlBiB;;AAEhB,UAAKE,WAAL,GAAmBZ,eAAe,CAAC,CAAD,EAAI,EAAJ,CAAlC;AACA,UAAKa,YAAL,GAAoBb,eAAe,CAAC,CAAD,EAAI,EAAJ,CAAnC;AACA,UAAKiB,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAJgB;AAQjB;;;;SAYDE,M,GAAA,kBAAQ;AACA,QAAEC,SAAF,GAAgB,KAAKZ,KAArB,CAAEY,SAAF;AAAA,sBACkB,KAAKF,KADvB;AAAA,QACFF,IADE,eACFA,IADE;AAAA,QACIC,SADJ,eACIA,SADJ;AAAA,QAEJI,SAFI,GAEQL,IAAI,GACXxB,CAAC,CAACO,MADS,GAEXP,CAAC,CAACQ,UAJH;;AAKN,wBACE;AAAK,MAAA,KAAK,EAAEoB;AAAZ,oBACE;AAAG,MAAA,KAAK,EAAE5B,CAAC,CAACD;AAAZ,OACGA,GADH,CADF,eAIE;AAAG,MAAA,KAAK,EAAEC,CAAC,CAACG;AAAZ,oBACE,8CACM,KAAKkB,WADX,WAC4B,KAAKC,YADjC,SADF,eAIE;AAAM,MAAA,KAAK,EAAEO;AAAb,OACGJ,SADH,CAJF,CAJF,eAYE,gCAAC,uBAAD;AACI,MAAA,QAAQ,EAAE,KAAKR;AADnB,MAZF,CADF;AAkBD,G;;SAEDO,I,GAAA,gBAAO;AACL,WAAO,KAAKE,KAAL,CAAWF,IAAlB;AACD,G;;;EAvDwBM,gB;;eA2DZf,Y","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport InputSlider from '../zhn/InputSlider'\r\n\r\nconst MSG = 'Before loading, please, enter sum using slider'\r\n\r\nconst S = {\r\n  MSG: {\r\n    color: 'grey',\r\n    fontWeight: 'bold'\r\n  },\r\n  P_SUM: {\r\n    textAlign: 'center',\r\n    fontSize: '22px',\r\n    paddingTop: 4\r\n  },\r\n  SUM_OK: {\r\n    color: '#4caf50'\r\n  },\r\n  SUM_NOT_OK: {\r\n    color: '#f44336'\r\n  }\r\n};\r\n\r\nconst _crRandomNumber = (m=0, n=10) => {\r\n  return m + (Math.floor((n-m+1)*Math.random()));\r\n}\r\n\r\nclass MatchCaptcha extends Component {\r\n  /*\r\n  static propTypes = {\r\n    rootStyle: PropTypes.object\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.firstNumber = _crRandomNumber(0, 10)\r\n    this.secondNumber = _crRandomNumber(0, 10)\r\n    this.state = {\r\n      isOk: false,\r\n      resultSum: ''\r\n    }\r\n  }\r\n\r\n  _hChangeSlider = (event, value) => {\r\n    const _isOk = (this.firstNumber + this.secondNumber === value)\r\n      ? true\r\n      : false;\r\n    this.setState({\r\n       isOk: _isOk,\r\n       resultSum: value\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { rootStyle } = this.props\r\n    , { isOk, resultSum } = this.state\r\n    , _sumStyle = isOk\r\n         ? S.SUM_OK\r\n         : S.SUM_NOT_OK;\r\n    return(\r\n      <div style={rootStyle} >\r\n        <p style={S.MSG}>\r\n          {MSG}\r\n        </p>\r\n        <p style={S.P_SUM}>\r\n          <span>\r\n            {`${this.firstNumber} + ${this.secondNumber} = `}\r\n          </span>\r\n          <span style={_sumStyle}>\r\n            {resultSum}\r\n          </span>\r\n        </p>\r\n        <InputSlider\r\n            onChange={this._hChangeSlider}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  isOk() {\r\n    return this.state.isOk;\r\n  }\r\n\r\n}\r\n\r\nexport default MatchCaptcha\r\n"],"file":"MathCaptcha.js"}