{"version":3,"sources":["../../../src/components/zhn-moleculs/MathCaptcha.jsx"],"names":["MSG","S","color","fontWeight","P_SUM","textAlign","fontSize","paddingTop","SUM_OK","SUM_NOT_OK","_fnRandomNumber","m","n","Math","floor","random","MatchCaptcha","props","_handleChangeSlider","event","value","_isOk","firstNumber","secondNumber","setState","isOk","resultSum","state","rootStyle","_sumStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;AAEA,IAAMA,MAAM,gDAAZ;;AAEA,IAAMC,IAAI;AACRD,OAAM;AACJE,WAAO,MADH;AAEJC,gBAAY;AAFR,GADE;AAKRC,SAAQ;AACNC,eAAW,QADL;AAENC,cAAU,MAFJ;AAGNC,gBAAY;AAHN,GALA;AAURC,UAAS;AACPN,WAAO;AADA,GAVD;AAaRO,cAAa;AACXP,WAAO;AADI;AAbL,CAAV;;AAkBA,IAAMQ,kBAAkB,SAAlBA,eAAkB,GAAe;AAAA,MAAdC,CAAc,uEAAZ,CAAY;AAAA,MAATC,CAAS,uEAAP,EAAO;;AACrC,SAAOD,IAAKE,KAAKC,KAAL,CAAW,CAACF,IAAED,CAAF,GAAI,CAAL,IAAQE,KAAKE,MAAL,EAAnB,CAAZ;AACD,CAFD;;IAIMC,Y;;;AACJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAUlBC,mBAVkB,GAUI,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACtC,UAAMC,QAAS,MAAKC,WAAL,GAAmB,MAAKC,YAAxB,KAAyCH,KAA1C,GACJ,IADI,GAEJ,KAFV;AAGA,YAAKI,QAAL,CAAc;AACXC,cAAOJ,KADI;AAEXK,mBAAYN;AAFD,OAAd;AAID,KAlBiB;;AAAA,UA8ClBK,IA9CkB,GA8CX,YAAM;AACX,aAAO,MAAKE,KAAL,CAAWF,IAAlB;AACD,KAhDiB;;AAEhB,UAAKH,WAAL,GAAmBZ,gBAAgB,CAAhB,EAAmB,EAAnB,CAAnB;AACA,UAAKa,YAAL,GAAoBb,gBAAgB,CAAhB,EAAmB,EAAnB,CAApB;AACA,UAAKiB,KAAL,GAAa;AACXF,YAAO,KADI;AAEXC,iBAAY;AAFD,KAAb;AAJgB;AAQjB;;;;6BAYO;AACA,UAAEE,SAAF,GAAgB,KAAKX,KAArB,CAAEW,SAAF;AAAA,mBACkB,KAAKD,KADvB;AAAA,UACFF,IADE,UACFA,IADE;AAAA,UACIC,SADJ,UACIA,SADJ;AAAA,UAEJG,SAFI,GAESJ,IAAD,GACRxB,EAAEO,MADM,GAERP,EAAEQ,UAJF;;AAKN,aACE;AAAA;AAAA,UAAK,OAAOmB,SAAZ;AACE;AAAA;AAAA,YAAG,OAAO3B,EAAED,GAAZ;AACGA;AADH,SADF;AAIE;AAAA;AAAA,YAAG,OAAOC,EAAEG,KAAZ;AACE;AAAA;AAAA;AACM,iBAAKkB,WADX,WAC4B,KAAKC,YADjC;AAAA,WADF;AAIE;AAAA;AAAA,cAAM,OAAOM,SAAb;AACGH;AADH;AAJF,SAJF;AAYE;AACI,oBAAU,KAAKR;AADnB;AAZF,OADF;AAkBD;;;;;kBAQYF,Y","file":"MathCaptcha.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport InputSlider from '../zhn/InputSlider'\r\n\r\nconst MSG = 'Before loading, please, enter sum using slider'\r\n\r\nconst S = {\r\n  MSG : {\r\n    color: 'grey',\r\n    fontWeight: 'bold'\r\n  },\r\n  P_SUM : {\r\n    textAlign: 'center',\r\n    fontSize: '22px',\r\n    paddingTop: '4px'\r\n  },\r\n  SUM_OK : {\r\n    color: '#4caf50'\r\n  },\r\n  SUM_NOT_OK : {\r\n    color: '#f44336'\r\n  }\r\n}\r\n\r\nconst _fnRandomNumber = (m=0, n=10) => {\r\n  return m + (Math.floor((n-m+1)*Math.random()));\r\n}\r\n\r\nclass MatchCaptcha extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.firstNumber = _fnRandomNumber(0, 10)\r\n    this.secondNumber = _fnRandomNumber(0, 10)\r\n    this.state = {\r\n      isOk : false,\r\n      resultSum : ''\r\n    }\r\n  }\r\n\r\n  _handleChangeSlider = (event, value) => {\r\n    const _isOk = (this.firstNumber + this.secondNumber === value)\r\n            ? true\r\n            : false\r\n    this.setState({\r\n       isOk : _isOk,\r\n       resultSum : value\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { rootStyle } = this.props\r\n    , { isOk, resultSum } = this.state\r\n    , _sumStyle = (isOk)\r\n        ? S.SUM_OK\r\n        : S.SUM_NOT_OK\r\n    return(\r\n      <div style={rootStyle} >\r\n        <p style={S.MSG}>\r\n          {MSG}\r\n        </p>\r\n        <p style={S.P_SUM}>\r\n          <span>\r\n            {`${this.firstNumber} + ${this.secondNumber} = `}\r\n          </span>\r\n          <span style={_sumStyle}>\r\n            {resultSum}\r\n          </span>\r\n        </p>\r\n        <InputSlider\r\n            onChange={this._handleChangeSlider}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  isOk = () => {\r\n    return this.state.isOk;\r\n  }\r\n\r\n}\r\n\r\nexport default MatchCaptcha\r\n"]}