{"version":3,"sources":["../../../src/components/zhn-moleculs/ModalDialog.jsx"],"names":["CL","SHOWING","HIDING","S","ROOT_DIV_MODAL","position","top","left","display","zIndex","HIDE_POPUP","opacity","transform","ModalDialog","props","_renderCommandButton","commandButtons","withoutClose","onClose","COMMAND_DIV","BT_ROOT","wasClosing","nextProps","nextState","isNotUpdate","prevProps","prevState","setTimeout","setState","timeout","event","stopPropagation","isShow","isWithButton","style","caption","styleCaption","children","_className","_style","HIDE","SHOW","ROOT_DIV","_handleClickDialog","CAPTION_DIV","defaultProps","propTypes","bool","arrayOf","element","number","string","object","func"],"mappings":"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","file":"ModalDialog.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SvgClose from '../zhn/SvgClose'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nimport STYLE from './Dialog.Style'\r\n\r\nconst CL = {\r\n  SHOWING : 'show-popup',\r\n  HIDING : 'hide-popup'\r\n};\r\n\r\nconst S = {\r\n  ...STYLE,\r\n  ROOT_DIV_MODAL: {\r\n    position: 'absolute',\r\n    top: '20%',\r\n    left: '40%',\r\n    display: 'block',\r\n    zIndex: 10\r\n  },\r\n  HIDE_POPUP: {\r\n    opacity: 0,\r\n    transform: 'scaleY(0)'\r\n  },\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     isWithButton: PropTypes.bool,\r\n     isNotUpdate: PropTypes.bool,\r\n     withoutClose: PropTypes.bool,\r\n     commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n     timeout: PropTypes.number,\r\n     caption: PropTypes.string,\r\n     style: PropTypes.object,\r\n     onClose: PropTypes.func\r\n   }\r\n   static defaultProps = {\r\n     isWithButton: true,\r\n     isNotUpdate: false,\r\n     timeout: 450\r\n   }\r\n\r\n   constructor(props){\r\n     super()\r\n     this.wasClosing = false\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if (this.wasClosing){\r\n       setTimeout(\r\n         () => { this.setState({}) },\r\n         this.props.timeout\r\n       )\r\n     }\r\n   }\r\n\r\n  _handleClickDialog(event) {\r\n    event.stopPropagation()\r\n   }\r\n\r\n  _renderCommandButton = () => {\r\n    const { commandButtons, withoutClose, onClose } = this.props;\r\n    return (\r\n      <div style={S.COMMAND_DIV}>\r\n        {commandButtons}\r\n        { !withoutClose &&\r\n            <FlatButton\r\n              rootStyle={S.BT_ROOT}\r\n              caption=\"Close\"\r\n              title=\"Close Modal Dialog\"\r\n              onClick={onClose}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, isWithButton, style,\r\n            caption, styleCaption,\r\n            children, onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = S.HIDE\r\n      this.wasClosing = false\r\n    } else {\r\n      _className = isShow ? CL.SHOWING : CL.HIDING\r\n      _style = isShow ? S.SHOW : S.HIDE_POPUP\r\n      if (!isShow){\r\n        this.wasClosing = true\r\n      }\r\n    }\r\n\r\n    return (\r\n         <div\r\n             className={_className}\r\n             style={{ ...S.ROOT_DIV, ...S.ROOT_DIV_MODAL, ...style, ..._style}}\r\n             onClick={this._handleClickDialog}\r\n         >\r\n             <div style={S.CAPTION_DIV}>\r\n                <span style={styleCaption}>{caption}</span>\r\n                <SvgClose onClose={onClose} />\r\n             </div>\r\n             <div>\r\n               {children}\r\n             </div>\r\n            {isWithButton && this._renderCommandButton()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog\r\n"]}