{"version":3,"sources":["../../../src/components/zhn-containers/ChartContainer.jsx"],"names":["SHOW_POPUP","CHILD_MARGIN","RESIZE_MIN_WIDTH","RESIZE_MAX_WIDTH","styles","rootDiv","backgroundColor","padding","position","borderRadius","width","height","minHeight","marginLeft","overflowY","overflowX","hrzResize","top","right","scrollDiv","paddingRight","chartDiv","transitionOption","transitionName","transitionEnterTimeout","transitionLeave","inlineBlock","display","none","isInArray","array","value","i","len","length","compActions","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","ChartContainer","props","_onStore","actionType","data","chartType","setState","CLOSE_CHART_CONTAINER_2","_handleHide","browserType","onCloseContainer","isShow","_handleResizeAfter","parentWidth","max","state","configs","refs","reflowChart","childMargin","_renderCharts","onCloseItem","map","config","index","zhConfig","id","createItem","bind","unsubscribe","listen","getConfigs","caption","_styleIsShow","_classIsShow","undefined","Object","assign"],"mappings":"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","file":"ChartContainer.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nimport ChartStore from '../../flux/stores/ChartStore';\r\nimport { ChartActionTypes } from '../../flux/actions/ChartActions';\r\n\r\nimport { ComponentActionTypes } from '../../flux/actions/ComponentActions';\r\n\r\nimport BrowserCaption from '../zhn/BrowserCaption';\r\nimport SvgHrzResize from '../zhn/SvgHrzResize';\r\nimport ScrollPane from '../zhn/ScrollPane';\r\n\r\nimport ItemFactory from '../factories/ItemFactory';\r\n\r\nconst SHOW_POPUP = \"show-popup\"\r\n    , CHILD_MARGIN = 36\r\n    , RESIZE_MIN_WIDTH = 600\r\n    , RESIZE_MAX_WIDTH = 1200;\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    backgroundColor: '#4D4D4D',\r\n    //padding : '8px 3px 3px 8px',\r\n    padding : '0px 0px 3px 0px',\r\n    position: 'relative',\r\n    borderRadius: '4px',\r\n    width: '635px',\r\n    height: 'calc(100vh - 71px)',\r\n    minHeight: '500px',\r\n    marginLeft: '10px',\r\n    overflowY: 'hidden',\r\n    overflowX : 'hidden'\r\n  },\r\n  hrzResize : {\r\n    position : 'absolute',\r\n    top : '30px',\r\n    right: '0'\r\n  },\r\n  scrollDiv : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px'\r\n  },\r\n  chartDiv : {\r\n    overflowY: 'auto',\r\n    height : '680px'\r\n  },\r\n  transitionOption : {\r\n    transitionName : \"scaleY\",\r\n    transitionEnterTimeout : 400,\r\n    transitionLeave : false\r\n  },\r\n  inlineBlock : {\r\n    display : 'inline-block'\r\n  },\r\n  none : {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst isInArray = function(array=[], value){\r\n  let i=0, len=array.length;\r\n  for (; i<len; i++){\r\n    if (array[i] === value){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst compActions = [\r\n  ChartActionTypes.SHOW_CHART,\r\n  ChartActionTypes.LOAD_STOCK_COMPLETED,\r\n  ChartActionTypes.CLOSE_CHART\r\n];\r\n\r\n\r\nclass ChartContainer extends Component {\r\n\r\n  constructor(props){\r\n    super();\r\n    this.childMargin = CHILD_MARGIN;\r\n    this.state = {};\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.unsubscribe = ChartStore.listen(this._onStore);\r\n    this.setState(ChartStore.getConfigs(this.props.chartType));\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n   _onStore = (actionType, data) => {\r\n      if (isInArray(compActions, actionType)) {\r\n        if (data && data.chartType === this.props.chartType){\r\n          this.setState(data);\r\n        }\r\n      } else if (actionType === ComponentActionTypes.CLOSE_CHART_CONTAINER_2){\r\n         if (data === this.props.chartType){\r\n           this._handleHide();\r\n         }\r\n      }\r\n   }\r\n\r\n   _handleHide = () => {\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({ isShow: false });\r\n   }\r\n\r\n   _handleResizeAfter = (parentWidth) => {\r\n     let i=0, max = this.state.configs.length;\r\n     for (; i<max; i++){\r\n        if (typeof this.refs['chart' + i].reflowChart === 'function'){\r\n          this.refs['chart' + i].reflowChart(parentWidth - this.childMargin);\r\n        }\r\n     }\r\n   }\r\n\r\n   _renderCharts = () => {\r\n     const { chartType, browserType, onCloseItem } = this.props;\r\n     return this.state.configs.map((config, index) => {\r\n       const { zhConfig={} } = config\r\n           , { id } = zhConfig;\r\n       return ItemFactory.createItem(\r\n             config, index,\r\n             { chartType },\r\n             { onCloseItem : onCloseItem.bind(null, chartType, browserType, id) }\r\n       );\r\n     });\r\n   }\r\n\r\n   render(){\r\n     const  { caption } = this.props\r\n          , { isShow } = this.state\r\n          , _styleIsShow = (isShow)\r\n               ? styles.inlineBlock\r\n               : styles.none\r\n         , _classIsShow = (isShow)\r\n               ? SHOW_POPUP\r\n               : undefined;\r\n     return(\r\n        <div\r\n           className={_classIsShow}\r\n           style={Object.assign({}, styles.rootDiv, _styleIsShow)}\r\n        >\r\n          <BrowserCaption\r\n             caption={caption}\r\n             onClose={this._handleHide}\r\n          >\r\n             <SvgHrzResize\r\n               minWidth={RESIZE_MIN_WIDTH}\r\n               maxWidth={RESIZE_MAX_WIDTH}\r\n               comp={this}\r\n               onResizeAfter={this._handleResizeAfter}\r\n             />\r\n          </BrowserCaption>\r\n\r\n          <ScrollPane style={styles.scrollDiv}>\r\n            <ReactCSSTransitionGroup\r\n               {...styles.transitionOption}\r\n               component=\"div\"\r\n            >\r\n               { this._renderCharts() }\r\n            </ReactCSSTransitionGroup>\r\n          </ScrollPane>\r\n\r\n        </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default ChartContainer\r\n"]}