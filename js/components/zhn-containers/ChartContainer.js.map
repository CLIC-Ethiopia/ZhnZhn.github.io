{"version":3,"sources":["../../../src/components/zhn-containers/ChartContainer.jsx"],"names":["TH_ID","CL","ROOT","SCROLL","SHOW","MENU_MORE","CHILD_MARGIN","RESIZE_INIT_WIDTH","RESIZE_MIN_WIDTH","RESIZE_MAX_WIDTH","DELTA","S","INLINE","display","NONE","COMP_ACTIONS","CHAT","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","_isInArray","arr","value","Boolean","indexOf","_getWidth","style","parseInt","width","_toStyleWidth","_isFn","fn","ChartContainer","props","_isDataForContainer","data","chartType","_onStore","actionType","spComp","scrollTop","setState","CAT","CLOSE_CHART_CONTAINER_2","_hHide","_toggleChb","isCheck","checkBox","onSetActive","browserType","onCloseContainer","isShow","_hResizeAfter","parentWidth","i","max","state","configs","length","_propName","_crChartPropName","reflowChart","childMargin","_onShowCaptions","showCaption","_showMore","isMore","_hToggleMore","prevState","index","_refChart","comp","_renderCharts","onCloseItem","_isAdminMode","ChartStore","isAdminMode","bind","map","config","zhConfig","id","ItemFactory","createItem","store","option","ref","_getRootNodeStyle","_rootNode","_resizeTo","_plusToWidth","w","_minusToWidth","_fitToWidth","_refRootNode","node","_refSpComp","onRemoveAll","_MODEL","onMinWidth","onInitWidth","onPlusWidth","onMinusWidth","onFit","onShowCaptions","_hSetActive","_hSetNotActive","componentDidMount","unsubscribe","listen","_initState","getConfigs","componentWillUnmount","render","theme","caption","TS","getStyle","_styleIsShow","_classIsShow","EL_BORDER","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport withTheme from '../hoc/withTheme'\r\n\r\nimport ChartStore from '../../flux/stores/ChartStore';\r\nimport { ChartActionTypes as CHAT } from '../../flux/actions/ChartActions';\r\n\r\nimport { ComponentActionTypes as CAT } from '../../flux/actions/ComponentActions';\r\n\r\nimport ModalSlider from '../zhn-modal-slider/ModalSlider'\r\nimport crModelMore from './ModelMore'\r\n\r\nimport BrowserCaption from '../zhn/BrowserCaption';\r\nimport SvgHrzResize from '../zhn/SvgHrzResize';\r\nimport ScrollPane from '../zhn/ScrollPane';\r\n\r\nimport ItemFactory from '../factories/ItemFactory';\r\n\r\nconst TH_ID = 'CHART_CONTAINER';\r\n\r\nconst CL = {\r\n  ROOT: \"item-container\",\r\n  SCROLL: 'scroll-container-y scroll-items',\r\n  SHOW: \"show-popup\",\r\n\r\n  MENU_MORE: \"popup-menu charts__menu-more\"\r\n};\r\n\r\nconst CHILD_MARGIN = 36\r\n    , RESIZE_INIT_WIDTH = 635\r\n    , RESIZE_MIN_WIDTH = 395\r\n    , RESIZE_MAX_WIDTH = 1200\r\n    , DELTA = 10;\r\n\r\nconst S = {\r\n  /*\r\n  transitionOption : {\r\n    transitionName : \"scaleY\",\r\n    transitionEnterTimeout : 400,\r\n    transitionLeave : false\r\n  },\r\n  */\r\n  INLINE: {\r\n    display: 'inline-block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst COMP_ACTIONS = [\r\n  CHAT.SHOW_CHART,\r\n  CHAT.LOAD_STOCK_COMPLETED,\r\n  CHAT.CLOSE_CHART\r\n];\r\n\r\nconst _isInArray = (arr=[], value) => Boolean(~arr.indexOf(value))\r\n\r\nconst _getWidth = style => parseInt(style.width, 10)\r\n  || RESIZE_INIT_WIDTH;\r\nconst _toStyleWidth = width => width + 'px';\r\n\r\nconst _isFn = fn => typeof fn === \"function\";\r\n\r\n\r\nclass ChartContainer extends Component {\r\n\r\n  static defaultProps = {\r\n    onSetActive: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    const { chartType, onRemoveAll } = props;\r\n    this.childMargin = CHILD_MARGIN;\r\n\r\n    this._MODEL = crModelMore({\r\n      chartType,\r\n      onMinWidth: this._resizeTo.bind(this, RESIZE_MIN_WIDTH),\r\n      onInitWidth: this._resizeTo.bind(this, RESIZE_INIT_WIDTH),\r\n      onPlusWidth: this._plusToWidth,\r\n      onMinusWidth: this._minusToWidth,\r\n      onFit: this._fitToWidth,\r\n      onShowCaptions: this._onShowCaptions,\r\n      onRemoveAll\r\n    })\r\n\r\n    this._hSetActive = this._toggleChb.bind(this, true)\r\n    this._hSetNotActive = this._toggleChb.bind(this, false)\r\n\r\n    this.state = {\r\n      isMore: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = ChartStore.listen(this._onStore);\r\n    const _initState = ChartStore.getConfigs(this.props.chartType)\r\n    if (_initState) {\r\n       this.setState(_initState);\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _isDataForContainer = (data) => {\r\n    const { chartType } = this.props;\r\n    return data === chartType ||\r\n       (data && data.chartType === chartType);\r\n  }\r\n  _onStore = (actionType, data) => {\r\n     if ( this._isDataForContainer(data) ) {\r\n       if (_isInArray(COMP_ACTIONS, actionType)) {\r\n         if (actionType !== CHAT.CLOSE_CHART) {\r\n           this.spComp.scrollTop()\r\n         }\r\n         this.setState(data);\r\n       } else if (actionType === CAT.CLOSE_CHART_CONTAINER_2){\r\n         this._hHide();\r\n       }\r\n     }\r\n   }\r\n\r\n   _toggleChb = (isCheck, checkBox) => {\r\n      const {\r\n        onSetActive,\r\n        chartType, browserType\r\n      } = this.props;\r\n      checkBox.chartType = chartType\r\n      checkBox.browserType = browserType\r\n      onSetActive(isCheck, checkBox)\r\n   }\r\n\r\n   _hHide = () => {\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({ isShow: false });\r\n   }\r\n\r\n   _hResizeAfter = (parentWidth) => {\r\n     let i=0\r\n       , max = this.state.configs.length\r\n       , _propName;\r\n     for (; i<max; i++) {\r\n        _propName = this._crChartPropName(i)\r\n        if (this[_propName] && _isFn(this[_propName].reflowChart)){\r\n          this[_propName].reflowChart(parentWidth - this.childMargin)\r\n        }\r\n     }\r\n   }\r\n\r\n   _onShowCaptions = (parentWidth) => {\r\n     let i=0\r\n       , max = this.state.configs.length\r\n       , _propName;\r\n     for (; i<max; i++) {\r\n        _propName = this._crChartPropName(i)\r\n        if (this[_propName] && _isFn(this[_propName].showCaption)){\r\n          this[_propName].showCaption()\r\n        }\r\n     }\r\n   }\r\n\r\n   _showMore = () => {\r\n      this.setState({ isMore: true })\r\n   }\r\n   _hToggleMore = () => {\r\n     this.setState(prevState => ({\r\n       isMore: !prevState.isMore\r\n     }))\r\n   }\r\n\r\n  _crChartPropName = (index) => 'chart' + index\r\n  _refChart = (index, comp) => this[this._crChartPropName(index)] = comp\r\n\r\n   _renderCharts = () => {\r\n     const { chartType, browserType, onCloseItem } = this.props\r\n         , { configs=[] } = this.state\r\n         , _isAdminMode = _isFn(ChartStore.isAdminMode)\r\n              ? ChartStore.isAdminMode.bind(ChartStore)\r\n              : false ;\r\n     return configs.map((config, index) => {\r\n       const { zhConfig={} } = config\r\n           , { id } = zhConfig;\r\n       return ItemFactory.createItem({\r\n          store: ChartStore,\r\n          config, index,\r\n          option: { chartType },\r\n          props: {\r\n            ref: this._refChart.bind(null, index),\r\n            onCloseItem: onCloseItem.bind(null, chartType, browserType, id),\r\n            isAdminMode: _isAdminMode\r\n          }\r\n       });\r\n     });\r\n   }\r\n\r\n   _getRootNodeStyle = () => {\r\n     const { _rootNode } = this\r\n     , { style={} } = _rootNode || {};\r\n     return style;\r\n   }\r\n\r\n   _resizeTo = (width) => {\r\n     this._getRootNodeStyle().width = _toStyleWidth(width);\r\n     this._hResizeAfter(width)\r\n   }\r\n\r\n   _plusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n         , w = _getWidth(style) + DELTA;\r\n     if (w < RESIZE_MAX_WIDTH) {\r\n        style.width = _toStyleWidth(w)\r\n     }\r\n   }\r\n   _minusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n         , w = _getWidth(style) - DELTA;\r\n     if (w > RESIZE_MIN_WIDTH) {\r\n       style.width = _toStyleWidth(w)\r\n     }\r\n   }\r\n   _fitToWidth = () => {\r\n     this._hResizeAfter(parseInt(\r\n       this._rootNode.style.width, 10\r\n     ))\r\n   }\r\n\r\n   _refRootNode = node => this._rootNode = node\r\n   _refSpComp = node => this.spComp = node\r\n\r\n   render(){\r\n     const  {\r\n       theme, caption\r\n     } = this.props\r\n     , TS = theme.getStyle(TH_ID)\r\n     , { isShow, isMore } = this.state\r\n     , _styleIsShow = isShow\r\n          ? S.INLINE\r\n          : S.NONE\r\n     , _classIsShow = isShow\r\n          ? `${CL.ROOT} ${CL.SHOW}`\r\n          : CL.ROOT;\r\n     return(\r\n        <div\r\n           ref={this._refRootNode}\r\n           className={_classIsShow}\r\n           style={{ ..._styleIsShow, ...TS.ROOT }}\r\n        >\r\n          <ModalSlider\r\n            isShow={isMore}\r\n            className={CL.MENU_MORE}\r\n            style={TS.EL_BORDER}\r\n            model={this._MODEL}\r\n            onClose={this._hToggleMore}\r\n          />\r\n          <BrowserCaption\r\n             onMore={this._showMore}\r\n             onCheck={this._hSetActive}\r\n             onUnCheck={this._hSetNotActive}\r\n             caption={caption}\r\n             onClose={this._hHide}\r\n          >\r\n             <SvgHrzResize\r\n               initWidth={RESIZE_INIT_WIDTH}\r\n               minWidth={RESIZE_MIN_WIDTH}\r\n               maxWidth={RESIZE_MAX_WIDTH}\r\n               comp={this}\r\n               onResizeAfter={this._hResizeAfter}\r\n             />\r\n          </BrowserCaption>\r\n          <ScrollPane\r\n             ref={this._refSpComp}\r\n             className={CL.SCROLL}\r\n          >\r\n            <div>\r\n              { this._renderCharts() }\r\n            </div>\r\n          </ScrollPane>\r\n        </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default withTheme(ChartContainer)\r\n"],"file":"ChartContainer.js"}