{"version":3,"sources":["../../../src/components/zhn-table/ModalMenu.jsx"],"names":["S","ROW","paddingLeft","paddingBottom","HR","borderColor","marginTop","marginBottom","_renderHeaders","headers","onToggle","rank","restHeader","map","h","index","name","isHide","ModalMenu","isShow","style","onClose","isGridLine","onToggleGrid"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,GAAG,EAAE;AACHC,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,aAAa,EAAE;AAFZ,GADG;AAKRC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAE,OADX;AAEFC,IAAAA,SAAS,EAAE,CAFT;AAGFC,IAAAA,YAAY,EAAE;AAHZ;AALI,CAAV;;AAYA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,SAAV,EAAuB;AAC5C;AAD4C,MAEpCC,IAFoC,GAEZF,OAFY;AAAA,MAE3BG,UAF2B,GAEZH,OAFY;AAG5C;;AACA,SAAOG,UAAU,CAACC,GAAX,CAAe,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAClC,wBAAQ,gCAAC,sBAAD,CAAG,WAAH;AACN,MAAA,GAAG,EAAED,CAAC,CAACE,IADD;AAEN,MAAA,SAAS,EAAEhB,CAAC,CAACC,GAFP;AAGN,MAAA,YAAY,EAAC,OAHP;AAIN,MAAA,OAAO,EAAEa,CAAC,CAACE,IAJL;AAKN,MAAA,KAAK,EAAE,CAACF,CAAC,CAACG,MALJ;AAMN,MAAA,QAAQ,EAAE;AAAA,eAAMP,SAAQ,CAACK,KAAD,CAAd;AAAA;AANJ,MAAR;AAQA,GATK,CAAP;AAUD,CAdD;;AAgBA,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,MAChBC,MADgB,QAChBA,MADgB;AAAA,MACRC,KADQ,QACRA,KADQ;AAAA,MAEhBC,OAFgB,QAEhBA,OAFgB;AAAA,MAGhBC,UAHgB,QAGhBA,UAHgB;AAAA,MAIhBC,YAJgB,QAIhBA,YAJgB;AAAA,MAKhBd,OALgB,QAKhBA,OALgB;AAAA,MAKPC,QALO,QAKPA,QALO;AAAA,sBAOhB,gCAAC,sBAAD;AACG,IAAA,KAAK,EAAEU,KADV;AAEG,IAAA,MAAM,EAAED,MAFX;AAGG,IAAA,OAAO,EAAEE;AAHZ,kBAKG,gCAAC,sBAAD,CAAG,WAAH;AACE,IAAA,SAAS,EAAErB,CAAC,CAACC,GADf;AAEE,IAAA,YAAY,EAAC,OAFf;AAGE,IAAA,OAAO,EAAC,gBAHV;AAIE,IAAA,KAAK,EAAEqB,UAJT;AAKE,IAAA,QAAQ,EAAEC;AALZ,IALH,eAYG;AAAI,IAAA,KAAK,EAAEvB,CAAC,CAACI;AAAb,IAZH,EAaII,cAAc,CAACC,OAAD,EAAUC,QAAV,CAblB,CAPgB;AAAA,CAAlB;;eAyBeQ,S","sourcesContent":["import React from 'react'\r\n\r\nimport ModalPopup from '../zhn-moleculs/ModalPopup'\r\nimport D from '../dialogs/DialogCell'\r\n\r\nconst S = {\r\n  ROW: {\r\n    paddingLeft: 0,\r\n    paddingBottom: 4\r\n  },\r\n  HR: {\r\n    borderColor: 'black',\r\n    marginTop: 2,\r\n    marginBottom: 2\r\n  }\r\n};\r\n\r\nconst _renderHeaders = (headers, onToggle) => {\r\n  /*eslint-disable no-unused-vars*/\r\n  const [ rank, ...restHeader ] = headers;\r\n  /*eslint-enable no-unused-vars*/\r\n  return restHeader.map((h, index) => {\r\n    return (<D.RowCheckBox\r\n      key={h.name}\r\n      rootStyle={S.ROW}\r\n      checkedColor=\"black\"\r\n      caption={h.name}\r\n      value={!h.isHide}\r\n      onToggle={() => onToggle(index)}\r\n    />\r\n  )})\r\n}\r\n\r\nconst ModalMenu = ({\r\n  isShow, style,\r\n  onClose,\r\n  isGridLine,\r\n  onToggleGrid,  \r\n  headers, onToggle\r\n}) => (\r\n  <ModalPopup\r\n     style={style}\r\n     isShow={isShow}\r\n     onClose={onClose}\r\n   >\r\n     <D.RowCheckBox\r\n       rootStyle={S.ROW}\r\n       checkedColor=\"black\"\r\n       caption=\"withStripLines\"\r\n       value={isGridLine}\r\n       onToggle={onToggleGrid}\r\n     />\r\n     <hr style={S.HR} />\r\n     {_renderHeaders(headers, onToggle)}\r\n  </ModalPopup>\r\n);\r\n\r\n\r\nexport default ModalMenu\r\n"],"file":"ModalMenu.js"}