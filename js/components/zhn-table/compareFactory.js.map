{"version":3,"sources":["../../../src/components/zhn-table/compareFactory.js"],"names":["_isNaN","Number","isNaN","_compareMaybeNaN","v1","v2","_compareNumber","_r","_compareStr","factoryCompareBy","TOKEN_NAN","pn","a","b","factoryOpCompareBy","fn"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAGC,MAAM,CAACC,KAAtB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACnC,MAAIL,MAAM,CAACI,EAAD,CAAV,EAAgB;AACd,WAAOJ,MAAM,CAACK,EAAD,CAAN,GAAa,CAAb,GAAiB,CAAxB;AACD;;AACD,SAAOL,MAAM,CAACK,EAAD,CAAN,GAAa,CAAC,CAAd,GAAkB,CAAzB;AACD,CALD;;AAOA,MAAMC,cAAc,GAAG,CAACF,EAAD,EAAKC,EAAL,KAAY;AACjC,QAAME,EAAE,GAAGJ,gBAAgB,CAACC,EAAD,EAAKC,EAAL,CAA3B;;AACA,MAAIE,EAAE,KAAK,CAAX,EAAc,OAAOA,EAAP;AACd,MAAKH,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAP;AACf,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAC,CAAR;AACf,SAAO,CAAP;AACD,CAND;;AAQA,MAAMG,WAAW,GAAG,CAACJ,EAAD,EAAKC,EAAL,KAAY;AAC9B,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAP;AACf,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAC,CAAR;AACf,SAAO,CAAP;AACD,CAJD;;AAMO,MAAMI,gBAAgB,GAAG,CAACC,SAAD,EAAYC,EAAZ,KAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3D,QAAMT,EAAE,GAAGQ,CAAC,CAACD,EAAD,CAAZ;AAAA,QAAkBN,EAAE,GAAGQ,CAAC,CAACF,EAAD,CAAxB;AACA,SAAQ,OAAOP,EAAP,KAAc,QAAd,IAA0BA,EAAE,KAAKM,SAAlC,GACHJ,cAAc,CAACF,EAAD,EAAKC,EAAL,CADX,GAEHG,WAAW,CAACJ,EAAD,EAAKC,EAAL,CAFf;AAGD,CALM;;;;AAOA,MAAMS,kBAAkB,GAAG,CAACH,EAAD,EAAKI,EAAL,KAAY,CAACH,CAAD,EAAIC,CAAJ,KAAU;AACtD,QAAMN,EAAE,GAAGJ,gBAAgB,CAACS,CAAC,CAACD,EAAD,CAAF,EAAQE,CAAC,CAACF,EAAD,CAAT,CAA3B;;AACA,MAAIJ,EAAE,KAAK,CAAX,EAAc,OAAOA,EAAP;AACd,SAAOQ,EAAE,CAACF,CAAD,EAAID,CAAJ,CAAT;AACD,CAJM","sourcesContent":["const _isNaN = Number.isNaN;\r\n\r\nconst _compareMaybeNaN = (v1, v2) => {\r\n  if (_isNaN(v1)) {\r\n    return _isNaN(v2) ? 0 : 1;\r\n  }\r\n  return _isNaN(v2) ? -1 : 2;\r\n};\r\n\r\nconst _compareNumber = (v1, v2) => {\r\n  const _r = _compareMaybeNaN(v1, v2);\r\n  if (_r !== 2) return _r;\r\n  if ( v1 < v2 ) return 1;\r\n  if ( v1 > v2 ) return -1;\r\n  return 0;\r\n};\r\n\r\nconst _compareStr = (v1, v2) => {\r\n  if ( v1 < v2 ) return 1;\r\n  if ( v1 > v2 ) return -1;\r\n  return 0;\r\n};\r\n\r\nexport const factoryCompareBy = (TOKEN_NAN, pn) => (a, b) => {\r\n  const v1 = a[pn], v2 = b[pn];\r\n  return (typeof v1 === 'number' || v1 === TOKEN_NAN)\r\n    ? _compareNumber(v1, v2)\r\n    : _compareStr(v1, v2);\r\n}\r\n\r\nexport const factoryOpCompareBy = (pn, fn) => (a, b) => {\r\n  const _r = _compareMaybeNaN(a[pn], b[pn]);\r\n  if (_r !== 2) return _r;\r\n  return fn(b, a);\r\n}\r\n"],"file":"compareFactory.js"}