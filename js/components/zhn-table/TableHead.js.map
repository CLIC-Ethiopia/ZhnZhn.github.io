{"version":3,"sources":["../../../src/components/zhn-table/TableHead.jsx"],"names":["C","UP","DOWN","ASC","DESC","ThMore","name","onMenuMore","S_BT_SVG_MORE","S_SVG_MORE","S_TH_MORE_SPAN","_renderHeader","props","_hThKeyDown","gridId","thMoreStyle","headers","sortBy","sortTo","onSort","map","h","hIndex","isHide","pn","style","ariaSort","ariaLabel","_nameOrEl","_thStyle","S_TH","event","filter","Boolean","TableHead","_hThKeyEnter","evt","S_THEAD"],"mappings":"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","sourcesContent":["import isKeyEnter from '../zhn/isKeyEnter'\r\nimport SvgMore from '../zhn/SvgMore'\r\n\r\nimport { crAppearance } from './tableFn';\r\nimport {\r\n  S_THEAD,\r\n  S_TH,\r\n  S_BT_SVG_MORE,\r\n  S_SVG_MORE,\r\n  S_TH_MORE_SPAN\r\n} from './Style';\r\n\r\nconst C = {\r\n  UP: 'UP',\r\n  DOWN: 'DOWN',\r\n\r\n  ASC: 'ascending',\r\n  DESC: 'descending'\r\n};\r\n\r\nconst ThMore = ({ name, onMenuMore }) => (\r\n  <>\r\n    <SvgMore\r\n       style={S_BT_SVG_MORE}\r\n       svgStyle={S_SVG_MORE}\r\n       onClick={onMenuMore}\r\n    />\r\n    <span style={S_TH_MORE_SPAN}>\r\n      {name}\r\n    </span>\r\n  </>\r\n);\r\n\r\nconst _renderHeader = (props, _hThKeyDown) => {\r\n  const {\r\n    gridId, thMoreStyle, headers,\r\n    sortBy, sortTo, onSort, onMenuMore\r\n  } = props;\r\n  return headers.map((h, hIndex) => {\r\n    if (h.isHide) {\r\n      return null;\r\n    }\r\n    const { name, pn } = h\r\n    , {\r\n        style,\r\n        ariaSort, ariaLabel\r\n      } = crAppearance({\r\n        C, pn, name, sortBy, sortTo\r\n      })\r\n    , _nameOrEl = hIndex === 0\r\n        ? (<ThMore\r\n             name={name}\r\n             onMenuMore={onMenuMore}\r\n           />)\r\n        : name\r\n    , _thStyle = hIndex === 0\r\n         ? {...thMoreStyle, ...style}\r\n         : style;\r\n    return (\r\n      <th\r\n        key={h.name}\r\n        style={{...S_TH, ..._thStyle}}\r\n        rowSpan=\"1\"\r\n        colSpan=\"1\"\r\n        tabIndex=\"0\"\r\n        arial-controls={gridId}\r\n        aria-label={ariaLabel}\r\n        aria-sort={ariaSort}\r\n        onClick={() => onSort(pn)}\r\n        onKeyDown={(event) => _hThKeyDown(event, pn)}\r\n      >\r\n        {_nameOrEl}\r\n      </th>\r\n    );\r\n  }).filter(Boolean);\r\n}\r\n\r\nconst TableHead = (props) => {\r\n  const _hThKeyEnter = (evt, pn) => {\r\n    if (isKeyEnter(evt)) {\r\n      props?.onSort(pn)\r\n    }\r\n  }\r\n  return (\r\n    <thead style={S_THEAD}>\r\n       <tr>\r\n         {_renderHeader(props, _hThKeyEnter)}\r\n       </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\n/*\r\nTableHead.propTypes = {\r\n  gridId: PropTypes.string,\r\n  thMoreStyle: PropTypes.object,\r\n  headers: PropTypes.arrayOf(\r\n     PropTypes.shape({\r\n      isHide: PropTypes.bool,\r\n      name: PropTypes.string,\r\n      pn: PropTypes.string,\r\n      isR: PropTypes.bool,\r\n      isF: PropTypes.bool,\r\n      isHref: PropTypes.bool,\r\n      style: PropTypes.object\r\n    })\r\n  ),\r\n  sortBy: PropTypes.string,\r\n  sortTo: PropTypes.string,\r\n  onSort: PropTypes.func,\r\n  onMenuMore: PropTypes.func\r\n}\r\n*/\r\n\r\nexport default TableHead\r\n"],"file":"TableHead.js"}