{"version":3,"sources":["../../../src/components/zhn-table/tableFn.js"],"names":["_isNotNumber","v","Number","isNaN","_crThAriaLabel","name","order","tableFn","crTdStyle","isR","style","S_NAN","S_UP","S_DOWN","toFormatValue","h","fn","TOKEN_NAN","isF","crAppearance","C","pn","sortBy","sortTo","ariaSort","ariaLabel","UP","S_TH_UP","DESC","ASC","S_TH_DOWN"],"mappings":";;;;;AAAA;;AASA,MAAMA,YAAY,GAAGC,CAAC,IAAIC,MAAM,CAACC,KAAP,CAAaF,CAAb,KAAmBA,CAAC,IAAI,IAAlD;;AAEA,MAAMG,cAAc,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,SAAUD,IAAV,kCAA2CC,KAA3C;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,QAAgB;AAAA,QAAf;AAAEP,MAAAA,CAAF;AAAKQ,MAAAA;AAAL,KAAe;AACzB,QAAIC,KAAJ;;AACA,QAAID,GAAJ,EAAS;AACP,UAAIT,YAAY,CAACC,CAAD,CAAhB,EAAqB;AACnBS,QAAAA,KAAK,GAAGC,YAAR;AACD,OAFD,MAEO;AACLD,QAAAA,KAAK,GAAGT,CAAC,GAAG,CAAJ,GAAQW,WAAR,GAAeC,aAAvB;AACD;AACF;;AACD,WAAOH,KAAP;AACD,GAXa;AAadI,EAAAA,aAAa,EAAE,SAAkB;AAAA,QAAjB;AAAEC,MAAAA,CAAF;AAAKd,MAAAA,CAAL;AAAQe,MAAAA;AAAR,KAAiB;;AAC/B,QAAID,CAAC,CAACN,GAAF,IAAST,YAAY,CAACC,CAAD,CAAzB,EAA8B;AAC5B,aAAOgB,gBAAP;AACD;;AACD,QAAIF,CAAC,CAACG,GAAF,IAAS,OAAOF,EAAP,KAAc,UAA3B,EAAuC;AACrC,aAAOA,EAAE,CAACf,CAAD,CAAT;AACD;;AACD,WAAOA,CAAP;AACD,GArBa;AAwBdkB,EAAAA,YAAY,EAAE,SAAqC;AAAA,QAApC;AAAEC,MAAAA,CAAF;AAAKC,MAAAA,EAAL;AAAShB,MAAAA,IAAT;AAAeiB,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,KAAoC;AACjD,QAAIb,KAAJ,EAAWc,QAAX,EAAqBC,SAArB;;AACA,QAAIJ,EAAE,KAAKC,MAAX,EAAmB;AACjB,UAAIC,MAAM,KAAKH,CAAC,CAACM,EAAjB,EAAqB;AACpBhB,QAAAA,KAAK,GAAGiB,cAAR;AACAH,QAAAA,QAAQ,GAAGJ,CAAC,CAACQ,IAAb;AACAH,QAAAA,SAAS,GAAGrB,cAAc,CAACC,IAAD,EAAOe,CAAC,CAACS,GAAT,CAA1B;AACA,OAJD,MAIO;AACLnB,QAAAA,KAAK,GAAGoB,gBAAR;AACAN,QAAAA,QAAQ,GAAGJ,CAAC,CAACS,GAAb;AACAJ,QAAAA,SAAS,GAAGrB,cAAc,CAACC,IAAD,EAAOe,CAAC,CAACQ,IAAT,CAA1B;AACD;AACF,KAVD,MAUO;AACJH,MAAAA,SAAS,GAAGrB,cAAc,CAACC,IAAD,EAAOe,CAAC,CAACS,GAAT,CAA1B;AACF;;AACD,WAAO;AAAEnB,MAAAA,KAAF;AAASc,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KAAP;AACD;AAxCa,CAAhB;eA2CelB,O","sourcesContent":["import {\r\n  TOKEN_NAN,\r\n  S_UP,\r\n  S_DOWN,\r\n  S_NAN,\r\n  S_TH_UP,\r\n  S_TH_DOWN\r\n} from './Style';\r\n\r\nconst _isNotNumber = v => Number.isNaN(v) || v == null;\r\n\r\nconst _crThAriaLabel = (name, order) => {\r\n  return `${name}: activate to sort column ${order}`;\r\n};\r\n\r\nconst tableFn = {\r\n  crTdStyle: ({ v, isR }) => {\r\n    let style;\r\n    if (isR) {\r\n      if (_isNotNumber(v)) {\r\n        style = S_NAN\r\n      } else {\r\n        style = v > 0 ? S_UP : S_DOWN;\r\n      }\r\n    }\r\n    return style;\r\n  },\r\n\r\n  toFormatValue: ({ h, v, fn }) => {\r\n    if (h.isR && _isNotNumber(v)) {\r\n      return TOKEN_NAN;\r\n    }\r\n    if (h.isF && typeof fn === 'function') {\r\n      return fn(v);\r\n    }\r\n    return v;\r\n  },\r\n\r\n\r\n  crAppearance: ({ C, pn, name, sortBy, sortTo }) => {\r\n    let style, ariaSort, ariaLabel;\r\n    if (pn === sortBy) {\r\n      if (sortTo === C.UP) {\r\n       style = S_TH_UP\r\n       ariaSort = C.DESC\r\n       ariaLabel = _crThAriaLabel(name, C.ASC)\r\n      } else {\r\n        style = S_TH_DOWN\r\n        ariaSort = C.ASC\r\n        ariaLabel = _crThAriaLabel(name, C.DESC)\r\n      }\r\n    } else {\r\n       ariaLabel = _crThAriaLabel(name, C.ASC)\r\n    }\r\n    return { style, ariaSort, ariaLabel };\r\n  }\r\n};\r\n\r\nexport default tableFn\r\n"],"file":"tableFn.js"}