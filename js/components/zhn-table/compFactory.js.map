{"version":3,"sources":["../../../src/components/zhn-table/compFactory.js"],"names":["_isNaN","v","Number","isNaN","_compMaybeNaN","v1","v2","_compNumber","_r","_compStr","compFactory","compBy","TOKEN_NAN","pn","a","b","opCompBy","fn"],"mappings":";;;;;AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD;AAAA,SAAOC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAAP;AAAA,CAAf;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,EAAL,EAAY;AAChC,MAAKN,MAAM,CAACK,EAAD,CAAX,EAAmB;AACjB,QAAKL,MAAM,CAACM,EAAD,CAAX,EAAkB;AAChB,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF;;AACD,MAAKN,MAAM,CAACM,EAAD,CAAX,EAAkB;AAChB,WAAO,CAAC,CAAR;AACD;;AACD,SAAO,CAAP;AACD,CAZD;;AAcA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACF,EAAD,EAAKC,EAAL,EAAY;AAC9B,MAAME,EAAE,GAAGJ,aAAa,CAACC,EAAD,EAAKC,EAAL,CAAxB;;AACA,MAAIE,EAAE,KAAK,CAAX,EAAc,OAAOA,EAAP;AACd,MAAKH,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAP;AACf,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAC,CAAR;AACf,SAAO,CAAP;AACD,CAND;;AAQA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACJ,EAAD,EAAKC,EAAL,EAAY;AAC3B,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAP;AACf,MAAKD,EAAE,GAAGC,EAAV,EAAe,OAAO,CAAC,CAAR;AACf,SAAO,CAAP;AACD,CAJD;;AAOA,IAAMI,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,gBAACC,SAAD,EAAYC,EAAZ;AAAA,WAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnC,UAAMV,EAAE,GAAGS,CAAC,CAACD,EAAD,CAAZ;AAAA,UAAkBP,EAAE,GAAGS,CAAC,CAACF,EAAD,CAAxB;;AACA,UAAI,OAAOR,EAAP,KAAc,QAAd,IAA0BA,EAAE,KAAKO,SAArC,EAAgD;AAC9C,eAAOL,WAAW,CAACF,EAAD,EAAKC,EAAL,CAAlB;AACD,OAFD,MAEO;AACL,eAAOG,QAAQ,CAACJ,EAAD,EAAKC,EAAL,CAAf;AACD;AACF,KAPO;AAAA,GADU;AAUlBU,EAAAA,QAAQ,EAAE,kBAACH,EAAD,EAAKI,EAAL;AAAA,WAAY,UAACH,CAAD,EAAIC,CAAJ,EAAU;AAC9B,UAAMP,EAAE,GAAGJ,aAAa,CAACU,CAAC,CAACD,EAAD,CAAF,EAAQE,CAAC,CAACF,EAAD,CAAT,CAAxB;;AACA,UAAIL,EAAE,KAAK,CAAX,EAAc,OAAOA,EAAP;AACd,aAAOS,EAAE,CAACF,CAAD,EAAID,CAAJ,CAAT;AACD,KAJS;AAAA;AAVQ,CAApB;eAkBeJ,W","sourcesContent":["\r\nconst _isNaN = (v) => Number.isNaN(v);\r\n\r\nconst _compMaybeNaN = (v1, v2) => {\r\n  if ( _isNaN(v1) )  {\r\n    if ( _isNaN(v2) ) {\r\n      return 0;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  if ( _isNaN(v2) ) {\r\n    return -1;\r\n  }\r\n  return 2;\r\n};\r\n\r\nconst _compNumber = (v1, v2) => {\r\n  const _r = _compMaybeNaN(v1, v2);\r\n  if (_r !== 2) return _r;\r\n  if ( v1 < v2 ) return 1;\r\n  if ( v1 > v2 ) return -1;\r\n  return 0;\r\n};\r\n\r\nconst _compStr = (v1, v2) => {\r\n  if ( v1 < v2 ) return 1;\r\n  if ( v1 > v2 ) return -1;\r\n  return 0;\r\n};\r\n\r\n\r\nconst compFactory = {\r\n  compBy: (TOKEN_NAN, pn) => (a, b) => {\r\n    const v1 = a[pn], v2 = b[pn];\r\n    if (typeof v1 === 'number' || v1 === TOKEN_NAN) {\r\n      return _compNumber(v1, v2);\r\n    } else {\r\n      return _compStr(v1, v2);\r\n    }\r\n  },\r\n\r\n  opCompBy: (pn, fn) => (a, b) => {\r\n    const _r = _compMaybeNaN(a[pn], b[pn]);\r\n    if (_r !== 2) return _r;\r\n    return fn(b, a);\r\n  }\r\n\r\n}\r\n\r\nexport default compFactory\r\n"],"file":"compFactory.js"}