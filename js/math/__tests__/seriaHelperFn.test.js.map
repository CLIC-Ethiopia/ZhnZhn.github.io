{"version":3,"sources":["../../../src/math/__tests__/seriaHelperFn.test.js"],"names":["describe","fn","isNotEmptyArr","test","expect","toBe","isNumber","NaN","undefined","crPointGetter","_data","getX","getY","x","y","fGetY","point","getZeroCountFromStart","dataArr","dataArr2","dataObj","getZeroIndexFromEnd"],"mappings":"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","sourcesContent":["import {\r\n  isNotEmptyArr,\r\n  isNumber,\r\n  crPointGetter,\r\n  fGetY,\r\n  getZeroCountFromStart,\r\n  getZeroIndexFromEnd\r\n} from '../seriaHelperFn';\r\n\r\ndescribe(\"isNotEmptyArr\", ()=>{\r\n  const fn= isNotEmptyArr;\r\n  test('should return true for arr with object', ()=> {\r\n    expect(fn([{}])).toBe(true)\r\n    expect(fn([[]])).toBe(true)\r\n  })\r\n  test('should return false for not arr and arr without object', ()=>{\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n\r\n    expect(fn('str')).toBe(false)\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n\r\n    expect(fn([])).toBe(false)\r\n    expect(fn([null, void 0, 'str', 1, true])).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe(\"isNumber\", ()=>{\r\n  const fn = isNumber\r\n  test(\"should check is value number type\", ()=>{\r\n    expect(fn(0.1)).toBe(true)\r\n    expect(fn(0)).toBe(true)\r\n    expect(fn(-0)).toBe(true)\r\n    expect(fn(+0)).toBe(true)\r\n\r\n    expect(fn(NaN)).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn(undefined)).toBe(false)\r\n    expect(fn('')).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe(\"crPointGetter\", ()=>{\r\n  const fn = crPointGetter;\r\n  test(\"should create getter for array points\", ()=> {\r\n    const _data = [[0, 0], [1, 1]]\r\n    const { getX, getY } = fn(_data)\r\n\r\n    expect(getX(_data[0])).toBe(0)\r\n    expect(getY(_data[0])).toBe(0)\r\n    expect(getX(_data[1])).toBe(1)\r\n    expect(getY(_data[1])).toBe(1)\r\n  })\r\n  test(\"should create getter for object points\", ()=> {\r\n    const _data = [{x: 0, y: 0}, {x: 1, y: 1}]\r\n    const { getX, getY } = fn(_data)\r\n\r\n    expect(getX(_data[0])).toBe(0)\r\n    expect(getY(_data[0])).toBe(0)\r\n    expect(getX(_data[1])).toBe(1)\r\n    expect(getY(_data[1])).toBe(1)\r\n  })\r\n})\r\n\r\n\r\ndescribe(\"fGetY\", ()=>{\r\n  const fn = fGetY\r\n  test(\"should return function for getting y for arr point\", () => {\r\n    const point = [1, 2]\r\n    , getY = fn(point)\r\n\r\n    expect(typeof getY).toBe('function')\r\n    expect(getY(point)).toBe(point[1])\r\n  })\r\n  test(\"should return function for getting y for obj point\", () => {\r\n    const point = {y:2}\r\n    , getY = fn(point)\r\n\r\n    expect(typeof getY).toBe('function')\r\n    expect(getY(point)).toBe(point.y)\r\n  })\r\n  test('should return undefined for edge case', ()=>{\r\n    expect(fn(null)).toBe(undefined)\r\n    expect(fn({})).toBe(undefined)\r\n  })\r\n})\r\n\r\n\r\ndescribe('getZeroCountFromStart', ()=>{\r\n  const fn = getZeroCountFromStart\r\n  test('should return number of points with y 0 or null from data start', ()=>{\r\n    const dataArr = [[1,0],[2,null]]\r\n    expect(fn(dataArr, fGetY(dataArr[0]))).toBe(2)\r\n\r\n    const dataArr2 = [[1,0],[2,null],[-1, 1]]\r\n    expect(fn(dataArr2, fGetY(dataArr2[0]))).toBe(2)\r\n\r\n    const dataObj = [{x:1,y:0},{x:2,y:null}]\r\n    expect(fn(dataObj, fGetY(dataObj[0]))).toBe(2)\r\n  })\r\n})\r\n\r\ndescribe('getZeroIndexFromEnd', ()=>{\r\n  const fn = getZeroIndexFromEnd\r\n  test('should return index of last y 0 or null from data end', ()=>{\r\n    const dataArr = [[-1, -1], [1,0],[2,null]]\r\n    expect(fn(dataArr, fGetY(dataArr[0]))).toBe(1)\r\n\r\n    const dataObj = [{x:-1, y:-1}, {x:1,y:0},{x:2,y:null}]\r\n    expect(fn(dataObj, fGetY(dataObj[0]))).toBe(1)\r\n  })\r\n})\r\n"],"file":"seriaHelperFn.test.js"}