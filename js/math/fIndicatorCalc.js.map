{"version":3,"sources":["../../src/math/fIndicatorCalc.js"],"names":["_crIndicatorData","d","rt","calc","_d","max","length","prevStep","getX","getY","pPrev","pNext","i","push","fIndicatorCalc","_rt","parseInt"],"mappings":";;;;;AAAA;;AAMA,MAAMA,gBAAgB,GAAG,CAACC,CAAD,EAAIC,EAAJ,EAAQC,IAAR,KAAiB;AACxC,QAAMC,EAAE,GAAG,EAAX;AAAA,QACEC,GAAG,GAAGJ,CAAC,CAACK,MADV;AAAA,QAEEC,QAAQ,GAAGL,EAAE,GAAC,CAFhB;AAAA,QAGE;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiB,kCAAcR,CAAd,CAHnB;AAIA,MAAIS,KAAK,GAAGT,CAAC,CAAC,CAAD,CAAb;AAAA,MACIU,KADJ;AAAA,MAEIC,CAAC,GAACV,EAFN;;AAGA,SAAOU,CAAC,GAACP,GAAT,EAAcO,CAAC,EAAf,EAAkB;AAChBD,IAAAA,KAAK,GAAGV,CAAC,CAACW,CAAD,CAAT;;AACAR,IAAAA,EAAE,CAACS,IAAH,CAAQ,CACNL,IAAI,CAACG,KAAD,CADE,EAENR,IAAI,CAACM,IAAI,CAACC,KAAD,CAAL,EAAcD,IAAI,CAACE,KAAD,CAAlB,CAFE,CAAR;;AAIAD,IAAAA,KAAK,GAAGT,CAAC,CAACW,CAAC,GAACL,QAAH,CAAT;AACD;;AACD,SAAOH,EAAP;AACD,CAjBD;;AAoBA,MAAMU,cAAc,GAAIX,IAAD,IAAU,UAACF,CAAD,EAAIC,EAAJ,EAAa;AAAA,MAATA,EAAS;AAATA,IAAAA,EAAS,GAAN,CAAM;AAAA;;AAC5C,QAAMa,GAAG,GAAGC,QAAQ,CAACd,EAAD,EAAK,EAAL,CAApB;;AACA,MAAI,EAAE,kCAAcD,CAAd,KACG,6BAASc,GAAT,CADH,IAEGA,GAAG,GAAG,CAFT,IAGGd,CAAC,CAACK,MAAF,GAAWS,GAHhB,CAAJ,EAG2B;AACzB,WAAO,EAAP;AACD;;AAED,SAAOf,gBAAgB,CAACC,CAAD,EAAIc,GAAJ,EAASZ,IAAT,CAAvB;AACD,CAVD;;eAYeW,c","sourcesContent":["import {\r\n  isNotEmptyArr,\r\n  isNumber,\r\n  crPointGetter\r\n} from './seriaHelperFn';\r\n\r\nconst _crIndicatorData = (d, rt, calc) => {\r\n  const _d = []\r\n  , max = d.length\r\n  , prevStep = rt-1\r\n  , { getX, getY } = crPointGetter(d);\r\n  let pPrev = d[0]\r\n    , pNext\r\n    , i=rt;\r\n  for (; i<max; i++){\r\n    pNext = d[i];\r\n    _d.push([\r\n      getX(pNext),\r\n      calc(getY(pPrev), getY(pNext))\r\n    ])\r\n    pPrev = d[i-prevStep]\r\n  }\r\n  return _d;\r\n}\r\n\r\n\r\nconst fIndicatorCalc = (calc) => (d, rt=1) => {\r\n  const _rt = parseInt(rt, 10);\r\n  if (!(isNotEmptyArr(d)\r\n        && isNumber(_rt)\r\n        && _rt > 0\r\n        && d.length > _rt )) {\r\n    return [];\r\n  }\r\n\r\n  return _crIndicatorData(d, _rt, calc);\r\n};\r\n\r\nexport default fIndicatorCalc\r\n"],"file":"fIndicatorCalc.js"}