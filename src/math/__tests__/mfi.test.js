import mfi from '../mfi';

//date, open or close (not used), high, low, close, volume
const data = [
  [0, 140.16, 140.47, 139.2, 140.16, 7_294_216],
  [1, 140.61, 140.96, 139.71, 140.61, 8_828_513],
  [2, 139.71, 140.57,139.61, 139.71, 6_428_708],
  [3, 140.79, 141.77, 138.82, 140.79, 8_183_789],
  [4, 141.2,  141.69, 140.55, 141.2, 5_476_409],

  [5, 139.67, 141.45, 139.43, 139.67, 6_353_183],
  [6, 139.9, 140.34, 139.03, 139.9, 7_702_584],
  [7, 137.91, 140, 137.64, 137.91, 7_646_303],
  [8, 138.38, 138.95, 137.55, 138.38,5_394_897],
  [9, 137.89, 138.59, 137.87, 137.89, 4_696_711],

  [10, 139.63, 140, 137.9, 139.63, 6_557_869],
  [11, 139.91, 140, 139.13, 139.91, 6_597_268],
  [12, 142.12, 142.74, 139.68, 142.12, 9_046_321],
  [13, 140.72, 142.03, 140.1, 140.72, 6_389_991],
  [14, 140.6, 141, 140.3, 140.6, 3_980_535] 
];

describe('math mfi', ()=>{
  test('should calc mfi for period',()=>{
    const [_result, nNotFullPoint] = mfi(data, '10');
    expect(nNotFullPoint).toBe(0)
    expect(_result[14].y).toBe(34.62)
    expect(_result[13].y).toBe(42.21)
    expect(_result[12].y).toBe(53.26)
    expect(_result[11].y).toBe(41.38) //41.39
    expect(_result[10].y).toBe(null)
  })
})
